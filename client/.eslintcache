[{"/Users/sahil/Desktop/icms/inventory-management/client/src/index.js":"1","/Users/sahil/Desktop/icms/inventory-management/client/src/App.js":"2","/Users/sahil/Desktop/icms/inventory-management/client/src/store/reducer/reducerAuth.js":"3","/Users/sahil/Desktop/icms/inventory-management/client/src/store/reducer/openInvoiceReducer.js":"4","/Users/sahil/Desktop/icms/inventory-management/client/src/store/reducer/posStateReducer.js":"5","/Users/sahil/Desktop/icms/inventory-management/client/src/store/reducer/loadersReducer.js":"6","/Users/sahil/Desktop/icms/inventory-management/client/src/store/reducer/redItemsReducer.js":"7","/Users/sahil/Desktop/icms/inventory-management/client/src/store/reducer/userDetailsReducer.js":"8","/Users/sahil/Desktop/icms/inventory-management/client/src/store/action/actionAuth.js":"9","/Users/sahil/Desktop/icms/inventory-management/client/src/components/Layout/Layout.js":"10","/Users/sahil/Desktop/icms/inventory-management/client/src/components/Invoice/Invoice.js":"11","/Users/sahil/Desktop/icms/inventory-management/client/src/components/Queue/Queue.js":"12","/Users/sahil/Desktop/icms/inventory-management/client/src/components/Inventory/Inventory.js":"13","/Users/sahil/Desktop/icms/inventory-management/client/src/components/Pos/Pos.js":"14","/Users/sahil/Desktop/icms/inventory-management/client/src/components/SaveInvoiceData/SaveInvoiceData.js":"15","/Users/sahil/Desktop/icms/inventory-management/client/src/containers/Auth/Auth.js":"16","/Users/sahil/Desktop/icms/inventory-management/client/src/components/HandWrittenInvoice/HandWrittenInvoice.js":"17","/Users/sahil/Desktop/icms/inventory-management/client/src/UI/Spinner/Spinner.js":"18","/Users/sahil/Desktop/icms/inventory-management/client/src/containers/Auth/Logout/Logout.js":"19","/Users/sahil/Desktop/icms/inventory-management/client/src/firebase.js":"20","/Users/sahil/Desktop/icms/inventory-management/client/src/UI/Button.js":"21","/Users/sahil/Desktop/icms/inventory-management/client/src/UI/LoginPage.js":"22","/Users/sahil/Desktop/icms/inventory-management/client/src/components/DisplayData/DisplayData.js":"23","/Users/sahil/Desktop/icms/inventory-management/client/src/services/TesseractService.js":"24","/Users/sahil/Desktop/icms/inventory-management/client/src/services/LoginService.js":"25","/Users/sahil/Desktop/icms/inventory-management/client/src/services/InventoryService.js":"26","/Users/sahil/Desktop/icms/inventory-management/client/src/services/Api.js":"27","/Users/sahil/Desktop/icms/inventory-management/client/src/components/Update/UpdateInventory.js":"28","/Users/sahil/Desktop/icms/inventory-management/client/src/components/Navigation/Toolbar/Toolbar.js":"29","/Users/sahil/Desktop/icms/inventory-management/client/src/utils/invoiceList.js":"30","/Users/sahil/Desktop/icms/inventory-management/client/src/services/axios.js":"31","/Users/sahil/Desktop/icms/inventory-management/client/src/utils/invoice-filters/chetak.js":"32","/Users/sahil/Desktop/icms/inventory-management/client/src/utils/filterData.js":"33","/Users/sahil/Desktop/icms/inventory-management/client/src/components/Navigation/NavigationItems/NavigationItems.js":"34","/Users/sahil/Desktop/icms/inventory-management/client/src/utils/invoice-filters/krishna-foods.js":"35","/Users/sahil/Desktop/icms/inventory-management/client/src/utils/filter.js":"36","/Users/sahil/Desktop/icms/inventory-management/client/src/utils/invoice-filters/aahubarah-usa.js":"37","/Users/sahil/Desktop/icms/inventory-management/client/src/utils/optionData.js":"38","/Users/sahil/Desktop/icms/inventory-management/client/src/components/Navigation/NavigationItems/NavigationItem/NavigationItem.js":"39"},{"size":1190,"mtime":1641536580333,"results":"40","hashOfConfig":"41"},{"size":2413,"mtime":1641536579848,"results":"42","hashOfConfig":"41"},{"size":1004,"mtime":1641536580339,"results":"43","hashOfConfig":"41"},{"size":569,"mtime":1641536580338,"results":"44","hashOfConfig":"41"},{"size":460,"mtime":1641536580338,"results":"45","hashOfConfig":"41"},{"size":395,"mtime":1641536580337,"results":"46","hashOfConfig":"41"},{"size":495,"mtime":1641536580338,"results":"47","hashOfConfig":"41"},{"size":396,"mtime":1641536580339,"results":"48","hashOfConfig":"41"},{"size":3968,"mtime":1641536580337,"results":"49","hashOfConfig":"41"},{"size":419,"mtime":1641536580322,"results":"50","hashOfConfig":"41"},{"size":6093,"mtime":1641536580321,"results":"51","hashOfConfig":"41"},{"size":9900,"mtime":1641536580327,"results":"52","hashOfConfig":"41"},{"size":9419,"mtime":1641536580320,"results":"53","hashOfConfig":"41"},{"size":14556,"mtime":1641536580326,"results":"54","hashOfConfig":"41"},{"size":105909,"mtime":1641536580330,"results":"55","hashOfConfig":"41"},{"size":1634,"mtime":1641536580332,"results":"56","hashOfConfig":"41"},{"size":62109,"mtime":1641536580319,"results":"57","hashOfConfig":"41"},{"size":167,"mtime":1641536579854,"results":"58","hashOfConfig":"41"},{"size":498,"mtime":1641536580333,"results":"59","hashOfConfig":"41"},{"size":603,"mtime":1641536580333,"results":"60","hashOfConfig":"41"},{"size":316,"mtime":1641536579852,"results":"61","hashOfConfig":"41"},{"size":1452,"mtime":1641536579853,"results":"62","hashOfConfig":"41"},{"size":49724,"mtime":1641536579858,"results":"63","hashOfConfig":"41"},{"size":1019,"mtime":1641536580336,"results":"64","hashOfConfig":"41"},{"size":253,"mtime":1641536580335,"results":"65","hashOfConfig":"41"},{"size":5759,"mtime":1641536580335,"results":"66","hashOfConfig":"41"},{"size":382,"mtime":1641536580334,"results":"67","hashOfConfig":"41"},{"size":10831,"mtime":1641536580331,"results":"68","hashOfConfig":"41"},{"size":809,"mtime":1641536580325,"results":"69","hashOfConfig":"41"},{"size":26977,"mtime":1642160291999,"results":"70","hashOfConfig":"41"},{"size":1123,"mtime":1641536580336,"results":"71","hashOfConfig":"41"},{"size":7184,"mtime":1641536580341,"results":"72","hashOfConfig":"41"},{"size":1313,"mtime":1641976376292,"results":"73","hashOfConfig":"41"},{"size":1122,"mtime":1641536580324,"results":"74","hashOfConfig":"41"},{"size":2853,"mtime":1641536580341,"results":"75","hashOfConfig":"41"},{"size":3892,"mtime":1641726699582,"results":"76","hashOfConfig":"41"},{"size":2996,"mtime":1641976375852,"results":"77","hashOfConfig":"41"},{"size":42582,"mtime":1642145376756,"results":"78","hashOfConfig":"41"},{"size":418,"mtime":1641536580323,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"ahicbs",{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":74,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":43,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"82"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":411,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"82"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"/Users/sahil/Desktop/icms/inventory-management/client/src/index.js",[],["175","176"],"/Users/sahil/Desktop/icms/inventory-management/client/src/App.js",["177"],"import React, { Component, Suspense } from \"react\";\nimport Layout from './components/Layout/Layout';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from \"./UI/Spinner/Spinner\";\nimport { checkAuthentication } from \"./store/action/actionAuth\";\n\nconst Auth = React.lazy(() => import(\"./containers/Auth/Auth\"));\nconst Logout = React.lazy(() => import(\"./containers/Auth/Logout/Logout\"));\nconst Invoice = React.lazy(() => import(\"./components/Invoice/Invoice\"));\nconst Queue =React.lazy(()=>import(\"./components/Queue/Queue\"));\nconst Pos=React.lazy(()=>import(\"./components/Pos/Pos\"));\nconst SaveInvoiceData = React.lazy(()=>import(\"./components/SaveInvoiceData/SaveInvoiceData\"));\nconst Inventory=React.lazy(()=>import(\"./components/Inventory/Inventory\"));\nconst HandWrittenInvoice=React.lazy(()=>import(\"./components/HandWrittenInvoice/HandWrittenInvoice\"));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.checkAuthentication();\n  }\n  render() {\n    let routes = (\n      <Switch>\n        <Route path=\"/\" exact component={Auth} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path=\"/invoice\" component={Invoice} />\n          {/* <Route path=\"/auth\" component={Auth} /> */}\n          {/* <Route path=\"/orders\" component={Orders} /> */}\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/queue\" component={Queue}/>\n          <Route path=\"/handwritten\" component={HandWrittenInvoice} />\n          {/* <Route path=\"/pos\" component={Pos}/> */}\n          <Route path=\"/invoicedata\" component={SaveInvoiceData} />\n          <Route path=\"/inventory\" component={Inventory}/>\n         \n          <Redirect to=\"/invoice\" />\n        </Switch>\n      );\n    }\n    return (\n      <Suspense fallback = {<Spinner />}>\n        <BrowserRouter>\n            <div>\n            <Layout>\n              {routes}\n            </Layout>\n            </div>\n        </BrowserRouter>  \n      </Suspense>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n       checkAuthentication: () => dispatch(checkAuthentication())\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/Users/sahil/Desktop/icms/inventory-management/client/src/store/reducer/reducerAuth.js",[],"/Users/sahil/Desktop/icms/inventory-management/client/src/store/reducer/openInvoiceReducer.js",[],"/Users/sahil/Desktop/icms/inventory-management/client/src/store/reducer/posStateReducer.js",[],"/Users/sahil/Desktop/icms/inventory-management/client/src/store/reducer/loadersReducer.js",[],"/Users/sahil/Desktop/icms/inventory-management/client/src/store/reducer/redItemsReducer.js",[],"/Users/sahil/Desktop/icms/inventory-management/client/src/store/reducer/userDetailsReducer.js",[],"/Users/sahil/Desktop/icms/inventory-management/client/src/store/action/actionAuth.js",["178","179"],"import axios from 'axios'\nimport firebase from \"../../firebase\"\nimport { LoginService } from \"../../services/LoginService\"\n\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\nexport const AUTH_FAIL = 'AUTH_FAIL'\nexport const AUTH_START = 'AUTH_START'\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\n\n const authSuccess = (token, userId) => {\n    return {\n        type: AUTH_SUCCESS,\n        token: token,\n        userId: userId\n    }\n}\n const authFail = (error) => {\n    return {\n        type: AUTH_FAIL,\n        error: error\n    }\n}\n\nconst authStart = () => {\n    return {\n        type: AUTH_START\n    }\n}\nexport const authLogout = () => {\n    localStorage.removeItem('token')\n    localStorage.removeItem('expirationDate')\n    localStorage.removeItem('userId')\n    return {\n        type: AUTH_LOGOUT\n    }\n}\nexport const logout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(authLogout());\n        }, expirationTime * 1000);\n    };\n};\nexport const auth = (email, password ) => {\n    return dispatch => {\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        }\n        const loginService = new LoginService();\n\n        // const url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDmK-zcj0LVrrQKbAfflUa-Hi_kRT4-ZWM\";\n        dispatch(authStart())\n        // axios.post(url, authData)\n        // .then(response => {\n        //     console.log(response.data)\n            // const expirationDate = new Date(new Date().getTime + 3600 * 1000)\n            // localStorage.setItem('token', response.data.idToken)\n            // localStorage.setItem('expirationDate', expirationDate)\n            // localStorage.setItem('userId', response.data.localId)\n            // dispatch(authSuccess(response.data.idToken, response.data.localId))\n            // dispatch(logout(response.data.expiresIn))\n        // })\n        // .catch(err => {\n        //     console.log(err.response.data.error.message)\n        //     dispatch(authFail(err.response.data.error.message))\n        // })\n        firebase.auth().signInWithEmailAndPassword(email, password)\n            .then((response) => {\n                // const token = response[\"user\"][\"za\"];\n                const userId = response[\"user\"][\"uid\"];\n                // console.log(response);\n                loginService.authenticate({userId, email})\n                    .then(res => {\n                        const expirationDate = new Date(new Date().getTime() + 43200 * 1000);\n                        localStorage.setItem(\"token\", res.token);\n                        localStorage.setItem(\"expirationDate\", expirationDate);\n                        localStorage.setItem(\"userId\", userId);\n                        dispatch(authSuccess(res.token, userId));\n                        dispatch(logout(43200));\n                    })\n                    .catch(err => {\n                        dispatch(authFail(err.error));\n                    })\n            })\n            .catch((err) => {\n                // console.log('err during login',err.message);\n                dispatch(authFail(err.message));\n            })\n    }\n}\n\nexport const checkAuthentication = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        if(!token) {\n            dispatch(authLogout())\n        }\n        else {\n            /**\n             * get all data stored in browser- Object.entries(localStorage)\n             */\n            const expirationDate  = new Date(localStorage.getItem('expirationDate'))\n            if(expirationDate < new Date()) {\n                dispatch(authLogout())\n            }\n            else {\n                dispatch(authSuccess(token, localStorage.getItem('userId')))\n                /**write here for automatic logout */\n                dispatch(logout((expirationDate.getTime() - new Date().getTime()) / 1000 ));\n            } \n        }\n    }\n}","/Users/sahil/Desktop/icms/inventory-management/client/src/components/Layout/Layout.js",[],"/Users/sahil/Desktop/icms/inventory-management/client/src/components/Invoice/Invoice.js",[],"/Users/sahil/Desktop/icms/inventory-management/client/src/components/Queue/Queue.js",["180","181","182"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { InventoryService } from \"../../services/InventoryService\";\nimport { Api } from \"../../services/Api\";\nimport {\n  CModal,\n  CModalBody,\n  CModalHeader,\n  CModalFooter,\n  CButton,\n  CContainer,\n  CCol,\n  CRow,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CDropdown,\n  CDropdownToggle,\n  CDropdownMenu,\n  CDropdownItem,\n} from \"@coreui/react\";\nimport firebase from \"../../firebase\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\nconst Queue = () => {\n  const inventoryService = new InventoryService();\n  const api = new Api();\n  const [queue, setQueue] = useState([]);\n  const [loader, setLoader] = useState(true);\n  const [categoryArray, setCategoryArray] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [content, setContent] = useState(null);\n  const [header, setHeader] = useState([]);\n  const [fuzzSuggestion, setFuzzSuggestion] = useState([]);\n  const [modalLabel, setModalLabel] = useState(\"\");\n  const [selectedItemNo, setSelectedItemNo] = useState(\"\")\n  const [state, setState] = useState({\n    name: \"\",\n    type: \"\",\n    regular_price: \"\",\n    description: \"\",\n    short_description: \"\",\n    categories: [],\n    images: [],\n    label: \"\",\n  });\n  const handleChange = (event, val) => {\n    let newState = { ...state };\n    if (event.target.name !== \"categories\" && event.target.name !== \"images\")\n      newState[event.target.name] = event.target.value;\n    else {\n      let o = null;\n      if (event.target.name === \"categories\") {\n        o = { id: val };\n        newState[event.target.name] = [o];\n      } else {\n        o = { src: val };\n        newState[event.target.name].push(o);\n      }\n    }\n    setState(newState);\n  };\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n  useEffect(() => {\n    const ref = firebase.database().ref(\"/queue\");\n    ref.on(\"value\", (snapshot) => {\n      if (snapshot.val()) {\n        const data = Object.values(snapshot.val());\n        setQueue(data);\n        setLoader(false);\n      }\n    });\n    let c = [];\n    inventoryService\n      .getAllProducts()\n      .then((res) => {\n        c = res.map((d) => d.categories[0].id);\n        setCategoryArray([...new Set(c)]);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n  const setContentExtra = (o) => {\n    setContent(o);\n    let header = [];\n    for (var prop in o) {\n      if (Object.prototype.hasOwnProperty.call(o, prop)) {\n        header.push(prop);\n      }\n    }\n    setHeader(header);\n    let newState = {\n      name: o.description,\n      type: \"simple\",\n      regular_price: o.cp,\n      description: o.description,\n      short_description: o.description,\n      categories: [],\n      images: [],\n      label: o.description,\n    };\n    setState(newState);\n    api\n      .GetFuzz(o.description, \"queue\")\n      .then((res) => {\n        const filter = res.result.map((element) => {\n          let obj = { ...element };\n          obj.label = `${element.name}- ${element.price}- ${element.upc}`;\n          return obj;\n        });\n        setFuzzSuggestion(filter);\n      })\n      .catch((err) => console.log(err));\n  };\n  const addProduct = () => {\n    console.log(selectedItemNo)\n    setShowModal(!showModal);\n    inventoryService\n      .createProduct(state)\n      .then(() => deleteAddedProducts(selectedItemNo))\n      .then((res) => alert(\"Successfully created a product\"))\n      .catch((err) => alert(\"Some error occuured in creating product\"));\n  };\n\n  const deleteAddedProducts = (item) => {\n    console.log('item to be deleted', item)\n    try {\n      firebase.database().ref(`/queue/${item}`).remove();\n      let temp = [...queue];\n      const filetered = temp.filter((product) => product.itemNo !== item)\n      setQueue(filetered);\n      return true;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  };\n  if (loader) {\n    return <Spinner />;\n  }\n\n  return (\n    <div style={{ marginTop: \"90px\" }}>\n      <div className=\"row\">\n        {queue.map((q, i) => (\n          <div className=\"col-md-4\" key={q.sku} style={{ padding: \"10px\" }}>\n            <div style={{ border: \"1px solid grey\", margin: \"10px\" }}>\n              <div className=\"text-center bg-secondary\">{q.itemNo}</div>\n              <br />\n              <div className=\"text-center\">{q.description}</div>\n              <br />\n              <div className=\"row\" style={{ marginBottom: \"10px\" }}>\n                <div className=\"col-md-9\"></div>\n                <div className=\"col-md-3\">\n                  <button\n                    className=\"btn btn-sm btn-primary\"\n                    onClick={() => {\n                      setShowModal(true);\n                      setModalLabel(q.description);\n                      setSelectedItemNo(q.itemNo)\n                      setContentExtra(q);\n                    }}\n                  >\n                    Details\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n      <CModal show={showModal} onClose={toggleModal}>\n        <CModalHeader closeButton>{modalLabel}</CModalHeader>\n        <CModalBody>\n          <CContainer fluid>\n            <CRow>\n              <CCol sm=\"12\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"name\">Name</CLabel>\n                  <Autocomplete\n                    value={state}\n                    onChange={(event, newValue) => {\n                      if (newValue) {\n                        let newState = { ...state };\n                        console.log(newValue);\n                        newState.name = newValue.name;\n                        newState.short_description = newValue.name;\n                        newState.description = newValue.name;\n                        newState.regular_price = newValue.price;\n                        newState.label = newValue.name;\n                        setState(newState);\n                      }\n                    }}\n                    id=\"combo-box\"\n                    options={fuzzSuggestion}\n                    getOptionLabel={(option) => option.label ?? option.name}\n                    style={{ paddingTop: 4 }}\n                    renderInput={(params) => (\n                      <TextField {...params} variant=\"outlined\" size=\"small\" />\n                    )}\n                  />\n                </CFormGroup>\n                <CRow>\n                  <CCol sm=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"type\">Type</CLabel>\n                      <CInput\n                        type=\"text\"\n                        name=\"type\"\n                        value={state.type}\n                        onChange={(event) => handleChange(event, \"\")}\n                      />\n                    </CFormGroup>\n                  </CCol>\n                  <CCol sm=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"regular_price\">Regular Price</CLabel>\n                      <CInput\n                        type=\"text\"\n                        name=\"regular_price\"\n                        value={state.regular_price}\n                        onChange={(event) => handleChange(event, \"\")}\n                      />\n                    </CFormGroup>\n                  </CCol>\n                </CRow>\n                <CFormGroup>\n                  <CLabel htmlFor=\"description\">Description</CLabel>\n                  <CInput\n                    type=\"text\"\n                    name=\"description\"\n                    value={state.description}\n                    onChange={(event) => handleChange(event, \"\")}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"short_description\">Short Description</CLabel>\n                  <CInput\n                    type=\"text\"\n                    name=\"short_description\"\n                    value={state.short_description}\n                    onChange={(event) => handleChange(event, \"\")}\n                  />\n                </CFormGroup>\n                <CRow>\n                  <CCol sm=\"3\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"categories\">Category</CLabel>\n                      <CDropdown name=\"categories\" className=\"mt-2\">\n                        <CDropdownToggle caret>\n                          {state.categories.length === 0\n                            ? \"Select a Category\"\n                            : state.categories[0].id}\n                        </CDropdownToggle>\n                        <CDropdownMenu>\n                          {categoryArray.map((e, i) => (\n                            <CDropdownItem\n                              key={i}\n                              name=\"categories\"\n                              onClick={(event) => handleChange(event, e)}\n                            >\n                              {e}\n                            </CDropdownItem>\n                          ))}\n                        </CDropdownMenu>\n                      </CDropdown>\n                    </CFormGroup>\n                  </CCol>\n                  <CCol sm=\"9\"></CCol>\n                </CRow>\n              </CCol>\n            </CRow>\n          </CContainer>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"primary\" onClick={() => addProduct()}>\n            Add\n          </CButton>{\" \"}\n          <CButton color=\"secondary\" onClick={toggleModal}>\n            Cancel\n          </CButton>\n        </CModalFooter>\n      </CModal>\n      <div className=\"row\" style={{ marginTop: \"40px\" }}>\n        <div className=\"col-md-2\">\n          <Link className=\"btn btn-lg btn-info\" to=\"/invoice\">\n            Back\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Queue;\n","/Users/sahil/Desktop/icms/inventory-management/client/src/components/Inventory/Inventory.js",["183","184","185","186","187"],"import { CRow, CCol, CDataTable } from \"@coreui/react\";\nimport { InventoryService } from \"../../services/InventoryService\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Axios from \"axios\";\n\nconst columns = [\n  { id: \"upc\", label: \"UPC\" },\n  { id: \"sku\", label: \"SKU\" },\n  { id: \"itemName\", label: \"Item Name\" },\n  { id: \"cost\", label: \"Cost\" },\n  { id: \"price\", label: \"Price\" },\n  { id: \"currentStockQuantity\", label: \"Current Stock Quantity\" },\n  { id: \"posSoldQuantity\", label: \"POS Sold Quantity\" },\n  { id: \"wordpressSoldQty\", label: \"Wordpress Sold Qty.\" },\n  { id: \"OnHand\", label: \"On Hand\"},\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    paddingTop: 50,\n  },\n  container: {\n    maxHeight: \"80vh\",\n    marginTop: 10,\n  },\n  table: {\n    \"& thead th\": {\n      fontWeight: \"600\",\n      fontSize: 20,\n      backgroundColor: \"grey\",\n    },\n    \"& tbody td\": {\n      fontWeight: \"300\",\n    },\n    \"& tbody tr:hover\": {\n      backgroundColor: \"#fffbf2\",\n      cursor: \"pointer\",\n    },\n  },\n});\n\nexport default function StickyHeadTable() {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(100);\n  const inventoryService = new InventoryService();\n  const [products, setProducts] = React.useState([]);\n  const [loader, setLoader] = React.useState(true);\n  const [searchVal, setSearchVal] = React.useState(\"\");\n  const [startDate, setStartDate] = React.useState(\"20-July-2021\");\n  const [endDate, setEndDate] = React.useState(\"22-July-2021\");\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const changeDateFormat = (date) => {\n    let defaultDate = new Date(date);\n    let month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"][defaultDate.getMonth()];\n    let formattedDate = defaultDate.getDate()+\"-\"+month+\"-\"+defaultDate.getFullYear();\n    return formattedDate;\n  }\n\n  const onGo = () => {\n    console.log(startDate);\n    console.log(endDate);\n    const options = {\n      method: \"GET\",\n      headers:{\n        UserId: \"lRRqlkYefuV=\",\n        Password: \"lRRqlkYefuV6jJ==\",\n        Pin: \"qzOUsBmZFgMDlwGtrgYypxUz\",\n        'Content-Type' : 'application/x-www-form-urlencoded; charset=UTF-8',\n      },\n      body:{\n        STARTDATE: startDate,\n        ENDDATE: endDate\n      },\n      json: true,\n    }    \n    const dateObj = {startDate: startDate, endDate: endDate};\n    try {\n      setLoader(true);\n      const res = Axios.get(\"https://dataservices.sypramsoftware.com/api/Product/GetSoldItemList\",options)\n                    .then(response => {return response});\n      const data = res.map((item) => {\n        const {\n          UPC,\n          SKU,\n          //ItemName,\n          ITEMNAME,\n          //Price,\n          PRICEPERUNIT,\n          Cost,\n          TotalQty,\n          //soldQty,\n          QuantitySold,\n          wordpressSoldQty,\n          OnHand\n        } = item;\n        return {\n          upc: UPC,\n          itemName: ITEMNAME,\n          cost: Cost,\n          price: PRICEPERUNIT,\n          sku: SKU,\n          currentStockQuantity: TotalQty,\n          posSoldQuantity: QuantitySold,\n          wordpressSoldQty,\n          OnHand: OnHand\n        };\n      });\n\n      setProducts(data);\n    } catch (error) {\n      alert(\"Couldn't sync inventory\", error);\n    } finally {\n      setLoader(false);\n    }\n  }\n\n  const getProducts = async () => {\n    try {\n      setLoader(true);\n      const res = await inventoryService.SyncInventory();\n      const data = res.map((item) => {\n        const {\n          UPC,\n          SKU,\n          ItemName,\n          Price,\n          Cost,\n          TotalQty,\n          soldQty,\n          wordpressSoldQty,\n        } = item;\n        return {\n          upc: UPC,\n          itemName: ItemName,\n          cost: Cost,\n          price: Price,\n          sku: SKU,\n          currentStockQuantity: TotalQty,\n          posSoldQuantity: soldQty,\n          wordpressSoldQty,\n        };\n      });\n      setProducts(data);\n      alert(\"Sync complete\");\n    } catch (error) {\n      alert(\"Couldn't sync inventory\", error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  React.useEffect(() => {\n    async function getInitialSyncedData() {\n      try {\n        setLoader(true);\n        const res = await inventoryService.getInitialSyncedData();\n        const data = res.map((item) => {\n          const {\n            UPC,\n            SKU,\n            //ItemName,\n            ITEMNAME,\n            //Price,\n            PRICEPERUNIT,\n            Cost,\n            TotalQty,\n            //soldQty,\n            QuantitySold,\n            wordpressSoldQty,\n            OnHand\n          } = item;\n          return {\n            upc: UPC,\n            itemName: ITEMNAME,\n            cost: Cost,\n            price: PRICEPERUNIT,\n            sku: SKU,\n            currentStockQuantity: TotalQty,\n            posSoldQuantity: QuantitySold,\n            wordpressSoldQty,\n            OnHand: OnHand\n          };\n        });\n\n        setProducts(data);\n      } catch (error) {\n        alert(\"Couldn't sync inventory\", error);\n      } finally {\n        setLoader(false);\n      }\n    }\n    console.log(startDate, endDate);\n    getInitialSyncedData();\n  }, []);\n\n  if (loader) {\n    return <Spinner />;\n  }\n  return (\n    <Paper className={classes.root}>\n      <Grid style={{ display: \"flex\" }}>\n        <TextField\n          label=\"Search\"\n          variant=\"outlined\"\n          value={searchVal}\n          style={{ marginLeft: 20 }}\n          onChange={(e) => setSearchVal(e.target.value)}\n        />\n        <TextField\n          id=\"date\"\n          label=\"Start Date\"\n          type=\"date\"\n          value={startDate}\n          style={{ marginLeft: 20 }}          \n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={(event) => setStartDate(event.target.value)}          \n        />\n        <TextField\n          id=\"date\"\n          label=\"End Date\"\n          type=\"date\"\n          value={endDate}\n          style={{ marginLeft: 20 }}          \n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={(event) => setEndDate(event.target.value)}\n        />\n        <button  style={{backgroundColor: \"green\",\n          border: \"none\",\n          color: \"white\",\n          padding: \"4px 8px\",\n          textAlign: \"center\",\n          textDecoration: \"none\",\n          display: \"inline-block\",\n          fontSize: \"14px\",\n          align: \"left\",\n          marginLeft: 20}}\n          onClick={() => onGo()}>\n            Go!\n          </button>\n\n        <Box style={{ flexGrow: 1 }} />\n        <CCol sm=\"1\">\n          <button className=\"btn btn-lg btn-info\" onClick={() => getProducts()}>\n            Sync\n          </button>\n        </CCol>\n      </Grid>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\" className={classes.table}>\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {products\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .filter((item) => {\n                if (searchVal) {\n                  if (item.itemName.toLowerCase().includes(searchVal)) {\n                    return item;\n                  } else {\n                    return null;\n                  }\n                }\n                return item;\n              })\n              .map((row) => {\n                return (\n                  <TableRow hover role=\"checkbox\" key={row.upc}>\n                    {columns.map((column) => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[100, 200, 500]}\n        component=\"div\"\n        count={products.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n","/Users/sahil/Desktop/icms/inventory-management/client/src/components/Pos/Pos.js",["188","189","190","191","192","193","194","195","196","197"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { InventoryService } from \"../../services/InventoryService\";\nimport { Api } from \"../../services/Api\";\nimport {\n  CModal,\n  CModalBody,\n  CModalHeader,\n  CModalFooter,\n  CButton,\n  CContainer,\n  CCol,\n  CRow,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CDropdown,\n  CDropdownToggle,\n  CDropdownMenu,\n  CDropdownItem,\n} from \"@coreui/react\";\nimport firebase from \"../../firebase\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\nimport { stat } from \"fs\";\nconst POS = () => {\n  const inventoryService = new InventoryService();\n  const api = new Api();\n  const [queue, setQueue] = useState([]);\n  const [loader, setLoader] = useState(true);\n  const [categoryArray, setCategoryArray] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [content, setContent] = useState(null);\n  const [header, setHeader] = useState([]);\n  const [fuzzSuggestion, setFuzzSuggestion] = useState([]);\n  const [selectedItemNo, setSelectedItemNo] = useState(\"\");\n  const [modalLabel, setModalLabel] = useState(\"\");\n  const [state, setState] = useState({\n    item: \"\",\n    quantity: \"\",\n    description: \"\",\n    price: \"\",\n    pos: \"\",\n    barcode: \"\",\n    posSku: \"\",\n    invoice: \"\",\n    size: \"\",\n    department: \"\",\n    unitCost: \"\",\n    unitPrice: \"\"\n  });\n  const handleChange = (key, val) => {\n    setState({\n      ...state,\n      [key]: val,\n    });\n  };\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n  useEffect(() => {\n    const ref = firebase.database().ref(\"/review\");\n    ref.on(\"value\", (snapshot) => {\n      if (snapshot.val()) {\n        const data = Object.values(snapshot.val());\n        console.log(data);\n        setQueue(data);\n        setLoader(false);\n      }\n    });\n  }, []);\n  const setContentExtra = (o) => {\n    setContent(o);\n    let header = [];\n    for (var prop in o) {\n      if (Object.prototype.hasOwnProperty.call(o, prop)) {\n        header.push(prop);\n      }\n    }\n    setHeader(header);\n    let newState = {\n      item: o.itemNo,\n      description: o.description,\n      pos: o.posName,\n      barcode: o.barcode,\n      posSku: o.posSku || \"\",\n      invoice: o.invoiceName,\n      size: \"loading...\",\n      department: \"loading...\",\n      unitCost: \"loading...\",\n      unitPrice: \"loading...\"\n\n    };\n    setState(newState);\n\n    let prdctSize;\n    let fuzzwuzzResult;\n    let dprtmnt;\n    let untCst;\n    let untPrce;\n    api\n      .GetFuzz(o.description, \"pos\")\n      .then((res) => {\n        fuzzwuzzResult = res.result;\n        const filter = res.result.map((element) => {\n          let obj = { ...element };\n          obj.label = `${element.name}- ${element.price}- ${element.upc} - ${element.size}`;\n          console.log(obj);\n          return obj;\n          \n        });\n        \n        for(let i=0;i<fuzzwuzzResult.length;i++){\n          if(o.posSku == fuzzwuzzResult[i].sku){\n            prdctSize = fuzzwuzzResult[i].size !== null ? fuzzwuzzResult[i].size : \"NOT AVAILABLE\";\n            dprtmnt = fuzzwuzzResult[i].department !== null ? fuzzwuzzResult[i].department : \"NOT AVAILABLE\";\n            untCst = fuzzwuzzResult[i].cost !== null ? fuzzwuzzResult[i].cost : \"NOT AVAILABLE\";\n            untPrce = fuzzwuzzResult[i].price !== null ? fuzzwuzzResult[i].price : \"NOT AVAILABLE\";\n            break;\n          }\n        }\n        console.log(dprtmnt + untCst + untPrce+\"$\"+prdctSize);\n       \n        newState = {\n          item: o.itemNo,\n          description: o.description,\n          pos: o.posName,\n          barcode: o.barcode,\n          posSku: o.posSku || \"\",\n          invoice: o.invoiceName,\n          size: prdctSize,\n          department: dprtmnt,\n          unitCost: untCst,\n          unitPrice: untPrce,\n        };\n        setState(newState);\n        setFuzzSuggestion(filter);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  /* const changeDropdown = () => {\n    api\n      .GetFuzz(\"\", \"pos\")\n      .then((res) => {\n        const filter = res.result.map((element) => {\n          let obj = { ...element };\n          obj.label = `${element.name}- ${element.price}- ${element.upc} - ${element.size} }`;\n          console.log(obj);\n          return obj;\n          \n        });\n        setFuzzSuggestion(filter);\n      })\n      .catch((err) => console.log(err));\n  };\n */\n  const addProduct = () => {\n    console.log(selectedItemNo);\n    setShowModal(!showModal);\n    console.log(state);\n    const data = {\n      invoiceName: state.invoice,\n      itemName: state.item,\n      value: { POS: state.pos, \n        Barcode: state.barcode, \n        PosSKU: state.posSku, \n        isReviewed: \"true\",\n        Size: state.size, \n        Department: state.department,\n        SellerCost: state.unitCost,\n        SellingPrice: state.unitPrice\n      },\n    };\n    \n    setLoader(true);\n    inventoryService\n      .UpdateProductFields(data)\n      .then((res) => {\n        if (!res) {\n          throw new Error(\"Product not created\")\n        }\n        console.log(res);\n        alert(\"Successfully updated fields\");\n      })\n      .then(() => deleteAddedProducts(selectedItemNo))\n      .catch((err) => {\n        console.log(err);\n        alert(\"Some error occuured in creating product\");\n      })\n      .finally(() => setLoader(false));\n  };\n\n  const deleteAddedProducts = (item) => {\n    try {\n      firebase.database().ref(`/review/${item}`).remove();\n      let temp = [...queue];\n      const filetered = temp.filter((product) => product.itemNo !== item);\n      setQueue(filetered);\n      return true;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  };\n  if (loader) {\n    return <Spinner />;\n  }\n\n  return (\n    <div style={{ marginTop: \"90px\" }}>\n      <div className=\"row\">\n        {queue.map((q, i) => (\n          <div className=\"col-md-4\" key={q.itemNo} style={{ padding: \"10px\" }}>\n            <div style={{ border: \"1px solid grey\", margin: \"10px\" }}>\n              <div className=\"text-center bg-secondary\">{q.itemNo}</div>\n              <br />\n              <div className=\"text-center\">{q.description}</div>\n              <br />\n              <div className=\"row\" style={{ marginBottom: \"10px\" }}>\n                <div className=\"col-md-9\"></div>\n                <div className=\"col-md-3\">\n                  <button\n                    className=\"btn btn-sm btn-primary\"\n                    onClick={() => {\n                      setShowModal(true);\n                      setModalLabel(q.itemNo);\n                      setSelectedItemNo(q.itemNo);\n                      setContentExtra(q);\n                    }}\n                  >\n                    Details\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n      <CModal show={showModal} onClose={toggleModal}>\n        <CModalHeader closeButton>{modalLabel}</CModalHeader>\n        <CModalBody>\n          <CContainer fluid>\n            <CRow>\n              <CCol sm=\"12\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"name\">Name</CLabel>\n                  <Autocomplete\n                    value={state.item}\n                    onChange={(event, newValue) => {\n                      if (newValue) {\n                        let newState = { ...state };\n                        console.log(newValue);\n                        // newState.item = newValue.name;\n                        newState.description = newValue.name;\n                        newState.barcode = newValue.upc;\n                        newState.pos = newValue.name;\n                        newState.posSku = newValue.sku;\n                        newState.size = newValue.size;\n                        newState.department = newValue.department;\n                        newState.unitCost = newValue.cost;\n                        newState.unitPrice = newValue.price;\n                        setState(newState);\n                        console.log(newValue);\n                        console.log(newState);\n                        console.log(state);\n                      }\n                    }}\n                    id=\"combo-box\"\n                    options={fuzzSuggestion}\n                    getOptionLabel={(option) => option.label ?? state.item}\n                    style={{ paddingTop: 4 }}\n                    renderInput={(params) => (\n                      <TextField {...params} variant=\"outlined\" size=\"small\" />\n                    )}\n                  />\n                </CFormGroup>\n                <CRow>\n                  <CCol sm=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"type\">Barcode</CLabel>\n                      <CInput \n                        disabled\n                        type=\"text\"\n                        name=\"type\"\n                        value={state.barcode}\n                        onChange={(event) =>\n                          handleChange(\"barcode\", event.target.value)\n                        }\n                      />\n                    </CFormGroup>\n                  </CCol>\n                  <CCol sm=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"short_description\">POS SKU</CLabel>\n                      <CInput\n                        disabled\n                        type=\"text\"\n                        name=\"short_description\"\n                        value={state.posSku}\n                        onChange={(event) =>\n                          handleChange(\"posSku\", event.target.value)\n                        }\n                      />\n                    </CFormGroup>\n                  </CCol>\n                </CRow>\n                <CFormGroup>\n                  <CLabel htmlFor=\"description\">Invoice Description</CLabel>\n                  <CInput\n                    disabled\n                    type=\"text\"\n                    name=\"description\"\n                    value={state.description}\n                    onChange={(event) =>\n                      handleChange(\"description\", event.target.value)\n                    }\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"regular_price\">POS Name</CLabel>\n                  <CInput\n                    disabled\n                    type=\"text\"\n                    name=\"regular_price\"\n                    value={state.pos}\n                    onChange={(event) =>\n                      handleChange(\"pos\", event.target.value)\n                    }\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"size\">POS Size</CLabel>\n                  <CInput\n                    disabled\n                    type=\"text\"\n                    name=\"size\"\n                    value={state.size}\n                    onChange={(event) =>\n                      handleChange(\"size\", event.target.value)\n                    }\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"department\">Department</CLabel>\n                  <CInput\n                    disabled\n                    type=\"text\"\n                    name=\"department\"\n                    value={state.department}\n                    onChange={(event) =>\n                      handleChange(\"department\", event.target.value)\n                    }\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"unitPrice\">POS Unit Price</CLabel>\n                  <CInput\n                    disabled\n                    type=\"text\"\n                    name=\"unitPrice\"\n                    value={state.unitPrice}\n                    onChange={(event) =>\n                      handleChange(\"unitPrice\", event.target.value)\n                    }\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"unitCost\">POS Unit Cost</CLabel>\n                  <CInput\n                    disabled\n                    type=\"text\"\n                    name=\"unitCost\"\n                    value={state.unitCost}\n                    onChange={(event) =>\n                      handleChange(\"unitCost\", event.target.value)\n                    }\n                  />\n                </CFormGroup>\n                {/* <CRow>\n                  <CCol sm=\"3\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"categories\">Category</CLabel>\n                      <CDropdown name=\"categories\" className=\"mt-2\">\n                        <CDropdownToggle caret>\n                          {state.categories.length === 0\n                            ? \"Select a Category\"\n                            : state.categories[0].id}\n                        </CDropdownToggle>\n                        <CDropdownMenu>\n                          {categoryArray.map((e, i) => (\n                            <CDropdownItem\n                              key={i}\n                              name=\"categories\"\n                              onClick={(event) => handleChange(event, e)}\n                            >\n                              {e}\n                            </CDropdownItem>\n                          ))}\n                        </CDropdownMenu>\n                      </CDropdown>\n                    </CFormGroup>\n                  </CCol>\n                  <CCol sm=\"9\"></CCol>\n                </CRow> */}\n              </CCol>\n            </CRow>\n          </CContainer>\n        </CModalBody>\n        <CModalFooter>\n        {/* <button onClick={() => changeDropdown()} \n          style={{backgroundColor: \"green\",\n          border: \"none\",\n          color: \"white\",\n          padding: \"4px 8px\",\n          textAlign: \"center\",\n          textDecoration: \"none\",\n          display: \"inline-block\",\n          fontSize: \"14px\",\n          align: \"left\"}} >\n            Change Dropdown\n          </button> */}\n          <CButton color=\"primary\" onClick={() => addProduct()}>\n            Add\n          </CButton>{\" \"}\n          <CButton color=\"secondary\" onClick={toggleModal}>\n            Cancel\n          </CButton>\n        </CModalFooter>\n      </CModal>\n      <div className=\"row\" style={{ marginTop: \"40px\" }}>\n        <div className=\"col-md-2\">\n          <Link className=\"btn btn-lg btn-info\" to=\"/invoice\">\n            Back\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default POS;\n","/Users/sahil/Desktop/icms/inventory-management/client/src/components/SaveInvoiceData/SaveInvoiceData.js",["198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271"],"import React, { useState, useEffect } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { dropdownOptions } from \"../../utils/invoiceList\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TesseractService } from \"../../services/TesseractService\";\n\nimport { InventoryService } from \"../../services/InventoryService\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport { Api } from \"../../services/Api\";\nimport HicksData from \"../DisplayData/Hicksville.json\";\nimport { CContainer, CModalHeader, CCol, CFormGroup, CInput, CButton, CLabel, CModal, CModalBody, CModalFooter, CRow } from \"@coreui/react\";\nimport Button from \"../../UI/Button\";\nimport styles from \"../DisplayData/DisplayData.module.css\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport UpdateInventory from \"../Update/UpdateInventory\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport  CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport Cancel from \"@material-ui/icons/Cancel\";\n// import CircularProgress from '@material/circular-progress';\n// import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n// import Loading from 'react-loader-spinner';\n\nimport { useSelector} from \"react-redux\";\n\n\nconst useStyles = makeStyles({\n        root: {\n        width: \"100%\",\n        // paddingTop: 50,\n        // height: \"125px\"\n        },\n        container: {\n            maxHeight: \"80vh\",\n            marginTop: 10,\n          },\n          table: {\n            \"& thead th\": {\n              fontWeight: \"600\",\n              fontSize: 20,\n              backgroundColor: \"grey\",\n            },\n            \"& tbody td\": {\n              fontWeight: \"300\",\n            },\n            \"& tbody tr:hover\": {\n              backgroundColor: \"#fffbf2\",\n              cursor: \"pointer\",\n            },\n          },\n    });\nlet emptyColumnList = [];\n\nconst SaveInvoiceData = () => {\n\n    const tesseractService = new TesseractService();\n    const classes = useStyles();\n    const [date, setDate] = useState(\"\");\n    const [invoice, setInvoice] = useState({});\n    const [invoiceNo, setInvoiceNo] = useState(\"\");\n    const numOfCollections = dropdownOptions.length;\n    const dropdownLabel = \"Select Invoice(\"+   numOfCollections   + \")\";\n    // const [inv, setInv] = useState(\"\");\n    const inv = useSelector(state => state.openInvoice.inv);\n    // const [ num, setNum] = useState(\"\");\n    const num = useSelector(state => state.openInvoice.num);\n    // const [day, setDay] = useState(\"\");\n    const day = useSelector(state => state.openInvoice.day);\n    // const [apiLoader, setApiLoader] = useState(false);\n\n    const apiLoader = useSelector(state => state.loaders.apiLoader)\n    const dispatch = useDispatch();\n\n    \n\n    //Following for display data functionalities.\n    const [hicksvilleData, setHicksvilleData] = useState([]);\n    let saveInvoiceFlag  = 1;\n    const api = new Api();\n    const [tableData, setTableData] = useState([]);\n    const [emptyColumn, setEmptyColumn] = useState([]);\n    const [productDetails, setProductDetails] = useState([]);\n    const [pushToInventory, setPushToInventory] = useState(false);\n    const [inventoryData, setInventoryData] = useState([]);\n    const [itemNoDropdown, setItemNoDropdown] = useState([]);\n    \n    // const [loader, setLoader] = useState(false);\n    const loader = useSelector(state => state.loaders.loader);\n\n    const [reviewItems, setReviewItems] = useState([]);\n    const [showPosIndex, setShowPosIndex] = useState(-1);\n    const inventoryService = new InventoryService();\n    const [showModal, setShowModal] = useState(false);\n    // const [stateUpdated, setStateUpdated] = useState(\"false\");\n    const [costInc, setCostInc] = useState(\"false\");\n    const [costDec, setCostDec] = useState(\"false\");\n    const [unitCost, setUnitCost] = useState(\"\");\n    const [isUpdated, setIsUpdated] = useState(\"false\");\n    const [updateIndex, setUpdateIndex] = useState(-1);\n    let posProducts = []\n    let wooComProducts = [];\n    let singleItemData = [];\n    let itemNo = \"\";\n    // const [posProducts, setPosProducts] = useState([]);\n\n    // const [notFounds, setNotFounds] = useState(\"false\");\n    const notFounds = useSelector(state => state.redItems.notFounds);\n\n    // const [unitsInCase, setUnitsInCase] = useState(\"\");\n    const unitsInCase = useSelector(state => state.redItems.unitsInCase);\n\n    // const [price, setPrice] = useState(\"\");\n    const price = useSelector(state => state.redItems.price);\n\n    const [redState, setRedState] = useState(\"true\");\n    let updateSku = \"\";\n    const [searchVal, setSearchVal] = useState(\"\");\n    const [options, setOptions] = useState([]);\n    const [detailsModal, setDetailsModal] = useState(false);\n    const [invoiceOptions, setInvoiceOptions] = useState([]);\n    const [details, setDetails] = useState(\"\");\n    const [detailsIndex, setDetailsIndex] = useState(-1);\n\n    // const [userEmail, setUserEmail] = useState(\"\");\n    const userEmail = useSelector(state => state.userDetails.userEmail);\n    \n    // const [todayDate, setTodayDate] = useState(\"\");\n    const todayDate = useSelector(state => state.userDetails.todayDate);\n\n    \n    // const [openInvoice, setOpenInvoice] = useState(false);\n    const openInvoice = useSelector(state => state.openInvoice.openInvoice);\n\n    const[dropdownLoader, setDropdownLoader] = useState(false);\n    const [fetchingOptions, setFetchingOptions] = useState(false);\n    const [dropdownIndex, setDropwdownIndex] = useState(-1);\n\n    const invoiceHeader = [\n      \"Sr.No.\",\n      \"Invoice\",\n      \"Invoice No.\",\n      \"Invoice Date\",\n      \"Open Invoice\"\n    ]\n\n    \n    const header = [\n        \"Serial No.\",\n        \"Barcode\",\n        \"POS SKU\",\n        \"Qty Shipped\",,\n        \"Unit Cost\",\n        \"ITEM NO\",\n        \"Link Product\",\n        \n        \"DESCRIPTION\",\n        \"Units in  Case\",\n        \"Case cost\",\n        \"Extended Price\",\n       \n        \"Unit Price\",\n        \"Mark up (%)\",\n        \"Add Details\",\n        \"Tick to Delete\",\n        \"Update POS\",\n        \"Reverse POS Update\",\n        \"NO LINKING\",\n        \"Serial No.(2)\"\n    ];\n\n    const itemNoDescription = [\n      \"advance-foods\",\n      \"family-five\"\n    ];\n\n    const showPosState = useSelector(state => state.showPosState);\n    // const [showPosState, setShowPosState] = useState({\n    //     item: \"\",\n    //     quantity: \"\",\n    //     description: \"\",\n    //     price: \"\",\n    //     pos: \"\",\n    //     barcode: \"\",\n    //     posSku: \"\",\n    //     invoice: \"\",\n    //     size: \"\",\n    //     department: \"\",\n    //     unitCost: \"\",\n    //     unitPrice: \"\",\n    // });\n\n  //***************  INDIVIDUAL ITEM UPDATE FUNCTIONALITY STARTS*******************************************.\n\n    //Function to fetch wooCom Prpducts.\n    async function getProducts() {\n      console.log(\"IN WOOCOM PRODUCTS\");\n      const items = await Promise.all(\n        singleItemData.map(async (row) => {\n          console.log(row.barcode);\n          try {\n            const res = await inventoryService.GetProductDetails(row.barcode);\n            console.log(res);\n            const {\n              id,\n              name,\n              regular_price,\n              price,\n              sku,\n              slug,\n              stock_quantity,\n              sale_price,\n            } = res[0];\n            return {\n              id,\n              name,\n              regular_price,\n              price,\n              sku,\n              slug,\n              stock_quantity,\n              sale_price,\n              itemNo: row.itemNo,\n            };\n          } catch (error) {\n            // tempNotFoundProducts.push(row);\n\n            // Commented on 13th Dec 2021.\n            // console.log(\"Couldn't fetch product from wordpress.\", row.itemNo);\n            return null;\n          }\n        })\n      );\n      // setLoader(false);\n      dispatch({type: \"LOADER\"});\n      console.log(items);\n      wooComProducts = items;\n      // setWooComProducts(items.filter((ele) => ele !== null));\n      // setNotFoundProducts(tempNotFoundProducts);\n    }\n\n    async function getPosProductsLinkManually(index) {\n\n      console.log(\"tabledata in getPosProductsLinkManually\",tableData);\n\n      // dispatch({type: \"LOADER\"});\n      const res = await inventoryService.GetPOSProductDetails(tableData[index].barcode);\n\n      console.log(\"res is: \", res);\n\n      if(!Array.isArray(res)){\n        alert(\"API not working\");\n        return;\n      }\n\n      // SET ITEMNAME...\n      let codeOrSku = \"\";\n      console.log(\"res[0].ITEMNAME.indexOf(\"-\")\" ,res[0].ITEMNAME.indexOf(\"-\"));\n      let itemName = res[0].ITEMNAME;\n\n      if(res[0].ITEMNAME.indexOf(\"-\") < 0){\n        let itemNoPresent;\n        for(let i = 0; i<itemNoDescription.length; i++){\n          if(itemNoDescription[i] === invoice.slug){\n            itemNoPresent = false;\n            break;\n          }else {\n            itemNoPresent = true;\n            break;\n          }\n        }\n\n        console.log(\"itemNoPresent\",itemNoPresent);\n        if(itemNoPresent){\n          codeOrSku = tableData[index].itemNo;\n        }else{\n          codeOrSku = \"SKU\" + \" \" + tableData[index].posSku; \n        }\n        itemName = res[0].ITEMNAME + \" \" + \"-\" + \" \" + codeOrSku;\n\n      // Do the API Call to update on syprum system.\n      const update = await inventoryService.UpdatePOSProducts(\n        JSON.stringify({\n          UPC: tableData[index].barcode,\n          ITEMNAME: itemName,\n          DESCRIPTION: \"\",\n          PRICE: res[0].PRICE,\n          COST: res[0].COST,\n          QTY: res[0].TOTALQTY,\n          SIZE: \"\",\n          PACK: \"\",\n          REPLACEQTY: 1,\n          DEPARTMENT: res[0].DEPNAME,\n          CATEGORY: \"\",\n          SUBCATEGORY: \"\",\n          ISFOODSTAMP: 1,\n          ISWEIGHTED: 0,\n          ISTAXABLE: 1,\n          VENDORNAME: invoice.slug,\n          VENDORCODE: tableData[index].itemNo,\n          VENDORCOST: \"\",\n          ISNEWITEM: 0,\n          BUYASCASE: 1,\n          CASEUNITS: tableData[index].pieces,\n          CASECOST: (tableData[index].price / tableData[index].qty),\n          COMPANYNAME: invoice.slug,\n          PRODUCTCODE: tableData[index].itemNo,\n          MODELNUM: userEmail.slice(0,4) + \" \" + new Date().toLocaleDateString(),\n          VINTAGE: \"ICMS\",\n        })\n      );\n\n      console.log(\"Helloooooooooooooooooooooooooo update api call\", update);\n      \n      console.log(\"update api call\", update[0].COST);\n      console.log(\"update api call\", update[0].PRICE);\n      console.log(\"update api call\", update[0].ITEMNAME);\n      console.log(\"update api call\", update[0].VENDORCODE);\n      console.log(\"update api call\", invoice.slug);\n      let data1 = {\n        cost: update[0].COST,\n        price: update[0].PRICE,\n        item: update[0].VENDORCODE,\n        itemName:update[0].ITEMNAME,\n        invoice: invoice.slug\n      }\n      \n      // console.log(\"I am posProducts.ITEMNAME from updatedb after Pos\",posProducts[0].ITEMNAME)\n\n      await inventoryService.UpdateDBafterPosUpdate(data1);\n      }\n\n      // const update = await inventoryService.UpdatePOSProducts(\n      //   JSON.stringify({\n      //     UPC,\n      //     ITEMNAME: itemName,\n      //     DESCRIPTION: \"\",\n      //     PRICE: res.PRICE,\n      //     COST: res.COST,\n      //     QTY: res.TOTALQTY,\n      //     SIZE: \"\",\n      //     PACK: \"\",\n      //     REPLACEQTY: 1,\n      //     DEPARTMENT: res.DEPNAME,\n      //     CATEGORY: \"\",\n      //     SUBCATEGORY: \"\",\n      //     ISFOODSTAMP: 1,\n      //     ISWEIGHTED: 0,\n      //     ISTAXABLE: 1,\n      //     VENDORNAME: invoice.slug,\n      //     VENDORCODE: itemNo,\n      //     VENDORCOST: \"\",\n      //     ISNEWITEM: 0,\n      //     BUYASCASE,\n      //     CASEUNITS,\n      //     CASECOST,\n      //     COMPANYNAME: invoice.slug,\n      //     PRODUCTCODE: itemNo,\n      //     MODELNUM: userEmail.slice(0,4) + \" \" + new Date().toLocaleDateString(),\n      //     VINTAGE: \"ICMS\",\n      //   })\n      // );\n\n      // if(tableData[index].posSku === res.SKU) {\n      //     console.log(\"SKU is same\");\n      //     dispatch({type: \"LOADER\"});\n      //   }\n      \n\n    }\n\n    //function to fetch POS products.\n    async function getPosProducts() {\n      console.log(\"IN POS PRODUCTS\");\n      // setLoader(true);\n      dispatch({type: \"LOADER\"});\n      let hasErrorOccured = false;\n      const items = await Promise.all(\n        singleItemData\n          .map(async (row) => {\n            console.log(row.barcode);\n            try {\n              const res = await inventoryService.GetPOSProductDetails(\n                row.barcode\n              );\n              if(!Array.isArray(res)){\n                alert(\"API not working\");\n                return;\n              }\n              console.log(\"fetched pos data\", res);\n              const { SKU, UPC, ITEMNAME, TOTALQTY, DEPNAME } = res[0];\n              console.log(SKU);\n              console.log(updateSku);\n              if(SKU == updateSku){\n                console.log(SKU);\n                console.log(updateSku);\n                return {\n                  ...row,\n                  COST: row.cp,\n                  PRICE: row.sp,\n                  SKU,\n                  UPC,\n                  ITEMNAME,\n                  TOTALQTY:\n                    parseInt(row.qty) * parseInt(row.pieces) + parseInt(TOTALQTY),\n                  itemNo: row.itemNo,\n                  isNew: false,\n                  BUYASCASE: 1,\n                  CASEUNITS: row.pieces.toString(),\n                  CASECOST: row.unitPrice.toString(),\n                  DEPNAME,\n                };\n              } else {\n                alert(\"SKU mismatch!!\");\n              }\n\n              \n              \n            } catch (error) {\n              hasErrorOccured = true;\n              return {\n                ...row,\n                COST: row.cp,\n                PRICE: row.sp,\n                SKU: row.posSku,\n                UPC: row.barcode,\n                ITEMNAME: row.description,\n                TOTALQTY: parseInt(row.qty) * parseInt(row.pieces),\n                itemNo: row.itemNo,\n                isNew: true,\n                BUYASCASE: 1,\n                CASEUNITS: row.pieces.toString(),\n                CASECOST: row.unitPrice.toString(),\n                DEPNAME: \"\",\n              };\n            }\n          })\n      );\n      if (hasErrorOccured) {\n        alert(\"Couldn't fetch some data from POS\");\n      }\n      // setLoader(false);\n      dispatch({type: \"LOADER\"});\n      console.log(items);\n      posProducts = items;\n      console.log(\"posProducts array is: \",posProducts);\n      // setPosProducts(items.filter((ele) => ele !== null));\n    }\n\n    //PUSH TO WOOCOM.\n    const pushToWoocom = async (products) => {\n      // setLoader(true);\n      dispatch({type: \"LOADER\"});\n      const responses = await Promise.all(\n        products.map(async (product) => {\n          try {\n            const res = await inventoryService.UpdateProductDetails(product.id, {\n              regular_price: product.regular_price,\n              stock_quantity: product.stock_quantity,\n            });\n            const { id, name, regular_price, stock_quantity } = res;\n            return {\n              id,\n              name,\n              regular_price,\n              stock_quantity,\n              itemNo: product.itemNo,\n            };\n          } catch (error) {\n            console.log(error);\n            alert(\"Couldn't update product on website.\");\n            return null;\n          }\n        })\n      );\n      // setLoader(false);\n      dispatch({type: \"LOADER\"});\n    };\n\n    //PUSH TO POS.\n    const pushToPOS = async (products) => {\n      // setLoader(true);\n      dispatch({type: \"LOADER\"});\n      console.log(\"products values are: \",products);\n\n\n      const responses = await Promise.all(\n        products.map(async (product) => {\n          \n          try {\n            const {\n              COST,\n              PRICE,\n              UPC,\n              TOTALQTY,\n              isNew,\n              ITEMNAME,\n              BUYASCASE,\n              CASEUNITS,\n              CASECOST,\n              SKU,\n              DEPNAME,\n              itemNo\n            } = product;\n\n            // SET ITEMNAME... \n            let codeOrSku = \"\";\n            console.log(product.itemNo)\n            console.log(ITEMNAME.indexOf(\"-\"));\n            let itemName = ITEMNAME;\n\n            if(ITEMNAME.indexOf(\"-\") < 0){\n              let itemNoPresent;\n              for(let i = 0; i<itemNoDescription.length; i++){\n                console.log(invoice.slug)\n                if(itemNoDescription[i] === invoice.slug){\n                  itemNoPresent = false;\n                  break;\n                }else {\n                  itemNoPresent = true;\n                  break;\n                }\n              }\n              console.log(itemNoPresent);\n              if(itemNoPresent){\n                codeOrSku = product.itemNo;\n              }else{\n                codeOrSku = \"SKU\" + \" \" + product.posSku \n              }\n              itemName = ITEMNAME + \" \" + \"-\" + \" \" + codeOrSku;\n            }\n\n            const res = await inventoryService.UpdatePOSProducts(\n              JSON.stringify({\n                UPC,\n                ITEMNAME: itemName,\n                DESCRIPTION: \"\",\n                PRICE,\n                COST,\n                QTY: TOTALQTY,\n                SIZE: \"\",\n                PACK: \"\",\n                REPLACEQTY: 1,\n                DEPARTMENT: DEPNAME,\n                CATEGORY: \"\",\n                SUBCATEGORY: \"\",\n                ISFOODSTAMP: 1,\n                ISWEIGHTED: 0,\n                ISTAXABLE: 1,\n                VENDORNAME: invoice.slug,\n                VENDORCODE: itemNo,\n                VENDORCOST: \"\",\n                ISNEWITEM: isNew ? 1 : 0,\n                BUYASCASE,\n                CASEUNITS,\n                CASECOST,\n                COMPANYNAME: invoice.slug,\n                PRODUCTCODE: itemNo,\n                MODELNUM: userEmail.slice(0,4) + \" \" + new Date().toLocaleDateString(),\n                VINTAGE: \"ICMS\",\n              })\n            );\n            console.log(\"updated pos data\", res);\n            const data = {\n              UPC,\n              SKU,\n              Cost: COST,\n              ItemName: ITEMNAME,\n              Price: PRICE,\n              TotalQty: TOTALQTY,\n            };\n            //not needed as of now, parikshit.\n            if (isNew) {\n              const response = await inventoryService.CreateDBProduct(data);\n              console.log(\"Created new product\", response);\n            } else {\n              const response = await inventoryService.UpdateDBProduct({\n                count: parseInt(product.qty) * parseInt(product.pieces),\n                UPC,\n              });\n              console.log(\"updated existing product\", response);\n            }\n  \n            console.log(\"res from POS\", res);\n            return true;\n          } catch (error) {\n            console.log(error);\n            return null;\n          }\n        })\n      );\n      // setLoader(false);\n      dispatch({type: \"LOADER\"});\n    };\n\n    const pushInventoryDetails2 = async () => {\n      console.log(posProducts);\n      // setLoader(true);\n      let data = singleItemData.map((element) => {\n        return {\n          item: element.itemNo,\n          qty: parseInt(element.qty) * parseInt(element.pieces),\n          cp: element.unitPrice,\n          markup: element.markup,\n          sp: element.sp,\n          description: element.description,\n        };\n      });\n  \n      var duplicates = {};\n      for (var i = 0; i < data.length; i++) {\n        if (duplicates.hasOwnProperty(data[i].item)) {\n          duplicates[data[i].item].push(i);\n        } else if (data.lastIndexOf(data[i].item) !== i) {\n          duplicates[data[i].item] = [i];\n        }\n      }\n  \n      let tempData = Object.values(duplicates).filter((ele) => ele.length > 1);\n      if (tempData.length > 0) {\n        tempData.forEach((index) => {\n          let temp = 0;\n          index.forEach((val) => {\n            if (data[val]) {\n              // console.log(\"data[val]\", data[val]);\n              temp += data[val].qty;\n              if (temp - data[val].qty !== 0) {\n                data[val] = null;\n              }\n            }\n          });\n          data[index[0]].qty = temp;\n        });\n      }\n      data = data.filter((ele) => ele !== null);\n  \n      /**\n       * add the fileds of  data from the woocom & ocr\n      */\n     console.log(wooComProducts.length);\n      if(wooComProducts[0] != null){\n        let updatedWoocomProducts = data\n          .map((product, index) => {\n            /**find index of the item in fetched woocom product list */\n            const wooIndex = wooComProducts.findIndex(\n              (wooProduct) => product.item === wooProduct.itemNo\n            );\n            if (wooIndex !== -1) {\n              /**get the qty & other fileds of the woocom product */\n              let { id, stock_quantity } = wooComProducts[wooIndex];\n              stock_quantity += product.qty;\n              const regular_price = product.sp;\n              return { id, regular_price, stock_quantity, itemNo: product.item };\n            }\n            return null;\n          })\n          .filter((item) => item !== null);\n\n        console.log(updatedWoocomProducts); \n        await pushToWoocom(updatedWoocomProducts);\n        }\n      await pushToPOS(posProducts);\n  \n      // setLoader(false);\n      dispatch({type: \"LOADER\"});\n      // if (itemsNotPushed.length === 0) {\n      window.alert(\"Inventory updated successfully\");\n      // setRedirect(true);\n      // } else {\n      //   window.alert(\"Inventory not updated\");\n      // }\n    };\n\n    function toConsoleState() {\n      console.log(wooComProducts);\n      console.log(posProducts);\n      console.log(singleItemData);\n    }\n\n  const pushSingleItemToInventory = async (index) =>{\n\n    // setApiLoader(true);\n    dispatch({type: \"API_LOADER\"});\n    // console.log(index);\t\n    \n    // Setting State\n    setShowPosIndex(-1);\n    \n    // tableData also a state\n    console.log(tableData);\n    const product = [];\n    const notFoundItems = emptyColumn.map((i) => tableData[i]);\n    const tempTable = [];\n    product.push(tableData[index]);\n    console.log(product);\n    product.isUpdated = \"true\";\n    itemNo = product.itemNo;\n    \n    product.forEach((element, index) => {\n      if (\n        !emptyColumn.includes(index) &&\n        element.show === true &&\n        element[\"isForReview\"] != true\n      ) {\n        let rowData = { index: index + 1, ...element };\n        tempTable.push(rowData);\n      }\n    });\n    // console.log(\"notFoundItems\", notFoundItems);\n    console.log(tempTable);\n\n    if (emptyColumn.length !== 0) {\n      /** API to push  to not found list */\n      // setLoader(true);\n      dispatch({type: \"LOADER\"});\n      const responses = await Promise.all(\n        notFoundItems.map(async (product) => {\n          try {\n            const data = {\n              Item: product.itemNo,\n              Description: product.description,\n              Quantity: product.qty,\n              Price: product.unitPrice,\n              sku: product.sku,\n              Barcode: product.barcode,\n              PosSKU: product.posSku,\n              InvoiceName: invoice.slug,\n            };\n            await inventoryService.CreateNotFoundItems(data);\n            return true;\n          } catch (error) {\n            console.log(\n              \"Couldn't create not found product\",\n              product.description,\n              { error }\n            );\n            alert(\"Couldn't create product on website.\");\n            return null;\n          }\n        })\n      );\n      // setLoader(false);\n      dispatch({type: \"LOADER\"});\n    }\n\n    const priceIncreasedProducts = tempTable.filter(\n      (product) => product.priceIncrease !== 0\n    );\n    // setLoader(true);\n    dispatch({type: \"LOADER\"});\n    const res = await Promise.all(\n      priceIncreasedProducts.map(async (product) => {\n        try {\n          const data = {\n            invoiceName: invoice.slug,\n            itemName: product.itemNo,\n            value: { Price: product.unitPrice },\n          };\n          console.log(data)\n          await inventoryService.UpdateProductFields(data);\n          \n          \n        } catch (error) {\n          console.log(`couldn't update price for product ${product.itemNo}`);\n        }\n      })\n    );\n    // setLoader(false);\n    dispatch({type: \"LOADER\"});\n    // console.log(tempTable);\n    tempTable[0].isUpdated = \"true\";\n    singleItemData = tempTable;\n    // setPushToInventory(true);\n    console.log(singleItemData);\n    \n    updateSku = singleItemData[0].posSku;\n\n\n    await getProducts();\n    await getPosProducts();\n    console.log(posProducts);\n    if(posProducts[0] != undefined ){\n      await pushInventoryDetails2();\n      toConsoleState();\n      setIsUpdated(\"true\");\n      setUpdateIndex(index);\n      console.log(singleItemData);\n      console.log(singleItemData.itemNo);\n      await inventoryService.UpdateInvoiceData(inv, num, day, singleItemData[0].itemNo); \n\n      //Update unit cost n price in db, after update POS.\n      let data1 = {\n        cost: singleItemData[0].cp,\n        price: singleItemData[0].sp,\n        item: singleItemData[0].itemNo,\n        itemName:posProducts[0].ITEMNAME,\n        invoice: invoice.slug\n      }\n      await getPosProducts();\n      console.log(\"I am data from updatedb after Pos\",data1)\n      console.log(\"I am posProducts.ITEMNAME from updatedb after Pos\",posProducts[0].ITEMNAME)\n\n      await inventoryService.UpdateDBafterPosUpdate(data1);\n      \n      //Log Generate.\n      console.log(\"PRODUCTT\");\n      console.log(singleItemData);\n      const log = {\n        InvoiceName: invoice.slug,\n        InvoiceDate: day,\n        ItemNo: singleItemData[0].itemNo,\n        InvoiceDescription: singleItemData[0].description,\n        PosDescription: singleItemData[0].posName,\n        PosUnitCost: singleItemData[0].cost,\n        PosUnitPrice: singleItemData[0].sellingPrice,\n        OldMarkup: singleItemData[0].margin.toFixed(2).toString(),\n        InvUnitCost: singleItemData[0].cp,\n        InvUnitPrice: singleItemData[0].sp,\n        NewMarkup:( ((singleItemData[0].sp- singleItemData[0].cp)/ singleItemData[0].cp)*100).toFixed(2).toString(),\n        UpdateDate: todayDate,\n        Person: userEmail,\n        TimeStamp: new Date().toTimeString().split(\" \")[0], \n        InvCaseCost: singleItemData[0].unitPrice,\n        InvUnitsInCase: singleItemData[0].pieces,\n        SKU: singleItemData[0].posSku\n      }\n      console.log(log);\n      const logUpdate = await inventoryService.posLogs(log);\n      console.log(logUpdate)\n      setProductsInTable();\n\n    } else {\n      alert(\"POS not updated!!\");\n      setProductsInTable();\n    }\n    // setApiLoader(false);\n    dispatch({type: \"API_LOADER\"});\n\n    \n    \n  }\n  //***************************INDIVIDUAL ITEM UPDATE FUNCTIONALITY ENDS*****************************************.\n\n  const updateUnits = async (index) => {\n    const item = tableData[index];\n    console.log(item);\n    const data = {\n      invoiceName: inv,\n      itemName: item.itemNo,\n      value: {\n        Quantity: item.pieces\n      }\n    }\n    inventoryService\n    .UpdateProductFields(data)\n    .then((res) => {\n      if (!res) {\n        throw new Error(\"Product not updated\")\n      }\n      console.log(res);\n      alert(\"Successfully updated fields\");\n      // setStateUpdated(true);\n    })\n    .catch((err) => {\n      console.log(err);\n      alert(\"Some error occuured in creating product\");\n    })\n    .finally(setProductsInTable());\n    // console.log(res);\n  }\n \n  const saveDetails = async () => {\n    console.log(detailsIndex);\n    console.log(details);\n    const item = tableData[detailsIndex];\n    console.log(item);\n    const data = {\n      invoice: invoice.slug,\n      itemNo: item.itemNo,\n      details: details\n    }\n    const res = await inventoryService.saveDetails(data);\n    console.log(res);\n    if(res === \"s\"){\n      alert(\"Details added successfully\");\n      setDetails(\"\");\n      setDetailsIndex(-1);\n      toggleModal(\"details\");\n      setProductsInTable();\n    }else {\n      alert(\"Some error Occured.\");\n      setDetailsIndex(-1);\n      setDetails(\"\");\n      toggleModal(\"details\");\n    }\n\n  }\n\n  const getInvoices = async () => {\n    // setApiLoader(true);\n    dispatch({type: \"API_LOADER\"})\n    // setOpenInvoice(false);\n    dispatch({type: \"OPEN_INVOICE\", data: false})\n    console.log(invoice);\n    const res = await inventoryService.getSavedInvoices(invoice);\n    console.log(res);\n    // let array = [];\n    // res.map(item => {\n    //   array.push(item.SavedInvoiceNo);\n    // })\n    console.log(res);\n    setInvoiceOptions(res.reverse());\n    \n    // setApiLoader(false);\n    dispatch({type: \"API_LOADER\"})\n\n  }\n\n    const reverseUpdate = async(index) => {\n      console.log(index);\n      console.log(tableData);\n      console.log(tableData[index]);\n      let item = tableData[index];\n      let data = {\n        invoice: invoice.slug,\n        itemNo: item.itemNo,\n      }\n      const result = await inventoryService.reverseUpdate(data);\n      console.log(result);\n      if(result.ok == 1){\n        setProductsInTable();\n      }else {\n        alert(\"Some error occured in updation\");\n      }\n    }\n    \n\n    const reversePOSUpdate = async(index) => {\n      console.log(index);\n      console.log(tableData);\n      console.log(tableData[index]);\n      let item = tableData[index];\n      const result = await inventoryService.reversePOSUpdate(inv, num, day, item.itemNo);\n      if(result.ok == 1){\n        setProductsInTable();\n      }else {\n        alert(\"Some error occured in updation\");\n      }\n\n    }\n\n    const linkingCorrect = async (index) => {\n      console.log(index);\n      console.log(tableData);\n      console.log(tableData[index]);\n      let item = tableData[index];\n      console.log(item)\n      let data = {\n        invoice: inv,\n        itemNo: item.itemNo,\n      }\n      console.log(data);\n      const res = await inventoryService.linkingCorrect(data);\n      console.log(res);\n      if(res.statusText == \"OK\") {\n        \n        const costChange = item.cp - item.cost;\n        const invError = item.cp >= 3*item.cost ? \"YES\" : \"\";\n        \n        let logState = {\n          InvoiceDescription: item.description,\n          PosDescription: item.posName,\n          SKU: item.posSku,\n          Barcode: item.barcode,\n          InvoiceName: inv,\n          ItemCode: item.itemNo,\n          LinkingDate: todayDate,\n          PersonName: userEmail,\n          Size: item.size,\n          PosUnitCost: item.cost,\n          PosUnitPrice: item.sellingPrice,\n          InvoiceNo: num,\n          InvoiceDate: day,\n          Department: item.department,\n          InvUnitCost: item.cp,\n          CostIncrease: \"\",\n          CostDecrease: \"\",\n          CostSame:  \"\",\n          Unidentified: \"YES\",\n          InvError: invError  \n        }\n        const res = await inventoryService.UnidentifiedLog(logState);\n        console.log(res);\n        alert(\"SUCCESS\");\n        setProductsInTable();\n      }else {\n        alert(\"Some error occured\");\n        setProductsInTable();\n      }\n    }\n\n    // const linkManuallyNew = async(index) => {\n    //   console.log(index);\n      \n    //   console.log(\"tabledata in linkManually\",tableData);\n    //   console.log(tableData[index]);\n\n    //   let item = tableData[index];\n    //   console.log(\"item in link manually\", item);\n\n    //   await getPosProductsLinkManually(index);\n\n    // }\n\n    const linkManually = async(index) => {\n      console.log(index);\n      console.log(\"tabledata in linkManually\",tableData);\n      console.log(tableData[index]);\n      let item = tableData[index];\n      console.log(item)\n\n      let data = {\n        invoice: inv,\n        itemNo: item.itemNo,\n      }\n\n      const result = await inventoryService.linkManually(data);\n      console.log(result);\n\n      //Update unit cost from excel.\n      // const skuData = {sku: item.posSku};\n      // const res = await inventoryService.fetchProductFromPosList(skuData);\n      // console.log(res); \n\n\n\n      //Log Generate.\n      const costChange = item.cp - item.cost;\n      const invError = item.cp >= 3*item.cost ? \"YES\" : \"\";\n      console.log(invError);\n      let logState = {\n        InvoiceDescription: item.description,\n        PosDescription: item.posName,\n        SKU: item.posSku,\n        Barcode: item.barcode,\n        InvoiceName: inv,\n        ItemCode: item.itemNo,\n        LinkingDate: todayDate,\n        PersonName: userEmail,\n        Size: item.size,\n        PosUnitCost: item.cost,\n        PosUnitPrice: item.sellingPrice,\n        InvoiceNo: num,\n        InvoiceDate: day,\n        Department: item.department,\n        InvUnitCost: item.cp,\n        CostIncrease: invError == \"YES\" ? \"\" : costChange > 0 ? \"YES\" : \"\",\n        CostDecrease: invError == \"YES\" ? \"\" : costChange < 0 ? \"YES\" : \"\",\n        CostSame: invError == \"YES\" ? \"\" : costChange == 0 ? \"YES\" : \"\",\n        InvError: invError\n      }\n      console.log(logState);\n      const logResult = await inventoryService.linkManuallyLog(logState);\n      console.log(logResult);\n      \n      \n      \n      \n      if(result.statusText == \"OK\"){\n        setProductsInTable();\n        // setProductsInTableNew(inv, num, day);\n      }else {\n        alert(\"Some error occured in updation\");\n        setProductsInTable();\n        // setProductsInTableNew(inv, num, day);\n      }\n\n      await getPosProductsLinkManually(index);\n\n    }\n\n    const fetchSavedData = async(invoice = inv, no = num, date = day) => {\n        const data =  await tesseractService.GetSavedInvoiceData(invoice, no, date);\n        console.log(data);\n        if(data.length === 0) {\n          alert(\"Invoice doesnt Exist!!\");\n        }else return data[0].InvoiceData;\n        // console.log(data);\n        // console.log(data[0].InvoiceData);\n        \n    };\n\n    const setProductsInTable = () => {\n      // setLoader(true);\n      dispatch({type: \"LOADER\"});\n      async function invoiceData() {\n        const products = await tesseractService.GetProductDetails(\n          // invoice.slug\n          inv\n        );\n        //console.log(props.selectedInvoice);\n        return products;\n      }\n\n      fetchSavedData().then((ocrData) => {\n        invoiceData()\n          .then((products) => {\n            /**post processing the table data after returning from filter */\n            function convertToUpperCase(obj) {\n              let newObj = {};\n              for (let key in obj) {\n                newObj[key.toUpperCase()] = obj[key];\n              }\n              return newObj;\n            }\n            products = convertToUpperCase(products);\n            console.log(products);\n            // scanInvoiceData.InvoiceData = ocrData;\n          //   setOcrProducts(ocrData);\n            \n          //   console.log(scanInvoiceData);\n            // scanInvoiceData.InvoiceData = ocrData;\n            //console.log(resScnInvDta);\n            console.log(\"OCERDATa\", ocrData);\n            //console.log(products);\n            //console.log(scanInvoiceData);\n            let table = ocrData.map((row) => {\n              /**For invoices which dont have item no, set description as item no */\n              // row.itemNoPresent = row.itemNo === undefined ? false : true; \n              \n              if (row.itemNo === undefined) {\n                row.itemNo = row.description.trim().toUpperCase();\n              }\n              row.itemNo = row.itemNo.toString().toUpperCase();\n  \n              row.description = row.description;\n                // products[row.itemNo] !== undefined\n                //   ? products[row.itemNo].Description\n                //   : row.description;\n              row.pieces = \n                products[row.itemNo] !== undefined\n                  ? products[row.itemNo].Quantity\n                  : 0;\n              row.sku =\n                products[row.itemNo] !== undefined\n                  ? products[row.itemNo].sku\n                  : \"\";\n              row.barcode =\n                products[row.itemNo] !== undefined\n                  ? products[row.itemNo].Barcode\n                  : \"\";\n              row.posName =\n                products[row.itemNo] !== undefined\n                  ? products[row.itemNo].POS\n                  : \"\";\n              row.markup = 0;\n              row.show = true;\n              row.posSku =\n                products[row.itemNo] !== undefined\n                  ? products[row.itemNo].PosSKU\n                  : \"\";\n              row.isReviewed = \n                products[row.itemNo] !== undefined ? products[row.itemNo].isReviewed : \"\" ;\n              row.size = \n                products[row.itemNo] !== undefined ? products[row.itemNo].Size : \"\";\n              row.department = \n                products[row.itemNo] !== undefined ? products[row.itemNo].Department : \"\";\n              row.cost = \n                products[row.itemNo] !== undefined ? products[row.itemNo].SellerCost : \"\";\n              row.sellingPrice = \n                products[row.itemNo] !== undefined ? products[row.itemNo].SellingPrice : \"\";\n              row.price = \n                products[row.itemNo] !== undefined ? products[row.itemNo].Price : \"\";\n              row.details = \n                products[row.itemNo] !== undefined ? products[row.itemNo].Details : \"\";\n              row.linkingCorrect = \n                products[row.itemNo] !== undefined ? products[row.itemNo].LinkingCorrect : \"\";\n              row.margin = products[row.itemNo] !== undefined ? ((products[row.itemNo].SellingPrice - products[row.itemNo].SellerCost)/ products[row.itemNo].SellerCost)*100 : \"\";\n              //console.log(\"department-\" + row.department + \"  cost-\" + row.cost + \"  price\" + row.sellingPrice);\n              let sp = 0;\n              let cp = 0;\n              // const barcode = products.Barcode\n              if (parseInt(row.pieces)) {\n                sp = (parseFloat(row.unitPrice) / parseInt(row.pieces)).toFixed(\n                  2\n                );\n                cp = sp;\n              }\n              if (products[row.itemNo] !== undefined) {\n                if (sp > +products[row.itemNo].SellerCost) {\n                  row[\"priceIncrease\"] = 1;\n                } else if (sp < +products[row.itemNo].SellerCost) {\n                  row[\"priceIncrease\"] = -1;\n                } else if (sp == +products[row.itemNo].SellerCost) {\n                  row[\"priceIncrease\"] = 0;\n                }\n              } else {\n                row[\"priceIncrease\"] = 0;\n              }\n  \n              /**filter out the rows for which qty shipped & extendedPrice is zero */\n              if (row.qty == \"0\" && row.extendedPrice === \"0.00\") {\n                return null;\n              }\n              /**Calulate qty for which qty is not read/scanned by textract */\n              if (!row.qty) {\n                row.qty = (\n                  parseFloat(row.extendedPrice) / parseFloat(row.unitPrice)\n                ).toFixed(0);\n              }\n            return { ...row, sp, cp };\n            });\n            // setLoader(false);\n            dispatch({type: \"LOADER\"});\n\n            setTableData(table.filter((data) => data !== null));\n            setItemNoDropdown(Object.keys(products));\n            setProductDetails(products);\n          })\n          .catch((err) => {\n            console.log(\"error on mapping ocrdata\", err)\n            // setLoader(false);\n            dispatch({type: \"LOADER\"});\n          });\n      });\n    }\n\n    const toggleModal = (x) => {\n      if(x == \"notfounds\"){\n        setShowModal(!showModal);\n      }else {\n        setDetailsModal(!detailsModal);\n      }\n        // setDate(\"\");\n        // setInvNo(\"\");\n      };\n\n    const hicksvilleDropdown = async (data) => {\n          // const res = await inventoryService.getHicksvilleData(value);\n          // const data = res[0].List;\n          console.log(data);\n  \n  \n          let productsString = \"\";\n          for(let i=0;i<data.length;i++){\n            productsString = productsString + data[i].name + '$$$';\n          } \n          let result = productsString.split(\"$$$\");\n        \n          let newData = [];\n          for (let i = 0; i < result.length; i++) {\n            let s = result[i].split(\"@@@\");\n            let obj =\n              {\n                // sku: s[0] === \"nan\" ? null : s[0],\n                // upc: s[1] === \"nan\" ? null : s[1],\n                // altupc1: s[2] === \"nan\" ? null : s[2],\n                // altupc2: s[3] === \"nan\" ? null : s[3],\n                // name: s[4] === \"nan\" ? null : s[4],\n                // vintage: s[5] === \"nan\" ? null : s[5],\n                // totalQty: s[6] === \"nan\" ? null : s[6],\n                // cost: s[7] === \"nan\" ? null : s[7],\n                // pricea: s[8] === \"nan\" ? null : s[8],\n                // priceb: s[9] === \"nan\" ? null : s[9],\n                // pricec: s[10] === \"nan\" ? null : s[10],\n                // department: s[11] === \"nan\" ? null : s[11],\n                // salePrice: s[12] === \"nan\" ? null : s[12],\n                // size: s[13] === \"nan\" ? null : s[13],\n                // pack: s[14] === \"nan\" ? null : s[14],\n                // price: s[15] === \"nan\" ? null : s[15],\n                sku: s[1] === \"nan\" ? null : s[1],\n                upc: s[0] === \"nan\" ? null : s[0],\n                altupc1: s[14] === \"nan\" ? null : s[14],\n                altupc2: s[15] === \"nan\" ? null : s[15],\n                name: s[2] === \"nan\" ? null : s[2],\n                vintage: s[8] === \"nan\" ? null : s[8],\n                totalQty: s[13] === \"nan\" ? null : s[13],\n                cost: s[4] === \"nan\" ? null : s[4],\n                pricea: s[10] === \"nan\" ? null : s[10],\n                priceb: s[11] === \"nan\" ? null : s[11],\n                pricec: s[12] === \"nan\" ? null : s[12],\n                department: s[9] === \"nan\" ? null : s[9],\n                salePrice: s[5] === \"nan\" ? null : s[5],\n                size: s[6] === \"nan\" ? null : s[6],\n                pack: s[7] === \"nan\" ? null : s[7],\n                price: s[3] === \"nan\" ? null : s[3],\n              }\n            newData.push(obj);\n          }\n          const filter = newData.map((element) => {\n            let obj = { ...element };\n            obj.label = `${element.name}--${element.price}--${element.upc}--${element.size}--${element.cost}--${element.sku}`;\n            //console.log(obj);\n            return obj; \n          });\n          setHicksvilleData(filter);\n        \n      }\n    \n    const hicksvilleDropdownNew = async (event, value, index) => {\n      console.log(event);\n      console.log(value);\n      console.log(value.length);\n      console.log(tableData[index].itemNo);\n      setDropwdownIndex(index);\n      setOptions([]);\n\n      if(!isNaN(value) && value.length>0 && value != tableData[index].itemNo){\n        console.log(\"number\");\n        // setDropdownLoader(true);\n        setFetchingOptions(true);\n        const res = await inventoryService.getHicksvilleData(value.toUpperCase());\n        const data = res;\n        console.log(data);\n\n\n        let productsString = \"\";\n        for(let i=0;i<data.length;i++){\n          productsString = productsString + data[i].name + '$$$';\n        } \n        let result = productsString.split(\"$$$\");\n      \n        let newData = [];\n        for (let i = 0; i < result.length; i++) {\n          let s = result[i].split(\"@@@\");\n          let obj =\n            {\n              // sku: s[0] === \"nan\" ? null : s[0],\n              // upc: s[1] === \"nan\" ? null : s[1],\n              // altupc1: s[2] === \"nan\" ? null : s[2],\n              // altupc2: s[3] === \"nan\" ? null : s[3],\n              // name: s[4] === \"nan\" ? null : s[4],\n              // vintage: s[5] === \"nan\" ? null : s[5],\n              // totalQty: s[6] === \"nan\" ? null : s[6],\n              // cost: s[7] === \"nan\" ? null : s[7],\n              // pricea: s[8] === \"nan\" ? null : s[8],\n              // priceb: s[9] === \"nan\" ? null : s[9],\n              // pricec: s[10] === \"nan\" ? null : s[10],\n              // department: s[11] === \"nan\" ? null : s[11],\n              // salePrice: s[12] === \"nan\" ? null : s[12],\n              // size: s[13] === \"nan\" ? null : s[13],\n              // pack: s[14] === \"nan\" ? null : s[14],\n              // price: s[15] === \"nan\" ? null : s[15],\n              sku: s[1] === \"nan\" ? null : s[1],\n              upc: s[0] === \"nan\" ? null : s[0],\n              altupc1: s[14] === \"nan\" ? null : s[14],\n              altupc2: s[15] === \"nan\" ? null : s[15],\n              name: s[2] === \"nan\" ? null : s[2],\n              vintage: s[8] === \"nan\" ? null : s[8],\n              totalQty: s[13] === \"nan\" ? null : s[13],\n              cost: s[4] === \"nan\" ? null : s[4],\n              pricea: s[10] === \"nan\" ? null : s[10],\n              priceb: s[11] === \"nan\" ? null : s[11],\n              pricec: s[12] === \"nan\" ? null : s[12],\n              department: s[9] === \"nan\" ? null : s[9],\n              salePrice: s[5] === \"nan\" ? null : s[5],\n              size: s[6] === \"nan\" ? null : s[6],\n              pack: s[7] === \"nan\" ? null : s[7],\n              price: s[3] === \"nan\" ? null : s[3],\n            }\n          newData.push(obj);\n        }\n        const filter = newData.map((element) => {\n          let obj = { ...element };\n          obj.label = `${element.name}--${element.price}--${element.upc}--${element.size}--${element.cost}--${element.sku}`;\n          //console.log(obj);\n          return obj; \n        });\n        setHicksvilleData(filter);\n        setOptions(filter);\n\n      }\n\n      if(isNaN(value) && value != null && value.length>=4 && value != tableData[index].itemNo){\n        console.log(\"string\");\n        // setDropdownLoader(true);\n        setFetchingOptions(true);\n        const res = await inventoryService.getHicksvilleData(value.toUpperCase());\n        const data = res;\n        console.log(data);\n\n\n        let productsString = \"\";\n        for(let i=0;i<data.length;i++){\n          productsString = productsString + data[i].name + '$$$';\n        } \n        let result = productsString.split(\"$$$\");\n      \n        let newData = [];\n        for (let i = 0; i < result.length; i++) {\n          let s = result[i].split(\"@@@\");\n          let obj =\n            {\n              // sku: s[0] === \"nan\" ? null : s[0],\n              // upc: s[1] === \"nan\" ? null : s[1],\n              // altupc1: s[2] === \"nan\" ? null : s[2],\n              // altupc2: s[3] === \"nan\" ? null : s[3],\n              // name: s[4] === \"nan\" ? null : s[4],\n              // vintage: s[5] === \"nan\" ? null : s[5],\n              // totalQty: s[6] === \"nan\" ? null : s[6],\n              // cost: s[7] === \"nan\" ? null : s[7],\n              // pricea: s[8] === \"nan\" ? null : s[8],\n              // priceb: s[9] === \"nan\" ? null : s[9],\n              // pricec: s[10] === \"nan\" ? null : s[10],\n              // department: s[11] === \"nan\" ? null : s[11],\n              // salePrice: s[12] === \"nan\" ? null : s[12],\n              // size: s[13] === \"nan\" ? null : s[13],\n              // pack: s[14] === \"nan\" ? null : s[14],\n              // price: s[15] === \"nan\" ? null : s[15],\n              sku: s[1] === \"nan\" ? null : s[1],\n              upc: s[0] === \"nan\" ? null : s[0],\n              altupc1: s[14] === \"nan\" ? null : s[14],\n              altupc2: s[15] === \"nan\" ? null : s[15],\n              name: s[2] === \"nan\" ? null : s[2],\n              vintage: s[8] === \"nan\" ? null : s[8],\n              totalQty: s[13] === \"nan\" ? null : s[13],\n              cost: s[4] === \"nan\" ? null : s[4],\n              pricea: s[10] === \"nan\" ? null : s[10],\n              priceb: s[11] === \"nan\" ? null : s[11],\n              pricec: s[12] === \"nan\" ? null : s[12],\n              department: s[9] === \"nan\" ? null : s[9],\n              salePrice: s[5] === \"nan\" ? null : s[5],\n              size: s[6] === \"nan\" ? null : s[6],\n              pack: s[7] === \"nan\" ? null : s[7],\n              price: s[3] === \"nan\" ? null : s[3],\n            }\n          newData.push(obj);\n        }\n        const filter = newData.map((element) => {\n          let obj = { ...element };\n          if(element.itemNo != \"undefined\"){\n          obj.label = `${element.name}--${element.price}--${element.upc}--${element.size}--${element.cost}--${element.sku}`;\n          }\n          //console.log(obj);\n          return obj; \n        });\n        setHicksvilleData(filter);\n        setOptions(filter);\n      }\n      setFetchingOptions(false);\n    }\n\n    const searchDropdown = (target, value) =>  {\n      console.log(target);\n      console.log(value);\n      const options  = hicksvilleData.filter((item) => {\n        if(item.name){\n          let name = item.name;\n          name = name.toLowerCase();\n          value = value.toLowerCase();\n          // console.log(name)\n          return name.search(value) != -1;\n        }\n      })\n      console.log(options);\n      setOptions(options);\n      setFetchingOptions(false);\n\n    }\n\n    const updateItemOld = (ocrCost) => {\n        //console.log(showPosState);\n        const data = {\n          invoiceName: invoice.slug,\n          itemName: showPosState.item,\n          value: { \n            POS: showPosState.pos, \n            Barcode: showPosState.barcode, \n            PosSKU: showPosState.posSku, \n            isReviewed: \"true\",\n            Size: showPosState.size, \n            Department: showPosState.department,\n            //SellerCost: showPosState.unitCost,\n            SellingPrice: showPosState.unitPrice\n          },\n        };\n    \n        inventoryService\n        .UpdateProductFields(data)\n        .then((res) => {\n          if (!res) {\n            throw new Error(\"Product not created\")\n          }\n          console.log(res);\n          alert(\"Successfully updated fields\");\n        })\n        .catch((err) => {\n          console.log(err);\n          alert(\"Some error occuured in creating product\");\n        })\n        .finally(() => { \n          // setLoader(false)\n          dispatch({type: \"LOADER\"});\n          \n          // setStateUpdated(\"true\");\n          //  console.log(ocrCost);\n          //  console.log(unitCost);\n           if(ocrCost>unitCost){\n             setCostInc(\"true\");\n             setCostDec(\"\");\n           }\n           if(ocrCost<unitCost){\n             setCostDec(\"true\");\n             setCostInc(\"\");\n           }\n        });\n    \n    }\n\n    const updateItem = (props, ocrCost) => {\n      let data;\n      //console.log(showPosState);\n      if(notFounds === \"true\"){\n        // console.log(props.selectedInvoice);\n        console.log(\"notfoundstrue\");\n        data = {\n          invoiceName: inv,\n          itemName: showPosState.item,\n          value: { \n            POS: showPosState.pos, \n            Barcode: showPosState.barcode, \n            PosSKU: showPosState.posSku, \n            isReviewed: \"true\",\n            Description: showPosState.description,\n            Size: showPosState.size, \n            Department: showPosState.department,\n            SellerCost: showPosState.unitCost,\n            SellingPrice: showPosState.unitPrice,\n            Quantity: unitsInCase,\n            Price: price,\n            LinkingCorrect: \"true\"\n          },\n        };\n  \n        toggleModal(\"notfounds\");\n      \n      }else{\n        data = {\n          invoiceName: inv,\n          itemName: showPosState.item,\n          value: { \n            POS: showPosState.pos, \n            Barcode: showPosState.barcode, \n            PosSKU: showPosState.posSku, \n            isReviewed: \"true\",\n            Size: showPosState.size, \n            Department: showPosState.department,\n            SellerCost: showPosState.unitCost,\n            SellingPrice: showPosState.unitPrice,\n            LinkingCorrect: \"true\"\n          },\n        };\n      }\n  \n      console.log(data)\n      inventoryService\n      .UpdateProductFields(data)\n      .then((res) => {\n        if (!res) {\n          throw new Error(\"Product not created\")\n        }\n        console.log(res);\n        alert(\"Successfully updated fields\");\n        // setStateUpdated(true);\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"Some error occuured in creating product\");\n      })\n      .finally(async () => { \n                      // setLoader(false);\n                      // dispatch({type: \"LOADER\"});\n                    //  setStateUpdated(\"true\");\n                    //  console.log(ocrCost);\n                    //  console.log(unitCost);\n                    if(ocrCost>unitCost){\n                      setCostInc(\"true\");\n                      setCostDec(\"\");\n                    }\n                    if(ocrCost<unitCost){\n                      setCostDec(\"true\");\n                      setCostInc(\"\");\n                    }\n                    if(notFounds === \"true\"){\n                      // setNotFounds(\"false\");\n                      dispatch({type: \"NOT_FOUNDS\", data: \"false\"})\n                      // setUnitsInCase(\"\");\n                      dispatch({type: \"UNITS_IN_CASE\", data: \"\"})\n                      // setPrice(\"\");\n                      dispatch({type: \"PRICE\", data: \"\"})\n\n                    }\n                    console.log(userEmail);\n                    console.log(tableData[showPosIndex]);\n                    const description = tableData[showPosIndex].description;\n                    \n                    //Cost chnage and invoice error handling logic.\n                    const costChange = tableData[showPosIndex].cp - data.value.SellerCost;\n                    console.log(costChange);\n                    let a = \"\", b = \"\", c = \"\";\n                    const invError = tableData[showPosIndex].cp >= 3*tableData[showPosIndex].cost ? \"YES\" : \"\";\n                    a = invError == \"YES\" ? \"\" : costChange > 0 ? \"YES\" : \"\";\n                    b = invError == \"YES\" ? \"\" : costChange < 0 ? \"YES\" : \"\"; \n                    c = invError == \"YES\" ? \"\" : costChange == 0 ? \"YES\" : \"\";\n\n                    console.log(costChange);\n                    console.log(description);\n                    console.log(todayDate);\n                    console.log(day);\n                    console.log(num);\n                    const logState = data;\n                    delete logState.value.isReviewed;\n                    logState.Description = description;\n                    logState.PersonName = userEmail;\n                    logState.LinkingDate = todayDate;\n                    logState.InvoiceDate = day;\n                    logState.InvoiceNo = num;\n                    logState.CostIncrease = a;                     \n                    logState.CostDecrease = b; \n                    logState.CostSame = c;\n                    logState.InvoiceUnitCost = tableData[showPosIndex].cp;\n                    logState.InvError = invError;                   \n                    console.log(logState);\n                    \n\n                    const res = await inventoryService.generateLog(logState);\n                    console.log(res);\n                    setProductsInTable(); \n              });\n      \n  \n    }\n\n    const addRow = () => {\n        let tempTableData = [...tableData];\n        tempTableData.push({\n          qty: 0,\n          itemNo: \"\",\n          description: \"\",\n          pieces: 0,\n          unitPrice: 0.0,\n          extendedPrice: \"\",\n          markup: 0,\n          sp: 0,\n          show: true,\n          showPOS: \"\"\n        });\n        emptyColumnList.push(tempTableData.length - 1);\n        setEmptyColumn(emptyColumnList);\n        setTableData(tempTableData);\n    };\n    const deleteRow = (index) => {\n        let tempTableData = [...tableData];\n        // console.log(emptyColumnList.length, \"before\");\n        if (tableData[index][\"show\"]) {\n          if (window.confirm(\"Delete the item?\")) {\n            tempTableData[index][\"show\"] = false;\n            const i = emptyColumnList.indexOf(index);\n            if (i > -1) {\n              emptyColumnList.splice(i, 1);\n            }\n          }\n        } else {\n          tempTableData[index][\"show\"] = true;\n          if (\n            tempTableData[index][\"qty\"] !== \"\" &&\n            tempTableData[index][\"itemNo\"] !== \"\" &&\n            tempTableData[index][\"unitPrice\"] !== \"\"\n          ) {\n            const i = emptyColumnList.indexOf(index);\n            if (i > -1) {\n              emptyColumnList.splice(i, 1);\n            }\n          } else {\n            emptyColumnList.push(index);\n          }\n        }\n        setTableData(tempTableData);\n        setEmptyColumn(emptyColumnList);\n    };\n\n    const renderInvoiceHeader = () => {\n      return invoiceHeader.map((key, index) => {\n        return (\n          <th\n            key={index}\n            style={{\n              position: \"sticky\",\n              top: \"70px\",\n              background: \"grey\",\n            }}\n          >\n            {key.toUpperCase()}\n          </th>\n        );\n      });\n   };\n\n   const setProductsInTableNew = (index) => {\n    console.log(index);\n    // setOpenInvoice(true);\n    dispatch({type: \"OPEN_INVOICE\", data: true})\n    console.log(invoiceOptions[index]);\n    let invoice = invoiceOptions[index].InvoiceName;\n    // setInv(invoice);\n    dispatch({type: \"SET_INV\", data: invoice})\n    let date =  invoiceOptions[index].SavedDate;\n    // setDay(date);\n    dispatch({type: \"SET_DAY\", data: date})\n    let no = invoiceOptions[index].SavedInvoiceNo;\n    // setNum(no);\n    dispatch({type: \"SET_NUM\", data: no})\n    // setLoader(true);\n    dispatch({type: \"LOADER\"});\n    async function invoiceData() {\n      const products = await tesseractService.GetProductDetails(\n        invoice\n      );\n      //console.log(props.selectedInvoice);\n      return products;\n    }\n\n    fetchSavedData(invoice, no, date).then((ocrData) => {\n      invoiceData()\n        .then((products) => {\n          /**post processing the table data after returning from filter */\n          function convertToUpperCase(obj) {\n            let newObj = {};\n            for (let key in obj) {\n              newObj[key.toUpperCase()] = obj[key];\n            }\n            return newObj;\n          }\n          products = convertToUpperCase(products);\n          console.log(products);\n          // scanInvoiceData.InvoiceData = ocrData;\n        //   setOcrProducts(ocrData);\n          \n        //   console.log(scanInvoiceData);\n          // scanInvoiceData.InvoiceData = ocrData;\n          //console.log(resScnInvDta);\n          console.log(\"OCERDATa\", ocrData);\n          //console.log(products);\n          //console.log(scanInvoiceData);\n          let table = ocrData.map((row) => {\n            /**For invoices which dont have item no, set description as item no */\n            row.itemNoPresent = row.itemNo === undefined ? false : true; \n            if (row.itemNo === undefined) {\n              row.itemNo = row.description.trim().toUpperCase();\n            }\n            row.itemNo = row.itemNo.toString().toUpperCase();\n\n            row.description = row.description;\n              // products[row.itemNo] !== undefined\n              //   ? products[row.itemNo].Description\n              //   : row.description;\n            row.pieces =\n              products[row.itemNo] !== undefined\n                ? products[row.itemNo].Quantity\n                : 0;\n            row.sku =\n              products[row.itemNo] !== undefined\n                ? products[row.itemNo].sku\n                : \"\";\n            row.barcode =\n              products[row.itemNo] !== undefined\n                ? products[row.itemNo].Barcode\n                : \"\";\n            row.posName =\n              products[row.itemNo] !== undefined\n                ? products[row.itemNo].POS\n                : \"\";\n            row.markup = 0;\n            row.show = true;\n            row.posSku =\n              products[row.itemNo] !== undefined\n                ? products[row.itemNo].PosSKU\n                : \"\";\n            row.isReviewed = \n              products[row.itemNo] !== undefined ? products[row.itemNo].isReviewed : \"\" ;\n            row.size = \n              products[row.itemNo] !== undefined ? products[row.itemNo].Size : \"\";\n            row.department = \n              products[row.itemNo] !== undefined ? products[row.itemNo].Department : \"\";\n            row.cost = \n              products[row.itemNo] !== undefined ? products[row.itemNo].SellerCost : \"\";\n            row.sellingPrice = \n              products[row.itemNo] !== undefined ? products[row.itemNo].SellingPrice : \"\";\n            row.price = \n              products[row.itemNo] !== undefined ? products[row.itemNo].Price : \"\";\n            row.details = \n              products[row.itemNo] !== undefined ? products[row.itemNo].Details : \"\";\n            row.linkingCorrect = \n              products[row.itemNo] !== undefined ? products[row.itemNo].LinkingCorrect : \"\";\n            row.margin = products[row.itemNo] !== undefined ? ((products[row.itemNo].SellingPrice - products[row.itemNo].SellerCost)/ products[row.itemNo].SellerCost)*100 : \"\";\n            //console.log(\"department-\" + row.department + \"  cost-\" + row.cost + \"  price\" + row.sellingPrice);\n            let sp = 0;\n            let cp = 0;\n            // const barcode = products.Barcode\n            if (parseInt(row.pieces)) {\n              sp = (parseFloat(row.unitPrice) / parseInt(row.pieces)).toFixed(\n                2\n              );\n              cp = sp;\n            }\n            if (products[row.itemNo] !== undefined) {\n              if (sp > +products[row.itemNo].SellerCost) {\n                row[\"priceIncrease\"] = 1;\n              } else if (sp < +products[row.itemNo].SellerCost) {\n                row[\"priceIncrease\"] = -1;\n              } else if (sp == +products[row.itemNo].SellerCost) {\n                row[\"priceIncrease\"] = 0;\n              }\n            } else {\n              row[\"priceIncrease\"] = 0;\n            }\n\n            /**filter out the rows for which qty shipped & extendedPrice is zero */\n            if (row.qty == \"0\" && row.extendedPrice === \"0.00\") {\n              return null;\n            }\n            /**Calulate qty for which qty is not read/scanned by textract */\n            if (!row.qty) {\n              row.qty = (\n                parseFloat(row.extendedPrice) / parseFloat(row.unitPrice)\n              ).toFixed(0);\n            }\n          return { ...row, sp, cp };\n          });\n          // setLoader(false);\n          dispatch({type: \"LOADER\"});\n\n          setTableData(table.filter((data) => data !== null));\n          setItemNoDropdown(Object.keys(products));\n          setProductDetails(products);\n        })\n        .catch((err) => {\n          console.log(\"error on mapping ocrdata\", err)\n          // setLoader(false);\n          dispatch({type: \"LOADER\"});\n        });\n    });\n  }\n\n   const renderInvoiceTable = () => {   \n    const invoiceList = invoiceOptions.map((element, index) => {\n      return (\n        <tr key={index}>\n          <td>{index+1}</td>\n          <td>{element.InvoiceName}</td>\n          <td>{element.SavedInvoiceNo}</td>\n          <td>{element.SavedDate}</td>\n          <td>\n            <button \n              style={{\n                backgroundColor: \"#4CAF50\",\n                border: \"none\",\n                color: \"white\",\n                padding: \"15px 32px\",\n                textAlign: \"center\",\n                textDecoration: \"none\",\n                display: \"inline-block\",\n                fontSize: \"12px\",\n                margin: \"4px 2px\",\n                cursor: \"pointer\"\n              }}\n              onClick={() => {\n                setProductsInTableNew(index)\n              }}\n            >Show Invoice\n            </button>\n          </td>\n        </tr>\n        );\n      })\n    return (\n      <div style={{ marginTop: \"35px\" }}>\n        <table className=\"table table-hover table-responsive-sm\">\n          <tbody>\n            <tr>{renderInvoiceHeader()}</tr>\n            {invoiceList}\n          </tbody>\n        </table>\n      </div>\n    );     \n  }\n\n    const renderTableHeader = () => {\n        return header.map((key, index) => {\n          return (\n            <th\n              key={index}\n              style={{\n                position: \"sticky\",\n                top: \"70px\",\n                background: \"grey\",\n              }}\n            >\n              {key.toUpperCase()}\n            </th>\n          );\n        });\n    };\n\n    const renderTableData = () => {\n        // hicksvilleDropdown(HicksData);\n    \n        if (tableData) {\n          console.log(tableData);\n    \n          // console.log(showPosIndex);\n          // console.log(tableData[0]);\n          \n          let rows = tableData.map((element, index) => {\n            //fuzzwuzzSuggestion = getFuzzwuzzSuggestion(element.description);\n            let isEmpty =\n              element.qty === \"\" ||\n              element.itemNo === \"\" ||\n              !element.pieces ||\n              isNaN(element.unitPrice) ||\n              element.unitPrice === \"\" ||\n              isNaN(element.extendedPrice);\n            if (isEmpty && element.show) {\n              let emptyColumn = [...emptyColumnList, index];\n              emptyColumnList = [...new Set(emptyColumn)];\n            }\n            let isFree = element.qty != 0 && element.extendedPrice === \"0.00\";\n            // console.log(element.isUpdated);\n            // console.log(element);\n            let margin = ((element.sellingPrice - element.cost)/ element.cost)*100;\n            \n    \n            return (\n              <tr\n                key={index}\n                className={isEmpty ? styles.red : isFree ? styles.free : null}\n                // style={element.show ? { opacity: \"1\" } : { opacity: \"0.4\" }}\n                style={element.linkingCorrect == \"false\" ? {backgroundColor: \"pink\"} : element.isUpdated === \"true\"  ? {backgroundColor: \"lightGreen\"}\n                  : element.show ? { opacity: \"1\" } : { opacity: \"0.4\" }}\n              >\n                <td> {index + 1} </td>\n               \n                {/* <td>\n                  <TextField\n                    type=\"tel\"\n                    value={element.details}\n                    id=\"outlined-secondary\"\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      handleChange(index, \"details\", e.target.value);\n                    }}\n                    style={{ width: 100 }}\n                  />\n                </td> */}\n                <td className={styles.element}>\n                  <TextField\n                    type=\"tel\"\n                    value={showPosIndex === index ? showPosState.barcode : element.barcode}\n                    id=\"outlined-secondary\"\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      handleChange(index, \"barcode\", e.target.value);\n                    }}\n                    style={{ width: 150 }}\n                  />\n                  <IconButton\n                    color=\"primary\"\n                    aria-label=\"add to review\"\n                    // onClick={() => addForReview(element, index)}\n                  >\n                    <InfoOutlinedIcon\n                      style={element.isReviewed  === \"true\" ? {fill: \"red\"} : null}\n                    /> \n                    {/* <AddShoppingCartIcon\n                      style={\n                        reviewItems.includes(index)\n                          ? { backgroundColor: \"green\" }\n                          : null\n                      }\n                    /> */}\n                  </IconButton>\n                  <div className={element.isReviewed  === \"true\" ? styles.tooltipIsReviewed: styles.tooltip} >\n                    <p>POS Product- {showPosIndex === index ? showPosState.pos : element.posName }</p>\n                    {/* <p>UPC- {showPosIndex === index ? showPosState.barcode : element.barcode}</p> */}\n                    <p>Size- {showPosIndex === index ? showPosState.size : element.size}</p>\n                    <p>Department - {showPosIndex === index ? showPosState.department : element.department}</p>\n                    <p>Margin(%) - {margin.toFixed(2)}</p>\n                    <p>Unit Cost- {showPosIndex === index ? showPosState.unitCost : element.cost}</p> \n                    <p>Unit Price- {showPosIndex === index ? showPosState.unitPrice : element.sellingPrice}</p>\n                    {/* <p>Price- {showPosIndex === index ? showPosState.price : element.price}</p> */}\n                    <div >\n                    <button onClick={() => {\n                            if(notFounds === \"true\"){\n                              toggleModal(\"notfounds\");\n                            }else{\n                              updateItem(invoice.slug, (parseFloat(element.unitPrice) / parseInt(element.pieces)).toFixed(2))\n                            }\n                          } } \n                      disabled={showPosIndex === index ? false : true}\n                      style={{backgroundColor: \"green\",\n                      border: \"none\",\n                      color: \"white\",\n                      padding: \"4px 8px\",\n                      textAlign: \"center\",\n                      textDecoration: \"none\",\n                      display: \"inline-block\",\n                      fontSize: \"14px\",\n                      align: \"left\"}} >\n                      Update Item\n                    </button>\n                    </div> \n                    <br />\n                    <div>\n                    <button onClick={()=> linkManually(index)} \n                      // disabled={showPosIndex === index ? false : true}\n                      style={{backgroundColor: \"blue\",\n                      border: \"none\",\n                      color: \"white\",\n                      padding: \"4px 8px\",\n                      textAlign: \"center\",\n                      textDecoration: \"none\",\n                      display: \"inline-block\",\n                      fontSize: \"14px\",\n                      align: \"left\"}} >\n                      Link Manually\n                    </button>\n                    </div>\n                    <br />\n                    <div>\n                    <button onClick={()=> reverseUpdate(index)} \n                      // disabled={showPosIndex === index ? false : true}\n                      style={{backgroundColor: \"red\",\n                      border: \"none\",\n                      color: \"white\",\n                      padding: \"4px 8px\",\n                      textAlign: \"center\",\n                      textDecoration: \"none\",\n                      display: \"inline-block\",\n                      fontSize: \"14px\",\n                      align: \"left\"}} >\n                      Reverse Update\n                    </button>\n                    </div>\n                  </div>\n                </td>\n                <td>{showPosIndex === index ? showPosState.posSku : element.posSku}</td>\n                <td>\n                  <TextField\n                    type=\"tel\"\n                    value={element.qty}\n                    id=\"outlined-secondary\"\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      handleChange(index, \"qty\", e.target.value);\n                    }}\n                    style={{ width: 100 }}\n                  />\n                </td>\n                <td>{element.cp}</td>\n                <td>\n                  <Autocomplete\n                    value={element.itemNo}\n                    onChange={(event, newValue) => {\n                      if (newValue) {\n                        handleChange(index, \"itemNo\", newValue);\n                      }\n                    }}\n                    id=\"combo-box\"\n                    options={itemNoDropdown}\n                    getOptionLabel={(option) => option}\n                    style={{ width: 200 }}\n                    renderInput={(params) => (\n                      <TextField {...params} variant=\"outlined\" />\n                    )}\n                  />\n                </td>\n                <td>\n                {/* {dropdownIndex == index ? fetchingOptions ? <Loading type=\"ThreeDots\" height={40} width={40} /> : null : null} */}\n                  <Autocomplete\n                    value={showPosIndex  === index ? showPosState.item : element.itemNo }\n                    loading={true}\n                    onInputChange={(event, value) => {\n                      console.log(\"ON INPUT CHANGE\");\n                      // event.toLowerCase();\n                      // value.toLowerCase();\n                      // console.log(event.target.value);\n                      // console.log(value);\n                      // searchDropdown(event, value);\n                      // setOptions([]);\n                      if(event != null){\n                        setTimeout(()=> {\n                          hicksvilleDropdownNew(event, value, index);\n\n                        }, 1500);\n                      }\n                      // hicksvilleDropdownNew(event, value, index);\n                    }}\n                    onChange={(event, newValue) => {\n                      // console.log(event.target.value);\n                      // console.log(newValue);\n                      if (newValue) {\n                        let newState = { ...showPosState };\n                        console.log(newValue);\n                        // newState.item = newValue.name;\n                        newState.item = element.itemNo\n                        newState.description = newValue.name;\n                        newState.barcode = newValue.upc;\n                        newState.pos = newValue.name;\n                        newState.posSku = newValue.sku;\n                        newState.size = newValue.size;\n                        newState.department = newValue.department;\n                        newState.unitCost = newValue.cost;\n                        newState.unitPrice = newValue.price;\n                        // setShowPosState(newState);\n                        dispatch({type: \"SET_POS_STATE\", data: newState})\n                        setShowPosIndex(index);\n                        setUnitCost(newValue.cost);\n                        // setStateUpdated(\"\");\n                        if(isEmpty){\n                          // setNotFounds(\"true\");\n                          dispatch({type: \"NOT_FOUNDS\", data: \"true\"})\n\n                          setRedState(\"false\");\n                        }\n                        //setDisabled(false);\n                        //updateOnHoverDetails(index);\n                        //setShowPosIndex(index);\n                        // console.log(newValue);\n                        console.log(newState);\n                        //console.log(showPosState);\n                        \n                      }\n                    }}\n                    id=\"combo-box\"\n                    // options={element.fuzzSuggestion}\n                    options={options}\n                    // getOptionLabel={option => option.label}\n                    getOptionLabel={(option) => option.label ?? element.itemNo}\n                    // getOptionLabel={(option) => dropdownLoader ? <Spinner /> : option.label}\n                    style={{ width: 400 }}\n                    renderInput={(params) => (\n                      <TextField {...params} variant=\"outlined\" />\n                    )}\n                  />\n                </td>\n                \n                <td>{element.description}</td>\n                {/* <td>{element.pieces}</td> */}\n                <td>\n                  <TextField\n                    type=\"tel\"\n                    value={element.pieces}\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      handleChange(index, \"pieces\", e.target.value);\n                    }}\n                    style={{ width: 100 }}\n                  />\n                  <button onClick={() => {updateUnits(index)}} style={{\n                    backgroundColor: \"#008CBA\",\n                    border: \"none\",\n                    color: \"white\",\n                    padding: \"5px 16px\",\n                    textAlign: \"center\",\n                    textDecoration: \"none\",\n                    display: \"inline-block\",\n                    fontSize: \"10px\",\n                    margin: \"4px 2px\",\n                    cursor: \"pointer\",\n                  }}>Update Units</button> \n                </td>\n                <td>\n                  <TextField\n                    type=\"tel\"\n                    value={element.unitPrice}\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      handleChange(index, \"unitPrice\", e.target.value);\n                    }}\n                    style={\n                      element.priceIncrease === 1\n                        ? { backgroundColor: \"#1a8cff\", width: 100 }\n                        : element.priceIncrease === -1\n                        ? { backgroundColor: \"#ffb31a\", width: 100 }\n                        : { width: 100 }\n                      // showPosIndex === index ? costInc===\"true\" ? { backgroundColor: \"#1a8cff\", width: 100 } : costDec===\"true\" ? { backgroundColor: \"#ffb31a\", width: 100 } : {width: 100}\n                      //   : element.priceIncrease === 1 \n                      //       ? { backgroundColor: \"#1a8cff\", width: 100 }\n                      //       : element.priceIncrease === -1 \n                      //       ? { backgroundColor: \"#ffb31a\", width: 100 }\n                      //       : { width: 100 }\n                    }\n                  />\n                </td>\n                <td>{element.extendedPrice}</td>\n                \n                <td>\n                  <TextField\n                    type=\"tel\"\n                    value={element.sp}\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      handleChange(index, \"sp\", e.target.value);\n                    }}\n                    style={{ width: 100 }}\n                  />\n                </td>\n                <td>{element.markup}</td>\n                {/* <td>\n                  <Checkbox\n                    checked={!element.show}\n                    onChange={(e) => handleChange(index, \"show\", e.target.value)}\n                    inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                  />\n                </td> */}\n\n                  <td className={styles.element}>\n                  <IconButton onClick={() => {\n                    toggleModal(\"details\");\n                    setDetailsIndex(index);\n                    }}>\n                      <AddCircleIcon />\n                    </IconButton>\n                    <div className={styles.tooltip}>\n                      <p>Details- {element.details}</p>\n                    </div>\n                    \n                </td>\n\n\n                <td>\n              <Button\n                text={element.show ? \"Delete\" : \"Undo\"}\n                color=\"btn btn-info\"\n                type=\"submit\"\n                onClick={() => deleteRow(index)}\n              />\n            </td>\n                <td>\n                <Button \n                    text=\"Update POS\"\n                    color=\"btn btn-info\"\n                    type=\"submit\"\n                    onClick={() => pushSingleItemToInventory(index)}\n                    style={{ width: 120 }}\n                  />\n                      \n                </td>\n                <td>\n                <Button \n                    text=\"Reverse POS\"\n                    type=\"submit\"\n                    onClick={() => reversePOSUpdate(index)}\n                    style={{ width: 120, backgroundColor: \"red\", color: \"white\" }}\n                  />\n                      \n                </td>\n                <td className={styles.element}>\n                  <IconButton onClick={() => linkingCorrect(index)}>\n                    <Cancel/>\n                  </IconButton>\n                </td>\n                <td>{index + 1}</td>\n                {/* <td>\n                  <Button\n                    text={element.show ? \"Delete\" : \"Undo\"}\n                    color=\"btn btn-info\"\n                    type=\"submit\"\n                    onClick={() => deleteRow(index)}\n                  />\n                </td> */}\n              </tr>\n            );\n          });\n          return (\n            <div style={{ marginTop: \"35px\" }}>\n              <table className=\"table table-hover table-responsive-sm\">\n                <tbody>\n                  <tr>{renderTableHeader()}</tr>\n                  {rows}\n                  <tr>\n                    <td>\n                      <Button\n                        text=\"Add cell\"\n                        color=\"btn btn-info\"\n                        onClick={addRow}\n                      />\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n              <div className={styles.divRow}>\n                <Button\n                  text=\"Update Inventory\"\n                  color=\"btn btn-info\"\n                  type=\"submit\"\n                  onClick={pushInventoryDetails}\n                />\n                {/* <Button\n                  text=\"Save Invoice Data\"\n                  color=\"btn btn-info\"\n                  type=\"submit\"\n                  onClick={toggleModal}\n                /> */}\n                <Button\n                  text=\"Re upload\"\n                  color=\"btn btn-info\"\n                  type=\"submit\"\n                  onClick={() => window.location.reload()}\n                />\n              </div>\n            </div>\n          );\n        }\n    };\n\n    const pushInventoryDetails = async () => {\n        const notFoundItems = emptyColumn.map((i) => tableData[i]);\n        const tempTable = [];\n        tableData.forEach((element, index) => {\n          if (\n            !emptyColumn.includes(index) &&\n            element.show === true &&\n            element[\"isForReview\"] != true\n          ) {\n            let rowData = { index: index + 1, ...element };\n            tempTable.push(rowData);\n          }\n        });\n        // console.log(\"notFoundItems\", notFoundItems);\n        // console.log(\"final table data\", tempTable);\n    \n        if (emptyColumn.length !== 0) {\n          /**api to push  to not found list*/\n          // setLoader(true);\n          dispatch({type: \"LOADER\"});\n          const responses = await Promise.all(\n            notFoundItems.map(async (product) => {\n              try {\n                const data = {\n                  Item: product.itemNo,\n                  Description: product.description,\n                  Quantity: product.qty,\n                  Price: product.unitPrice,\n                  sku: product.sku,\n                  Barcode: product.barcode,\n                  PosSKU: product.posSku,\n                  InvoiceName: invoice.slug,\n                };\n                await inventoryService.CreateNotFoundItems(data);\n                return true;\n              } catch (error) {\n                console.log(\n                  \"Couldn't create not found product\",\n                  product.description,\n                  { error }\n                );\n                alert(\"Couldn't create product on website.\");\n                return null;\n              }\n            })\n          );\n          // setLoader(false);\n          dispatch({type: \"LOADER\"});\n        }\n        const priceIncreasedProducts = tempTable.filter(\n          (product) => product.priceIncrease !== 0\n        );\n        // setLoader(true);\n        dispatch({type: \"LOADER\"});\n        const res = await Promise.all(\n          priceIncreasedProducts.map(async (product) => {\n            try {\n              const data = {\n                invoiceName: invoice,\n                itemName: product.itemNo,\n                value: { Price: product.unitPrice },\n              };\n              await inventoryService.UpdateProductFields(data);\n            } catch (error) {\n              console.log(`couldn't update price for product ${product.itemNo}`);\n            }\n          })\n        );\n        console.log(priceIncreasedProducts.length);\n        // setLoader(false);\n        dispatch({type: \"LOADER\"});\n\n        setInventoryData(mergeDuplicates(tempTable));\n        setPushToInventory(true);\n    };\n\n    const handleChange = async (row, key, value) => {\n        let tempTableData = [...tableData];\n        tempTableData[row][key] = value;\n        const { itemNo } = tempTableData[row];\n        if (\n          tempTableData[row][\"qty\"] !== \"\" &&\n          tempTableData[row][\"itemNo\"] !== \"\" &&\n          tempTableData[row][\"unitPrice\"] !== \"\"\n        ) {\n          const index = emptyColumnList.indexOf(row);\n          if (index > -1) {\n            emptyColumnList.splice(index, 1);\n          }\n        } else {\n          emptyColumnList.push(row);\n        }\n        setEmptyColumn(emptyColumnList);\n        if (key === \"itemNo\") {\n          tempTableData[row][\"description\"] = productDetails[value].Description;\n          tempTableData[row][\"pieces\"] = productDetails[value].Quantity;\n          tempTableData[row][\"sku\"] = productDetails[value].sku;\n          /**auto populate barcode & other pos fields*/\n          tempTableData[row][\"barcode\"] = productDetails[value].Barcode;\n          tempTableData[row][\"posName\"] = productDetails[value].POS;\n          tempTableData[row][\"posSku\"] = productDetails[value].PosSKU;\n        }\n    \n        if (key === \"unitPrice\" || key === \"sp\" || key === \"itemNo\") {\n          let cp = parseFloat(tempTableData[row][\"cp\"]);\n          let sp = parseFloat(tempTableData[row][\"sp\"]);\n          let markup = ((sp - cp) / cp) * 100;\n          let cost =\n            parseFloat(tempTableData[row][\"unitPrice\"]) /\n            tempTableData[row][\"pieces\"];\n          // let sp = cp + (cp * markup) / 100;\n          // if (tempTableData[row][\"pieces\"]) {\n          //   sp = sp / tempTableData[row][\"pieces\"];\n          // }\n          tempTableData[row][\"markup\"] = isNaN(markup) ? 0 : markup.toFixed(2);\n          tempTableData[row][\"cp\"] = isNaN(cost) ? 0 : cost.toFixed(2);\n        }\n    \n        if (key === \"qty\" || key === \"unitPrice\") {\n          const extendedPrice =\n            parseFloat(tempTableData[row][\"qty\"]) *\n            parseFloat(tempTableData[row][\"unitPrice\"]);\n          const cp = tempTableData[row][\"unitPrice\"] / tempTableData[row][\"pieces\"];\n          if (!isNaN(extendedPrice)) {\n            tempTableData[row][\"extendedPrice\"] = extendedPrice.toFixed(2);\n          }\n          if (!isNaN(cp)) {\n            tempTableData[row][\"cp\"] = cp.toFixed(2);\n          }\n        }\n        if (itemNo) {\n          if (+tempTableData[row][\"unitPrice\"] > +productDetails[itemNo].Price) {\n            tempTableData[row][\"priceIncrease\"] = 1;\n          } else if (\n            +tempTableData[row][\"unitPrice\"] < +productDetails[itemNo].Price\n          ) {\n            tempTableData[row][\"priceIncrease\"] = -1;\n          } else if (\n            +tempTableData[row][\"unitPrice\"] == +productDetails[itemNo].Price\n          ) {\n            tempTableData[row][\"priceIncrease\"] = 0;\n          }\n        }\n    \n        if (key === \"barcode\") {\n          tempTableData[row][\"barcode\"] = value;\n        }\n        setTableData(tempTableData);\n    };\n\n    const mergeDuplicates = (a) => {\n        let arr = [...a];\n        let map = new Map();\n        for (let i = 0; i < arr.length; i++) {\n          if (!map.has(arr[i].itemNo)) map.set(arr[i].itemNo, arr[i]);\n          else {\n            let obj = { ...map.get(arr[i].itemNo) };\n            obj[\"qty\"] = (\n              parseFloat(obj[\"qty\"]) + parseFloat(arr[i].qty)\n            ).toString();\n            map.set(arr[i].itemNo, obj);\n          }\n        }\n        let newArr = [];\n        for (let x of map.values()) newArr.push(x);\n        return newArr;\n    };\n\n    useEffect(() => {\n      // hicksvilleDropdown();\n      // hicksvilleDropdown();\n      const curDate = new Date();\n      console.log(curDate);\n      let date = curDate.getFullYear()+ \"-\" + (curDate.getMonth()+1) +\"-\"+ curDate.getDate();\n      console.log(date);\n      // setTodayDate(date);\n      dispatch({type: \"TODAY_DATE\", data: date});\n      // hicksvilleDropdown(HicksData);\n      firebase.auth().onAuthStateChanged(function(user) {\n        if (user) {\n          // setUserEmail(user.email);\n          dispatch({type: \"EMAIL\", data: user.email})\n            console.log('This is the user: ', user)\n            console.log('This is the user: ', user.email);\n        } else {\n            // No user is signed in.\n            console.log('There is no logged in user');\n        }\n    });\n    \n\n\n        /**Fetch the data from the aws textract for the image */\n        // async function fetchOCRData() {\n        //   // return chetak();\n    \n        //   setLoader(true);\n        //   const ocrData = [];\n\n\n\n        //   let newData = [];\n        //   ocrData.forEach((data) => (newData = [...newData, ...data]));\n        //   return newData;\n        // }\n    \n        // async function invoiceData() {\n        //   const products = await tesseractService.GetProductDetails(\n        //     invoice\n        //   );\n        //   //console.log(props.selectedInvoice);\n        //   return products;\n        // }\n\n        // fetchOCRData().then((ocrData) => {\n        //   invoiceData()\n        //     .then((products) => {\n        //       /**post processing the table data after returning from filter */\n        //       function convertToUpperCase(obj) {\n        //         let newObj = {};\n        //         for (let key in obj) {\n        //           newObj[key.toUpperCase()] = obj[key];\n        //         }\n        //         return newObj;\n        //       }\n        //       products = convertToUpperCase(products);\n        //       console.log(products);\n        //       // scanInvoiceData.InvoiceData = ocrData;\n        //     //   setOcrProducts(ocrData);\n              \n        //     //   console.log(scanInvoiceData);\n        //       // scanInvoiceData.InvoiceData = ocrData;\n        //       //console.log(resScnInvDta);\n        //       //console.log(\"OCERDATa\", ocrData);\n        //       //console.log(products);\n        //       //console.log(scanInvoiceData);\n        //       let table = ocrData.map((row) => {\n        //         /**For invoices which dont have item no, set description as item no */\n        //         if (row.itemNo === undefined) {\n        //           row.itemNo = row.description.trim().toUpperCase();\n        //         }\n        //         row.itemNo = row.itemNo.toString().toUpperCase();\n    \n        //         row.description =\n        //           products[row.itemNo] !== undefined\n        //             ? products[row.itemNo].Description\n        //             : row.description;\n        //         row.pieces =\n        //           products[row.itemNo] !== undefined\n        //             ? products[row.itemNo].Quantity\n        //             : 0;\n        //         row.sku =\n        //           products[row.itemNo] !== undefined\n        //             ? products[row.itemNo].sku\n        //             : \"\";\n        //         row.barcode =\n        //           products[row.itemNo] !== undefined\n        //             ? products[row.itemNo].Barcode\n        //             : \"\";\n        //         row.posName =\n        //           products[row.itemNo] !== undefined\n        //             ? products[row.itemNo].POS\n        //             : \"\";\n        //         row.markup = 0;\n        //         row.show = true;\n        //         row.posSku =\n        //           products[row.itemNo] !== undefined\n        //             ? products[row.itemNo].PosSKU\n        //             : \"\";\n        //         row.isReviewed = \n        //           products[row.itemNo] !== undefined ? products[row.itemNo].isReviewed : \"\" ;\n        //         row.size = \n        //           products[row.itemNo] !== undefined ? products[row.itemNo].Size : \"\";\n        //         row.department = \n        //           products[row.itemNo] !== undefined ? products[row.itemNo].Department : \"\";\n        //         row.cost = \n        //           products[row.itemNo] !== undefined ? products[row.itemNo].SellerCost : \"\";\n        //         row.sellingPrice = \n        //           products[row.itemNo] !== undefined ? products[row.itemNo].SellingPrice : \"\";\n        //         //console.log(\"department-\" + row.department + \"  cost-\" + row.cost + \"  price\" + row.sellingPrice);\n        //         let sp = 0;\n        //         let cp = 0;\n        //         // const barcode = products.Barcode\n        //         if (parseInt(row.pieces)) {\n        //           sp = (parseFloat(row.unitPrice) / parseInt(row.pieces)).toFixed(\n        //             2\n        //           );\n        //           cp = sp;\n        //         }\n        //         if (products[row.itemNo] !== undefined) {\n        //           if (+row.unitPrice > +products[row.itemNo].Price) {\n        //             row[\"priceIncrease\"] = 1;\n        //           } else if (+row.unitPrice < +products[row.itemNo].Price) {\n        //             row[\"priceIncrease\"] = -1;\n        //           } else if (+row.unitPrice == +products[row.itemNo].Price) {\n        //             row[\"priceIncrease\"] = 0;\n        //           }\n        //         } else {\n        //           row[\"priceIncrease\"] = 0;\n        //         }\n    \n        //         /**filter out the rows for which qty shipped & extendedPrice is zero */\n        //         if (row.qty == \"0\" && row.extendedPrice === \"0.00\") {\n        //           return null;\n        //         }\n        //         /**Calulate qty for which qty is not read/scanned by textract */\n        //         if (!row.qty) {\n        //           row.qty = (\n        //             parseFloat(row.extendedPrice) / parseFloat(row.unitPrice)\n        //           ).toFixed(0);\n        //         }\n        //       return { ...row, sp, cp };\n        //       });\n        //       setLoader(false);\n        //       setTableData(table.filter((data) => data !== null));\n        //       setItemNoDropdown(Object.keys(products));\n        //       setProductDetails(products);\n        //     })\n        //     .catch((err) => {\n        //       console.log(\"error on mapping ocrdata\", err)\n        //       setLoader(false);\n        //     });\n        // });\n    }, []);\n\n    console.log(apiLoader);\n    console.log(showPosState);\n    console.log(inv, num, day);\n    console.log(notFounds, unitsInCase, price);\n    if (loader) {\n      return <Spinner />;\n    }\n    if(apiLoader){\n      return (\n      <div style={{marginTop: \"100px\", marginLeft: \"700px\"}}>\n        <CircularProgress />\n      </div>\n      );       \n    }\n    return(\n\n        <div className=\"container-fluid\">\n          <br />\n            <Paper className={classes.root}>\n                <Grid style={{ display: \"flex\" }}>\n                \n                  <Autocomplete\n                      value={invoice}\n                      onChange={(event, newValue) => {\n                          // console.log(\"new value\", newValue)\n                          if (newValue) {\n                          setInvoice(newValue);\n                          }\n                          // getInvoices(newValue);\n                      }}\n                      id=\"combo-box\"\n                      options={dropdownOptions}\n                      getOptionLabel={(option) => option.value}\n                      style={{ width: 250 }}\n                      autoHighlight\n                      renderInput={(params) => (\n                          <TextField {...params} label={dropdownLabel} variant=\"outlined\" />\n                      )}\n                  />\n                    {/* <Autocomplete\n                        value={invoiceNo}\n                        onChange={(event, newValue) => {\n                            // console.log(\"new value\", newValue)\n                            if (newValue) {\n                            setInvoiceNo(newValue);\n                            }\n                        }}\n                        id=\"combo-box\"\n                        options={invoiceOptions}\n                        getOptionLabel={(option) => option.value}\n                        style={{ width: 200 }}\n                        autoHighlight\n                        renderInput={(params) => (\n                            <TextField {...params} label=\"Invoice No.\" variant=\"outlined\" />\n                        )}\n                    /> */}\n                    \n                    {/* <TextField\n                        label=\"Invoice No.\"\n                        variant=\"outlined\"\n                        value={invoiceNo}\n                        style={{ marginLeft: 20 }}\n                        onChange={(e) => setInvoiceNo(e.target.value)}\n                    />\n                    <TextField\n                        id=\"date\"\n                        label=\"Date\"\n                        type=\"date\"\n                        value={date}\n                        style={{ marginLeft: 20 }}          \n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        onChange={(event) => setDate(event.target.value)}          \n                    /> */}\n                  <button  style={{backgroundColor: \"green\",\n                      height: \"50px\",\n                      border: \"none\",\n                      color: \"white\",\n                      padding: \"4px 8px\",\n                      textAlign: \"center\",\n                      textDecoration: \"none\",\n                      display: \"inline-block\",\n                      fontSize: \"14px\",\n                      align: \"left\",\n                      marginLeft: 20}}\n                      // onClick={setProductsInTable}\n                      onClick={getInvoices}\n                      >\n                          Fetch Invoice Data\n                  </button>\n\n                  <div style={{marginLeft: \"20px\"}}>\n                  <table>\n                  <tbody>\n                      <tr style={{height: \"21px\"}}> \n                      <td style={{display: \"flex\",\n                          width: \"20px\",\n                          height: \"20px\",\n                          backgroundColor: \"rgb(238,129,237)\",\n                          borderRadius: \"50%\",\n                          }}></td>\n                          {/* <td style={{width: \"0.25px\", height: \"0.25px\", margin: \"0px 0px 0px 0px\"}}></td> */}\n                      <td style={{height: \"21px\"}}><p >Product has been linked(on hovering).</p></td>\n                      </tr>\n                      <tr style={{height: \"21px\"}}> \n                      <td style={{display: \"flex\",\n                          width: \"20px\",\n                          height: \"20px\",\n                          backgroundColor: \"rgb(144,238,143)\",\n                          borderRadius: \"50%\",\n                          }}></td>\n                          {/* <td style={{width: \"0.25px\", height: \"0.25px\", margin: \"0px 0px 0px 0px\"}}></td> */}\n                      <td style={{height: \"21px\"}}><p >Product has been updated on POS.</p></td>\n                      </tr>\n                      <tr style={{height: \"21px\"}}> \n                      <td style={{display: \"flex\",\n                          width: \"20px\",\n                          height: \"20px\",\n                          backgroundColor: \"rgb(231, 230, 162)\",\n                          borderRadius: \"50%\",\n                          // border: \"1px solid\"\n                          }}></td>\n                          {/* <td style={{width: \"0.25px\", height: \"0.25px\", margin: \"0px 0px 0px 0px\"}}></td> */}\n                      <td style={{height: \"21px\"}}><p >Product has not been linked(on hovering).</p></td>\n                      </tr>\n                      </tbody>\n              </table>\n              </div>\n              <div style={{marginLeft: \"20px\"}}>\n              <table>\n              <tbody>\n                  <tr style={{height: \"21px\"}}> \n                  <td style={{display: \"flex\",\n                      width: \"20px\",\n                      height: \"20px\",\n                      backgroundColor: \"rgb(210,180,140)\",\n                      borderRadius: \"50%\",\n                      }}></td>\n                      {/* <td style={{width: \"0.25px\", height: \"0.25px\", margin: \"0px 0px 0px 0px\"}}></td> */}\n                  <td style={{height: \"21px\"}}><p >Product is free.</p></td>\n                  </tr>\n                  <tr style={{height: \"21px\"}}> \n                  <td style={{display: \"flex\",\n                      width: \"20px\",\n                      height: \"20px\",\n                      backgroundColor: \"rgb(24,140,255)\",\n                      borderRadius: \"50%\",\n                      }}></td>\n                      {/* <td style={{width: \"0.25px\", height: \"0.25px\", margin: \"0px 0px 0px 0px\"}}></td> */}\n                  <td style={{height: \"21px\"}}><p >Invoice Unit Cost is greater </p></td>\n                  </tr>\n                  <tr style={{height: \"21px\"}}> \n                  <td style={{display: \"flex\",\n                      width: \"20px\",\n                      height: \"20px\",\n                      backgroundColor: \"rgb(255,179,26)\",\n                      borderRadius: \"50%\",\n                      }}></td>\n                      {/* <td style={{width: \"0.25px\", height: \"0.25px\", margin: \"0px 0px 0px 0px\"}}></td> */}\n                  <td style={{height: \"21px\"}}><p >Invoice Unit Cost is lesser.</p></td>\n                  </tr>\n                  </tbody>\n          </table>\n          </div>\n\n          <div style={{marginLeft: \"20px\"}}>\n              <table>\n              <tbody>\n                  <tr style={{height: \"21px\"}}> \n                  <td style={{display: \"flex\",\n                      width: \"20px\",\n                      height: \"20px\",\n                      backgroundColor: \"pink\",\n                      borderRadius: \"50%\",\n                      }}></td>\n                      {/* <td style={{width: \"0.25px\", height: \"0.25px\", margin: \"0px 0px 0px 0px\"}}></td> */}\n                  <td style={{height: \"21px\"}}><p >Product unidentified in POS.</p></td>\n                  </tr>\n                  </tbody>\n          </table>\n          </div>\n        </Grid>\n\n            </Paper>\n\n            {openInvoice ? (<div><div><p>Invoice No.-- {num}</p></div><div><p>Invoice Date -- {day}</p></div></div>) : null}\n\n        \n            {pushToInventory ? (\n            <UpdateInventory\n                newInventoryData={inventoryData}\n                header={header}\n                goBack={setPushToInventory}\n                invoice={invoice}\n            />\n            ) : ( openInvoice ? renderTableData() : renderInvoiceTable() \n            )}\n            <CModal show={showModal} onClose={() => toggleModal(\"notfounds\")}>\n        <CModalHeader closeButton>Add Red Products</CModalHeader>\n        <CModalBody>\n          <CContainer fluid>\n            <CRow>\n              <CCol sm=\"6\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"invoiceNo\">Units In Case</CLabel>\n                  <CInput\n                    type=\"text\"\n                    name=\"unitsInCase\"\n                    value={unitsInCase}\n                    onChange={(event) => {\n                      // setUnitsInCase(event.target.value)\n                      dispatch({type: \"UNITS_IN_CASE\", data: event.target.value})\n                    }}\n                    />\n                  <CLabel htmlFor=\"date\">Case Cost</CLabel>\n                  <CInput\n                    type=\"text\"\n                    name=\"price\"\n                    value={price}\n                    onChange={(event) => {\n                      // setPrice(event.target.value)\n                      dispatch({type: \"PRICE\", data: event.target.value})\n                    }}\n                    />\n                </CFormGroup>\n              </CCol>\n            </CRow>\n          </CContainer>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"primary\" onClick={updateItem}>\n            ADD\n          </CButton>{\" \"}\n          <CButton color=\"secondary\" onClick={() => toggleModal(\"notfounds\")}>\n            Cancel\n          </CButton>\n        </CModalFooter>\n      </CModal>\n\n            <CModal show={detailsModal} onClose={() => toggleModal(\"details\")}>\n        <CModalHeader closeButton>Add Details</CModalHeader>\n        <CModalBody>\n          <CContainer fluid>\n            <CRow>\n              <CCol sm=\"6\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"invoiceNo\">Add Details</CLabel>\n                  <TextareaAutosize\n                    aria-label=\"empty textarea\"\n                    placeholder=\"add details\"\n                    // minRows={4}\n                    // maxRows={10}\n                    style={{ width: 400, height: 100 }}\n                    onChange={(event) => setDetails(event.target.value)}\n                  />\n                </CFormGroup>\n              </CCol>\n            </CRow>\n          </CContainer>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"primary\" onClick={saveDetails}>\n            ADD\n          </CButton>{\" \"}\n          <CButton color=\"secondary\" onClick={() => toggleModal(\"details\")}>\n            Cancel\n          </CButton>\n        </CModalFooter>\n      </CModal>\n\n\n\n        </div>\n\n    );\n}\n\nexport default SaveInvoiceData;","/Users/sahil/Desktop/icms/inventory-management/client/src/containers/Auth/Auth.js",[],"/Users/sahil/Desktop/icms/inventory-management/client/src/components/HandWrittenInvoice/HandWrittenInvoice.js",["272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314"],"import React, { useEffect, useState } from 'react';\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport { dropdownOptions } from \"../../utils/invoiceList\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { InventoryService } from \"../../services/InventoryService\";\nimport {\n  CModal,\n  CModalBody,\n  CModalHeader,\n  CModalFooter,\n  CButton,\n  CContainer,\n  CCol,\n  CRow,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CDropdown,\n  CDropdownToggle,\n  CDropdownMenu,\n  CDropdownItem,\n} from \"@coreui/react\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { TesseractService } from \"../../services/TesseractService\";\nimport Button from \"../../UI/Button\";\nimport styles from \"../DisplayData/DisplayData.module.css\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Cancel from \"@material-ui/icons/Cancel\";\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\n\nconst useStyles = makeStyles({\n    root: {\n    width: \"100%\",\n    paddingTop: 50,\n    },\n    container: {\n        maxHeight: \"80vh\",\n        marginTop: 10,\n      },\n      table: {\n        \"& thead th\": {\n          fontWeight: \"600\",\n          fontSize: 20,\n          backgroundColor: \"grey\",\n        },\n        \"& tbody td\": {\n          fontWeight: \"300\",\n        },\n        \"& tbody tr:hover\": {\n          backgroundColor: \"#fffbf2\",\n          cursor: \"pointer\",\n        },\n      },\n});\n\nconst HandwrittenInvoice = () => {\n    // const [loader, setLoader] = useState();\n    const tesseractService = new TesseractService();\n    const [tableData, setTableData] = useState([]);\n    const [productDetails, setProductDetails] = useState([]);\n    const [itemNoDropdown, setItemNoDropdown] = useState([]);\n\n    const dispatch = useDispatch();\n    const numOfCollections = dropdownOptions.length;\n    const dropdownLabel = \"Select Invoice(\"+   numOfCollections   + \")\";\n    // const [invoice, setInvoice] = useState(\"\");\n    let invoice = \"\";\n    const classes = useStyles();\n    const inventoryService = new InventoryService();\n    const [options, setOptions] = useState([]);\n    const [showModal, setShowModal] = useState(false);\n    const [modalLabel, setModalLabel] = useState(\"\");\n\n    const [todayDate, setTodayDate] = useState(\"\");\n    const [userEmail, setUserEmail] = useState(\"\");\n\n    const [itemName, setItemName] = useState(\"\");\n    const [unitsInCase, setUnitsInCase] = useState(\"\");\n    const [caseCost, setCaseCost] = useState(\"\");\n\n    const [newUnitCost, setNewUnitCost] = useState(\"\");\n    const [newUnitPrice, setNewUnitPrice] = useState(\"\");\n\n    const [showPosIndex, setShowPosIndex] = useState(-1);\n    const showPosState = useSelector(state => state.showPosState);\n    const notFounds = useSelector(state => state.redItems.notFounds);\n\n    const [detailsModal, setDetailsModal] = useState(false);\n    const [details, setDetails] = useState(\"\");\n    const [detailsIndex, setDetailsIndex] = useState(-1);\n    const [unitCost, setUnitCost] = useState(\"\");\n    const [redState, setRedState] = useState(\"true\");\n\n    \n    \n    const [posProduct, setPosProduct] = useState({\n      isReviewed: \"\",\n      Item: \"\",\n      Quantity: \"\",\n      Description: \"\",\n      Price: \"\",\n      POS: \"\",\n      Barcode: \"\",\n      PosSKU: \"\",\n      Size: \"\",\n      Department: \"\",\n      SellerCost: \"\",\n      SellingPrice: \"\",\n    });\n\n    const apiLoader = useSelector(state => state.loaders.apiLoader);\n    const loader = useSelector(state => state.loaders.loader);\n\n    let posProducts = []\n    let wooComProducts = [];\n    let singleItemData = [];\n    let updateSku = \"\";\n    let itemNo = \"\";\n\n    const header = [\n      \"Serial No.\",\n      \"Barcode\",\n      \"POS SKU\",\n      \"Qty Shipped\",,\n      \"Unit Cost\",\n      \"ITEM NO\",\n      \"Link Product\",\n      \n      \"DESCRIPTION\",\n      \"Units in  Case\",\n      \"Case cost\",\n      \"Extended Price\",\n     \n      \"Unit Price\",\n      \"Mark up (%)\",\n      \"Add Details\",\n      // \"Tick to Delete\",\n      \"Update POS\",\n      // \"Reverse POS Update\",\n      \"NO LINKING\",\n      \"Serial No.(2)\"\n  ];\n\n//*********************************************************************POS UPDATE STARTS******************************************* */    \n\n  //Function to fetch wooCom Prpducts.\n  async function getProducts() {\n    console.log(\"IN WOOCOM PRODUCTS\");\n    const items = await Promise.all(\n      singleItemData.map(async (row) => {\n        console.log(row.barcode);\n        try {\n          const res = await inventoryService.GetProductDetails(row.barcode);\n          console.log(res);\n          const {\n            id,\n            name,\n            regular_price,\n            price,\n            sku,\n            slug,\n            stock_quantity,\n            sale_price,\n          } = res[0];\n          return {\n            id,\n            name,\n            regular_price,\n            price,\n            sku,\n            slug,\n            stock_quantity,\n            sale_price,\n            itemNo: row.itemNo,\n          };\n        } catch (error) {\n          // tempNotFoundProducts.push(row);\n          console.log(\"Couldn't fetch product from woodpress.\", row.itemNo);\n          return null;\n        }\n      })\n    );\n    // setLoader(false);\n    // dispatch({type: \"LOADER\"});\n    console.log(items);\n    wooComProducts = items;\n    // setWooComProducts(items.filter((ele) => ele !== null));\n    // setNotFoundProducts(tempNotFoundProducts);\n  }    \n      \n  //function to fetch POS products.\n  async function getPosProducts() {\n    console.log(\"IN POS PRODUCTS\");\n    // setLoader(true);\n    // dispatch({type: \"LOADER\"});\n    let hasErrorOccured = false;\n    const items = await Promise.all(\n      singleItemData\n        .map(async (row) => {\n          console.log(row.barcode);\n          try {\n            const res = await inventoryService.GetPOSProductDetails(\n              row.barcode\n            );\n            console.log(res);\n            if(!Array.isArray(res)){\n              alert(\"API not working\");\n              return;\n            }\n            console.log(\"fetched pos data\", res);\n            const { SKU, UPC, ITEMNAME, TOTALQTY, DEPNAME } = res[0];\n            console.log(SKU);\n            console.log(updateSku);\n            if(SKU == updateSku){\n              console.log(SKU);\n              console.log(updateSku);\n              return {\n                ...row,\n                COST: row.newUnitCost,\n                PRICE: row.newUnitPrice,\n                SKU,\n                UPC,\n                ITEMNAME,\n                // TOTALQTY:\n                //   parseInt(row.qty) * parseInt(row.pieces) + parseInt(TOTALQTY),\n                itemNo: row.itemNo,\n                isNew: false,\n                BUYASCASE: 1,\n                // CASEUNITS: row.pieces.toString(),\n                // CASECOST: row.unitPrice.toString(),\n                DEPNAME,\n              };\n            } else {\n              alert(\"SKU mismatch!!\");\n            }\n\n            \n            \n          } catch (error) {\n            hasErrorOccured = true;\n            return {\n              ...row,\n              COST: row.cp,\n              PRICE: row.sp,\n              SKU: row.posSku,\n              UPC: row.barcode,\n              ITEMNAME: row.description,\n              TOTALQTY: parseInt(row.qty) * parseInt(row.pieces),\n              itemNo: row.itemNo,\n              isNew: true,\n              BUYASCASE: 1,\n              CASEUNITS: row.pieces.toString(),\n              CASECOST: row.unitPrice.toString(),\n              DEPNAME: \"\",\n            };\n          }\n        })\n    );\n    if (hasErrorOccured) {\n      alert(\"Couldn't fetch some data from POS\");\n    }\n    // setLoader(false);\n    // dispatch({type: \"LOADER\"});\n    console.log(items);\n    posProducts = items;\n    console.log(posProducts);\n    // setPosProducts(items.filter((ele) => ele !== null));\n  }\n\n  //PUSH TO WOOCOM.\n  const pushToWoocom = async (products) => {\n    // setLoader(true);\n    // dispatch({type: \"LOADER\"});\n    const responses = await Promise.all(\n      products.map(async (product) => {\n        try {\n          const res = await inventoryService.UpdateProductDetails(product.id, {\n            regular_price: product.regular_price,\n            stock_quantity: product.stock_quantity,\n          });\n          const { id, name, regular_price, stock_quantity } = res;\n          return {\n            id,\n            name,\n            regular_price,\n            stock_quantity,\n            itemNo: product.itemNo,\n          };\n        } catch (error) {\n          console.log(error);\n          alert(\"Couldn't update product on website.\");\n          return null;\n        }\n      })\n    );\n    // setLoader(false);\n    // dispatch({type: \"LOADER\"});\n  };\n\n  //PUSH TO POS.\n  const pushToPOS = async (products) => {\n    // setLoader(true);\n    // dispatch({type: \"LOADER\"});\n    console.log(products);\n    const responses = await Promise.all(\n      products.map(async (product) => {\n        try {\n          const {\n            COST,\n            PRICE,\n            UPC,\n            TOTALQTY,\n            isNew,\n            ITEMNAME,\n            BUYASCASE,\n            CASEUNITS,\n            CASECOST,\n            SKU,\n            DEPNAME,\n            itemNo\n          } = product;\n          const res = await inventoryService.UpdatePOSProducts(\n            JSON.stringify({\n              UPC,\n              ITEMNAME,\n              DESCRIPTION: \"\",\n              PRICE,\n              COST,\n              QTY: TOTALQTY,\n              SIZE: \"\",\n              PACK: \"\",\n              REPLACEQTY: 1,\n              DEPARTMENT: DEPNAME,\n              CATEGORY: \"\",\n              SUBCATEGORY: \"\",\n              ISFOODSTAMP: 1,\n              ISWEIGHTED: 0,\n              ISTAXABLE: 1,\n              // VENDORNAME: invoice.slug,\n              // VENDORCODE: itemNo,\n              // VENDORCOST: \"\",\n              ISNEWITEM: isNew ? 1 : 0,\n              BUYASCASE,\n              CASEUNITS,\n              CASECOST,\n              COMPANYNAME: invoice.slug,\n              PRODUCTCODE: itemNo,\n            })\n          );\n          console.log(\"updated pos data\", res);\n          const data = {\n            UPC,\n            SKU,\n            Cost: COST,\n            ItemName: ITEMNAME,\n            Price: PRICE,\n            TotalQty: TOTALQTY,\n          };\n          //not needed as of now, parikshit.\n          // if (isNew) {\n          //   const response = await inventoryService.CreateDBProduct(data);\n          //   console.log(\"Created new product\", response);\n          // } else {\n          //   const response = await inventoryService.UpdateDBProduct({\n          //     count: parseInt(product.qty) * parseInt(product.pieces),\n          //     UPC,\n          //   });\n          //   console.log(\"updated existing product\", response);\n          // }\n\n          console.log(\"res from POS\", res);\n          return true;\n        } catch (error) {\n          console.log(error);\n          return null;\n        }\n      })\n    );\n    // setLoader(false);\n    // dispatch({type: \"LOADER\"});\n  };\n\n  const pushInventoryDetails2 = async () => {\n    console.log(posProducts);\n    // setLoader(true);\n    // let data = singleItemData.map((element) => {\n    //   return {\n    //     item: element.itemNo,\n    //     qty: parseInt(element.qty) * parseInt(element.pieces),\n    //     cp: element.unitPrice,\n    //     markup: element.markup,\n    //     sp: element.sp,\n    //     description: element.description,\n    //   };\n    // });\n\n    // var duplicates = {};\n    // for (var i = 0; i < data.length; i++) {\n    //   if (duplicates.hasOwnProperty(data[i].item)) {\n    //     duplicates[data[i].item].push(i);\n    //   } else if (data.lastIndexOf(data[i].item) !== i) {\n    //     duplicates[data[i].item] = [i];\n    //   }\n    // }\n\n    // let tempData = Object.values(duplicates).filter((ele) => ele.length > 1);\n    // if (tempData.length > 0) {\n    //   tempData.forEach((index) => {\n    //     let temp = 0;\n    //     index.forEach((val) => {\n    //       if (data[val]) {\n    //         // console.log(\"data[val]\", data[val]);\n    //         temp += data[val].qty;\n    //         if (temp - data[val].qty !== 0) {\n    //           data[val] = null;\n    //         }\n    //       }\n    //     });\n    //     data[index[0]].qty = temp;\n    //   });\n    // }\n    // data = data.filter((ele) => ele !== null);\n\n    /**\n     * add the fileds of  data from the woocom & ocr\n    */\n    console.log(wooComProducts.length);\n    // if(wooComProducts[0] != null){\n    //   let updatedWoocomProducts = data\n    //     .map((product, index) => {\n    //       /**find index of the item in fetched woocom product list */\n    //       const wooIndex = wooComProducts.findIndex(\n    //         (wooProduct) => product.item === wooProduct.itemNo\n    //       );\n    //       if (wooIndex !== -1) {\n    //         /**get the qty & other fileds of the woocom product */\n    //         let { id, stock_quantity } = wooComProducts[wooIndex];\n    //         stock_quantity += product.qty;\n    //         const regular_price = product.sp;\n    //         return { id, regular_price, stock_quantity, itemNo: product.item };\n    //       }\n    //       return null;\n    //     })\n    //     .filter((item) => item !== null);\n\n    //   console.log(updatedWoocomProducts); \n    //   await pushToWoocom(updatedWoocomProducts);\n    //   }\n    await pushToPOS(posProducts);\n\n    // setLoader(false);\n    // dispatch({type: \"LOADER\"});\n    // if (itemsNotPushed.length === 0) {\n    window.alert(\"Inventory updated successfully\");\n    // setRedirect(true);\n    // } else {\n    //   window.alert(\"Inventory not updated\");\n    // }\n  };\n\n  function toConsoleState() {\n    console.log(wooComProducts);\n    console.log(posProducts);\n    console.log(singleItemData);\n  }\n\n  const pushSingleItemToInventory = async (index) =>{\n    // setApiLoader(true);\n    // dispatch({type: \"API_LOADER\"});\n    const product = [];\n    \n    const tempTable = [];\n    product.push(posProduct);\n    console.log(product);\n    product.isUpdated = \"true\";\n    itemNo = product.itemNo;\n    \n\n    // setLoader(false);\n    // dispatch({type: \"LOADER\"});\n    // console.log(tempTable);\n    singleItemData = [posProduct];\n    singleItemData[0].isUpdated = \"true\";\n    // setPushToInventory(true);\n    console.log(singleItemData);\n    \n    updateSku = singleItemData[0].posSku;\n\n\n    await getProducts();\n    await getPosProducts();\n    console.log(posProducts);\n    if(posProducts[0] != undefined ){\n      await pushInventoryDetails2();\n      toConsoleState();\n      console.log(singleItemData);\n      console.log(singleItemData.itemNo);\n      // await inventoryService.UpdateInvoiceData(inv, num, day, singleItemData[0].itemNo); \n\n      //Update unit cost n price in db, after update POS.\n      let data1 = {\n        cost: singleItemData[0].newUnitCost,\n        price: singleItemData[0].newUnitPrice,\n        item: singleItemData[0].itemNo,\n        invoice: invoice.slug\n      }\n      console.log(data1)\n      await inventoryService.UpdateDBafterPosUpdate(data1);\n\n      //Log Generate.\n      console.log(\"PRODUCTT\");\n      console.log(singleItemData);\n      const log = {\n        InvoiceName: invoice.slug,\n        InvoiceDate: \"\",\n        ItemNo: singleItemData[0].itemNo,\n        InvoiceDescription: singleItemData[0].description,\n        PosDescription: singleItemData[0].pos,\n        OldUnitCost: singleItemData[0].unitCost,\n        OldUnitPrice: singleItemData[0].unitPrice,\n        //OldMargin: singleItemData[0].margin.toFixed(2).toString(),\n        OldMargin: (((singleItemData[0].unitPrice - singleItemData[0].unitCost)/singleItemData[0].unitCost)*100).toFixed(2).toString(),\n        NewUnitCost: singleItemData[0].newUnitCost,\n        NewUnitPrice: singleItemData[0].newUnitPrice,\n        //NewMargin:( ((singleItemData[0].sp- singleItemData[0].cp)/ singleItemData[0].cp)*100).toFixed(2).toString(),\n        NewMargin: (((singleItemData[0].newUnitPrice - singleItemData[0].newUnitCost)/singleItemData[0].newUnitCost)*100).toFixed(2).toString(),\n        UpdateDate: todayDate,\n        Person: userEmail,\n        TimeStamp: new Date().toTimeString().split(\" \")[0], \n        HandWritten: \"YES\"\n      }\n      console.log(log);\n\n      const logUpdate = await inventoryService.posLogs(log);\n      console.log(logUpdate)\n\n    } else {\n      alert(\"POS not updated!!\");\n    }\n    // setApiLoader(false);\n    // dispatch({type: \"API_LOADER\"});\n\n    \n    \n  }\n//*********************************************************************POS UPDATE ENDS******************************************* */\n  const reverseUpdate = async(index) => {\n  console.log(index);\n  console.log(tableData);\n  console.log(tableData[index]);\n  let item = tableData[index];\n  let data = {\n    invoice: invoice.slug,\n    itemNo: item.itemNo,\n  }\n  const result = await inventoryService.reverseUpdate(data);\n  console.log(result);\n  if(result.ok == 1){\n    setProductsInTable();\n  }else {\n    alert(\"Some error occured in updation\");\n  }\n    }\n\n  const linkManually = async(index) => {\n  console.log(index);\n  console.log(tableData);\n  console.log(tableData[index]);\n  let item = tableData[index];\n  console.log(item)\n  let data = {\n    invoice: invoice.slug,\n    itemNo: item.itemNo,\n  }\n  const result = await inventoryService.linkManually(data);\n  console.log(result);\n\n  //Update unit cost from excel.\n  // const skuData = {sku: item.posSku};\n  // const res = await inventoryService.fetchProductFromPosList(skuData);\n  // console.log(res); \n\n\n\n  //Log Generate.\n  const costChange = item.cp - item.cost;\n  const invError = item.cp >= 3*item.cost ? \"YES\" : \"\";\n  console.log(invError);\n  let logState = {\n    InvoiceDescription: item.description,\n    PosDescription: item.posName,\n    SKU: item.posSku,\n    Barcode: item.barcode,\n    InvoiceName: invoice.slug,\n    ItemCode: item.itemNo,\n    LinkingDate: todayDate,\n    PersonName: userEmail,\n    Size: item.size,\n    PosUnitCost: item.cost,\n    PosUnitPrice: item.sellingPrice,\n    // InvoiceNo: num,\n    // InvoiceDate: day,\n    Department: item.department,\n    InvUnitCost: item.cp,\n    CostIncrease: invError == \"YES\" ? \"\" : costChange > 0 ? \"YES\" : \"\",\n    CostDecrease: invError == \"YES\" ? \"\" : costChange < 0 ? \"YES\" : \"\",\n    CostSame: invError == \"YES\" ? \"\" : costChange == 0 ? \"YES\" : \"\",\n    InvError: invError\n  }\n  console.log(logState);\n  const logResult = await inventoryService.linkManuallyLog(logState);\n  console.log(logResult);\n  \n  \n  \n  \n  if(result.statusText == \"OK\"){\n    setProductsInTable();\n    // setProductsInTableNew(inv, num, day);\n  }else {\n    alert(\"Some error occured in updation\");\n    setProductsInTable();\n    // setProductsInTableNew(inv, num, day);\n  }\n\n    }\n\n  const updateUnits = async (index) => {\n    const item = tableData[index];\n    console.log(item);\n    const data = {\n      invoiceName: invoice.slug,\n      itemName: item.itemNo,\n      value: {\n        Quantity: item.pieces\n      }\n    }\n    inventoryService\n    .UpdateProductFields(data)\n    .then((res) => {\n      if (!res) {\n        throw new Error(\"Product not updated\")\n      }\n      console.log(res);\n      alert(\"Successfully updated fields\");\n      // setStateUpdated(true);\n    })\n    .catch((err) => {\n      console.log(err);\n      alert(\"Some error occuured in creating product\");\n    })\n    .finally(setProductsInTable());\n    // console.log(res);\n    }\n\n  const linkingCorrect = async (index) => {\n      console.log(index);\n      console.log(tableData);\n      console.log(tableData[index]);\n      let item = tableData[index];\n      console.log(item)\n      let data = {\n        invoice: invoice.slug,\n        itemNo: item.itemNo,\n      }\n      console.log(data);\n      const res = await inventoryService.linkingCorrect(data);\n      console.log(res);\n      if(res.statusText == \"OK\") {\n        \n        const costChange = item.cp - item.cost;\n        const invError = item.cp >= 3*item.cost ? \"YES\" : \"\";\n        \n        let logState = {\n          InvoiceDescription: item.description,\n          PosDescription: item.posName,\n          SKU: item.posSku,\n          Barcode: item.barcode,\n          InvoiceName: invoice.slug,\n          ItemCode: item.itemNo,\n          LinkingDate: todayDate,\n          PersonName: userEmail,\n          Size: item.size,\n          PosUnitCost: item.cost,\n          PosUnitPrice: item.sellingPrice,\n          // InvoiceNo: num,\n          // InvoiceDate: day,\n          Department: item.department,\n          InvUnitCost: item.cp,\n          CostIncrease: \"\",\n          CostDecrease: \"\",\n          CostSame:  \"\",\n          Unidentified: \"YES\",\n          InvError: invError  \n        }\n        const res = await inventoryService.UnidentifiedLog(logState);\n        console.log(res);\n        alert(\"SUCCESS\");\n        setProductsInTable();\n      }else {\n        alert(\"Some error occured\");\n        setProductsInTable();\n      }\n    }\n\n  // const reversePOSUpdate = async(index) => {\n  //   console.log(index);\n  //   console.log(tableData);\n  //   console.log(tableData[index]);\n  //   let item = tableData[index];\n  //   const result = await inventoryService.reversePOSUpdate(inv, num, day, item.itemNo);\n  //   if(result.ok == 1){\n  //     setProductsInTable();\n  //   }else {\n  //     alert(\"Some error occured in updation\");\n  //   }\n\n  // }\n\n  \n \n\n  const renderTableHeader = () => {\n  return header.map((key, index) => {\n    return (\n      <th\n        key={index}\n        style={{\n          position: \"sticky\",\n          top: \"70px\",\n          background: \"grey\",\n        }}\n      >\n        {key.toUpperCase()}\n      </th>\n    );\n  });\n    };\n\n    const renderTableData = () => {\n      // hicksvilleDropdown(HicksData);\n  \n      if (tableData) {\n        console.log(tableData);\n  \n        // console.log(showPosIndex);\n        // console.log(tableData[0]);\n        \n        let rows = tableData.map((element, index) => {\n          //fuzzwuzzSuggestion = getFuzzwuzzSuggestion(element.description);\n          // let isEmpty =\n          //   element.qty === \"\" ||\n          //   element.itemNo === \"\" ||\n          //   !element.pieces ||\n          //   isNaN(element.unitPrice) ||\n          //   element.unitPrice === \"\" ||\n          //   isNaN(element.extendedPrice);\n          let isEmpty = false;\n          // if (isEmpty && element.show) {\n          //   let emptyColumn = [...emptyColumnList, index];\n          //   emptyColumnList = [...new Set(emptyColumn)];\n          // }\n          // let isFree = element.qty != 0 && element.extendedPrice === \"0.00\";\n          // console.log(element.isUpdated);\n          console.log(element);\n          let margin = ((element.sellingPrice - element.cost)/ element.cost)*100;\n          \n  \n          return (\n            <tr\n              key={index}\n              className={isEmpty ? styles.red : null}\n              // style={element.show ? { opacity: \"1\" } : { opacity: \"0.4\" }}\n              style={element.linkingCorrect == \"false\" ? {backgroundColor: \"pink\"} : element.isUpdated === \"true\"  ? {backgroundColor: \"lightGreen\"}\n                : element.show ? { opacity: \"1\" } : { opacity: \"0.4\" }}\n            >\n              <td>{index + 1}</td>\n             \n              {/* <td>\n                <TextField\n                  type=\"tel\"\n                  value={element.details}\n                  id=\"outlined-secondary\"\n                  variant=\"outlined\"\n                  onChange={(e) => {\n                    handleChange(index, \"details\", e.target.value);\n                  }}\n                  style={{ width: 100 }}\n                />\n              </td> */}\n              <td className={styles.element}>\n                <TextField\n                  type=\"tel\"\n                  value={showPosIndex === index ? showPosState.barcode : element.barcode}\n                  id=\"outlined-secondary\"\n                  variant=\"outlined\"\n                  onChange={(e) => {\n                    handleChange(index, \"barcode\", e.target.value);\n                  }}\n                  style={{ width: 150 }}\n                />\n                <IconButton\n                  color=\"primary\"\n                  aria-label=\"add to review\"\n                  // onClick={() => addForReview(element, index)}\n                >\n                  <InfoOutlinedIcon\n                    style={element.isReviewed  === \"true\" ? {fill: \"red\"} : null}\n                  /> \n                  {/* <AddShoppingCartIcon\n                    style={\n                      reviewItems.includes(index)\n                        ? { backgroundColor: \"green\" }\n                        : null\n                    }\n                  /> */}\n                </IconButton>\n                <div className={element.isReviewed  === \"true\" ? styles.tooltipIsReviewed: styles.tooltip} >\n                  <p>POS Product- {showPosIndex === index ? showPosState.pos : element.posName }</p>\n                  {/* <p>UPC- {showPosIndex === index ? showPosState.barcode : element.barcode}</p> */}\n                  <p>Size- {showPosIndex === index ? showPosState.size : element.size}</p>\n                  <p>Department - {showPosIndex === index ? showPosState.department : element.department}</p>\n                  <p>Margin(%) - {margin.toFixed(2)}</p>\n                  <p>Unit Cost- {showPosIndex === index ? showPosState.unitCost : element.cost}</p> \n                  <p>Unit Price- {showPosIndex === index ? showPosState.unitPrice : element.sellingPrice}</p>\n                  {/* <p>Price- {showPosIndex === index ? showPosState.price : element.price}</p> */}\n                  <div >\n                  <button onClick={() => {\n                          if(notFounds === \"true\"){\n                            toggleModal(\"notfounds\");\n                          }else{\n                            updateItem(invoice.slug, (parseFloat(element.unitPrice) / parseInt(element.pieces)).toFixed(2))\n                          }\n                        } } \n                    disabled={showPosIndex === index ? false : true}\n                    style={{backgroundColor: \"green\",\n                    border: \"none\",\n                    color: \"white\",\n                    padding: \"4px 8px\",\n                    textAlign: \"center\",\n                    textDecoration: \"none\",\n                    display: \"inline-block\",\n                    fontSize: \"14px\",\n                    align: \"left\"}} >\n                    Update Item\n                  </button>\n                  </div> \n                  <br />\n                  <div>\n                  <button onClick={()=> linkManually(index)} \n                    // disabled={showPosIndex === index ? false : true}\n                    style={{backgroundColor: \"blue\",\n                    border: \"none\",\n                    color: \"white\",\n                    padding: \"4px 8px\",\n                    textAlign: \"center\",\n                    textDecoration: \"none\",\n                    display: \"inline-block\",\n                    fontSize: \"14px\",\n                    align: \"left\"}} >\n                    Link Manually\n                  </button>\n                  </div>\n                  <br />\n                  <div>\n                  <button onClick={()=> reverseUpdate(index)} \n                    // disabled={showPosIndex === index ? false : true}\n                    style={{backgroundColor: \"red\",\n                    border: \"none\",\n                    color: \"white\",\n                    padding: \"4px 8px\",\n                    textAlign: \"center\",\n                    textDecoration: \"none\",\n                    display: \"inline-block\",\n                    fontSize: \"14px\",\n                    align: \"left\"}} >\n                    Reverse Update\n                  </button>\n                  </div>\n                </div>\n              </td>\n              <td>{showPosIndex === index ? showPosState.posSku : element.posSku}</td>\n              <td>\n                <TextField\n                  type=\"tel\"\n                  value={element.qty}\n                  id=\"outlined-secondary\"\n                  variant=\"outlined\"\n                  onChange={(e) => {\n                    handleChange(index, \"qty\", e.target.value);\n                  }}\n                  style={{ width: 100 }}\n                />\n              </td>\n              <td>{element.cp}</td>\n              <td>\n                <Autocomplete\n                  value={element.itemNo}\n                  onChange={(event, newValue) => {\n                    if (newValue) {\n                      handleChange(index, \"itemNo\", newValue);\n                    }\n                  }}\n                  id=\"combo-box\"\n                  options={itemNoDropdown}\n                  getOptionLabel={(option) => option}\n                  style={{ width: 200 }}\n                  renderInput={(params) => (\n                    <TextField {...params} variant=\"outlined\" />\n                  )}\n                />\n              </td>\n              <td>\n              {/* {dropdownIndex == index ? fetchingOptions ? <Loading type=\"ThreeDots\" height={40} width={40} /> : null : null} */}\n                <Autocomplete\n                  value={showPosIndex  === index ? showPosState.item : element.itemNo }\n                  loading={true}\n                  onInputChange={(event, value) => {\n                    console.log(\"ON INPUT CHANGE\");\n                    // event.toLowerCase();\n                    // value.toLowerCase();\n                    // console.log(event.target.value);\n                    // console.log(value);\n                    // searchDropdown(event, value);\n                    // setOptions([]);\n                    if(event != null){\n                      setTimeout(()=> {\n                        hicksvilleDropdownNew(event, value, index);\n\n                      }, 1500);\n                    }\n                    // hicksvilleDropdownNew(event, value, index);\n                  }}\n                  onChange={(event, newValue) => {\n                    // console.log(event.target.value);\n                    // console.log(newValue);\n                    if (newValue) {\n                      let newState = { ...showPosState };\n                      console.log(newValue);\n                      // newState.item = newValue.name;\n                      newState.item = element.itemNo\n                      newState.description = newValue.name;\n                      newState.barcode = newValue.upc;\n                      newState.pos = newValue.name;\n                      newState.posSku = newValue.sku;\n                      newState.size = newValue.size;\n                      newState.department = newValue.department;\n                      newState.unitCost = newValue.cost;\n                      newState.unitPrice = newValue.price;\n                      // setShowPosState(newState);\n                      dispatch({type: \"SET_POS_STATE\", data: newState})\n                      setShowPosIndex(index);\n                      setUnitCost(newValue.cost);\n                      // setStateUpdated(\"\");\n                      if(isEmpty){\n                        // setNotFounds(\"true\");\n                        dispatch({type: \"NOT_FOUNDS\", data: \"true\"})\n\n                        setRedState(\"false\");\n                      }\n                      //setDisabled(false);\n                      //updateOnHoverDetails(index);\n                      //setShowPosIndex(index);\n                      // console.log(newValue);\n                      console.log(newState);\n                      //console.log(showPosState);\n                      \n                    }\n                  }}\n                  id=\"combo-box\"\n                  // options={element.fuzzSuggestion}\n                  options={options}\n                  // getOptionLabel={option => option.label}\n                  getOptionLabel={(option) => option.label ?? element.itemNo}\n                  // getOptionLabel={(option) => dropdownLoader ? <Spinner /> : option.label}\n                  style={{ width: 400 }}\n                  renderInput={(params) => (\n                    <TextField {...params} variant=\"outlined\" />\n                  )}\n                />\n              </td>\n              \n              <td>{element.description}</td>\n              {/* <td>{element.pieces}</td> */}\n              <td>\n                <TextField\n                  type=\"tel\"\n                  value={element.pieces}\n                  variant=\"outlined\"\n                  onChange={(e) => {\n                    handleChange(index, \"pieces\", e.target.value);\n                  }}\n                  style={{ width: 100 }}\n                />\n                <button onClick={() => {updateUnits(index)}} style={{\n                  backgroundColor: \"#008CBA\",\n                  border: \"none\",\n                  color: \"white\",\n                  padding: \"5px 16px\",\n                  textAlign: \"center\",\n                  textDecoration: \"none\",\n                  display: \"inline-block\",\n                  fontSize: \"10px\",\n                  margin: \"4px 2px\",\n                  cursor: \"pointer\",\n                }}>Update Units</button> \n              </td>\n              <td>\n                <TextField\n                  type=\"tel\"\n                  value={element.unitPrice}\n                  variant=\"outlined\"\n                  onChange={(e) => {\n                    handleChange(index, \"unitPrice\", e.target.value);\n                  }}\n                  style={\n                    element.priceIncrease === 1\n                      ? { backgroundColor: \"#1a8cff\", width: 100 }\n                      : element.priceIncrease === -1\n                      ? { backgroundColor: \"#ffb31a\", width: 100 }\n                      : { width: 100 }\n                    // showPosIndex === index ? costInc===\"true\" ? { backgroundColor: \"#1a8cff\", width: 100 } : costDec===\"true\" ? { backgroundColor: \"#ffb31a\", width: 100 } : {width: 100}\n                    //   : element.priceIncrease === 1 \n                    //       ? { backgroundColor: \"#1a8cff\", width: 100 }\n                    //       : element.priceIncrease === -1 \n                    //       ? { backgroundColor: \"#ffb31a\", width: 100 }\n                    //       : { width: 100 }\n                  }\n                />\n              </td>\n              <td>{element.extendedPrice}</td>\n              \n              <td>\n                <TextField\n                  type=\"tel\"\n                  value={element.sp}\n                  variant=\"outlined\"\n                  onChange={(e) => {\n                    handleChange(index, \"sp\", e.target.value);\n                  }}\n                  style={{ width: 100 }}\n                />\n              </td>\n              <td>{element.markup}</td>\n              {/* <td>\n                <Checkbox\n                  checked={!element.show}\n                  onChange={(e) => handleChange(index, \"show\", e.target.value)}\n                  inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                />\n              </td> */}\n\n                <td className={styles.element}>\n                <IconButton onClick={() => {\n                  toggleModal(\"details\");\n                  setDetailsIndex(index);\n                  }}>\n                    <AddCircleIcon />\n                  </IconButton>\n                  <div className={styles.tooltip}>\n                    <p>Details- {element.details}</p>\n                  </div>\n                  \n              </td>\n\n\n              <td>\n            {/* <Button\n              text={element.show ? \"Delete\" : \"Undo\"}\n              color=\"btn btn-info\"\n              type=\"submit\"\n              onClick={() => deleteRow(index)}\n            /> */}\n          </td>\n              <td>\n              <Button \n                  text=\"Update POS\"\n                  color=\"btn btn-info\"\n                  type=\"submit\"\n                  onClick={() => pushSingleItemToInventory(index)}\n                  style={{ width: 120 }}\n                />\n                    \n              </td>\n              {/* <td>\n              <Button \n                  text=\"Reverse POS\"\n                  type=\"submit\"\n                  onClick={() => reversePOSUpdate(index)}\n                  style={{ width: 120, backgroundColor: \"red\", color: \"white\" }}\n                />\n                    \n              </td> */}\n              <td className={styles.element}>\n                <IconButton onClick={() => linkingCorrect(index)}>\n                  <Cancel/>\n                </IconButton>\n              </td>\n              <td>{index + 1}</td>\n              {/* <td>\n                <Button\n                  text={element.show ? \"Delete\" : \"Undo\"}\n                  color=\"btn btn-info\"\n                  type=\"submit\"\n                  onClick={() => deleteRow(index)}\n                />\n              </td> */}\n            </tr>\n          );\n        });\n        return (\n          <div style={{ marginTop: \"35px\" }}>\n            <table className=\"table table-hover table-responsive-sm\">\n              <tbody>\n                <tr>{renderTableHeader()}</tr>\n                {rows}\n                <tr>\n                  <td>\n                    {/* <Button\n                      text=\"Add cell\"\n                      color=\"btn btn-info\"\n                      onClick={addRow}\n                    /> */}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <div className={styles.divRow}>\n              {/* <Button\n                text=\"Update Inventory\"\n                color=\"btn btn-info\"\n                type=\"submit\"\n                onClick={pushInventoryDetails}\n              /> */}\n              {/* <Button\n                text=\"Save Invoice Data\"\n                color=\"btn btn-info\"\n                type=\"submit\"\n                onClick={toggleModal}\n              /> */}\n              {/* <Button\n                text=\"Re upload\"\n                color=\"btn btn-info\"\n                type=\"submit\"\n                onClick={() => window.location.reload()}\n              /> */}\n            </div>\n          </div>\n        );\n      }\n  };\n\n  const updateItem = async () => {\n    console.log(invoice);\n    const data = {\n  \n      invoiceName: invoice.slug,\n      itemName: itemName,\n      value: {\n        isReviewed: \"true\",\n        Item: itemName,\n        Quantity: unitsInCase,\n        Description: posProduct.Description,\n        Price: caseCost,\n        POS: posProduct.POS,\n        Barcode: posProduct.Barcode,\n        PosSKU: posProduct.PosSKU,\n        Size: posProduct.Size,\n        Department: posProduct.Department,\n        SellerCost: newUnitCost,\n        SellingPrice: newUnitPrice,\n      }\n    }\n    console.log(data)\n\n    const result = await inventoryService.UpdateProductFields(data);\n    console.log(result);\n\n\n  }\n\n  const getItems = async () => {\n    // const data = {\n    //   invoice: invoice.slug,\n    // }\n    const data = invoice;\n    console.log(data);\n    const res = await inventoryService.getItemForHandwrittenInvoice(data);\n    console.log(res);\n    return res;\n  }\n\n  const toggleModal = () => {\n    console.log(posProduct);\n    setShowModal(!showModal);\n  };\n\n  const handleChange = (key, val) => {\n    setPosProduct({\n      ...posProduct,\n      [key]: val,\n    });\n  };\n\n  const addProduct = () => {\n    setShowModal(!showModal);\n    console.log(posProduct);\n    const data = {\n      InvoiceName: invoice.slug,\n      ItemName: posProduct.itemName,\n      POS: posProduct.pos, \n      Barcode: posProduct.barcode, \n      PosSKU: posProduct.posSku, \n      Size: posProduct.size, \n      Department: posProduct.department,\n      SellerCost: posProduct.unitCost,\n      SellingPrice: posProduct.unitPrice,\n      NewUnitCost: posProduct.newUnitCost,\n      NewUnitPrice: posProduct.newUnitPrice\n    };\n    \n    inventoryService\n      .handwrittenLogs(data)\n      .then((res) => {\n        if (!res) {\n          throw new Error(\"Product not created\")\n        }\n        console.log(res);\n        alert(\"Successfully updated fields\");\n      })\n      .then()\n      .catch((err) => {\n        console.log(err);\n        alert(\"Some error occuured in creating product\");\n      })\n      .finally();\n  };\n\n  const hicksvilleDropdownNew = async (event, value, index) => {\n    console.log(event);\n    console.log(value);\n    console.log(value.length);\n    setOptions([]);\n\n    if(!isNaN(value) && value.length>0 ){\n      console.log(\"number\");\n      const res = await inventoryService.getHicksvilleData(value.toUpperCase());\n      const data = res;\n      console.log(data);\n\n\n      let productsString = \"\";\n      for(let i=0;i<data.length;i++){\n        productsString = productsString + data[i].name + '$$$';\n      } \n      let result = productsString.split(\"$$$\");\n    \n      let newData = [];\n      for (let i = 0; i < result.length; i++) {\n        let s = result[i].split(\"@@@\");\n        let obj =\n          {\n            sku: s[1] === \"nan\" ? null : s[1],\n            upc: s[0] === \"nan\" ? null : s[0],\n            altupc1: s[14] === \"nan\" ? null : s[14],\n            altupc2: s[15] === \"nan\" ? null : s[15],\n            name: s[2] === \"nan\" ? null : s[2],\n            vintage: s[8] === \"nan\" ? null : s[8],\n            totalQty: s[13] === \"nan\" ? null : s[13],\n            cost: s[4] === \"nan\" ? null : s[4],\n            pricea: s[10] === \"nan\" ? null : s[10],\n            priceb: s[11] === \"nan\" ? null : s[11],\n            pricec: s[12] === \"nan\" ? null : s[12],\n            department: s[9] === \"nan\" ? null : s[9],\n            salePrice: s[5] === \"nan\" ? null : s[5],\n            size: s[6] === \"nan\" ? null : s[6],\n            pack: s[7] === \"nan\" ? null : s[7],\n            price: s[3] === \"nan\" ? null : s[3],\n          }\n        newData.push(obj);\n      }\n      const filter = newData.map((element) => {\n        let obj = { ...element };\n        obj.label = `${element.name}--${element.price}--${element.upc}--${element.size}--${element.cost}--${element.sku}`;\n        //console.log(obj);\n        return obj; \n      });\n      setOptions(filter);\n\n    }\n\n    if(isNaN(value) && value != null && value.length>=4){\n      console.log(\"string\");\n      // setDropdownLoader(true);\n      // setFetchingOptions(true);\n      const res = await inventoryService.getHicksvilleData(value.toUpperCase());\n      const data = res;\n      console.log(data);\n\n\n      let productsString = \"\";\n      for(let i=0;i<data.length;i++){\n        productsString = productsString + data[i].name + '$$$';\n      } \n      let result = productsString.split(\"$$$\");\n    \n      let newData = [];\n      for (let i = 0; i < result.length; i++) {\n        let s = result[i].split(\"@@@\");\n        let obj =\n          {\n            sku: s[1] === \"nan\" ? null : s[1],\n            upc: s[0] === \"nan\" ? null : s[0],\n            altupc1: s[14] === \"nan\" ? null : s[14],\n            altupc2: s[15] === \"nan\" ? null : s[15],\n            name: s[2] === \"nan\" ? null : s[2],\n            vintage: s[8] === \"nan\" ? null : s[8],\n            totalQty: s[13] === \"nan\" ? null : s[13],\n            cost: s[4] === \"nan\" ? null : s[4],\n            pricea: s[10] === \"nan\" ? null : s[10],\n            priceb: s[11] === \"nan\" ? null : s[11],\n            pricec: s[12] === \"nan\" ? null : s[12],\n            department: s[9] === \"nan\" ? null : s[9],\n            salePrice: s[5] === \"nan\" ? null : s[5],\n            size: s[6] === \"nan\" ? null : s[6],\n            pack: s[7] === \"nan\" ? null : s[7],\n            price: s[3] === \"nan\" ? null : s[3],\n          }\n        newData.push(obj);\n      }\n      const filter = newData.map((element) => {\n        let obj = { ...element };\n        if(element.itemNo != \"undefined\"){\n        obj.label = `${element.name}--${element.price}--${element.upc}--${element.size}--${element.cost}--${element.sku}`;\n        }\n        //console.log(obj);\n        return obj; \n      });\n      setOptions(filter);\n    }\n  }\n\n  const setProductsInTable = () => {\n    // setLoader(true);\n    dispatch({type: \"LOADER\"});\n    async function invoiceData() {\n      const products = await tesseractService.GetProductDetails(\n        invoice.slug\n        // inv\n      );\n      console.log(products);\n      //console.log(props.selectedInvoice);\n      return products;\n    }\n      // invoiceData()\n      getItems()  \n      .then((products) => {\n          /**post processing the table data after returning from filter */\n          // function convertToUpperCase(obj) {\n          //   let newObj = {};\n          //   for (let key in obj) {\n          //     newObj[key.toUpperCase()] = obj[key];\n          //   }\n          //   return newObj;\n          // }\n          // products = convertToUpperCase(products);\n          console.log(products);\n          // scanInvoiceData.InvoiceData = ocrData;\n        //   setOcrProducts(ocrData);\n          \n        //   console.log(scanInvoiceData);\n          // scanInvoiceData.InvoiceData = ocrData;\n          //console.log(resScnInvDta);\n          //console.log(\"OCERDATa\", ocrData);\n          //console.log(products);\n          //console.log(scanInvoiceData);\n          let table = products.map((row) => {\n            /**For invoices which dont have item no, set description as item no */\n            if (row.itemNo === undefined) {\n              // row.itemNo = row.description.trim().toUpperCase();\n              // row.itemNo = row.Description.trim().toUpperCase();\n              row.itemNo = row.Description.trim();\n            }\n            // row.itemNo = row.itemNo.toString().toUpperCase();\n            // row.itemNo = row.Item.toString().toUpperCase();\n            row.itemNo = row.Item.toString();\n\n            row.description = row.Description;\n              // products[row.itemNo] !== undefined\n              //   ? products[row.itemNo].Description\n              //   : row.description;\n            row.pieces = row.Quantity; \n              // products[row.Item] !== undefined\n              //   ? products[row.Item].Quantity\n              //   : 0;\n            row.sku = row.sku\n              // products[row.Item] !== undefined\n              //   ? products[row.Item].sku\n              //   : \"\";\n            row.barcode = row.Barcode;\n              // products[row.Item] !== undefined\n              //   ? products[row.Item].Barcode\n              //   : \"\";\n            row.posName = row.POS\n              // products[row.Item] !== undefined\n              //   ? products[row.Item].POS\n              //   : \"\";\n            row.markup = 0;\n            row.show = true;\n            row.posSku = row.PosSKU\n              // products[row.Item] !== undefined\n              //   ? products[row.Item].PosSKU\n              //   : \"\";\n            row.isReviewed = row.isReviewed \n              // products[row.Item] !== undefined ? products[row.Item].isReviewed : \"\" ;\n            row.size = row.Size\n              // products[row.Item] !== undefined ? products[row.Item].Size : \"\";\n            row.department = row.Department \n              // products[row.Item] !== undefined ? products[row.Item].Department : \"\";\n            row.cost = row.SellerCost \n              // products[row.Item] !== undefined ? products[row.Item].SellerCost : \"\";\n            row.sellingPrice = row.SellingPrice \n              // products[row.Item] !== undefined ? products[row.Item].SellingPrice : \"\";\n            row.price = row.Price \n              // products[row.Item] !== undefined ? products[row.Item].Price : \"\";\n            row.details = row.Details \n              // products[row.Item] !== undefined ? products[row.Item].Details : \"\";\n            row.linkingCorrect = row.linkingCorrect; \n              // products[row.Item] !== undefined ? products[row.Item].LinkingCorrect : \"\";\n            // row.margin = products[row.Item] !== undefined ? ((products[row.Item].SellingPrice - products[row.Item].SellerCost)/ products[row.Item].SellerCost)*100 : \"\";\n            row.margin = row.Item !== undefined ? ((row.SellingPrice - row.SellerCost)/ row.SellerCost)*100 : \"\";\n            //console.log(\"department-\" + row.department + \"  cost-\" + row.cost + \"  price\" + row.sellingPrice);\n            let sp = 0;\n            let cp = 0;\n            // const barcode = products.Barcode\n            // if (parseInt(row.pieces)) {\n            //   sp = (parseFloat(row.unitPrice) / parseInt(row.pieces)).toFixed(\n            //     2\n            //   );\n            //   cp = sp;\n            // }\n            row.cp = \"\";\n            row.sp = \"\";\n            if (row.Item !== undefined) {\n              if (sp > row.SellerCost) {\n                row[\"priceIncrease\"] = 1;\n              } else if (sp < +row.SellerCost) {\n                row[\"priceIncrease\"] = -1;\n              } else if (sp == +row.SellerCost) {\n                row[\"priceIncrease\"] = 0;\n              }\n            } else {\n              row[\"priceIncrease\"] = 0;\n            }\n            // if (products[row.Item] !== undefined) {\n            //   if (sp > +products[row.Item].SellerCost) {\n            //     row[\"priceIncrease\"] = 1;\n            //   } else if (sp < +products[row.Item].SellerCost) {\n            //     row[\"priceIncrease\"] = -1;\n            //   } else if (sp == +products[row.Item].SellerCost) {\n            //     row[\"priceIncrease\"] = 0;\n            //   }\n            // } else {\n            //   row[\"priceIncrease\"] = 0;\n            // }\n            row.qty = \"\";\n            row.extendedPrice = \"\";\n            /**filter out the rows for which qty shipped & extendedPrice is zero */\n            if (row.qty == \"0\" && row.extendedPrice === \"0.00\") {\n              return null;\n            }\n            /**Calulate qty for which qty is not read/scanned by textract */\n            // if (!row.qty) {\n            //   row.qty = (\n            //     parseFloat(row.extendedPrice) / parseFloat(row.unitPrice)\n            //   ).toFixed(0);\n            // }\n          return { ...row, sp, cp };\n          });\n          // setLoader(false);\n          dispatch({type: \"LOADER\"});\n\n          setTableData(table.filter((data) => data !== null));\n          setItemNoDropdown(Object.keys(products));\n          setProductDetails(products);\n        })\n        .catch((err) => {\n          console.log(\"error on mapping ocrdata\", err)\n          // setLoader(false);\n          dispatch({type: \"LOADER\"});\n        });\n    \n  }\n\n  useEffect(() => {\n\n    const curDate = new Date();\n    console.log(curDate);\n    let date = curDate.getFullYear()+ \"-\" + (curDate.getMonth()+1) +\"-\"+ curDate.getDate();\n    console.log(date);\n    setTodayDate(date);\n\n    firebase.auth().onAuthStateChanged(function(user) {\n      if (user) {\n        // setUserEmail(user.email);\n        setUserEmail(user.email);\n        console.log('This is the user: ', user)\n        console.log('This is the user: ', user.email);\n      } else {\n        // No user is signed in.\n        console.log('There is no logged in user');\n      }\n    });\n    \n\n  },[]);\n    \n  return (\n\n      <div className=\"container-fluid\">\n          <Paper className={classes.root}>\n              <Grid style={{ display: \"flex\" }}>\n                  {/* <ul>\n                  <li> */}\n                  <Autocomplete\n                      value={invoice}\n                      onChange={(event, newValue) => {\n                          console.log(\"new value\", newValue)\n                          if (newValue) {\n                            console.log(newValue);\n                          // setInvoice(newValue);\n                          // setTimeout(()=> {}, 1000);\n                          invoice = newValue;\n                          console.log(invoice);\n                          setProductsInTable();\n                          }\n                          // getInvoices(newValue);\n                      }}\n                      id=\"combo-box\"\n                      options={dropdownOptions}\n                      getOptionLabel={(option) => option.value}\n                      style={{ width: 200 }}\n                      autoHighlight\n                      renderInput={(params) => (\n                          <TextField {...params} label={dropdownLabel} variant=\"outlined\" />\n                      )}\n                  />\n                {/* </li> */}\n                <br />\n\n                {/* <li> */}\n                <TextField\n                      label=\"Item Name\"\n                      variant=\"outlined\"\n                      value={posProduct.Item}\n                      onChange={(event) => {\n                        handleChange(\"Item\", event.target.value);\n                        setItemName(event.target.value);\n                        }\n                      }\n                  />\n                {/* </li> */}\n                <br />\n              {/* <li> */}\n              <Autocomplete\n                  value={posProduct.POS}\n                  loading={true}\n                  onInputChange={(event, value) => {\n                    console.log(\"ON INPUT CHANGE\");\n                    // event.toLowerCase();\n                    // value.toLowerCase();\n                    // console.log(event.target.value);\n                    // console.log(value);\n                    // searchDropdown(event, value);\n                    // setOptions([]);\n                    if(event != null){\n                      setTimeout(()=> {\n                        hicksvilleDropdownNew(event, value);\n\n                      }, 1500);\n                    }\n                    // hicksvilleDropdownNew(event, value, index);\n                  }}\n                  onChange={(event, newValue) => {\n                    // console.log(event.target.value);\n                    // console.log(newValue);\n                    if (newValue) {\n                      let newState = { ...posProduct };\n                      console.log(newValue);\n                      newState.Item = itemName;\n                      newState.isReviewed = \"true\";\n                      // newState.item = element.itemNo\n                      newState.Description = newValue.name;\n                      newState.Barcode = newValue.upc;\n                      newState.POS = newValue.name;\n                      newState.PosSKU = newValue.sku;\n                      newState.Size = newValue.size;\n                      newState.Department = newValue.department;\n                      newState.SellerCost = newValue.cost;\n                      newState.SellingPrice = newValue.price;\n                      // setShowPosState(newState);\n                      // setShowPosIndex(index);\n                      // setUnitCost(newValue.cost);\n                      // setStateUpdated(\"\");\n\n                      setPosProduct(newState);\n                      singleItemData = [];\n\n\n\n                      //setDisabled(false);\n                      //updateOnHoverDetails(index);\n                      //setShowPosIndex(index);\n                      // console.log(newValue);\n                      console.log(newState);\n                      //console.log(showPosState);\n                      // toggleModal();\n                      \n                    }\n                  }}\n                  id=\"combo-box\"\n                  // options={element.fuzzSuggestion}\n                  options={options}\n                  // getOptionLabel={option => option.label}\n                  getOptionLabel={(option) => option.label ?? posProduct.item}\n                  // getOptionLabel={(option) => dropdownLoader ? <Spinner /> : option.label}\n                  style={{ width: 400 }}\n                  renderInput={(params) => (\n                    <TextField {...params} label=\"POS Product\" variant=\"outlined\" />\n                  )}\n                />\n                <button  style={{backgroundColor: \"green\",\n                      height: \"50px\",\n                      border: \"none\",\n                      color: \"white\",\n                      padding: \"4px 8px\",\n                      textAlign: \"center\",\n                      textDecoration: \"none\",\n                      display: \"inline-block\",\n                      fontSize: \"14px\",\n                      align: \"left\",\n                      marginLeft: 20}}\n                      // onClick={setProductsInTable}\n                      onClick={toggleModal}\n                      >\n                          Add New Product\n                </button>\n                {/* </li >\n                </ul> */}\n                  </Grid>\n          </Paper>\n          <p>Invoice-- {invoice}</p>\n          \n\n          <div>{renderTableData()}</div>\n\n\n\n          <CModal show={showModal} onClose={toggleModal}>\n      <CModalHeader closeButton>{modalLabel}</CModalHeader>\n      <CModalBody>\n        <CContainer fluid>\n          <CRow>\n            <CCol sm=\"12\">\n              <CRow>\n                <CCol sm=\"6\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"type\">Barcode</CLabel>\n                    <CInput \n                      disabled\n                      type=\"text\"\n                      name=\"type\"\n                      value={posProduct.Barcode}\n                      onChange={(event) =>\n                        handleChange(\"Barcode\", event.target.value)\n                      }\n                    />\n                  </CFormGroup>\n                </CCol>\n                <CCol sm=\"6\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"short_description\">POS SKU</CLabel>\n                    <CInput\n                      disabled\n                      type=\"text\"\n                      name=\"short_description\"\n                      value={posProduct.PosSKU}\n                      onChange={(event) =>\n                        handleChange(\"PosSKU\", event.target.value)\n                      }\n                    />\n                  </CFormGroup>\n                </CCol>\n              </CRow>\n              <CFormGroup>\n                <CLabel htmlFor=\"regular_price\">POS Name</CLabel>\n                <CInput\n                  disabled\n                  type=\"text\"\n                  name=\"regular_price\"\n                  value={posProduct.POS}\n                  onChange={(event) =>\n                    handleChange(\"POS\", event.target.value)\n                  }\n                />\n              </CFormGroup>\n              <CFormGroup>\n                <CLabel htmlFor=\"size\">POS Size</CLabel>\n                <CInput\n                  disabled\n                  type=\"text\"\n                  name=\"size\"\n                  value={posProduct.Size}\n                  onChange={(event) =>\n                    handleChange(\"Size\", event.target.value)\n                  }\n                />\n              </CFormGroup>\n              <CFormGroup>\n                <CLabel htmlFor=\"department\">Department</CLabel>\n                <CInput\n                  disabled\n                  type=\"text\"\n                  name=\"department\"\n                  value={posProduct.Department}\n                  onChange={(event) =>\n                    handleChange(\"Department\", event.target.value)\n                  }\n                />\n              </CFormGroup>\n              <CFormGroup>\n                <CLabel htmlFor=\"unitsInCase\">Units In Case</CLabel>\n                <CInput\n                  type=\"text\"\n                  name=\"unitsInCase\"\n                  value={unitsInCase}\n                  onChange={(event) =>\n                    setUnitsInCase(event.target.value)\n                  }\n                />\n              </CFormGroup>\n              <CFormGroup>\n                <CLabel htmlFor=\"caseCost\">Case Cost</CLabel>\n                <CInput\n                  type=\"text\"\n                  name=\"caseCost\"\n                  value={caseCost}\n                  onChange={(event) =>\n                    setCaseCost(event.target.value)\n                  }\n                />\n              </CFormGroup>\n              <CFormGroup>\n                <CLabel htmlFor=\"unitPrice\">POS Unit Price</CLabel>\n                <CInput\n                  disabled\n                  type=\"text\"\n                  name=\"unitPrice\"\n                  value={posProduct.SellingPrice}\n                  onChange={(event) =>\n                    handleChange(\"SellingPrice\", event.target.value)\n                  }\n                />\n              </CFormGroup>\n              <CFormGroup>\n                <CLabel htmlFor=\"unitCost\">POS Unit Cost</CLabel>\n                <CInput\n                  disabled\n                  type=\"text\"\n                  name=\"unitCost\"\n                  value={posProduct.SellerCost}\n                  onChange={(event) =>\n                    handleChange(\"SellerCost\", event.target.value)\n                  }\n                />\n              </CFormGroup>\n              <CFormGroup>\n                <CLabel htmlFor=\"newUnitCost\">New POS Unit Cost</CLabel>\n                <CInput\n                  type=\"text\"\n                  name=\"newUnitCost\"\n                  value={newUnitCost}\n                  onChange={(event) =>\n                    setNewUnitCost(event.target.value)\n                  }\n                />\n              </CFormGroup>\n              <CFormGroup>\n                <CLabel htmlFor=\"newUnitPrice\">New POS Unit Price</CLabel>\n                <CInput\n                  type=\"text\"\n                  name=\"newUnitPrice\"\n                  value={newUnitPrice}\n                  onChange={(event) =>\n                    setNewUnitPrice(event.target.value)\n                  }\n                />\n              </CFormGroup>\n            </CCol>\n          </CRow>\n        </CContainer>\n      </CModalBody>\n      <CModalFooter>\n        {/* <CButton color=\"primary\" onClick={() => addProduct()}> */}\n        <CButton color=\"primary\" onClick={() => updateItem()}>\n          Add\n        </CButton>{\" \"}\n        <CButton color=\"secondary\" onClick={toggleModal}>\n          Cancel\n        </CButton>\n      </CModalFooter>\n    </CModal>\n      </div>    \n  )\n}\n\nexport default HandwrittenInvoice;","/Users/sahil/Desktop/icms/inventory-management/client/src/UI/Spinner/Spinner.js",[],"/Users/sahil/Desktop/icms/inventory-management/client/src/containers/Auth/Logout/Logout.js",[],"/Users/sahil/Desktop/icms/inventory-management/client/src/firebase.js",[],"/Users/sahil/Desktop/icms/inventory-management/client/src/UI/Button.js",[],"/Users/sahil/Desktop/icms/inventory-management/client/src/UI/LoginPage.js",[],"/Users/sahil/Desktop/icms/inventory-management/client/src/components/DisplayData/DisplayData.js",["315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { TesseractService } from \"../../services/TesseractService\";\nimport Button from \"../../UI/Button\";\nimport { chooseFilter } from \"../../utils/filterData\";\nimport UpdateInventory from \"../Update/UpdateInventory\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport styles from \"./DisplayData.module.css\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\nimport { chetak } from \"../../utils/invoice-filters/chetak\";\nimport firebase from \"../../firebase\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\nimport { InventoryService } from \"../../services/InventoryService\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n \nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport { Api } from \"../../services/Api\";\nimport HicksData from \"./Hicksville.json\";\nimport { CContainer, CModalHeader, CCol, CFormGroup, CInput, CButton, CLabel, CModal, CModalBody, CModalFooter, CRow } from \"@coreui/react\";\nimport { lightBlue } from \"@material-ui/core/colors\";\n\nlet emptyColumnList = [];\nconst DisplayData = (props) => {\n  const api = new Api();\n  const [tableData, setTableData] = useState([]);\n  const [emptyColumn, setEmptyColumn] = useState([]);\n  const [productDetails, setProductDetails] = useState([]);\n  const [pushToInventory, setPushToInventory] = useState(false);\n  const [inventoryData, setInventoryData] = useState([]);\n  const [itemNoDropdown, setItemNoDropdown] = useState([]);\n  const [loader, setLoader] = useState(true);\n  const [reviewItems, setReviewItems] = useState([]);\n  const tesseractService = new TesseractService();\n\n  const header = [\n    \"Serial No.\",\n    \"Barcode\",\n    \"POS SKU\",\n    \"Qty Shipped\",\n    \"ITEM NO\",\n    \"Link Product\",\n    \n    \"DESCRIPTION\",\n    \"Units in  Case\",\n    \"Case cost\",\n    \"Extended Price\",\n    \"Unit Cost \",\n    \"Unit Price\",\n    \"Mark up (%)\",\n    \"Tick to delete\",\n    \"Update POS\",\n    \"Serial No.(2)\"\n  ];\n\n  //added by Parikshit.\n  const inventoryService = new InventoryService();\n  let hicksvilleData = [];\n  let saveInvoiceFlag  = 1;\n  const [showPosIndex, setShowPosIndex] = useState(-1);\n  const [disabled, setDisabled] = useState(true);\n  const [showModal, setShowModal] = useState(false);\n  const [invoiceNo, setInvoiceNo] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [ocrProducts, setOcrProducts] = useState([]); \n  const [invDate, setInvDate] = useState(\"\");\n  const [invNo, setInvNo] = useState(\"\");\n  const [invPage, setInvPage] = useState(\"\");\n  const [stateUpdated, setStateUpdated] = useState(\"false\");\n  const [costInc, setCostInc] = useState(\"false\");\n  const [costDec, setCostDec] = useState(\"false\");\n  const [unitCost, setUnitCost] = useState(\"\");\n  const [isUpdated, setIsUpdated] = useState(\"false\");\n  const [updateIndex, setUpdateIndex] = useState(-1);\n  const [notFounds, setNotFounds] = useState(\"false\");\n  const [unitsInCase, setUnitsInCase] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [redState, setRedState] = useState(\"false\");\n  const selectedInvoice = props.selectedInvoice;\n  let showModal1 = false; \n  let posProducts = []\n  let wooComProducts = [];\n  let singleItemData = [];\n\n  \n  const scanInvoiceData = \n    {\n      InvoiceName: props.selectedInvoice,\n      InvoiceDate: \"\",\n      InvoiceNumber: \"\",\n      InvoicePage: \"\",\n      InvoiceData: [],\n      SavedDate: \"\",\n      SavedInvoiceNo: \"\"\n    }\n    \n  \n  const [showPosState, setShowPosState] = useState({\n    item: \"\",\n    quantity: \"\",\n    description: \"\",\n    price: \"\",\n    pos: \"\",\n    barcode: \"\",\n    posSku: \"\",\n    invoice: \"\",\n    size: \"\",\n    department: \"\",\n    unitCost: \"\",\n    unitPrice: \"\",\n  });\n  let modalBody;\n\n  // added by parikshit.\n  const saveInvoiceData = async () => {\n    toggleModal();\n    // console.log(invDate);\n    // console.log(invNo);\n    // console.log(invPage);\n    // console.log(ocrProducts);\n    ocrProducts.map((product) => { product.isUpdated = \"false\"});\n    console.log(ocrProducts);\n   \n      scanInvoiceData.InvoiceName = props.selectedInvoice;\n      scanInvoiceData.InvoiceDate = invDate;\n      scanInvoiceData.InvoiceNumber = invNo;\n      scanInvoiceData.InvoicePage = invPage;\n      scanInvoiceData.InvoiceData = ocrProducts;\n\n    \n    // setScanInvoiceData(data);\n    // console.log(scanInvoiceData);\n    scanInvoiceData.SavedDate = date;\n    scanInvoiceData.SavedInvoiceNo = invoiceNo;\n    // console.log(scanInvoiceData);\n    const resScnInvDta =  await inventoryService.CreateScanInvoiceData(scanInvoiceData);\n    console.log(resScnInvDta);\n    if(resScnInvDta === \"exist\") {\n      alert(\"Invoice with same no. and date already exists, change either of the 2 values\");\n      toggleModal();\n    }else {\n      alert(\"Invoice Saved Successfully\");\n\n    }\n  };\n\n  const sendInvoiceData = async () => {\n    // console.log(scanInvoiceData);\n    scanInvoiceData.SavedDate = date;\n    scanInvoiceData.SavedInvoiceNo = invoiceNo;\n    // console.log(scanInvoiceData)\n    alert(\"CHECK!!!!\");\n    const resScnInvDta =  await inventoryService.CreateScanInvoiceData(scanInvoiceData);\n    // console.log(resScnInvDta);\n  }\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n    // setDate(\"\");\n    // setInvNo(\"\");\n  };\n\n  const hicksvilleDropdown = (data) => {\n    let productsString = \"\";\n    for(let i=0;i<data.length;i++){\n      productsString = productsString + data[i].name + '$$$';\n    } \n    let result = productsString.split(\"$$$\");\n  \n    let newData = [];\n    for (let i = 0; i < result.length; i++) {\n      let s = result[i].split(\"@@@\");\n      let obj =\n        {\n          sku: s[1] === \"nan\" ? null : s[1],\n          upc: s[0] === \"nan\" ? null : s[0],\n          altupc1: s[14] === \"nan\" ? null : s[14],\n          altupc2: s[15] === \"nan\" ? null : s[15],\n          name: s[2] === \"nan\" ? null : s[2],\n          vintage: s[8] === \"nan\" ? null : s[8],\n          totalQty: s[13] === \"nan\" ? null : s[13],\n          cost: s[4] === \"nan\" ? null : s[4],\n          pricea: s[10] === \"nan\" ? null : s[10],\n          priceb: s[11] === \"nan\" ? null : s[11],\n          pricec: s[12] === \"nan\" ? null : s[12],\n          department: s[9] === \"nan\" ? null : s[9],\n          salePrice: s[5] === \"nan\" ? null : s[5],\n          size: s[6] === \"nan\" ? null : s[6],\n          pack: s[7] === \"nan\" ? null : s[7],\n          price: s[3] === \"nan\" ? null : s[3],\n        }\n      newData.push(obj);\n    }\n    const filter = newData.map((element) => {\n      let obj = { ...element };\n      obj.label = `${element.name}- ${element.price}- ${element.upc} - ${element.size}- ${element.cost}`;\n      //console.log(obj);\n      return obj;\n      \n    });\n    hicksvilleData = filter;\n      // console.log(hicksvilleData);\n  }\n\n\n  const updateItem = (ocrCost) => {\n    //console.log(showPosState);\n    const data = {\n      invoiceName: props.selectedInvoice,\n      itemName: showPosState.item,\n      value: { \n        POS: showPosState.pos, \n        Barcode: showPosState.barcode, \n        PosSKU: showPosState.posSku, \n        isReviewed: \"true\",\n        Size: showPosState.size, \n        Department: showPosState.department,\n        //SellerCost: showPosState.unitCost,\n        SellingPrice: showPosState.unitPrice\n      },\n    };\n\n    inventoryService\n    .UpdateProductFields(data)\n    .then((res) => {\n      if (!res) {\n        throw new Error(\"Product not created\")\n      }\n      console.log(res);\n      alert(\"Successfully updated fields\");\n    })\n    .catch((err) => {\n      console.log(err);\n      alert(\"Some error occuured in creating product\");\n    })\n    .finally(() => { \n      setLoader(false)\n      setStateUpdated(\"true\");\n      //  console.log(ocrCost);\n      //  console.log(unitCost);\n       if(ocrCost>unitCost){\n         setCostInc(\"true\");\n         setCostDec(\"\");\n       }\n       if(ocrCost<unitCost){\n         setCostDec(\"true\");\n         setCostInc(\"\");\n       }\n    });\n\n}\n\n//***************  INDIVIDUAL ITEM UPDATE FUNCTIONALITY STARTS*******************************************.\n\n    //Function to fetch wooCom Prpducts.\n    async function getProducts() {\n      console.log(\"IN WOOCOM PRODUCTS\");\n      const items = await Promise.all(\n        singleItemData.map(async (row) => {\n          console.log(row.barcode);\n          try {\n            const res = await inventoryService.GetProductDetails(row.barcode);\n            console.log(res);\n            const {\n              id,\n              name,\n              regular_price,\n              price,\n              sku,\n              slug,\n              stock_quantity,\n              sale_price,\n            } = res[0];\n            return {\n              id,\n              name,\n              regular_price,\n              price,\n              sku,\n              slug,\n              stock_quantity,\n              sale_price,\n              itemNo: row.itemNo,\n            };\n          } catch (error) {\n            // tempNotFoundProducts.push(row);\n            console.log(\"Couldn't fetch product from woodpress.\", row.itemNo);\n            return null;\n          }\n        })\n      );\n      setLoader(false);\n      console.log(items);\n      wooComProducts = items;\n      // setWooComProducts(items.filter((ele) => ele !== null));\n      // setNotFoundProducts(tempNotFoundProducts);\n    }\n\n    //function to fetch POS products.\n    async function getPosProducts() {\n      console.log(\"IN POS PRODUCTS\");\n      setLoader(true);\n      let hasErrorOccured = false;\n      const items = await Promise.all(\n        singleItemData\n          .map(async (row) => {\n            console.log(row.barcode);\n            try {\n              const res = await inventoryService.GetPOSProductDetails(\n                row.barcode\n              );\n              console.log(\"fetched pos data\", res);\n              const { SKU, UPC, ITEMNAME, TOTALQTY, DEPNAME } = res[0];\n              return {\n                ...row,\n                COST: row.cp,\n                PRICE: row.sp,\n                SKU,\n                UPC,\n                ITEMNAME,\n                TOTALQTY:\n                  parseInt(row.qty) * parseInt(row.pieces) + parseInt(TOTALQTY),\n                itemNo: row.itemNo,\n                isNew: false,\n                BUYASCASE: 1,\n                CASEUNITS: row.pieces.toString(),\n                CASECOST: row.unitPrice.toString(),\n                DEPNAME,\n              };\n            } catch (error) {\n              hasErrorOccured = true;\n              return {\n                ...row,\n                COST: row.cp,\n                PRICE: row.sp,\n                SKU: row.posSku,\n                UPC: row.barcode,\n                ITEMNAME: row.description,\n                TOTALQTY: parseInt(row.qty) * parseInt(row.pieces),\n                itemNo: row.itemNo,\n                isNew: true,\n                BUYASCASE: 1,\n                CASEUNITS: row.pieces.toString(),\n                CASECOST: row.unitPrice.toString(),\n                DEPNAME: \"\",\n              };\n            }\n          })\n      );\n      if (hasErrorOccured) {\n        alert(\"Couldn't fetch some data from POS\");\n      }\n      setLoader(false);\n      console.log(items);\n      posProducts = items;\n      console.log(posProducts);\n      // setPosProducts(items.filter((ele) => ele !== null));\n    }\n\n    //PUSH TO WOOCOM.\n    const pushToWoocom = async (products) => {\n      setLoader(true);\n      const responses = await Promise.all(\n        products.map(async (product) => {\n          try {\n            const res = await inventoryService.UpdateProductDetails(product.id, {\n              regular_price: product.regular_price,\n              stock_quantity: product.stock_quantity,\n            });\n            const { id, name, regular_price, stock_quantity } = res;\n            return {\n              id,\n              name,\n              regular_price,\n              stock_quantity,\n              itemNo: product.itemNo,\n            };\n          } catch (error) {\n            console.log(error);\n            alert(\"Couldn't update product on website.\");\n            return null;\n          }\n        })\n      );\n      setLoader(false);\n    };\n\n     //PUSH TO POS.\n     const pushToPOS = async (products) => {\n      setLoader(true);\n      console.log(products);\n      const responses = await Promise.all(\n        products.map(async (product) => {\n          try {\n            const {\n              COST,\n              PRICE,\n              UPC,\n              TOTALQTY,\n              isNew,\n              ITEMNAME,\n              BUYASCASE,\n              CASEUNITS,\n              CASECOST,\n              SKU,\n              DEPNAME,\n              itemNo\n            } = product;\n            const res = await inventoryService.UpdatePOSProducts(\n              JSON.stringify({\n                UPC,\n                ITEMNAME,\n                DESCRIPTION: \"\",\n                PRICE,\n                COST,\n                QTY: TOTALQTY,\n                SIZE: \"\",\n                PACK: \"\",\n                REPLACEQTY: 1,\n                DEPARTMENT: DEPNAME,\n                CATEGORY: \"\",\n                SUBCATEGORY: \"\",\n                ISFOODSTAMP: 1,\n                ISWEIGHTED: 0,\n                ISTAXABLE: 1,\n                VENDORNAME: props.selectedInvoice,\n                VENDORCODE: itemNo,\n                VENDORCOST: \"\",\n                ISNEWITEM: isNew ? 1 : 0,\n                BUYASCASE,\n                CASEUNITS,\n                CASECOST,\n                COMPANYNAME: props.selectedInvoice,\n                PRODUCTCODE: itemNo,\n              })\n            );\n            console.log(\"updated pos data\", res);\n            const data = {\n              UPC,\n              SKU,\n              Cost: COST,\n              ItemName: ITEMNAME,\n              Price: PRICE,\n              TotalQty: TOTALQTY,\n            };\n            if (isNew) {\n              const response = await inventoryService.CreateDBProduct(data);\n              console.log(\"Created new product\", response);\n            } else {\n              const response = await inventoryService.UpdateDBProduct({\n                count: parseInt(product.qty) * parseInt(product.pieces),\n                UPC,\n              });\n              console.log(\"updated existing product\", response);\n            }\n  \n            console.log(\"res from POS\", res);\n            return true;\n          } catch (error) {\n            console.log(error);\n            return null;\n          }\n        })\n      );\n      setLoader(false);\n    };\n\n    const pushInventoryDetails2 = async () => {\n      console.log(posProducts);\n      setLoader(true);\n      let data = singleItemData.map((element) => {\n        return {\n          item: element.itemNo,\n          qty: parseInt(element.qty) * parseInt(element.pieces),\n          cp: element.unitPrice,\n          markup: element.markup,\n          sp: element.sp,\n          description: element.description,\n        };\n      });\n  \n      var duplicates = {};\n      for (var i = 0; i < data.length; i++) {\n        if (duplicates.hasOwnProperty(data[i].item)) {\n          duplicates[data[i].item].push(i);\n        } else if (data.lastIndexOf(data[i].item) !== i) {\n          duplicates[data[i].item] = [i];\n        }\n      }\n  \n      let tempData = Object.values(duplicates).filter((ele) => ele.length > 1);\n      if (tempData.length > 0) {\n        tempData.forEach((index) => {\n          let temp = 0;\n          index.forEach((val) => {\n            if (data[val]) {\n              // console.log(\"data[val]\", data[val]);\n              temp += data[val].qty;\n              if (temp - data[val].qty !== 0) {\n                data[val] = null;\n              }\n            }\n          });\n          data[index[0]].qty = temp;\n        });\n      }\n      data = data.filter((ele) => ele !== null);\n  \n      /**\n       * add the fileds of  data from the woocom & ocr\n      */\n     console.log(wooComProducts.length);\n      if(wooComProducts[0] != null){\n        let updatedWoocomProducts = data\n          .map((product, index) => {\n            /**find index of the item in fetched woocom product list */\n            const wooIndex = wooComProducts.findIndex(\n              (wooProduct) => product.item === wooProduct.itemNo\n            );\n            if (wooIndex !== -1) {\n              /**get the qty & other fileds of the woocom product */\n              let { id, stock_quantity } = wooComProducts[wooIndex];\n              stock_quantity += product.qty;\n              const regular_price = product.sp;\n              return { id, regular_price, stock_quantity, itemNo: product.item };\n            }\n            return null;\n          })\n          .filter((item) => item !== null);\n\n        console.log(updatedWoocomProducts); \n        await pushToWoocom(updatedWoocomProducts);\n        }\n      await pushToPOS(posProducts);\n  \n      // setLoader(false);\n      // if (itemsNotPushed.length === 0) {\n      window.alert(\"Inventory updated successfully\");\n      // setRedirect(true);\n      // } else {\n      //   window.alert(\"Inventory not updated\");\n      // }\n    };\n\n    function toConsoleState() {\n      console.log(wooComProducts);\n      console.log(posProducts);\n      console.log(singleItemData);\n    }\n\n  const pushSingleItemToInventory = async (index) =>{\n    \n    \n    console.log(tableData);\n    const product = [];\n    const notFoundItems = emptyColumn.map((i) => tableData[i]);\n    const tempTable = [];\n    product.push(tableData[index]);\n    console.log(product);\n    \n    product.forEach((element, index) => {\n      if (\n        !emptyColumn.includes(index) &&\n        element.show === true &&\n        element[\"isForReview\"] != true\n      ) {\n        let rowData = { index: index + 1, ...element };\n        tempTable.push(rowData);\n      }\n    });\n    // console.log(\"notFoundItems\", notFoundItems);\n    console.log(tempTable);\n\n    if (emptyColumn.length !== 0) {\n      /**api to push  to not found list*/\n      setLoader(true);\n      const responses = await Promise.all(\n        notFoundItems.map(async (product) => {\n          try {\n            const data = {\n              Item: product.itemNo,\n              Description: product.description,\n              Quantity: product.qty,\n              Price: product.unitPrice,\n              sku: product.sku,\n              Barcode: product.barcode,\n              PosSKU: product.posSku,\n              InvoiceName: props.selectedInvoice,\n            };\n            await inventoryService.CreateNotFoundItems(data);\n            return true;\n          } catch (error) {\n            console.log(\n              \"Couldn't create not found product\",\n              product.description,\n              { error }\n            );\n            alert(\"Couldn't create product on website.\");\n            return null;\n          }\n        })\n      );\n      setLoader(false);\n    }\n    const priceIncreasedProducts = tempTable.filter(\n      (product) => product.priceIncrease !== 0\n    );\n    setLoader(true);\n    const res = await Promise.all(\n      priceIncreasedProducts.map(async (product) => {\n        try {\n          const data = {\n            invoiceName: props.selectedInvoice,\n            itemName: product.itemNo,\n            value: { Price: product.unitPrice},\n          };\n          console.log(data)\n          await inventoryService.UpdateProductFields(data);\n        } catch (error) {\n          console.log(`couldn't update price for product ${product.itemNo}`);\n        }\n      })\n    );\n    setLoader(false);\n    console.log(tempTable);\n    singleItemData = tempTable;\n    // setPushToInventory(true);\n    console.log(singleItemData);\n\n    await getProducts();\n    await getPosProducts();\n    await pushInventoryDetails2();\n    toConsoleState();\n    setIsUpdated(\"true\");\n    setUpdateIndex(index);\n    \n  }\n//***************************INDIVIDUAL ITEM UPDATE FUNCTIONALITY ENDS*****************************************.\n\n  const addRow = () => {\n    let tempTableData = [...tableData];\n    tempTableData.push({\n      qty: 0,\n      itemNo: \"\",\n      description: \"\",\n      pieces: 0,\n      unitPrice: 0.0,\n      extendedPrice: \"\",\n      markup: 0,\n      sp: 0,\n      show: true,\n      showPOS: \"\"\n    });\n    emptyColumnList.push(tempTableData.length - 1);\n    setEmptyColumn(emptyColumnList);\n    setTableData(tempTableData);\n  };\n  const deleteRow = (index) => {\n    let tempTableData = [...tableData];\n    // console.log(emptyColumnList.length, \"before\");\n    if (tableData[index][\"show\"]) {\n      if (1) {\n        tempTableData[index][\"show\"] = false;\n        const i = emptyColumnList.indexOf(index);\n        if (i > -1) {\n          emptyColumnList.splice(i, 1);\n        }\n      }\n    } else {\n      tempTableData[index][\"show\"] = true;\n      if (\n        tempTableData[index][\"qty\"] !== \"\" &&\n        tempTableData[index][\"itemNo\"] !== \"\" &&\n        tempTableData[index][\"unitPrice\"] !== \"\"\n      ) {\n        const i = emptyColumnList.indexOf(index);\n        if (i > -1) {\n          emptyColumnList.splice(i, 1);\n        }\n      } else {\n        emptyColumnList.push(index);\n      }\n    }\n    setTableData(tempTableData);\n    setEmptyColumn(emptyColumnList);\n  };\n  const renderTableHeader = () => {\n    return header.map((key, index) => {\n      return (\n          <th\n            key={index}\n            style={{\n              position: \"sticky\",\n              top: \"70px\",\n              background: \"grey\",\n            }}\n          >\n            {key.toUpperCase()}\n        </th>\n      );\n    });\n  };\n\n  const renderTableData = () => {\n    hicksvilleDropdown(HicksData);\n    // console.log(stateUpdated);\n\n    if (tableData) {\n      console.log(tableData);\n\n      // console.log(showPosIndex);\n      \n      let rows = tableData.map((element, index) => {\n        //fuzzwuzzSuggestion = getFuzzwuzzSuggestion(element.description);\n        let isEmpty =\n          element.qty === \"\" ||\n          element.itemNo === \"\" ||\n          !element.pieces ||\n          isNaN(element.unitPrice) ||\n          element.unitPrice === \"\" ||\n          isNaN(element.extendedPrice);\n        if (isEmpty && element.show) {\n          let emptyColumn = [...emptyColumnList, index];\n          emptyColumnList = [...new Set(emptyColumn)];\n        }\n        let isFree = element.qty != 0 && element.extendedPrice === \"0.00\";\n\n        return (\n          <tr\n            key={index}\n            className={isEmpty ? styles.red : isFree ? styles.free : null}\n            style={isUpdated === \"true\" ? updateIndex === index ? {backgroundColor: \"lightBlue\"} : {}\n                  : element.show ? { opacity: \"1\" } : { opacity: \"0.4\" }}\n            \n          >\n            <td>{index + 1}</td>\n            <td className={styles.element}>\n              <TextField\n                type=\"tel\"\n                value={showPosIndex === index ? showPosState.barcode : element.barcode}\n                id=\"outlined-secondary\"\n                variant=\"outlined\"\n                onChange={(e) => {\n                  handleChange(index, \"barcode\", e.target.value);\n                }}\n                style={{ width: 150 }}\n              />\n              {/* <IconButton\n                color=\"primary\"\n                aria-label=\"add to review\"\n                // onClick={() => addForReview(element, index)}\n              >\n                <InfoOutlinedIcon\n                  style={\n                    reviewItems.includes(index)\n                      ? { backgroundColor: \"green\" }\n                      : null\n                  }\n                /> \n              </IconButton>\n              <div className={element.isReviewed  === \"true\" || (showPosIndex === index && stateUpdated === \"true\") ? styles.tooltipIsReviewed: styles.tooltip} >\n                <p>POS Product- {showPosIndex === index ? showPosState.pos : element.posName }</p>\n                <p>UPC- {showPosIndex === index ? showPosState.barcode : element.barcode}</p>\n                <p>Size- {showPosIndex === index ? showPosState.size : element.size}</p>\n                <p>Department - {showPosIndex === index ? showPosState.department : element.department}</p>\n                <p>Unit Cost- {showPosIndex === index ? showPosState.unitCost : element.cost}</p> \n                <p>Unit Price- {showPosIndex === index ? showPosState.unitPrice : element.sellingPrice}</p>\n                <div >\n                <button onClick={ () => {\n                            if(notFounds === \"true\"){\n                              toggleModal();\n                            }else{\n                              updateItem(props, (parseFloat(element.unitPrice) / parseInt(element.pieces)).toFixed(2))\n                            }\n                          }\n                        } \n                  disabled={showPosIndex === index ? false : true}\n                  style={{backgroundColor: \"green\",\n                  border: \"none\",\n                  color: \"white\",\n                  padding: \"4px 8px\",\n                  textAlign: \"center\",\n                  textDecoration: \"none\",\n                  display: \"inline-block\",\n                  fontSize: \"14px\",\n                  align: \"left\"}} >\n                  Update Item\n                </button>\n                </div> \n              </div> */}\n            </td>\n            <td>{showPosIndex === index ? showPosState.posSku : element.posSku}</td>\n            <td>\n              <TextField\n                type=\"tel\"\n                value={element.qty}\n                id=\"outlined-secondary\"\n                variant=\"outlined\"\n                onChange={(e) => {\n                  handleChange(index, \"qty\", e.target.value);\n                }}\n                style={{ width: 100 }}\n              />\n            </td>\n            <td>\n              <Autocomplete\n                value={element.itemNo}\n                onChange={(event, newValue) => {\n                  if (newValue) {\n                    handleChange(index, \"itemNo\", newValue);\n                  }\n                }}\n                id=\"combo-box\"\n                options={itemNoDropdown}\n                getOptionLabel={(option) => option}\n                style={{ width: 200 }}\n                renderInput={(params) => (\n                  <TextField {...params} variant=\"outlined\" />\n                )}\n              />\n            </td>\n            <td>\n              <Autocomplete\n                value={showPosIndex  === index ? showPosState.item : element.itemNo }\n                onChange={(event, newValue) => {\n                  if (newValue) {\n                    let newState = { ...showPosState };\n                    console.log(newValue);\n                    // newState.item = newValue.name;\n                    newState.item = element.itemNo\n                    newState.description = element.description;\n                    newState.barcode = newValue.upc;\n                    newState.pos = newValue.name;\n                    newState.posSku = newValue.sku;\n                    newState.size = newValue.size;\n                    newState.department = newValue.department;\n                    newState.unitCost = newValue.cost;\n                    newState.unitPrice = newValue.price;\n                    setShowPosState(newState);\n                    setShowPosIndex(index);\n                    setUnitCost(newValue.cost);\n                    if(isEmpty){\n                      setNotFounds(\"true\");\n                    }\n                    //setDisabled(false);\n                    //updateOnHoverDetails(index);\n                    //setShowPosIndex(index);\n                    // console.log(newValue);\n                    // console.log(newState);\n                    //console.log(showPosState);\n                    \n                  }\n                }}\n                id=\"combo-box\"\n                disabled\n                // options={element.fuzzSuggestion}\n                options={hicksvilleData}\n                getOptionLabel={(option) => option.label ?? element.itemNo}\n                style={{ width: 400 }}\n                renderInput={(params) => (\n                  <TextField {...params} variant=\"outlined\" />\n                )}\n              />\n            </td>\n            \n            <td>{element.description}</td>\n            {/* <td>{element.pieces}</td> */}\n            <td>\n              <TextField\n                type=\"tel\"\n                value={element.pieces}\n                variant=\"outlined\"\n                onChange={(e) => {\n                  handleChange(index, \"pieces\", e.target.value);\n                }}\n                style={{ width: 100 }}\n              />\n            </td>\n            <td>\n              <TextField\n                type=\"tel\"\n                value={element.unitPrice}\n                variant=\"outlined\"\n                onChange={(e) => {\n                  handleChange(index, \"unitPrice\", e.target.value);\n                }}\n                style={ \n                  // element.priceIncrease === 1 \n                  //   ? { backgroundColor: \"#1a8cff\", width: 100 }\n                  //   : element.priceIncrease === -1 \n                  //   ? { backgroundColor: \"#ffb31a\", width: 100 }\n                  //   : { width: 100 }\n                  showPosIndex === index ? costInc===\"true\" ? { backgroundColor: \"#1a8cff\", width: 100 } : costDec===\"true\" ? { backgroundColor: \"#ffb31a\", width: 100 } : {width: 100}\n                  : element.priceIncrease === 1 \n                      ? { backgroundColor: \"#1a8cff\", width: 100 }\n                      : element.priceIncrease === -1 \n                      ? { backgroundColor: \"#ffb31a\", width: 100 }\n                      : { width: 100 }\n                }\n              />\n            </td>\n            <td>{element.extendedPrice}</td>\n            {/* <td>{element.cp}</td> */}\n            <td>\n              <TextField\n                type=\"tel\"\n                value={element.cp}\n                variant=\"outlined\"\n                onChange={(e) => {\n                  handleChange(index, \"cp\", e.target.value);\n                }}\n                style={{ width: 100 }}\n              />\n            </td>\n            <td>\n              <TextField\n                type=\"tel\"\n                value={element.sp}\n                variant=\"outlined\"\n                onChange={(e) => {\n                  handleChange(index, \"sp\", e.target.value);\n                }}\n                style={{ width: 100 }}\n              />\n            </td>\n            <td>{element.markup}</td>\n            {/* <td>\n              <Checkbox\n                checked={!element.show}\n                onChange={(e) => handleChange(index, \"show\", e.target.value)}\n                inputProps={{ \"aria-label\": \"primary checkbox\" }}\n              />\n            </td> */}\n             <td>\n              <Button\n                text={element.show ? \"Delete\" : \"Undo\"}\n                color=\"btn btn-info\"\n                type=\"submit\"\n                onClick={() => deleteRow(index)}\n              />\n            </td>\n            <td>\n            <Button \n                text=\"Update POS\"\n                color=\"btn btn-info\"\n                type=\"submit\"\n                onClick={() => pushSingleItemToInventory(index)}\n                style={{ width: 120 }}\n              />\n                  \n            </td>\n            <td>{index + 1}</td>\n            {/* <td>\n              <Button\n                text={element.show ? \"Delete\" : \"Undo\"}\n                color=\"btn btn-info\"\n                type=\"submit\"\n                onClick={() => deleteRow(index)}\n              />\n            </td> */}\n          </tr>\n        );\n      });\n      return (\n        <div style={{ marginTop: \"70px\" }}>\n          <div className={styles.divRow} style={{ marginTop: \"80px\" }}>\n            <Button\n              text=\"Save Invoice Data\"\n              color=\"btn btn-info\"\n              type=\"submit\"\n              onClick={toggleModal}\n            />\n            <Button\n              text=\"Re upload\"\n              color=\"btn btn-info\"\n              type=\"submit\"\n              onClick={() => window.location.reload()}\n            />\n          </div>\n          <table className=\"table table-hover table-responsive-sm\">\n            <tbody>\n              <tr>{renderTableHeader()}</tr>\n              {rows}\n              <tr>\n                <td>\n                  <Button\n                    text=\"Add cell\"\n                    color=\"btn btn-info\"\n                    onClick={addRow}\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <div className={styles.divRow}>\n            <Button\n              text=\"Update Inventory\"\n              color=\"btn btn-info\"\n              type=\"submit\"\n              onClick={pushInventoryDetails}\n            />\n            <Button\n              text=\"Save Invoice Data\"\n              color=\"btn btn-info\"\n              type=\"submit\"\n              onClick={toggleModal}\n            />\n            <Button\n              text=\"Re upload\"\n              color=\"btn btn-info\"\n              type=\"submit\"\n              onClick={() => window.location.reload()}\n            />\n          </div>\n        </div>\n      );\n    }\n  };\n\n  const pushInventoryDetails = async () => {\n    console.log(tableData)\n    const notFoundItems = emptyColumn.map((i) => tableData[i]);\n    const tempTable = [];\n    \n    tableData.forEach((element, index) => {\n      if (\n        !emptyColumn.includes(index) &&\n        element.show === true &&\n        element[\"isForReview\"] != true\n      ) {\n        let rowData = { index: index + 1, ...element };\n        tempTable.push(rowData);\n      }\n    });\n    console.log(\"notFoundItems\", notFoundItems);\n    // console.log(\"final table data\", tempTable);\n\n    if (emptyColumn.length !== 0) {\n      /**api to push  to not found list*/\n      setLoader(true);\n      const responses = await Promise.all(\n        notFoundItems.map(async (product) => {\n          try {\n            const data = {\n              Item: product.itemNo,\n              Description: product.description,\n              Quantity: product.qty,\n              Price: product.unitPrice,\n              sku: product.sku,\n              Barcode: product.barcode,\n              PosSKU: product.posSku,\n              InvoiceName: props.selectedInvoice,\n            };\n            await inventoryService.CreateNotFoundItems(data);\n            return true;\n          } catch (error) {\n            console.log(\n              \"Couldn't create not found product\",\n              product.description,\n              { error }\n            );\n            alert(\"Couldn't create product on website.\");\n            return null;\n          }\n        })\n      );\n      setLoader(false);\n    }\n    const priceIncreasedProducts = tempTable.filter(\n      (product) => product.priceIncrease !== 0\n    );\n    setLoader(true);\n    const res = await Promise.all(\n      priceIncreasedProducts.map(async (product) => {\n        try {\n          const data = {\n            invoiceName: props.selectedInvoice,\n            itemName: product.itemNo,\n            value: { Price: product.unitPrice },\n          };\n          console.log(data)\n          await inventoryService.UpdateProductFields(data);\n        } catch (error) {\n          console.log(`couldn't update price for product ${product.itemNo}`);\n        }\n      })\n    );\n    setLoader(false);\n    setInventoryData(mergeDuplicates(tempTable));\n    setPushToInventory(true);\n    \n  };\n  \n  \n  \n  \n  const addForReview = async (item, index) => {\n    const data = {\n      barcode: item.barcode,\n      posName: item.posName,\n      itemNo: item.itemNo,\n      description: item.description,\n      invoiceName: props.selectedInvoice,\n      posSku: item.posSku,\n    };\n    const tempReviewItems = [...reviewItems];\n    tempReviewItems.push(index);\n    setReviewItems(tempReviewItems);\n    try {\n      // console.log(item.itemNo)\n      firebase.database().ref(\"/review\").child(`${item.itemNo.replace('/',\"SlasH\")}`).set(data);\n      let tempTableData = [...tableData];\n      tempTableData[index][\"isForReview\"] = true;\n      setTableData(tempTableData);\n      return true;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  };\n\n  const handleChange = async (row, key, value) => {\n    console.log(row);\n    console.log(key);\n    console.log(value);\n    console.log(emptyColumn);\n    let tempTableData = [...tableData];\n    tempTableData[row][key] = value;\n    const { itemNo } = tempTableData[row];\n    console.log(tempTableData[row]);\n    if (\n      tempTableData[row][\"qty\"] !== \"\" &&\n      tempTableData[row][\"itemNo\"] !== \"\" &&\n      tempTableData[row][\"unitPrice\"] !== \"\"\n    ) {\n      const index = emptyColumnList.indexOf(row);\n      console.log(index);\n      if (index > -1) {\n        emptyColumnList.splice(index, 1);\n      }\n    } else {\n      emptyColumnList.push(row);\n    }\n    setEmptyColumn(emptyColumnList);\n    if (key === \"itemNo\") {\n      tempTableData[row][\"description\"] = productDetails[value].Description;\n      tempTableData[row][\"pieces\"] = productDetails[value].Quantity;\n      tempTableData[row][\"sku\"] = productDetails[value].sku;\n      /**auto populate barcode & other pos fields*/\n      tempTableData[row][\"barcode\"] = productDetails[value].Barcode;\n      tempTableData[row][\"posName\"] = productDetails[value].POS;\n      tempTableData[row][\"posSku\"] = productDetails[value].PosSKU;\n    }\n\n    if (key === \"unitPrice\" || key === \"sp\" || key === \"itemNo\" || key === \"pieces\") {\n      let cp = parseFloat(tempTableData[row][\"cp\"]);\n      let sp = parseFloat(tempTableData[row][\"sp\"]);\n      let markup = ((sp - cp) / cp) * 100;\n      let cost =\n        parseFloat(tempTableData[row][\"unitPrice\"]) /\n        tempTableData[row][\"pieces\"];\n      // let sp = cp + (cp * markup) / 100;\n      // if (tempTableData[row][\"pieces\"]) {\n      //   sp = sp / tempTableData[row][\"pieces\"];\n      // }\n      tempTableData[row][\"markup\"] = isNaN(markup) ? 0 : markup.toFixed(2);\n      tempTableData[row][\"cp\"] = isNaN(cost) ? 0 : cost.toFixed(2);\n      console.log(\"PIECES\");\n      tempTableData[row][\"pieces\"] = value;\n    }\n\n    if (key === \"qty\" || key === \"unitPrice\") {\n      const extendedPrice =\n        parseFloat(tempTableData[row][\"qty\"]) *\n        parseFloat(tempTableData[row][\"unitPrice\"]);\n      const cp = tempTableData[row][\"unitPrice\"] / tempTableData[row][\"pieces\"];\n      if (!isNaN(extendedPrice)) {\n        tempTableData[row][\"extendedPrice\"] = extendedPrice.toFixed(2);\n      }\n      if (!isNaN(cp)) {\n        tempTableData[row][\"cp\"] = cp.toFixed(2);\n      }\n    }\n    if (itemNo) {\n      if (+tempTableData[row][\"unitPrice\"] > +productDetails[itemNo].Price) {\n        tempTableData[row][\"priceIncrease\"] = 1;\n      } else if (\n        +tempTableData[row][\"unitPrice\"] < +productDetails[itemNo].Price\n      ) {\n        tempTableData[row][\"priceIncrease\"] = -1;\n      } else if (\n        +tempTableData[row][\"unitPrice\"] == +productDetails[itemNo].Price\n      ) {\n        tempTableData[row][\"priceIncrease\"] = 0;\n      }\n    }\n\n    if (key === \"barcode\") {\n      tempTableData[row][\"barcode\"] = value;\n    }\n    setTableData(tempTableData);\n  };\n\n  const setMarkup = (value) => {\n    let tempTableData = [...tableData];\n\n    for (let index = 0; index < tempTableData.length; index++) {\n      handleChange(index, \"markup\", value);\n    }\n  };\n\n  const mergeDuplicates = (a) => {\n    let arr = [...a];\n    let map = new Map();\n    for (let i = 0; i < arr.length; i++) {\n      if (!map.has(arr[i].itemNo)) map.set(arr[i].itemNo, arr[i]);\n      else {\n        let obj = { ...map.get(arr[i].itemNo) };\n        obj[\"qty\"] = (\n          parseFloat(obj[\"qty\"]) + parseFloat(arr[i].qty)\n        ).toString();\n        map.set(arr[i].itemNo, obj);\n      }\n    }\n    let newArr = [];\n    for (let x of map.values()) newArr.push(x);\n    return newArr;\n  };\n\n  useEffect(() => {\n    \n\n\n    /**Fetch the data from the aws textract for the image */\n    async function fetchOCRData() {\n      // return chetak();\n\n      setLoader(true);\n      const ocrData = await Promise.all(\n        props.filename.map(async (file) => {\n          try {\n            //console.log(\"FILENAME\" + props.filename);\n            const res = await tesseractService.GetOCRData(file);\n            console.log(\"ocrData from TSRCTsrvc goes to chooseFilter\");\n            \n            console.log(\"OCR\");\n            console.log(res.body);\n            \n              // scanInvoiceData.InvoiceDate = res.body[1][\"2\"][\"1\"];\n              // scanInvoiceData.InvoiceNumber = res.body[1][\"2\"][\"2\"];\n              // scanInvoiceData.InvoicePage = res.body[1][\"2\"][\"3\"];\n              // setInvDate(res.body[1][\"2\"][\"1\"]);\n              // setInvNo(res.body[1][\"2\"][\"2\"]);\n              // setInvPage(res.body[1][\"2\"][\"3\"]);\n              // setScanInvoiceData({InvoiceDate: invDate, InvoiceNumber: invNo, InvoicePage: invPage});\n            \n            // console.log(scanInvoiceData);\n            \n            //console.log(invDate);\n            //console.log(invNo);\n            //console.log(invPage);\n            // console.log(scanInvoiceData);\n            return chooseFilter(props.selectedInvoice, res.body);\n          } catch (error) {\n            console.log(\"error fetching descripton\", error);\n            // throw new Error(error);\n          }\n        })\n      );\n      let newData = [];\n      ocrData.forEach((data) => (newData = [...newData, ...data]));\n      return newData;\n    }\n\n    async function invoiceData() {\n      const products = await tesseractService.GetProductDetails(\n        props.selectedInvoice\n      );\n      //console.log(props.selectedInvoice);\n      return products;\n    }\n    fetchOCRData().then((ocrData) => {\n      console.log(ocrData);\n      invoiceData()\n        .then((products) => {\n          console.log(\"OCR DAATA\");\n          console.log(ocrData);\n          /**post processing the table data after returning from filter */\n          function convertToUpperCase(obj) {\n            let newObj = {};\n            for (let key in obj) {\n              newObj[key.toUpperCase()] = obj[key];\n            }\n            return newObj;\n          }\n          products = convertToUpperCase(products);\n          console.log(products);\n          // scanInvoiceData.InvoiceData = ocrData;\n          setOcrProducts(ocrData);\n          \n          console.log(\"OCR Data\");\n          console.log(ocrData);\n          \n          // scanInvoiceData.InvoiceData = ocrData;\n          //console.log(resScnInvDta);\n          //console.log(\"OCERDATa\", ocrData);\n          //console.log(products);\n          //console.log(scanInvoiceData);\n          let table = ocrData.map((row) => {\n            /**For invoices which dont have item no, set description as item no */\n            if (row.itemNo === undefined) {\n              row.itemNo = row.description.trim().toUpperCase();\n            }\n            row.itemNo = row.itemNo.toString().toUpperCase();\n\n            row.description = row.description;\n              // products[row.itemNo] !== undefined\n              //   ? products[row.itemNo].Description\n              //   : row.description;\n            row.pieces =\n              products[row.itemNo] !== undefined\n                ? products[row.itemNo].Quantity\n                : 0;\n            row.sku =\n              products[row.itemNo] !== undefined\n                ? products[row.itemNo].sku\n                : \"\";\n            row.barcode =\n              products[row.itemNo] !== undefined\n                ? products[row.itemNo].Barcode\n                : \"\";\n            row.posName =\n              products[row.itemNo] !== undefined\n                ? products[row.itemNo].POS\n                : \"\";\n            row.markup = 0;\n            row.show = true;\n            row.posSku =\n              products[row.itemNo] !== undefined\n                ? products[row.itemNo].PosSKU\n                : \"\";\n            row.isReviewed = \n              products[row.itemNo] !== undefined ? products[row.itemNo].isReviewed : \"\" ;\n            row.size = \n              products[row.itemNo] !== undefined ? products[row.itemNo].Size : \"\";\n            row.department = \n              products[row.itemNo] !== undefined ? products[row.itemNo].Department : \"\";\n            row.cost = \n              products[row.itemNo] !== undefined ? products[row.itemNo].SellerCost : \"\";\n            row.sellingPrice = \n              products[row.itemNo] !== undefined ? products[row.itemNo].SellingPrice : \"\";\n            //console.log(\"department-\" + row.department + \"  cost-\" + row.cost + \"  price\" + row.sellingPrice);\n            let sp = 0;\n            let cp = 0;\n            // const barcode = products.Barcode\n            if (parseInt(row.pieces)) {\n              sp = (parseFloat(row.unitPrice) / parseInt(row.pieces)).toFixed(\n                2\n              );\n              cp = sp;\n            }\n            if (products[row.itemNo] !== undefined) {\n              // console.log(sp);\n              // console.log(products[row.itemNo].SellerCost);\n              // if (+row.unitPrice > +products[row.itemNo].SellerCost) {\n              //   row[\"priceIncrease\"] = 1;\n              // } else if (+row.unitPrice < +products[row.itemNo].SellerCost) {\n              //   row[\"priceIncrease\"] = -1;\n              // } else if (+row.unitPrice == +products[row.itemNo].SellerCost) {\n              //   row[\"priceIncrease\"] = 0;\n              // }\n              if (sp> +products[row.itemNo].SellerCost) {\n                row[\"priceIncrease\"] = 1;\n              } else if (+sp < +products[row.itemNo].SellerCost) {\n                row[\"priceIncrease\"] = -1;\n              } else if (+sp == +products[row.itemNo].SellerCost) {\n                row[\"priceIncrease\"] = 0;\n              }\n            } else {\n              row[\"priceIncrease\"] = 0;\n            }\n\n            /**filter out the rows for which qty shipped & extendedPrice is zero */\n            if (row.qty == \"0\" && row.extendedPrice === \"0.00\") {\n              return null;\n            }\n            /**Calulate qty for which qty is not read/scanned by textract */\n            if (!row.qty) {\n              row.qty = (\n                parseFloat(row.extendedPrice) / parseFloat(row.unitPrice)\n              ).toFixed(0);\n            }\n          return { ...row, sp, cp };\n          });\n          setLoader(false);\n          setTableData(table.filter((data) => data !== null));\n          setItemNoDropdown(Object.keys(products));\n          setProductDetails(products);\n        })\n        .catch((err) => {\n          console.log(\"error on mapping ocrdata\", err)\n          setLoader(false);\n        });\n    });\n  }, []);\n\n  if (loader) {\n    return <Spinner />;\n  }\n  return (\n   \n\n      \n    \n    <div className=\"container-fluid\">\n    \n      {pushToInventory ? (\n        <UpdateInventory\n          newInventoryData={inventoryData}\n          header={header}\n          goBack={setPushToInventory}\n          invoice={props.selectedInvoice}\n        />\n      ) : (\n        renderTableData()\n      )}\n\n      <CModal show={showModal} onClose={toggleModal}>\n        <CModalHeader closeButton>Save Invoice Data</CModalHeader>\n        <CModalBody>\n          <CContainer fluid>\n            <CRow>\n              <CCol sm=\"6\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"invoiceNo\">Invoice No.</CLabel>\n                  <CInput\n                    type=\"text\"\n                    name=\"invoiceNo\"\n                    value={invoiceNo}\n                    onChange={(event) => setInvoiceNo(event.target.value)}\n                    />\n                  <CLabel htmlFor=\"date\">Date</CLabel>\n                  <CInput\n                    type=\"date\"\n                    name=\"date\"\n                    value={date}\n                    onChange={(event) => setDate(event.target.value)}\n                    />\n                  \n                </CFormGroup>\n              </CCol>\n            </CRow>\n          </CContainer>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"primary\" onClick={saveInvoiceData}>\n            Save Invoice\n          </CButton>{\" \"}\n          <CButton color=\"secondary\" onClick={toggleModal}>\n            Cancel\n          </CButton>\n        </CModalFooter>\n      </CModal>\n\n      {/* <CModal show={showModal} onClose={toggleModal}>\n        <CModalHeader closeButton>Add Red Products</CModalHeader>\n        <CModalBody>\n          <CContainer fluid>\n            <CRow>\n              <CCol sm=\"6\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"invoiceNo\">Units In Case</CLabel>\n                  <CInput\n                    type=\"text\"\n                    name=\"unitsInCase\"\n                    value={unitsInCase}\n                    onChange={(event) => setUnitsInCase(event.target.value)}\n                    />\n                  <CLabel htmlFor=\"date\">Price</CLabel>\n                  <CInput\n                    type=\"text\"\n                    name=\"price\"\n                    value={price}\n                    onChange={(event) => setPrice(event.target.value)}\n                    />\n                </CFormGroup>\n              </CCol>\n            </CRow>\n          </CContainer>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"primary\" onClick={updateItem}>\n            ADD\n          </CButton>{\" \"}\n          <CButton color=\"secondary\" onClick={toggleModal}>\n            Cancel\n          </CButton>\n        </CModalFooter>\n      </CModal> */}\n      \n      \n      \n      \n    );\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.userId,\n  };\n};\n\nexport default connect(mapStateToProps)(DisplayData);\n","/Users/sahil/Desktop/icms/inventory-management/client/src/services/TesseractService.js",[],"/Users/sahil/Desktop/icms/inventory-management/client/src/services/LoginService.js",[],"/Users/sahil/Desktop/icms/inventory-management/client/src/services/InventoryService.js",["359"],"import { POSAxios, WordpressAxios } from \"./axios\";\nimport Axios from \"./axios\";\nconst appendURL = process.env.NODE_ENV === \"production\" ? \"/server\" : \"\";\n\nexport class InventoryService {\n  async GetProductDetails(productSKU) {\n    const response = await WordpressAxios.get(`/products/`, {\n      params: { sku: productSKU },\n    });\n    return response.data;\n  }\n\n  async UpdateProductDetails(productId, data) {\n    const res = await WordpressAxios.put(`/products/${productId}`, data);\n    return res.data;\n  }\n  async getAllProducts() {\n    const res = await WordpressAxios.get(\"products\");\n    return res.data;\n  }\n  async createProduct(data) {\n    const res = await WordpressAxios.post(\"products\", data);\n    return res.data;\n  }\n\n  async GetPOSProductDetails(upc, itemName = \"\") {\n    const response = await Axios.get(appendURL + \"/api/getPOSProduct\", {\n      params: { upc, itemName },\n    });\n    return response.data;\n  }\n  async UpdatePOSProducts(data) {\n    console.log(data);\n    const res = await Axios.post(\n      appendURL + \"/api/pos/Product/ManageItem\",\n      data\n    );\n    return res.data;\n  }\n  async SyncInventory() {\n    const res = await Axios.get(appendURL + \"/api/sync\");\n    console.log(res.data);\n    return res.data;\n  }\n  async UpdateProductFields(data) {\n    /**\n     ***** data format\n     * data = {invoiceName: \"chetak\", itemName:\"CAS 123\", value:{\"Description\": \"jnckwc\", \"Price\": \"44\"}}\n     */\n    //  console.log(data);\n    const res = await Axios.put(\n      appendURL + \"/api/invoice/product/update\",\n      data\n    );\n    return res.data;\n  }\n\n  async CreateNotFoundItems(data) {\n    /**\n     * data format\n     * {Item:String,Description:String,Quantity:String,Price:String,sku:String,Barcode:String,PosSKU:String,InvoiceName:String}\n     */\n    const res = await Axios.post(appendURL + \"/api/invoice/notfound\", data);\n    return res.data;\n  }\n\n  async CreateScanInvoiceData(data){\n    //console.log(\"IN INVENTORY SERVICE\");\n    //console.log(data);\n    const res = await Axios.post(appendURL + \"/api/invoice/scaninvoicedata\", data);\n    return res.data;\n  }\n  async UpdateInvoiceData(invoiceName, invoiceNo, date, itemNo) {\n    console.log(invoiceName);\n    console.log(invoiceNo);\n    console.log(itemNo);\n    console.log(date);\n    const res = await Axios.post(appendURL + \"/api/invoice/updateinvoicedata\", {params:{ invoiceName: invoiceName, invoiceNo: invoiceNo,date: date, itemNo: itemNo}});\n    return res.data;\n  }\n\n  async UpdateDBafterPosUpdate(data){\n    console.log(data);\n    const res = await Axios.post(appendURL + \"/api/invoice/updatedbafterposupdate\", data);\n    console.log(res);\n  }\n\n  async saveDetails(data) {\n    console.log(data);\n    const res = await Axios.post(appendURL + \"/api/invoice/savedetails\", data);\n    return res.data;\n\n  }\n\n  async reversePOSUpdate(invoiceName, invoiceNo, date, itemNo) {\n    console.log(invoiceName);\n    console.log(invoiceNo);\n    console.log(itemNo);\n    console.log(date);\n    const res = await Axios.post(appendURL + \"/api/invoice/reverseposupdate\", {params:{ invoiceName: invoiceName, invoiceNo: invoiceNo,date: date, itemNo: itemNo}});\n    return res.data;\n  }\n  \n  async linkingCorrect(data) {\n    console.log(data);\n    const res = await Axios.post(appendURL+ \"/api/invoice/linkingcorrect\", data);\n    return res;\n  }\n\n\n  async linkManually(data) {\n    console.log(data);\n\n    const res = await Axios.post(appendURL + \"/api/invoice/linkmanually\", data);\n    return res;\n  }\n\n  async getHicksvilleData(value) {\n    console.log(\"in inventory for hicks data\");\n    const res = await Axios.get(appendURL + \"/api/invoice/gethicksvilledata\", {params: {input: value}});\n    return res.data;\n  }\n\n  async getSavedInvoices (data) {\n    console.log(\"in inventory for saved invoices\");\n    console.log(data);\n    const res = await Axios.get(appendURL + \"/api/invoice/getsavedinvoices\", {params: data} );\n    return res.data;\n\n  }\n\n  async UpdateDBProduct(data) {\n    console.log(data);\n    const res = await Axios.put(appendURL + \"/api/invoice/pos/update\", data);\n    return res.data;\n  }\n  async CreateDBProduct(data) {\n    const res = await Axios.post(appendURL + \"/api/invoice/pos/create\", data);\n    return res.data;\n  }\n\n  async getInitialSyncedData(dateObj) {\n    console.log(\"In inventory service\");\n    console.log(dateObj);\n    const res = await Axios.get(appendURL + \"/api/invoice/pos\",dateObj);\n    console.log(res);\n    return res.data;\n  }\n\n  async generateLog(data) {\n    console.log(data);\n    const res = await Axios.post(appendURL + \"/api/invoice/generatelog\", data);\n    return res;\n\n  }\n\n  async linkManuallyLog(data) {\n    console.log(data);\n    const res = await Axios.post(appendURL+ \"/api/invoice/linkmanuallylog\", data);\n    return res;\n  }\n\n  async reverseUpdate(data) {\n    console.log(data);\n\n    const res = await Axios.post(appendURL + \"/api/invoice/reverseupdate\", data);\n    return res.data;\n  }\n\n  async UnidentifiedLog(data) {\n    console.log(data);\n    const res = await Axios.post(appendURL + \"/api/invoice/unidentifiedlog\", data);\n    return res;\n  }\n\n  async handwrittenLogs(data) {\n    console.log(data);\n    const res = await Axios.post(appendURL + \"/api/invoice/handwrittenlogs\", data);\n    return res;\n  }\n\n  async fetchProductFromPosList(data) {\n    console.log(data);\n    const res = await Axios.get(appendURL + \"/api/invoice/fetchproductfromposlist\", data);\n    return res.data;\n  }\n\n  async posLogs(data) {\n    console.log(data);\n    const res = await Axios.post(appendURL + \"/api/invoice/poslogs\", data)\n    return res.data;\n  }\n\n  async getItemForHandwrittenInvoice(data) {\n    console.log(data);\n    const res = await Axios.get(appendURL + \"/api/invoice/getitemhandwritten\", {params: data});\n    return res.data;\n  }\n}\n","/Users/sahil/Desktop/icms/inventory-management/client/src/services/Api.js",[],"/Users/sahil/Desktop/icms/inventory-management/client/src/components/Update/UpdateInventory.js",["360","361","362","363"],"import React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { InventoryService } from \"../../services/InventoryService\";\nimport Button from \"../../UI/Button\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\n\nconst UpdateInventory = (props) => {\n  // const header = props.header;\n  const [newInventoryData, setNewInventoryData] = useState(\n    props.newInventoryData\n  );\n  const [posProducts, setPosProducts] = useState([]);\n  const [redirect, setRedirect] = useState(false);\n  const [loader, setLoader] = useState(true);\n  const [wooComProducts, setWooComProducts] = useState([]);\n  const inventoryService = new InventoryService();\n  const header = [\n    \"Serial No.\",\n    \"Barcode\",\n    \"POS SKU\",\n    \"Qty Shipped\",\n    \"ITEM NO\",\n    \"DESCRIPTION\",\n    \"Units in  Case\",\n    \"Case cost\",\n    \"Extended Price\",\n    \"Unit Cost \",\n    \"Unit Price\",\n    \"Mark up (%)\"\n  ];\n\n  const renderTableHeader = () => {\n    return header.map((key, index) => {\n      return (\n        <th\n          key={index}\n          style={{\n            position: \"sticky\",\n            top: \"70px\",\n            background: \"grey\",\n          }}\n        >\n          {key.toUpperCase()}\n        </th>\n      );\n    });\n  };\n  const renderTableData = () => {\n    let rows = newInventoryData.map((element, index) => {\n      return (\n        <tr\n          key={index}\n        >\n          <td>{index + 1}</td>\n          <td>{element.barcode}</td>\n          <td>{element.posSku}</td>\n          <td>{element.qty}</td>\n          <td>{element.itemNo}</td>\n          <td>{element.description}</td>\n          <td>{element.pieces}</td>\n          <td>{element.unitPrice}</td>\n          <td>{element.extendedPrice}</td>\n          <td>{element.cp}</td>\n          <td>{element.sp}</td>\n          <td>{element.markup}</td>\n        </tr>\n      );\n    });\n    return (\n      <div style={{ marginTop: \"70px\" }}>\n        <table className=\"table table-hover table-responsive-sm\">\n          <tbody>\n            <tr>{renderTableHeader()}</tr>\n            {rows}\n          </tbody>\n        </table>\n        <div className=\"d-flex justify-content-start\">\n          <Button\n            text=\"Back\"\n            color=\"btn btn-info\"\n            type=\"submit\"\n            onClick={() => props.goBack(false)}\n          />\n        </div>\n        <div className=\"d-flex justify-content-center\">\n          <Button\n            text=\"Submit\"\n            color=\"btn btn-info\"\n            type=\"submit\"\n            onClick={pushInventoryDetails}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const pushInventoryDetails = async () => {\n    setLoader(true);\n    let data = newInventoryData.map((element) => {\n      return {\n        item: element.itemNo,\n        qty: parseInt(element.qty) * parseInt(element.pieces),\n        cp: element.unitPrice,\n        markup: element.markup,\n        sp: element.sp,\n        description: element.description,\n      };\n    });\n\n    var duplicates = {};\n    for (var i = 0; i < data.length; i++) {\n      if (duplicates.hasOwnProperty(data[i].item)) {\n        duplicates[data[i].item].push(i);\n      } else if (data.lastIndexOf(data[i].item) !== i) {\n        duplicates[data[i].item] = [i];\n      }\n    }\n\n    let tempData = Object.values(duplicates).filter((ele) => ele.length > 1);\n    if (tempData.length > 0) {\n      tempData.forEach((index) => {\n        let temp = 0;\n        index.forEach((val) => {\n          if (data[val]) {\n            // console.log(\"data[val]\", data[val]);\n            temp += data[val].qty;\n            if (temp - data[val].qty !== 0) {\n              data[val] = null;\n            }\n          }\n        });\n        data[index[0]].qty = temp;\n      });\n    }\n    data = data.filter((ele) => ele !== null);\n\n    /**\n     * add the fileds of  data from the woocom & ocr\n     */\n    let updatedWoocomProducts = data\n      .map((product, index) => {\n        /**find index of the item in fetched woocom product list */\n        const wooIndex = wooComProducts.findIndex(\n          (wooProduct) => product.item === wooProduct.itemNo\n        );\n        if (wooIndex !== -1) {\n          /**get the qty & other fileds of the woocom product */\n          let { id, stock_quantity } = wooComProducts[wooIndex];\n          stock_quantity += product.qty;\n          const regular_price = product.sp;\n          return { id, regular_price, stock_quantity, itemNo: product.item };\n        }\n        return null;\n      })\n      .filter((item) => item !== null);\n\n    await pushToWoocom(updatedWoocomProducts);\n    await pushToPOS(posProducts);\n\n    setLoader(false);\n    // if (itemsNotPushed.length === 0) {\n    window.alert(\"Inventory updated successfully\");\n    setRedirect(true);\n    // } else {\n    //   window.alert(\"Inventory not updated\");\n    // }\n  };\n\n  const pushToWoocom = async (products) => {\n    setLoader(true);\n    const responses = await Promise.all(\n      products.map(async (product) => {\n        try {\n          const res = await inventoryService.UpdateProductDetails(product.id, {\n            regular_price: product.regular_price,\n            stock_quantity: product.stock_quantity,\n          });\n          const { id, name, regular_price, stock_quantity } = res;\n          return {\n            id,\n            name,\n            regular_price,\n            stock_quantity,\n            itemNo: product.itemNo,\n          };\n        } catch (error) {\n          console.log(error);\n          alert(\"Couldn't update product on website.\");\n          return null;\n        }\n      })\n    );\n    setLoader(false);\n  };\n\n  const pushToPOS = async (products) => {\n    setLoader(true);\n    console.log(products);\n    const responses = await Promise.all(\n      products.map(async (product) => {\n        try {\n          const {\n            COST,\n            PRICE,\n            UPC,\n            TOTALQTY,\n            isNew,\n            ITEMNAME,\n            BUYASCASE,\n            CASEUNITS,\n            CASECOST,\n            SKU,\n            DEPNAME,\n            itemNo\n          } = product;\n          const res = await inventoryService.UpdatePOSProducts(\n            JSON.stringify({\n              UPC,\n              ITEMNAME,\n              DESCRIPTION: \"\",\n              PRICE,\n              COST,\n              QTY: TOTALQTY,\n              SIZE: \"\",\n              PACK: \"\",\n              REPLACEQTY: 1,\n              DEPARTMENT: DEPNAME,\n              CATEGORY: \"\",\n              SUBCATEGORY: \"\",\n              ISFOODSTAMP: 1,\n              ISWEIGHTED: 0,\n              ISTAXABLE: 1,\n              VENDORNAME: props.invoice,\n              VENDORCODE: itemNo,\n              VENDORCOST: \"\",\n              ISNEWITEM: isNew ? 1 : 0,\n              BUYASCASE,\n              CASEUNITS,\n              CASECOST,\n              COMPANYNAME: props.invoice,\n              PRODUCTCODE: itemNo,\n            })\n          );\n          console.log(\"updated pos data\", res);\n          const data = {\n            UPC,\n            SKU,\n            Cost: COST,\n            ItemName: ITEMNAME,\n            Price: PRICE,\n            TotalQty: TOTALQTY,\n          };\n          if (isNew) {\n            const response = await inventoryService.CreateDBProduct(data);\n            console.log(\"Created new product\", response);\n          } else {\n            const response = await inventoryService.UpdateDBProduct({\n              count: parseInt(product.qty) * parseInt(product.pieces),\n              UPC,\n            });\n            console.log(\"updated existing product\", response);\n          }\n\n          console.log(\"res from POS\", res);\n          return true;\n        } catch (error) {\n          console.log(error);\n          return null;\n        }\n      })\n    );\n    setLoader(false);\n  };\n  useEffect(() => {\n    async function getProducts() {\n      const items = await Promise.all(\n        newInventoryData.map(async (row) => {\n          try {\n            const res = await inventoryService.GetProductDetails(row.barcode);\n            const {\n              id,\n              name,\n              regular_price,\n              price,\n              sku,\n              slug,\n              stock_quantity,\n              sale_price,\n            } = res[0];\n            return {\n              id,\n              name,\n              regular_price,\n              price,\n              sku,\n              slug,\n              stock_quantity,\n              sale_price,\n              itemNo: row.itemNo,\n            };\n          } catch (error) {\n            // tempNotFoundProducts.push(row);\n            console.log(\"Couldn't fetch product from woodpress.\", row.itemNo);\n            return null;\n          }\n        })\n      );\n      setLoader(false);\n      setWooComProducts(items.filter((ele) => ele !== null));\n      // setNotFoundProducts(tempNotFoundProducts);\n    }\n\n    async function getPosProducts() {\n      setLoader(true);\n      let hasErrorOccured = false;\n      const items = await Promise.all(\n        newInventoryData\n          .filter((row) => !row.isForReview)\n          .map(async (row) => {\n            try {\n              const res = await inventoryService.GetPOSProductDetails(\n                row.barcode\n              );\n              console.log(\"fetched pos data\", res);\n              const { SKU, UPC, ITEMNAME, TOTALQTY, DEPNAME } = res[0];\n              return {\n                ...row,\n                COST: row.cp,\n                PRICE: row.sp,\n                SKU,\n                UPC,\n                ITEMNAME,\n                TOTALQTY:\n                  parseInt(row.qty) * parseInt(row.pieces) + parseInt(TOTALQTY),\n                itemNo: row.itemNo,\n                isNew: false,\n                BUYASCASE: 1,\n                CASEUNITS: row.pieces.toString(),\n                CASECOST: row.unitPrice.toString(),\n                DEPNAME,\n              };\n            } catch (error) {\n              hasErrorOccured = true;\n              return {\n                ...row,\n                COST: row.cp,\n                PRICE: row.sp,\n                SKU: row.posSku,\n                UPC: row.barcode,\n                ITEMNAME: row.description,\n                TOTALQTY: parseInt(row.qty) * parseInt(row.pieces),\n                itemNo: row.itemNo,\n                isNew: true,\n                BUYASCASE: 1,\n                CASEUNITS: row.pieces.toString(),\n                CASECOST: row.unitPrice.toString(),\n                DEPNAME: \"\",\n              };\n            }\n          })\n      );\n      if (hasErrorOccured) {\n        alert(\"Couldn't fetch some data from POS\");\n      }\n      setLoader(false);\n      setPosProducts(items.filter((ele) => ele !== null));\n    }\n    getProducts();\n    getPosProducts();\n  }, []);\n\n  if (redirect) {\n    return <Redirect to=\"/\" />;\n  }\n  if (loader) {\n    return <Spinner />;\n  }\n  return <div>{renderTableData()}</div>;\n};\n\nexport default UpdateInventory;\n","/Users/sahil/Desktop/icms/inventory-management/client/src/components/Navigation/Toolbar/Toolbar.js",["364"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid'\n\nimport NavigationItems from '../NavigationItems/NavigationItems'\nimport styles from './Toolbar.module.css'\nclass Toolbar extends Component {\n    render() {\n        // console.log(\"isAuthenticated\", this.props.isAuthenticated)\n        return (\n            <header className = {styles.Toolbar}>\n                <nav className = {styles.DesktopOnly}>\n                    <NavigationItems isAuth = {this.props.isAuthenticated}/>\n                </nav>\n            \n\n                \n                \n\n            </header>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.userId\n    }\n}\n\nexport default connect(mapStateToProps)(Toolbar);","/Users/sahil/Desktop/icms/inventory-management/client/src/utils/invoiceList.js",[],"/Users/sahil/Desktop/icms/inventory-management/client/src/services/axios.js",[],"/Users/sahil/Desktop/icms/inventory-management/client/src/utils/invoice-filters/chetak.js",["365","366"],"const data = [\n  {\n    1: \"ORDER DT \",\n    2: \"CUST \",\n    3: \"NO. \",\n    4: \"P.O. NO. \",\n    5: \"SHIP VIA \",\n    6: \"DATE SHIPPED \",\n    7: \"TERMS \",\n  },\n  {\n    1: \"10/08/2020 \",\n    2: \"NY246 \",\n    3: \"\",\n    4: \"\",\n    5: \"PK#934671 Driver \",\n    6: \"10/09/2020 \",\n    7: \"Bill to Bill/Net 30 \",\n  },\n  {\n    1: \"QTY. ORDERED \",\n    2: \"QTY. SHIPPED \",\n    3: \"ITEM \",\n    4: \"NO. \",\n    5: \"DESCRIPTION \",\n    6: \"UNIT PRICE \",\n    7: \"EXTENDED PRICE \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"61 \",\n    4: \"Deep Sna \",\n    5: \"Sev Thin 12 OZ (12) \",\n    6: \"30.09 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"DTB14 \",\n    4: \"Deep Sna \",\n    5: \"Total Bhel FP 14oz (12) \",\n    6: \"32.51 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"S18 \",\n    4: \"Deep Spi \",\n    5: \"Cor-Cumin Pwd 14oz (20) \",\n    6: \"44.19 \",\n    7: \"44.19 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"S14 \",\n    4: \"Deep Spi \",\n    5: \"Corianderpdr14oz (20) \",\n    6: \"30.99 \",\n    7: \"30.99 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"S16 \",\n    4: \"Deep Spi \",\n    5: \"Cumin Pwd 14oz (20) \",\n    6: \"52.99 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"S15 \",\n    4: \"Deep Spi \",\n    5: \"Cumin Seeds 14oz (20) \",\n    6: \"49.79 \",\n    7: \"49.79 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"S81 \",\n    4: \"Deep Spi \",\n    5: \"Dill Seeds 7 OZ (20) \",\n    6: \"19.89 \",\n    7: \"19.89 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"S25 \",\n    4: \"Deep Spi \",\n    5: \"Garam Masala 14 OZ (20) \",\n    6: \"66.20 \",\n    7: \"66.20 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"S167 \",\n    4: \"Deep Spi \",\n    5: \"KSHMIRIChiliPD14oz (20) \",\n    6: \"55.18 \",\n    7: \"55.18 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"S73 \",\n    4: \"Deep Spi \",\n    5: \"Methi Bhardo 7 OZ (20) \",\n    6: \"24.29 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"S32 \",\n    4: \"Deep Spi \",\n    5: \"Red Chili Crush7oz (20) \",\n    6: \"27.69 \",\n    7: \"27.69 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"S30 \",\n    4: \"Deep Spi \",\n    5: \"Red Chili X Hot7oz (20) \",\n    6: \"19.89 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"S78 \",\n    4: \"Deep Spi \",\n    5: \"Sesame Sds Wshd7oz (20) \",\n    6: \"22.09 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"S80 \",\n    4: \"Deep Spi \",\n    5: \"SesameSeedsNatr. 70(20) \",\n    6: \"19.89 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"S64 \",\n    4: \"Deep Spi \",\n    5: \"Whole Chilli 3.5oz (30) \",\n    6: \"24.98 \",\n    7: \"24.98 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"BAG \",\n    3: \"CW1 \",\n    4: \"Generic \",\n    5: \"DrywholeCoconut22L(1) \",\n    6: \"75.02 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"T53 \",\n    4: \"Horlicks \",\n    5: \"Horlicks Plain17. (24) \",\n    6: \"105.81 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"T53L \",\n    4: \"Horlicks \",\n    5: \"Horlicks Plain2.: (12) \",\n    6: \"99.26 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"T66 \",\n    4: \"Horlicks \",\n    5: \"HorlicksChoco.17.5 (24) \",\n    6: \"113.78 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"55M \",\n    4: \"Mirch Ma \",\n    5: \"AgraDalMooth 12oz (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"54M \",\n    4: \"Mirch Ma \",\n    5: \"Aloo Bhujia 12 oz. (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"20M \",\n    4: \"Mirch Ma \",\n    5: \"Bhadran Moong 12oz (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"31M \",\n    4: \"Mirch Ma \",\n    5: \"Bombay Bh-Puril2oz (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"13M \",\n    4: \"Mirch Ma \",\n    5: \"Boondi- - MM 12oz (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"29M \",\n    4: \"Mirch Ma \",\n    5: \"Channa-MN 12oz(15) \",\n    6: \"26.36 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"28M \",\n    4: \"Mirch Ma \",\n    5: \"Channadal-MM 12oz (15) \",\n    6: \"25.31 \",\n    7: \"25.31 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"12M \",\n    4: \"Mirch Ma \",\n    5: \"Chevda Mix-MM - 12oz (15) \",\n    6: \"25.31 \",\n    7: \"25.31 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"26M \",\n    4: \"Mirch Ma \",\n    5: \"Chuckry-Stcksmm12o - (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"27M \",\n    4: \"Mirch Ma \",\n    5: \"Corn Chvda-MM 12oz (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"19M \",\n    4: \"Mirch Ma \",\n    5: \"Dal Muth 12oz (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"15M \",\n    4: \"Mirch Ma \",\n    5: \"Ganthiya-MM 12oz (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"21M \",\n    4: \"Mirch Ma \",\n    5: \"GreenVatana- - MM12oz (15) \",\n    6: \"26.36 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"2 0 * \",\n    2: \"CAS \",\n    3: \"59M \",\n    4: \"Mirch Ma \",\n    5: \"Khatta Mitha 12oz (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"32M \",\n    4: \"Mirch Ma \",\n    5: \"Madras Mix 12oz (15) \",\n    6: \"26.36 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"73M \",\n    4: \"Mirch Ma \",\n    5: \"Methi Puri 12oz (15) \",\n    6: \"25.32 \",\n    7: \"25.32 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"22M \",\n    4: \"Mirch Ma \",\n    5: \"Moong Dal-MM - 12oz (15) \",\n    6: \"25.31 \",\n    7: \"25.31 \",\n  },\n  {\n    1: \"2 2 \",\n    2: \"CAS \",\n    3: \"78M \",\n    4: \"Mirch Ma \",\n    5: \"Nylon Thin Sev24oz (12) \",\n    6: \"29.10 \",\n    7: \"58.20 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"14M \",\n    4: \"Mirch Ma \",\n    5: \"Papadi - MM 12oz (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"57M \",\n    4: \"Mirch Ma \",\n    5: \"Peanut Bhujia 12oz (15) \",\n    6: \"26.36 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"\",\n    2: \"* \",\n    3: \"Price \",\n    4: \"increase \",\n    5: \"till May 2020 * \",\n    6: \"\",\n    7: \"\",\n  },\n];\n\nexport const chetak = () => {\n \n  let filteredData = data.map((line) => Object.values(line).join(\"\").trim());\n\n  let tableData = filteredData.map((row, index) => {\n    // console.log(\"Data received in row\", row)\n    row = row.replaceAll(\"* \", \"\")\n    const extendedPrice = row.split(\" \").splice(-1)[0];\n    const unitPrice = row.split(\" \").splice(-2)[0];\n    // var pcs = row.split(\" \").splice(-3)[0];\n    // var qtyOredered = row.split(\" \").splice(0)[0];\n    const qty = row.split(\" \").splice(1)[0];\n    const description = row.split(\" \").splice(4).slice(0, -2).join(\" \");\n    const itemNo = row.split(\" \").splice(2).slice(0, 2).join(\" \");\n    const pieces = 0\n    const markup = 0\n    if (isNaN(extendedPrice) || isNaN(unitPrice)) {\n      return null;\n    }\n    if (extendedPrice == \"0.00\" && qty == \"0\") {\n      return null;\n    }\n    return {\n      qty,\n      itemNo,\n      description,\n      pieces,\n      unitPrice,\n      extendedPrice,\n      markup,\n    };\n  });\n  return tableData.filter((data) => data !== null);\n};","/Users/sahil/Desktop/icms/inventory-management/client/src/utils/filterData.js",[],"/Users/sahil/Desktop/icms/inventory-management/client/src/components/Navigation/NavigationItems/NavigationItems.js",["367"],"import React, { useEffect, useState } from 'react'\n\nimport styles from './NavigationItems.module.css'\nimport NavigationItem from './NavigationItem/NavigationItem'\nimport CwIcon from \"../../../Images/CwIcon.png\"\n\nconst NavigationItems = (props) => {\n    const [user, setUser] = useState(props.isAuth)\n    useEffect(() => {\n        setUser(props.isAuth)\n        // console.log(\"User\", user)\n    }, [user])\n    return (\n      <ul className={styles.NavigationItems}>\n        <img className={styles.logo} src={CwIcon} alt=\"\" />\n        {props.isAuth ? (\n          <>\n            <NavigationItem link=\"/logout\">Logout</NavigationItem>\n            {/* <NavigationItem link=\"/pos\">Show Pos</NavigationItem> */}\n            <NavigationItem link=\"/handwritten\">Hand Written Invoices</NavigationItem>\n            <NavigationItem link=\"/invoicedata\">Invoice Data</NavigationItem>\n            {/* <NavigationItem link=\"/inventory\">Inventory</NavigationItem> */}\n            <NavigationItem link=\"/invoice\">Scan Invoice</NavigationItem>\n            \n          </>\n        ) : null}\n      </ul>\n    );\n};\n\nexport default NavigationItems;","/Users/sahil/Desktop/icms/inventory-management/client/src/utils/invoice-filters/krishna-foods.js",["368","369"],"/**krishna foods\n * 1: {1: \"Quantity \", 2: \"Item Code \", 3: \"Description \", 4: \"U/M \", 5: \"Price Each \", 6: \"Amount \"}\n2: {1: \"10 \", 2: \"Gur Rewari \", 3: \"Gur Rewari 400 gms 20 / ctn \", 4: \"\", 5: \"52.00 \", 6: \"520.00 \"}\n3: {1: \"3 \", 2: \"Sugar Rewari \", 3: \"Sugar rewari 400 gms 20 / ctn \", 4: \"\", 5: \"52.00 \", 6: \"156.00 \"}\n4: {1: \"6 \", 2: \"Gur Gajj \", 3: \"Dry Fruit Gur Gajjak 400 gms 20 / ctn \", 4: \"\", 5: \"70.00 \", 6: \"420.00 \"}\n5: {1: \"4 \", 2: \"Gurr Khasta Gajjak \", 3: \"Gur Khasta Gajjak 400 gms / 20 ctn \", 4: \"\", 5: \"70.00 \", 6: \"280.00 \"}\n6: {1: \"1 \", 2: \"seasme ladoo \", 3: \"Seasme ladoo Bikaji, 240 gm / 20 ctn \", 4: \"\", 5: \"50.00 \", 6: \"50.00 \"}\n7: {1: \"\", 2: \"Peanut Ladoo \", 3: \"Peanut Ladoo Bikaji 240 gms / 20 ctn \", 4: \"\", 5: \"50.00 \", 6: \"50.00 \"}\n8: {1: \"X \", 2: \"Rajgeron ladoo \", 3: \"Rajgeron Ladoo Bikaji 150 gm 20 / ctn \", 4: \"\", 5: \"50.00 \", 6: \"50.00 \"}\n9: {1: \"\", 2: \"Pea ChiKi \", 3: \"Peanut Chikki 400 gms / 20 ctn \", 4: \"\", 5: \"55.00 \", 6: \"110.00 \"}\n10: {1: \"\", 2: \"Se Chikki \", 3: \"Saesme Chikki 400 Gms / 20 Ctn \", 4: \"\", 5: \"65.00 \", 6: \"65.00 \"}\n11: {1: \"\", 2: \"Ass Chiki \", 3: \"Assorted Chikki 400 gms 20 / ctn \", 4: \"\", 5: \"65.00 \", 6: \"130.00 \"}\n12: {1: \"3 \", 2: \"Gobhi Parantha 4 \", 3: \"Gobhi Parantha (4 Pcs X 12 Pks ) Bikaji \", 4: \"\", 5: \"21.00 \", 6: \"63.00 \"}\n13: {1: \"\", 2: \"Methi Parantha 6 \", 3: \"Methi Parantha (6 Pcs X 12 Pks ) Bikaji \", 4: \"\", 5: \"19.80 \", 6: \"59.40 \"}\n14: {1: \"\", 2: \"Home Style Paran \", 3: \"Home Style Parantha ( 6 Pcs X 12 Pks ) Bikaji \", 4: \"\", 5: \"19.20 \", 6: \"57.60 \"}\n__proto__: Object\n1: {1: {…}, 2: {…}}\n2: {1: {…}, 2: {…}}\n3: {1: {…}, 2: {…}}\nlength: 4\n__proto__: Array(0)\nstatusCode: 200\n__proto__: Object\n\n */\nexport const krishnaFoods = (data) => {\n    let filteredData = data.filter((line) => line[6] !== \"\" && !isNaN(line[6]));\n        // .filter((line) => line./* text. */ includes(\"(\"))\n        // .map((line) => line./* text. */ trim());\n\n    let tableData = filteredData.map((row, index) => {\n        let qty = row[1].trim()\n        const itemNo = row[2].trim()\n        const description = row[3].trim()\n        const unitPrice = row[5].trim()\n        const extendedPrice = row[6].trim()\n        const pieces = 0;\n        const markup = 0;\n        if(isNaN(extendedPrice) || isNaN(unitPrice)){\n          return null\n        }\n        if (extendedPrice == \"0.00\" && qty == \"0\") {\n            return null;\n        }\n        if(isNaN(qty) || !qty) {\n          // itemNo = [qty, itemNo].join(\" \")\n          qty = (parseFloat(extendedPrice)/ parseFloat(unitPrice)).toFixed(0)\n           \n        }\n        return {\n          qty,\n          itemNo,\n          description,\n          pieces,\n          unitPrice,\n          extendedPrice,\n          markup,\n        };\n    });\n    console.table(filteredData)\n    return tableData.filter((data) => data !== null);\n    \n};","/Users/sahil/Desktop/icms/inventory-management/client/src/utils/filter.js",["370","371"],"export const applyFilter=(arr,options)=>{\n  console.log(\"IN APPLY FILTER data\");\n  console.log(\"af_arr : \",arr);\n  console.log(\"af_options : \",options);\n  let result=[];\n  for(let i=0;i<arr.length;i++){\n    let data=arr[i];\n    console.log(\"DATA\");\n    console.log(\"af_data\",data);\n\n    for(var prop in data){\n      console.log(\"PROP\");\n      console.log(\"af_index : \",prop);\n      console.log(\"af_object : \",Object.prototype.hasOwnProperty.call(data,prop));\n\n      if (Object.prototype.hasOwnProperty.call(data,prop)){\n        let str=convertRowToString(data[prop]);\n        console.log(\"STR\");\n        console.log(\"af_str : \",str);\n        str=str.replace(options.notAllowed, '');\n        str=str.replace(/ +(?= )/g,'');\n        str=str.trimStart();\n        str=str.trimEnd();\n        console.log(\"af_final str : \",str);\n        console.log(\"af_check_by_regex\",(options.regex).test(str));\n\n        if((options.regex).test(str)){\n          let obj={};\n\n          for(let j=0;j<options.header.length;j++){\n            console.log(\"af_index_options.header.length : \",j);\n            let x=\"\";\n\n            if(Array.isArray(options.body[j])){\n              let index=str.search(options.body[j][1]);\n              console.log(\"af_index_options.body[j][1]  : \",index);\n              x=str.substr(0,index);       // ***\n              str=str.substr(x.length);    // ***\n              console.log(\"af_x : \",x,\" af_str : \",str);\n            }else{\n              let y=str.split(\" \");\n              console.log(\"af_y : \",y);\n              str=\"\";\n              for(let k=0;k<options.body[j];k++)x+=y[k]+\" \";\n              console.log(\"af_x_array : \",x);\n              for(let k=options.body[j];k<y.length;k++)str+=y[k]+\" \";\n              console.log(\"af_str_array : \",str);\n            }\n            x=x.trimStart();\n            x=x.trimEnd();\n            str=str.trimStart();\n            str=str.trimEnd();\n            console.log(x);\n            console.log(str);\n            obj[options.header[j]]=x.toUpperCase();\n            console.log(\"af_x.toUpperCase()\",x.toUpperCase());\n            console.log(\"obj[options.header[j]] : \",obj[options.header[j]]);\n          }\n          console.log(obj);\n          result.push(obj);\n        }\n      }\n    }\n  }\n  console.log(\"IN APPLY FILTER\");\n  console.log(\"af_result\",result);\n  console.log(result);\n  return result;\n}\nconst convertRowToString=(obj)=>{\n  let str=\"\";\n  for (var prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj,prop)){\n      str+=obj[prop]+\" \";\n    }\n  }\n  //remove multiple instances of multiple space with single space\n  str=str.replace(/ +(?= )/g,'');\n  str=str.trimStart();\n  str=str.trimEnd();\n  return str;\n}\nexport const emptyColumn=(arr)=>{\n  console.log(\"IN EMPTY CLOUMN\");\n  console.log(\"ec_arr\",arr);\n  let data=[];\n  for(let i=0;i<arr.length;i++){\n    let obj={};\n    let table=arr[i];\n    console.log(\"TABLE\");\n    console.log(\"ec_table : \",table);\n    for(var prop in table){\n      console.log(\"PROP\");\n      console.log(prop);\n      if (Object.prototype.hasOwnProperty.call(table,prop)){\n        let str=table[prop][1];\n        console.log(\"ec_str : \",str);\n        console.log(str);\n        str=str.replace(/[`~!@#\\$%^&=:;'<>?,\\*]/gi, '');\n        str=str.replace(/ +(?= )/g,'');\n        str=str.trimStart();\n        str=str.trimEnd();\n        let b=str.split(\" \");\n        console.log(\"B\");\n        console.log(\"ec_b : \",b);\n        str=\"\";\n        for(let j=1;j<b.length;j++)str+=b[j];\n        \n        let o=Object.assign({},table[prop]);\n        console.log(\"O\");\n        console.log(\"ec_o : \",o);\n        o[1]=str;\n        console.log(\"STR\");\n        console.log(\"ec_str2 : \",str);\n        obj[prop]=o;\n        console.log(\"OBJ\");\n        console.log(\"ec_OBJ : \",obj);\n      }\n    }\n    console.log(\"EMPTY COLUMN\" + obj);\n    console.log(\"EMPTY COLUMN\" + data);\n    data.push(obj);\n  }\n  return data;\n}","/Users/sahil/Desktop/icms/inventory-management/client/src/utils/invoice-filters/aahubarah-usa.js",[],"/Users/sahil/Desktop/icms/inventory-management/client/src/utils/optionData.js",["372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781","782"],"export const optionData={\n  \"aahubarah-usa\":{\n    regex:/^[A-Z0-9]+ [0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\n    header:[\"itemNo\",\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=;'<>?,\\*\\+\\-]/gi\n  },\n  \"ny-zara-food\":{\n    regex:/^[0-9]+ [A-Z0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*]/gi\n  },\n  \"vibrant-enterprise\":{\n    regex:/^[0-9]+ [A-Z]+ .+ [0-9\\.]+ [0-9\\.]+$/,\n    header:[\"qty\",\"um\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*]/gi\n  },\n  \"karison-foods\":{\n    regex:/^[0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\n    header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*\\-]/gi\n  },// use empty column\n  \"gurme-guru\":{\n    regex:/^.+ [0-9\\.]+ [0-9\\.]+$/,\n    header:[\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*]/gi\n  },// use empty column\n  \"katzman-berry-corp\":{\n    regex:/^[0-9\\.]+ .+ [A-Z]+$/,\n    header:[\"qty\",\"description\",\"origin\"],\n    body:[1,[0,/ [A-Z]+$/],1],\n    notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*]/gi\n  },\n  \"mels-ice-cream\":{\n    regex:/^.+ [A-Z0-9]+ [0-9]+ [0-9\\.]+$/,\n    header:[\"description\",\"itemNo\",\"ct\",\"cost\"],\n    body:[[0,/ [A-Z0-9]+ [0-9]+ [0-9\\.]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*]/gi\n  },\n  \"bedessee\":{\n    regex:/^[A-Z0-9]+ .+ [0-9\\.]+ [0-9]+ [0-9\\.]+ [0-9\\.]+ [0-9\\.]+$/,\n    header:[\"itemNo\",\"description\",\"unit\",\"case\",\"unitPrice\",\"casePrice\",\"extendedPrice\"],\n    body:[1,[0,/ [0-9\\.]+ [0-9]+ [0-9\\.]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*]/gi\n  },\n  \"shakti-group-usa\":{\n    regex:/^[0-9].+ [A-Z0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"qty\",\"lotNo\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,1,3,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\n  },\n  \"spicy-sense\":{\n    regex:/^[0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,3,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:();\"\"'<>*?,\\*]/gi\n  },\n  \"on-time-distribution\":{\n    regex:/^[0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,3,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"pexco-inc\":{\n    regex:/^[0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,3,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:();\"\"'<>*?,\\*]/gi\n  },\n  \"krishna-aahar\":{\n    regex:/^.+ [0-9\\.]+ [0-9\\.]+$/,\n    header:[\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[3,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*]/gi\n  },// use empty column\n  \"jaan-distributors\":{\n    regex:/^.+ [0-9\\.]+ [0-9\\.]+$/,\n    header:[\"qty\",\"description\",\"u/m\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,[0,/ [a-zA-Z]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*\\-]/gi\n  },\n  \"goyal-group\":{\n    regex:/^.+ [0-9\\.]+ [0-9\\.]+$/,\n    header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*]/gi\n  },// use empty column\n  \"new-reliance-traders\":{\n    regex:/^[A-Z0-9-]+ .+ [0-9\\.]+ [A-Z]+ [0-9\\.]+$/,\n    header:[\"itemNo\",\"description\",\"unitPrice\",\"unit\",\"extendedPrice\"],\n    body:[1,[0,/ [0-9\\.]+ [A-Z]+ [0-9\\.]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*\\/]/gi\n  },// use empty column\n  \"usa-halal-foods\":{\n    regex:/^[A-Z]+ .+ [0-9]+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\n    header:[\"itemNo\",\"description\",\"cases\",\"lb\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,[0,/ [0-9]+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*]/gi\n  },\n  \"turkana-food\":{\n    regex:/^[0-9]+ [A-Z]+ [A-Z]+ .+ [0-9]+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\n    header:[\"itemNo\",\"class\",\"brand\",\"description\",\"barcode\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,1,1,[0,/ [0-9]+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\n  },\n  \"temin-distribution\":{\n    regex:/^.+ [0-9\\.]+ [0-9\\.]+ [0-9\\.]+$/,\n    header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n    body:[[0,/ [0-9\\.]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\n  },\n  \"surati\":{\n    regex:/^[0-9\\.]+ .+ [0-9\\.]+ [A-Z]+ [0-9\\. ]+$/,\n    header:[\"qty\",\"description\",\"unitPrice\",\"unit\",\"discount\"],\n    body:[1,[0,/ [0-9\\.]+ [A-Z]+ [0-9\\. ]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\n  },\n  \"shata-traders\":{\n    regex:/^.+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\n    header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n    body:[[0,/ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\n  },// use empty column\n  \"vadilal\":{\n    regex:/^[0-9]+ [0-9]+ .+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"sno\",\"itemNo\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,1,[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\n  },\n  \"rollin-dairy\":{\n    regex:/^[0-9]+ [0-9\\.]+ .+ [0-9]+ [0-9\\.]+$/, \n    header:[\"itemNo\",\"del\",\"description\",\"cs\",\"extendedPrice\"],\n    body:[1,1,[0,/ [0-9]+ [0-9\\.]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*\\-]/gi\n  },\n  \"putul-distributors\":{\n    regex:/^[0-9]+ [A-Z 0-9]+ .+ [0-9\\.B]+ [0-9\\.]+ [0-9\\.]+$/, \n    header:[\"qty\",\"itemNo\",\"description\",\"rate\",\"UnitPrice\",\"extendedPrice\"],\n    body:[1,3,[0,/ [0-9\\.B]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"referred-beverage\":{\n    regex:/^[0-9]+ [0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/, \n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"pams-creations\":{\n    regex:/^[0-9]+ .+ [0-9]+ [0-9]+$/, \n    header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,[0,/ [0-9]+ [0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*\\-]/gi\n  },\n  \"pgl-trade\":{\n    regex:/^[A-Z0-9]+ .+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\n    header:[\"sku\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,[0,/ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"nirav-indian-groceries\":{\n    regex:/^.+ [0-9\\.]+ [A-Z]+ [0-9\\.]+ [0-9\\.]+$/,\n    header:[\"description\",\"qty\",\"measure\",\"unitPrice\",\"extendedPrice\"],\n    body:[[0,/ [0-9\\.]+ [A-Z]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"new-york-wholesale\":{\n    regex:/^.+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\n    header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n    body:[[0,/ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"mr-pickle\":{\n    regex:/^[0-9]+ [A-Z]+ .+ [0-9\\.]+ [0-9\\.]+$/,\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"leblon-foods\":{\n    regex:/^[0-9]+ [0-9]+ .+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\n    header:[\"itemNo\",\"upCode\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,1,[0,/ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"krishna-food-corp\":{\n    regex:/^[A-Za-z ]+ .+ [0-9\\.]+ [0-9\\.]+$/,\n    header:[\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[2,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },//use empty column\n  \"km-distribution-usa\":{\n    regex:/^[0-9]+ [A-Z-0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"jcw-import-and-export\":{\n    regex:/^[0-9]+ [A-Z0-9-]+ .+ [0-9\\.]+ [0-9\\.T]+$/,\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,1,[0,/ [0-9\\.]+ [0-9\\.T]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"family-five\":{\n    regex:/^.+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\n    header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n    body:[[0,/ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  // \"empire-food-importers\":{\n  //   regex:/^.+ [0-9]+ [0-9\\.]+$/,\n  //   header:[\"description\",\"qty\",\"unitPrice\"],\n  //   body:[[0,/ [0-9]+ [0-9\\.]+$/],1,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  // },\n  \"empire-food-importers\":{\n    regex:/^[A-Za-z]+ .+ [0-9\\.]+[0-9]+ [0-9\\.]+[0-9]+$/,\n    header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n    body:[[0,/ [0-9]+ [0-9\\.]+[0-9]+ [0-9\\.]+[0-9]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"american-pure-honey\":{\n    regex:/^[A-Z0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\n    header:[\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*\\-]/gi\n  },//use empty column\n  \"galil\":{\n    regex:/^[0-9-]+[0-9]+ [0-9]+ .+( [0-9]+ )?[0-9\\.]+[0-9]+ [0-9\\.]+[0-9]+$/,\n    header:[\"itemNo\",\"qty\",\"extra\",\"pack\",\"description\",\"unit\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,1,1,2,[0,/ ( [0-9]+ )?[0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"hellenic\":{\n    regex:/^.+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n    body:[[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"hill-top-farms\":{\n    regex:/^.+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n    body:[[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"house-of-spices\":{\n    regex:/^[0-9]+ [0-9A-Z]+ .+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"sno\",\"itemNo\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,1,[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"indian-food-and-spices\":{\n    regex:/^[0-9.]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"i-sifol\":{\n    regex:/^[0-9]+\\.[0-9]+ [A-Z0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"ritesource-corp\":{\n    regex:/^.+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n    body:[[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"koryeo\":{\n    regex:/^[A-Z0-9]+ [0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"itemNo\",\"qty\",\"description\",\"unitPrice\",\"lb\",\"extendedPrice\"],\n    body:[1,1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"krinos-foods\":{\n    regex:/^[0-9A-Z]+ [0-9]+ .+ [0-9]+\\.[0-9]+ [A-Z]+ [0-9]+\\.[0-9]+$/,\n    header:[\"itemNo\",\"qty\",\"description\",\"unitPrice\",\"per\",\"extendedPrice\"],\n    body:[1,1,[0,/ [0-9]+\\.[0-9]+ [A-Z]+ [0-9]+\\.[0-9]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"loumidis-foods\":{\n    regex:/^[0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+ [A-Z]+ [A-Z0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"qtyOrdered\",\"qty\",\"tax\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,1,1,1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:();\"\"'<>*?,\\*]/gi\n  },\n  \"maharaja-food-importers\":{\n    regex:/^[A-Z0-9]+ .+ [0-9.]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"itemNo\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,[0,/ [0-9.]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:();\"\"'<>*?,\\*]/gi\n  },\n  \"nassau-candy\":{\n    regex:/^[0-9]+ [A-Z]+ [0-9]+ [0-9]+ .+ [0-9]+\\.[0-9]+ [A-Z]+ [0-9]+\\.[0-9]+$/,\n    header:[\"qtyOrdered\",\"unit\",\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"Unit\",\"extendedPrice\"],\n    body:[1,1,1,1,[0,/ [0-9]+\\.[0-9]+ [A-Z]+ [0-9]+\\.[0-9]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:();\"\"'<>*?,\\*]/gi\n  },\n  \"nupur-trading\":{\n    regex:/^[0-9]+ [A-Z0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+ [A-Z0-9()]+ [0-9]+\\.[0-9]+$/,\n    header:[\"sno\",\"itemNo\",\"description\",\"unitPrice\",\"qty\",\"extra\",\"extendedPrice\"],\n    body:[1,1,[0,/ [0-9]+\\.[0-9]+ [0-9]+ [A-Z0-9()]+ [0-9]+\\.[0-9]+$/],1,1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"optima-foods\":{\n    regex:/^[A-Z0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+ [A-Z]+ [0-9/.]+ [A-Za-z]+ .+ [A-Z]+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"itemNo\",\"qtyOrdered\",\"qty\",\"uom\",\"packSize\",\"description\",\"brand\",\"unit\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,1,1,1,2,[0,/ [A-Z]+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:();/\"\"'<>*?,\\*]/gi\n  },\n  \"gaint-farm\":{\n    regex:/^.+ [0-9]+ [0-9]+$/,\n    header:[\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[[0,/ [0-9]+ [0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\/\\*\\+\\-]/gi\n  },//use empty column\n  \"farmers-choice-dairy\":{\n    regex:/^.+ [0-9]+ [0-9\\.]+$/,\n    header:[\"description\",\"pack\",\"extendedPrice\"],\n    body:[[0,/ [0-9]+ [0-9\\.]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\/\\*\\+\\-]/gi\n  },\n  \"duty-free-produce\":{\n    regex:/^[0-9]+ .+ [0-9]+ [0-9]+$/,\n    header:[\"sno\",\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,1,[0,/ [0-9]+ [0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\/\\*\\+\\-]/gi\n  },\n  \"crestwood-farms\":{\n    regex:/^.+ [0-9]+ [0-9]+ [0-9\\.]+$/,\n    header:[\"description\",\"case\",\"qty\",\"extendedPrice\"],\n    body:[[0,/ [0-9]+ [0-9]+ [0-9\\.]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\/\\*\\+\\-]/gi\n  },\n  \"cream-o-land\":{\n    regex:/^[0-9]+ .+ [0-9]+\\/ [0-9]+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\n    header:[\"itemNo\",\"description\",\"case\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,[0,/ [0-9]+\\/ [0-9]+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],2,1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*\\+\\-]/gi\n  },\n  \"big-apple-distributors\":{\n    regex:/^.+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\n    header:[\"itemNo\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n    body:[2,[0,/ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*\\+\\-]/gi\n  },\n  \"advance-foods\":{\n    regex:/^[0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\n  },\n  \"chetak\":{\n    regex:/^[0-9]+ [A-Z]+ [A-Z0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,2,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\n  },//use empty column\n  \"singh-and-singh\":{\n    regex:/^[0-9]+ [A-Z]+ [A-Z0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,[0,/[A-Z]+( )?-( )? .+/],[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\n  },\n\n  \"sea-mark\":{\n    regex:/^[0-9]+ [0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"qty\",\"itemNo\",\"description\",\"extra\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\n  },\n  \"best-foods\":{\n    regex:/^[0-9]+ .+ [A-Z]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"itemNo\",\"description\",\"unit\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,[0,/ [A-Z]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\n  },//use empty column\n  \"joy-gourment-foods\":{\n    regex:/^.+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\n  },//use empty column\n  \"katzam-foods\":{\n    regex:/^[0-9]{2}\\/[0-9]{2}\\/[0-9]{2} [0-9]+ [0-9]+ .+ [A-Z]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"date\",\"ticket\",\"qty\",\"description\",\"origin\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,1,1,[0,/ [A-Z]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\n  },\n  \"baroody\":{\n    regex:/^.+ [0-9]+(\\.|\\,)[0-9]+ [0-9]+(\\.|\\,)[0-9]+$/,\n    header:[\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[[0,/ [0-9]+(\\.|\\,)[0-9]+ [0-9]+(\\.|\\,)[0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?\\*]/gi\n  },//replace , by . and use empty column\n  \"east-end\":{\n    regex:/^[A-Z0-9]+ .+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"itemNo\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\n  },\n  \"indian-spice-trading\":{\n    regex:/^.+ [0-9]+\\.[0-9]+ (.+ |.*)[0-9]+\\.[0-9]+$/,\n    header:[\"description\",\"unitPrice\",\"detail\",\"extendedPrice\"],\n    body:[[0,/ [0-9]+\\.[0-9]+ (.+ |.*)[0-9]+\\.[0-9]+$/],1,[0,/ [0-9]+\\.[0-9]+$/],1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\n  },//use empty column\n  \"grocer-mill\":{\n    regex:/^.+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n    body:[[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\n  },//use empty column\n  \"meenaxi-enterprise\":{\n    regex:/^.+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\n  },//use empty column\n  \"rajbhog-food\":{\n    regex:/^[0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+ [A-Z0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"qtyOrdered\",\"qty\",\"itemNo\",\"description\",\"detail\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,1,1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\n  },\n  \"moda-food\":{\n    regex:/^.+ [0-9]+ [0-9]+\\.[0-9]+ [0-9].+$/,\n    header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n    body:[[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9].+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:();'<>?,\\*]/gi\n  },\n  \"us-gourmet-food\":{\n    regex:/^.+ [A-Z]+: [0-9]+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"description\",\"itemNo\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n    body:[[0,/ [A-Z]+: [0-9]+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=;'<>?,\\*]/gi\n  },\n  \"delight-food\":{\n    regex:/^.+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\n  },//use empty column\n  \"jalaram-produce\":{\n    regex:/^.+ [0-9]+ [a-zA-Z]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"description\",\"qty\",\"detail\",\"unitPrice\",\"extendedPrice\"],\n    body:[[0,/ [0-9]+ [a-zA-Z]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\n  },\n  \"vijay-food\":{\n    regex:/^[0-9]+ .+ [A-Z0-9]+ [0-9]+\\.[0-9]+ [0-9]+$/,\n    header:[\"qty\",\"description\",\"itemNo\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,[0,/ [A-Z0-9]+ [0-9]+\\.[0-9]+ [0-9]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\n  },\n  // ogininal\n  // \"radhey-food\":{\n  //   regex:/^[0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n  //   header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\n  // },\n  \"radhey-food\":{\n    regex:/^[0-9]+ .+ [0-9]+\\.[0-9]\\[0-9]+\\.[0-9]+$/,\n    header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\n  },\n  \"vintage-food\":{\n    regex:/^[0-9]+ [a-z]+ [0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"qty\",\"unit\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,1,1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\n  },\n  \"delight-distribution\":{\n    regex:/^.+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n    body:[[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\n  },\n  \"dsa-snacks\":{\n    regex:/^.+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n    body:[[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\n  },\n  // \"dawn-food\":{\n  //   regex:/^[0-9]+ [0-9]+ .+ [A-Z]+ [A-Z]+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n  //   header:[\"qtyOrdered\",\"qty\",\"description\",\"tax\",\"detail\",\"material\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[1,1,[0,/ [A-Z]+ [A-Z]+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1,1,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\n  // },\n  \"dawn-food\":{\n    regex:/^[0-9]+ [0-9]+ [0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"qtyOrdered\",\"qty\",\"ordum\",\"description\",\"itemNo\",\"unitPrice\",\"extendedPrice\"],\n    body:[2,1,1,[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\n  },\n  // \"aliments\":{\n  //   regex:/^.+ [0-9]+ [0-9]+\\.[0-9]+ [a-z]+ [0-9]+\\.[0-9]+$/,\n  //   header:[\"description\",\"qty\",\"unitPrice\",\"extra\",\"extendedPrice\"],\n  //   body:[[0,/ [0-9]+ [0-9]+\\.[0-9]+ [a-z]+ [0-9]+\\.[0-9]+$/],1,1,1,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;/'<>?,\\*]/gi\n  // },\n  \"aliments\":{\n    regex:/^[A-Z0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"itemNo\",\"description\",\"upcCase\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,[0,/(( [A-Z0-9]+( )?(-)?( )?[0-9-]+)+)? ([a-zA-Z]+ [0-9]+)? [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],2,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;/'<>?,\\*]/gi\n  },// use emptyColumn true\n  \"bartlett-dairy\":{\n    regex:/^[0-9]+ .+ [0-9]+ [0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"itemNo\",\"description\",\"case\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,[0,/ [0-9]+ [0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;/'<>?,\\*]/gi\n  },\n  // \"amtrade\":{\n  //   regex:/^[0-9]+ [A-Z]+ [A-Z0-9]+ [A-Z ]+ .+ [A-Z0-9a-z]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n  //   header:[\"qty\",\"ctn\",\"extra\",\"type\",\"description\",\"size\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[1,1,1,2,[0,/ [A-Z0-9a-z]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;/'<>?,\\*]/gi\n  // },\n  \"amtrade\":{\n    regex:/^[0-9]+ [A-Z0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"qty\",\"ctn\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,1,1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\n  },\n  \"dara-food\":{\n    regex:/^[0-9]+ .+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"itemNo\",\"description\",\"qty\",\"each\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\n  },\n  \"baraka-cold\":{\n    regex:/^.+ [0-9].+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n    body:[[0,/ [0-9].+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\n  },\n  \"restwood-farms\":{\n    regex:/^.+ [0-9]+ [0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"description\",\"case\",\"qty\",\"extendedPrice\"],\n    body:[[0,/ [0-9]+ [0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:/;'<>?,\\*]/gi\n  },\n  \"babco-foods\":{\n    regex:/^[0-9\\.]+[0-9]+ [A-Z0-9(\\.)]+ .+ [0-9\\.]+[0-9]+ [0-9\\.]+[0-9]+$/,\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,1,[0,/ [0-9\\.]+[0-9]+ [0-9\\.]+[0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\n  },\n  \"adelman-foods\":{\n    regex:/^[0-9]+ .+ [0-9A-Za-z]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"qty\",\"description\",\"packing\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,[0,/ [0-9A-Za-z]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;/'<>?,\\*]/gi\n  },\n  \"anns-eco-store\":{\n    regex:/^[A-Z]+ [A-Z0-9]+ .+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"itemNo\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n    body:[2,[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"anmol-distributors\":{\n    regex:/^[0-9.]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"bakemark\":{\n    regex:/^[A-Z0-9]+ [0-9]+\\.[0-9]+ [A-Z]+ [A-Z]+ .+ [0-9]+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"slot\",\"qty\",\"unit\",\"brand\",\"description\",\"size\",\"itemNo\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,1,1,1,[0,/ [0-9]+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:/;\"\"'<>*?,\\*]/gi\n  },\n  \"vidyas\":{\n    regex:/^[0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"unique-importer\":{\n    regex:/^[0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"two-brother-wholesale\":{\n    regex:/^[0-9.]+ [0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"symco-distributor\":{\n    regex:/^[0-9]+ [A-Z.]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"spicy-world\":{\n    regex:/^[0-9]+\\.[0-9]+ [A-Z0-9]+ .+ [A-Z]+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"qty\",\"itemNo\",\"description\",\"unit\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,1,[0,/ [A-Z]+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],2,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"solid-trade\":{\n    regex:/^[A-Z0-9-]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\n     notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },//use empty column\n  \"slaughter-house\":{\n    regex:/^[0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+\\.[0-9]+$/,\n    header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+\\.[0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"shreeji-jay\":{\n    regex:/^.+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n    body:[[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"shine-foods\":{\n    regex:/^.+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n    body:[[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"sankaj\":{\n    regex:/^[0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"ron-foods\":{\n    regex:/^.+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n    body:[[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"priya-foods\":{\n    regex:/^[A-Z]+ [A-Z]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[2,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },//use empty column\n  \"ranemusic\":{\n    regex:/^[0-9]+ [A-Z]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"raja-foods\":{\n    regex:/^[0-9]+ .+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"mpn\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n  \"produce-n-more\":{\n    regex:/^[0-9]+ [0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  },\n\n  //\n  // \"pure-ghee\":{\n  //   regex:/^[0-9-]+ .+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\n  //   header:[\"itemNo\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[1,[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\n  // },\n  \"arya-international\":{\n    regex:/^[A-Z-0-9]+ .+$/,\n    header:[\"qty\",\"description\"],\n    body:[1,[0,/$/]],\n    notAllowed:/[`~!@#\\$%^&=:();\"\"'<>*?,\\*]/gi\n  },\n  // \"katzman-produce\":{\n  //   regex:/^[0-9\\.]+ .+ [A-Z]+$/,\n  //   header:[\"qty\",\"description\",\"origin\"],\n  //   body:[1,[0,/ [A-Z]+$/],1],\n  //   notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*]/gi\n  // },\n  \"soko-packaging\":{\n    regex:/^[0-9]+ [0-9A-Z]+ .+ [0-9\\.]+ [0-9\\.]+$/,\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n    body:[1,1,[0,/[0-9\\.]+ [0-9\\.]+$/],1,1],\n    notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*]/gi\n  },\n  // \"dava-west-indian\":{\n  //   regex:/^[A-Za-z A-Za-z A-Za-z]+ .+ [0-9]+ [0-9\\.]+ [0-9 x 0-9 a-zA-Z]+ [0-9\\.]+$/,\n  //   header:[\"itemNo\",\"description\",\"qty\",\"unitPrice\",\"size\",\"extendedPrice\"],\n  //   body:[3,[0,/ [0-9]+ [A-Z A-Z 0-9\\.]+ [0-9 x 0-9 a-zA-Z]+ [0-9\\.]+$/],1,1,4,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*]/gi\n  // },\n  // \"uyt-imports-nyc\":{\n  //   regex:/^[0-9]+ [A-Z-0-9]+ .+ [0-9]+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"sno\",\"sku\",\"particular\",\"pack\",\"pcs\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[1,1,[0,/[0-9]+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\n  // },\n  // \"hja-sales-corp\":{\n  //   regex:/^[0-9]+ [0-9]+ [0-9 0-9A-Z\\.]+ .+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"itemNo\",\"qty\",\"pack\",\"description\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[1,1,2,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\n  // },\n  // \"raja-food-vegetables\":{\n  //   regex:/^[0-9]+ .+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"mpn\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[1,[0,/ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\n  // },\n  // \"himalaya-international\":{\n  //   regex:/^[A-Za-z A-Za-z 0-9]+ .+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"itemNo\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[3,[0,/ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\n  // },\n  // \"hellenic-treasures\":{\n  //   regex:/^[0-9/0-9/0-9]+ .+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"date\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[1,[0,/ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*]/gi\n  // },\n  // \"k&s-wholesale\":{\n  //   regex:/^[0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\n  // },\n  // \"los-olivos-ltd\":{\n  //   regex:/^[0-9-A-Z0-9]+ .+ [0-9]+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"item\",\"description\",\"qty\",\"unit\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[1,[0,/ [0-9]+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\n  // },\n  // \"sirob-imports-inc\":{\n  //   regex:/^[0-9\\.]+ [0-9\\.]+ [0-9\\.]+ [A-Z-A-Z-0-9]+ .+ [0-9\\.]+ [A-Z]+ [0-9\\.]+$/,\n  //   header:[\"qtyOrdered\",\"qty\",\"bio\",\"itemNo\",\"description\",\"unitPrice\",\"unit\",\"extendedPrice\"],\n  //   body:[1,1,1,1,[0,/ [0-9\\.]+ [A-Z]+ [0-9\\.]+$/],1,1,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\n  // },\n  \"az-metro-distribution\":{\n    regex:/^[0-9]+ [0-9]+ .+ [0-9]+ [0-9\\.]+ [0-9\\.]+ [0-9\\.]+ [0-9\\.]+ [0-9\\.]+$/,\n    header:[\"cases\",\"code\",\"description\",\"upc\",\"unitPrice\",\"discount\",\"deposit\",\"tax\",\"extendedPrice\"],\n    body:[1,1,[0,/ [0-9]+ [0-9\\.]+ [0-9\\.]+ [0-9\\.]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1,1,1,1],\n    notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\n  },\n  // \"trading-corp\":{\n  //   regex:/^[A-Z0-9-A-Z0-9a-z]+ .+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"item\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[1,[0,/ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\n  // },\n  // \"nassau\":{\n  //   regex:/^[0-9]+ [A-Z]+ [0-9]+ [0-9]+ .+ [0-9\\.]+ [A-Z]+ [0-9\\.]+$/,\n  //   header:[\"qtyOrdered\",\"unit\",\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"priceUnit\",\"extendedPrice\"],\n  //   body:[1,1,1,1,[0,/ [0-9\\.]+ [A-Z]+ [0-9\\.]+$/],1,1,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\n  // },\n  // \"lucky-Traders\":{\n  //   regex:/^[0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"qtY\",\"description\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\n  // },\n  // \"tropicana\":{\n  //   regex:/^.+ [0-9]+ [0-9. /a-z]+$/,\n  //   header:[\"description\",\"qty\",\"unitPrice\"],\n  //   body:[[0,/[0-9]+ [0-9. /a-z]+$/],1,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*]/gi\n  // },\n  // \"karison-food-Snacks\":{\n  //   regex:/^.+ [0-9\\.]+ [0-9\\.]+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"name\",\"unitPrice\",\"oz\",\"case\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[[0,/[0-9\\.]+ [0-9\\.]+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1,1,1],\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\n  // },\n  // \"m-sy-marketing\":{\n  //   regex:/^[A-Z A-Z 0-9a-z]+ .+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"activity\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[3,[0,/ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\n  // },\n  // \"concept-food-US\":{\n  //   regex:/^.+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[[0,/[0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\n  // },\n  // \"good-luck-int\":{\n  //   regex:/^[0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"cases\",\"description\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\n  // },\n  // \"preferred-beverage-dist\":{\n  //   regex:/^[0-9]+ [0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[1,1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\n  // },\n  // \"grace-lafe\":{\n  //   regex:/^[0-9]+ [0-9]+ .+ [0-9\\.]+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"upc\",\"itemNo\",\"description\",\"unitPrice\",\"discount\",\"extendedPrice\"],\n  //   body:[1,1,[0,/ [0-9\\.]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\n  // },\n  // \"tuscan\":{\n  //   regex:/^[0-9 A-Z A-Z A-Z A-Z-0-9]+ .+ [0-9]+ [0-9\\. A-Za-z]+ [0-9\\.]+$/,\n  //   header:[\"itemNo\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[7,[0,/ [0-9]+ [0-9\\. A-Za-z]+ [0-9\\.]+$/],1,2,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\n  // },// not complete\n  // \"meenaxi-Enterprise\":{\n  //   regex:/^[0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\n  // },\n  // \"sa-distribution\":{\n  //   regex:/^[0-9]+ [A-Z A-Z A-Z A-Z 0-9 A-Z]+ .+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[1,6,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\n  // },\n  // \"triboro-wholesale\":{\n  //   regex:/^.+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[[0,/[0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\n  // },\n  // \"kadakia-international-group\":{\n  //   regex:/^.+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[[0,/[0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\n  // },\n  // \"samar-trading-corp\":{\n  //   regex:/^[0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\n  // },\n  // \"apna-bazar\":{\n  //   regex:/^[A-Z-A-Z]+ .+ [0-9]+ [0-9\\.]+ [0-9\\.T]+$/,\n  //   header:[\"itemNo\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[1,[0,/ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*]/gi\n  // },//not complete\n  // \"aroma-flavor\":{\n  //   regex:/^.+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[[0,/[0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\n  // },not working properly\n  // \"northeast-banana\":{\n  //   regex:/^[0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\n  // },\n  // \"karison-food-snacks2\":{\n  //   regex:/^[0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\n  // },\n  // \"lezza-food\":{\n  //   regex:/^.+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[[0,/[0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\n  // },\n  // \"hamd-distribution\":{\n  //   regex:/^.+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[[0,/[0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\n  // },\n  // \"baawarchi\":{\n  //   regex:/^.+ [A-Z0-9]+ [0-9\\.]+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"description\",\"itemNo\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[[0,/[A-Z0-9]+ [0-9\\.]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1,1],\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\n  // },\n  // \"mfried-store-fixture-inc\":{\n  //   regex:/^[0-9]+ [A-Z0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[1,1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\n  // },\n  // \"gurme\":{\n  //   regex:/^[0-9]+ [A-Z0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[1,1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\n  // },\n  // \"crown-of-east\":{\n  //   regex:/^.+ [A-Z]+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"description\",\"um\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[[0,/[A-Z]+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1,1],\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\n  // },\n  // \"jcw-importandexport\":{\n  //   regex:/^[0-9]+ [0-9A-Z-]+ .+ [0-9\\.]+ [0-9\\.T]+$/,\n  //   header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[1,1,[0,/ [0-9\\.]+ [0-9\\.T]+$/],1,1],\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\n  // },\n  // \"guru-nanak\":{\n  //   regex:/^[0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\n  // },\n  // \"valente-yeast-inc\":{\n  //   regex:/^[0-9]+ [0-9]+ [0-9]+ [A-Z]+ [A-Z]+ .+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"mfgId\",\"qtyOrdered\",\"qty\",\"um\",\"brand\",\"Description\",\"itemNo\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[1,1,1,1,1,[0,/ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\n  // },\n  // \"online-mr-inc\":{\n  //   regex:/^[0-9]+ [0-9A-Z A-Z]+ .+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[1,2,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\n  // },\n  // \"business-international\":{\n  //   regex:/^[0-9]+ [0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[1,1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\n  // },\n  // \"bhavani-fruit-vegetables\":{\n  //   regex:/^[0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\n  // },\n  // \"best-cakes-distribution\":{\n  //   regex:/^.+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[[0,/ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\n  // },\n  // \"musco-food-corporation\":{\n  //   regex:/^[0-9]+ [A-Z A-Z]+ .+ [0-9/A-Z]+ [0-9\\.]+ [0-9\\.]+ [A-Z]+ [0-9\\.]+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"id\",\"brand\",\"description\",\"pack\",\"qtyOrdered\",\"qty\",\"um\",\"unitPrice\",\"casePrice\",\"extendedPrice\"],\n  //   body:[1,2,[0,/ [0-9/A-Z]+ [0-9\\.]+ [0-9\\.]+ [A-Z]+ [0-9\\.]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1,1,1,1,1],\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\n  // },\n  // \"nirav-india-groceries\":{\n  //   regex:/^.+ [0-9\\. A-Z]+ [0-9\\.]+ [0-9\\.]+$/,\n  //   header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\n  //   body:[[0,/[0-9\\. A-Z]+ [0-9\\.]+ [0-9\\.]+$/],2,1,1],\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\n  // },\n}","/Users/sahil/Desktop/icms/inventory-management/client/src/components/Navigation/NavigationItems/NavigationItem/NavigationItem.js",[],{"ruleId":"783","replacedBy":"784"},{"ruleId":"785","replacedBy":"786"},{"ruleId":"787","severity":1,"message":"788","line":12,"column":7,"nodeType":"789","messageId":"790","endLine":12,"endColumn":10},{"ruleId":"787","severity":1,"message":"791","line":1,"column":8,"nodeType":"789","messageId":"790","endLine":1,"endColumn":13},{"ruleId":"787","severity":1,"message":"792","line":46,"column":15,"nodeType":"789","messageId":"790","endLine":46,"endColumn":23},{"ruleId":"787","severity":1,"message":"793","line":33,"column":10,"nodeType":"789","messageId":"790","endLine":33,"endColumn":17},{"ruleId":"787","severity":1,"message":"794","line":34,"column":10,"nodeType":"789","messageId":"790","endLine":34,"endColumn":16},{"ruleId":"795","severity":1,"message":"796","line":84,"column":6,"nodeType":"797","endLine":84,"endColumn":8,"suggestions":"798"},{"ruleId":"787","severity":1,"message":"799","line":1,"column":10,"nodeType":"789","messageId":"790","endLine":1,"endColumn":14},{"ruleId":"787","severity":1,"message":"800","line":1,"column":22,"nodeType":"789","messageId":"790","endLine":1,"endColumn":32},{"ruleId":"787","severity":1,"message":"801","line":75,"column":9,"nodeType":"789","messageId":"790","endLine":75,"endColumn":25},{"ruleId":"787","severity":1,"message":"802","line":100,"column":11,"nodeType":"789","messageId":"790","endLine":100,"endColumn":18},{"ruleId":"795","severity":1,"message":"803","line":218,"column":6,"nodeType":"797","endLine":218,"endColumn":8,"suggestions":"804"},{"ruleId":"787","severity":1,"message":"805","line":17,"column":3,"nodeType":"789","messageId":"790","endLine":17,"endColumn":12},{"ruleId":"787","severity":1,"message":"806","line":18,"column":3,"nodeType":"789","messageId":"790","endLine":18,"endColumn":18},{"ruleId":"787","severity":1,"message":"807","line":19,"column":3,"nodeType":"789","messageId":"790","endLine":19,"endColumn":16},{"ruleId":"787","severity":1,"message":"808","line":20,"column":3,"nodeType":"789","messageId":"790","endLine":20,"endColumn":16},{"ruleId":"787","severity":1,"message":"809","line":26,"column":10,"nodeType":"789","messageId":"790","endLine":26,"endColumn":14},{"ruleId":"787","severity":1,"message":"810","line":32,"column":10,"nodeType":"789","messageId":"790","endLine":32,"endColumn":23},{"ruleId":"787","severity":1,"message":"811","line":32,"column":25,"nodeType":"789","messageId":"790","endLine":32,"endColumn":41},{"ruleId":"787","severity":1,"message":"793","line":34,"column":10,"nodeType":"789","messageId":"790","endLine":34,"endColumn":17},{"ruleId":"787","severity":1,"message":"794","line":35,"column":10,"nodeType":"789","messageId":"790","endLine":35,"endColumn":16},{"ruleId":"812","severity":1,"message":"813","line":115,"column":23,"nodeType":"814","messageId":"815","endLine":115,"endColumn":25},{"ruleId":"787","severity":1,"message":"816","line":2,"column":10,"nodeType":"789","messageId":"790","endLine":2,"endColumn":17},{"ruleId":"787","severity":1,"message":"817","line":7,"column":10,"nodeType":"789","messageId":"790","endLine":7,"endColumn":13},{"ruleId":"787","severity":1,"message":"818","line":12,"column":8,"nodeType":"789","messageId":"790","endLine":12,"endColumn":16},{"ruleId":"787","severity":1,"message":"819","line":15,"column":8,"nodeType":"789","messageId":"790","endLine":15,"endColumn":17},{"ruleId":"787","severity":1,"message":"820","line":23,"column":8,"nodeType":"789","messageId":"790","endLine":23,"endColumn":18},{"ruleId":"787","severity":1,"message":"821","line":68,"column":12,"nodeType":"789","messageId":"790","endLine":68,"endColumn":16},{"ruleId":"787","severity":1,"message":"822","line":68,"column":18,"nodeType":"789","messageId":"790","endLine":68,"endColumn":25},{"ruleId":"787","severity":1,"message":"823","line":70,"column":12,"nodeType":"789","messageId":"790","endLine":70,"endColumn":21},{"ruleId":"787","severity":1,"message":"824","line":70,"column":23,"nodeType":"789","messageId":"790","endLine":70,"endColumn":35},{"ruleId":"787","severity":1,"message":"825","line":88,"column":9,"nodeType":"789","messageId":"790","endLine":88,"endColumn":24},{"ruleId":"787","severity":1,"message":"826","line":89,"column":11,"nodeType":"789","messageId":"790","endLine":89,"endColumn":14},{"ruleId":"787","severity":1,"message":"827","line":100,"column":12,"nodeType":"789","messageId":"790","endLine":100,"endColumn":23},{"ruleId":"787","severity":1,"message":"828","line":100,"column":25,"nodeType":"789","messageId":"790","endLine":100,"endColumn":39},{"ruleId":"787","severity":1,"message":"829","line":105,"column":12,"nodeType":"789","messageId":"790","endLine":105,"endColumn":19},{"ruleId":"787","severity":1,"message":"830","line":106,"column":12,"nodeType":"789","messageId":"790","endLine":106,"endColumn":19},{"ruleId":"787","severity":1,"message":"831","line":108,"column":12,"nodeType":"789","messageId":"790","endLine":108,"endColumn":21},{"ruleId":"787","severity":1,"message":"832","line":109,"column":12,"nodeType":"789","messageId":"790","endLine":109,"endColumn":23},{"ruleId":"787","severity":1,"message":"833","line":113,"column":9,"nodeType":"789","messageId":"790","endLine":113,"endColumn":15},{"ruleId":"787","severity":1,"message":"834","line":125,"column":12,"nodeType":"789","messageId":"790","endLine":125,"endColumn":20},{"ruleId":"787","severity":1,"message":"835","line":127,"column":12,"nodeType":"789","messageId":"790","endLine":127,"endColumn":21},{"ruleId":"787","severity":1,"message":"836","line":127,"column":23,"nodeType":"789","messageId":"790","endLine":127,"endColumn":35},{"ruleId":"787","severity":1,"message":"837","line":144,"column":11,"nodeType":"789","messageId":"790","endLine":144,"endColumn":25},{"ruleId":"787","severity":1,"message":"838","line":144,"column":27,"nodeType":"789","messageId":"790","endLine":144,"endColumn":44},{"ruleId":"787","severity":1,"message":"839","line":145,"column":12,"nodeType":"789","messageId":"790","endLine":145,"endColumn":27},{"ruleId":"787","severity":1,"message":"840","line":146,"column":12,"nodeType":"789","messageId":"790","endLine":146,"endColumn":25},{"ruleId":"841","severity":1,"message":"842","line":157,"column":20,"nodeType":"797","messageId":"843","endLine":179,"endColumn":6},{"ruleId":"844","severity":1,"message":"845","line":286,"column":29,"nodeType":"814","messageId":"846","endLine":286,"endColumn":30},{"ruleId":"844","severity":1,"message":"845","line":288,"column":42,"nodeType":"814","messageId":"846","endLine":288,"endColumn":43},{"ruleId":"844","severity":1,"message":"845","line":288,"column":48,"nodeType":"814","messageId":"846","endLine":288,"endColumn":49},{"ruleId":"812","severity":1,"message":"813","line":403,"column":22,"nodeType":"814","messageId":"815","endLine":403,"endColumn":24},{"ruleId":"787","severity":1,"message":"847","line":463,"column":13,"nodeType":"789","messageId":"790","endLine":463,"endColumn":22},{"ruleId":"787","severity":1,"message":"847","line":496,"column":13,"nodeType":"789","messageId":"790","endLine":496,"endColumn":22},{"ruleId":"844","severity":1,"message":"845","line":537,"column":35,"nodeType":"814","messageId":"846","endLine":537,"endColumn":36},{"ruleId":"844","severity":1,"message":"845","line":539,"column":41,"nodeType":"814","messageId":"846","endLine":539,"endColumn":42},{"ruleId":"844","severity":1,"message":"845","line":539,"column":47,"nodeType":"814","messageId":"846","endLine":539,"endColumn":48},{"ruleId":"812","severity":1,"message":"848","line":712,"column":32,"nodeType":"814","messageId":"815","endLine":712,"endColumn":34},{"ruleId":"787","severity":1,"message":"847","line":725,"column":13,"nodeType":"789","messageId":"790","endLine":725,"endColumn":22},{"ruleId":"787","severity":1,"message":"849","line":760,"column":11,"nodeType":"789","messageId":"790","endLine":760,"endColumn":14},{"ruleId":"812","severity":1,"message":"848","line":791,"column":23,"nodeType":"814","messageId":"815","endLine":791,"endColumn":25},{"ruleId":"812","severity":1,"message":"813","line":939,"column":20,"nodeType":"814","messageId":"815","endLine":939,"endColumn":22},{"ruleId":"812","severity":1,"message":"813","line":953,"column":20,"nodeType":"814","messageId":"815","endLine":953,"endColumn":22},{"ruleId":"812","severity":1,"message":"813","line":974,"column":25,"nodeType":"814","messageId":"815","endLine":974,"endColumn":27},{"ruleId":"787","severity":1,"message":"850","line":976,"column":15,"nodeType":"789","messageId":"790","endLine":976,"endColumn":25},{"ruleId":"812","severity":1,"message":"813","line":1066,"column":32,"nodeType":"814","messageId":"815","endLine":1066,"endColumn":34},{"ruleId":"812","severity":1,"message":"813","line":1067,"column":32,"nodeType":"814","messageId":"815","endLine":1067,"endColumn":34},{"ruleId":"812","severity":1,"message":"813","line":1068,"column":28,"nodeType":"814","messageId":"815","endLine":1068,"endColumn":30},{"ruleId":"812","severity":1,"message":"813","line":1068,"column":55,"nodeType":"814","messageId":"815","endLine":1068,"endColumn":57},{"ruleId":"812","severity":1,"message":"813","line":1078,"column":28,"nodeType":"814","messageId":"815","endLine":1078,"endColumn":30},{"ruleId":"851","severity":1,"message":"852","line":1145,"column":33,"nodeType":"853","messageId":"854","endLine":1145,"endColumn":48},{"ruleId":"812","severity":1,"message":"813","line":1203,"column":31,"nodeType":"814","messageId":"815","endLine":1203,"endColumn":33},{"ruleId":"812","severity":1,"message":"813","line":1211,"column":27,"nodeType":"814","messageId":"815","endLine":1211,"endColumn":29},{"ruleId":"812","severity":1,"message":"813","line":1238,"column":12,"nodeType":"814","messageId":"815","endLine":1238,"endColumn":14},{"ruleId":"787","severity":1,"message":"855","line":1247,"column":11,"nodeType":"789","messageId":"790","endLine":1247,"endColumn":29},{"ruleId":"812","severity":1,"message":"848","line":1317,"column":51,"nodeType":"814","messageId":"815","endLine":1317,"endColumn":53},{"ruleId":"812","severity":1,"message":"848","line":1383,"column":68,"nodeType":"814","messageId":"815","endLine":1383,"endColumn":70},{"ruleId":"812","severity":1,"message":"848","line":1440,"column":29,"nodeType":"814","messageId":"815","endLine":1440,"endColumn":31},{"ruleId":"787","severity":1,"message":"856","line":1452,"column":11,"nodeType":"789","messageId":"790","endLine":1452,"endColumn":25},{"ruleId":"857","severity":1,"message":"858","line":1455,"column":53,"nodeType":"859","messageId":"860","endLine":1455,"endColumn":55},{"ruleId":"812","severity":1,"message":"848","line":1461,"column":37,"nodeType":"814","messageId":"815","endLine":1461,"endColumn":39},{"ruleId":"787","severity":1,"message":"861","line":1470,"column":11,"nodeType":"789","messageId":"790","endLine":1470,"endColumn":24},{"ruleId":"812","severity":1,"message":"813","line":1611,"column":34,"nodeType":"814","messageId":"815","endLine":1611,"endColumn":36},{"ruleId":"812","severity":1,"message":"813","line":1612,"column":34,"nodeType":"814","messageId":"815","endLine":1612,"endColumn":36},{"ruleId":"812","severity":1,"message":"813","line":1613,"column":34,"nodeType":"814","messageId":"815","endLine":1613,"endColumn":36},{"ruleId":"812","severity":1,"message":"813","line":1613,"column":61,"nodeType":"814","messageId":"815","endLine":1613,"endColumn":63},{"ruleId":"851","severity":1,"message":"852","line":1762,"column":31,"nodeType":"853","messageId":"854","endLine":1762,"endColumn":46},{"ruleId":"812","severity":1,"message":"813","line":1820,"column":29,"nodeType":"814","messageId":"815","endLine":1820,"endColumn":31},{"ruleId":"812","severity":1,"message":"813","line":1828,"column":25,"nodeType":"814","messageId":"815","endLine":1828,"endColumn":27},{"ruleId":"812","severity":1,"message":"848","line":1936,"column":38,"nodeType":"814","messageId":"815","endLine":1936,"endColumn":40},{"ruleId":"812","severity":1,"message":"813","line":1947,"column":47,"nodeType":"814","messageId":"815","endLine":1947,"endColumn":49},{"ruleId":"812","severity":1,"message":"848","line":2333,"column":36,"nodeType":"814","messageId":"815","endLine":2333,"endColumn":38},{"ruleId":"787","severity":1,"message":"847","line":2346,"column":17,"nodeType":"789","messageId":"790","endLine":2346,"endColumn":26},{"ruleId":"787","severity":1,"message":"849","line":2380,"column":15,"nodeType":"789","messageId":"790","endLine":2380,"endColumn":18},{"ruleId":"812","severity":1,"message":"813","line":2464,"column":46,"nodeType":"814","messageId":"815","endLine":2464,"endColumn":48},{"ruleId":"795","severity":1,"message":"862","line":2649,"column":8,"nodeType":"797","endLine":2649,"endColumn":10,"suggestions":"863"},{"ruleId":"787","severity":1,"message":"817","line":5,"column":10,"nodeType":"789","messageId":"790","endLine":5,"endColumn":13},{"ruleId":"787","severity":1,"message":"805","line":21,"column":3,"nodeType":"789","messageId":"790","endLine":21,"endColumn":12},{"ruleId":"787","severity":1,"message":"806","line":22,"column":3,"nodeType":"789","messageId":"790","endLine":22,"endColumn":18},{"ruleId":"787","severity":1,"message":"807","line":23,"column":3,"nodeType":"789","messageId":"790","endLine":23,"endColumn":16},{"ruleId":"787","severity":1,"message":"808","line":24,"column":3,"nodeType":"789","messageId":"790","endLine":24,"endColumn":16},{"ruleId":"787","severity":1,"message":"864","line":68,"column":12,"nodeType":"789","messageId":"790","endLine":68,"endColumn":26},{"ruleId":"787","severity":1,"message":"865","line":80,"column":24,"nodeType":"789","messageId":"790","endLine":80,"endColumn":37},{"ruleId":"787","severity":1,"message":"866","line":96,"column":12,"nodeType":"789","messageId":"790","endLine":96,"endColumn":24},{"ruleId":"787","severity":1,"message":"867","line":96,"column":26,"nodeType":"789","messageId":"790","endLine":96,"endColumn":41},{"ruleId":"787","severity":1,"message":"868","line":97,"column":12,"nodeType":"789","messageId":"790","endLine":97,"endColumn":19},{"ruleId":"787","severity":1,"message":"869","line":97,"column":21,"nodeType":"789","messageId":"790","endLine":97,"endColumn":31},{"ruleId":"787","severity":1,"message":"870","line":98,"column":12,"nodeType":"789","messageId":"790","endLine":98,"endColumn":24},{"ruleId":"787","severity":1,"message":"871","line":99,"column":12,"nodeType":"789","messageId":"790","endLine":99,"endColumn":20},{"ruleId":"787","severity":1,"message":"834","line":100,"column":12,"nodeType":"789","messageId":"790","endLine":100,"endColumn":20},{"ruleId":"787","severity":1,"message":"872","line":119,"column":11,"nodeType":"789","messageId":"790","endLine":119,"endColumn":20},{"ruleId":"787","severity":1,"message":"873","line":120,"column":11,"nodeType":"789","messageId":"790","endLine":120,"endColumn":17},{"ruleId":"787","severity":1,"message":"833","line":126,"column":9,"nodeType":"789","messageId":"790","endLine":126,"endColumn":15},{"ruleId":"841","severity":1,"message":"842","line":128,"column":20,"nodeType":"797","messageId":"843","endLine":150,"endColumn":4},{"ruleId":"787","severity":1,"message":"874","line":219,"column":41,"nodeType":"789","messageId":"790","endLine":219,"endColumn":49},{"ruleId":"812","severity":1,"message":"813","line":222,"column":20,"nodeType":"814","messageId":"815","endLine":222,"endColumn":22},{"ruleId":"787","severity":1,"message":"875","line":279,"column":9,"nodeType":"789","messageId":"790","endLine":279,"endColumn":21},{"ruleId":"787","severity":1,"message":"847","line":282,"column":11,"nodeType":"789","messageId":"790","endLine":282,"endColumn":20},{"ruleId":"787","severity":1,"message":"847","line":313,"column":11,"nodeType":"789","messageId":"790","endLine":313,"endColumn":20},{"ruleId":"787","severity":1,"message":"876","line":359,"column":17,"nodeType":"789","messageId":"790","endLine":359,"endColumn":21},{"ruleId":"787","severity":1,"message":"877","line":480,"column":11,"nodeType":"789","messageId":"790","endLine":480,"endColumn":20},{"ruleId":"812","severity":1,"message":"848","line":501,"column":23,"nodeType":"814","messageId":"815","endLine":501,"endColumn":25},{"ruleId":"812","severity":1,"message":"813","line":566,"column":16,"nodeType":"814","messageId":"815","endLine":566,"endColumn":18},{"ruleId":"812","severity":1,"message":"813","line":613,"column":28,"nodeType":"814","messageId":"815","endLine":613,"endColumn":30},{"ruleId":"812","severity":1,"message":"813","line":614,"column":28,"nodeType":"814","messageId":"815","endLine":614,"endColumn":30},{"ruleId":"812","severity":1,"message":"813","line":615,"column":24,"nodeType":"814","messageId":"815","endLine":615,"endColumn":26},{"ruleId":"812","severity":1,"message":"813","line":615,"column":51,"nodeType":"814","messageId":"815","endLine":615,"endColumn":53},{"ruleId":"812","severity":1,"message":"813","line":625,"column":24,"nodeType":"814","messageId":"815","endLine":625,"endColumn":26},{"ruleId":"812","severity":1,"message":"813","line":677,"column":25,"nodeType":"814","messageId":"815","endLine":677,"endColumn":27},{"ruleId":"787","severity":1,"message":"850","line":679,"column":15,"nodeType":"789","messageId":"790","endLine":679,"endColumn":25},{"ruleId":"812","severity":1,"message":"813","line":782,"column":45,"nodeType":"814","messageId":"815","endLine":782,"endColumn":47},{"ruleId":"787","severity":1,"message":"878","line":1213,"column":9,"nodeType":"789","messageId":"790","endLine":1213,"endColumn":19},{"ruleId":"812","severity":1,"message":"848","line":1341,"column":27,"nodeType":"814","messageId":"815","endLine":1341,"endColumn":29},{"ruleId":"787","severity":1,"message":"879","line":1354,"column":20,"nodeType":"789","messageId":"790","endLine":1354,"endColumn":31},{"ruleId":"851","severity":1,"message":"880","line":1404,"column":23,"nodeType":"853","messageId":"854","endLine":1404,"endColumn":30},{"ruleId":"851","severity":1,"message":"881","line":1422,"column":30,"nodeType":"853","messageId":"854","endLine":1422,"endColumn":44},{"ruleId":"851","severity":1,"message":"882","line":1436,"column":34,"nodeType":"853","messageId":"854","endLine":1436,"endColumn":52},{"ruleId":"812","severity":1,"message":"813","line":1457,"column":29,"nodeType":"814","messageId":"815","endLine":1457,"endColumn":31},{"ruleId":"812","severity":1,"message":"813","line":1477,"column":25,"nodeType":"814","messageId":"815","endLine":1477,"endColumn":27},{"ruleId":"787","severity":1,"message":"883","line":12,"column":10,"nodeType":"789","messageId":"790","endLine":12,"endColumn":16},{"ruleId":"787","severity":1,"message":"884","line":14,"column":8,"nodeType":"789","messageId":"790","endLine":14,"endColumn":18},{"ruleId":"787","severity":1,"message":"885","line":15,"column":8,"nodeType":"789","messageId":"790","endLine":15,"endColumn":27},{"ruleId":"787","severity":1,"message":"818","line":17,"column":8,"nodeType":"789","messageId":"790","endLine":17,"endColumn":16},{"ruleId":"787","severity":1,"message":"886","line":19,"column":8,"nodeType":"789","messageId":"790","endLine":19,"endColumn":24},{"ruleId":"787","severity":1,"message":"887","line":23,"column":10,"nodeType":"789","messageId":"790","endLine":23,"endColumn":19},{"ruleId":"787","severity":1,"message":"826","line":27,"column":9,"nodeType":"789","messageId":"790","endLine":27,"endColumn":12},{"ruleId":"787","severity":1,"message":"825","line":61,"column":7,"nodeType":"789","messageId":"790","endLine":61,"endColumn":22},{"ruleId":"787","severity":1,"message":"888","line":63,"column":10,"nodeType":"789","messageId":"790","endLine":63,"endColumn":18},{"ruleId":"787","severity":1,"message":"889","line":63,"column":20,"nodeType":"789","messageId":"790","endLine":63,"endColumn":31},{"ruleId":"787","severity":1,"message":"890","line":68,"column":19,"nodeType":"789","messageId":"790","endLine":68,"endColumn":29},{"ruleId":"787","severity":1,"message":"891","line":69,"column":17,"nodeType":"789","messageId":"790","endLine":69,"endColumn":25},{"ruleId":"787","severity":1,"message":"892","line":70,"column":19,"nodeType":"789","messageId":"790","endLine":70,"endColumn":29},{"ruleId":"787","severity":1,"message":"893","line":71,"column":10,"nodeType":"789","messageId":"790","endLine":71,"endColumn":22},{"ruleId":"787","severity":1,"message":"894","line":77,"column":10,"nodeType":"789","messageId":"790","endLine":77,"endColumn":19},{"ruleId":"787","severity":1,"message":"895","line":78,"column":10,"nodeType":"789","messageId":"790","endLine":78,"endColumn":21},{"ruleId":"787","severity":1,"message":"896","line":78,"column":23,"nodeType":"789","messageId":"790","endLine":78,"endColumn":37},{"ruleId":"787","severity":1,"message":"897","line":79,"column":10,"nodeType":"789","messageId":"790","endLine":79,"endColumn":15},{"ruleId":"787","severity":1,"message":"898","line":79,"column":17,"nodeType":"789","messageId":"790","endLine":79,"endColumn":25},{"ruleId":"787","severity":1,"message":"834","line":80,"column":10,"nodeType":"789","messageId":"790","endLine":80,"endColumn":18},{"ruleId":"787","severity":1,"message":"899","line":80,"column":20,"nodeType":"789","messageId":"790","endLine":80,"endColumn":31},{"ruleId":"787","severity":1,"message":"900","line":81,"column":9,"nodeType":"789","messageId":"790","endLine":81,"endColumn":24},{"ruleId":"787","severity":1,"message":"901","line":82,"column":7,"nodeType":"789","messageId":"790","endLine":82,"endColumn":17},{"ruleId":"787","severity":1,"message":"902","line":114,"column":7,"nodeType":"789","messageId":"790","endLine":114,"endColumn":16},{"ruleId":"857","severity":1,"message":"903","line":123,"column":31,"nodeType":"859","messageId":"904","endLine":123,"endColumn":33},{"ruleId":"787","severity":1,"message":"905","line":149,"column":9,"nodeType":"789","messageId":"790","endLine":149,"endColumn":24},{"ruleId":"787","severity":1,"message":"906","line":155,"column":11,"nodeType":"789","messageId":"790","endLine":155,"endColumn":23},{"ruleId":"787","severity":1,"message":"907","line":208,"column":9,"nodeType":"789","messageId":"790","endLine":208,"endColumn":19},{"ruleId":"787","severity":1,"message":"847","line":365,"column":13,"nodeType":"789","messageId":"790","endLine":365,"endColumn":22},{"ruleId":"787","severity":1,"message":"847","line":394,"column":13,"nodeType":"789","messageId":"790","endLine":394,"endColumn":22},{"ruleId":"812","severity":1,"message":"848","line":567,"column":32,"nodeType":"814","messageId":"815","endLine":567,"endColumn":34},{"ruleId":"787","severity":1,"message":"847","line":579,"column":13,"nodeType":"789","messageId":"790","endLine":579,"endColumn":22},{"ruleId":"787","severity":1,"message":"849","line":611,"column":11,"nodeType":"789","messageId":"790","endLine":611,"endColumn":14},{"ruleId":"812","severity":1,"message":"848","line":728,"column":34,"nodeType":"814","messageId":"815","endLine":728,"endColumn":36},{"ruleId":"812","severity":1,"message":"848","line":1031,"column":32,"nodeType":"814","messageId":"815","endLine":1031,"endColumn":34},{"ruleId":"787","severity":1,"message":"847","line":1043,"column":13,"nodeType":"789","messageId":"790","endLine":1043,"endColumn":22},{"ruleId":"787","severity":1,"message":"849","line":1075,"column":11,"nodeType":"789","messageId":"790","endLine":1075,"endColumn":14},{"ruleId":"787","severity":1,"message":"908","line":1099,"column":9,"nodeType":"789","messageId":"790","endLine":1099,"endColumn":21},{"ruleId":"812","severity":1,"message":"813","line":1194,"column":42,"nodeType":"814","messageId":"815","endLine":1194,"endColumn":44},{"ruleId":"787","severity":1,"message":"909","line":1206,"column":9,"nodeType":"789","messageId":"790","endLine":1206,"endColumn":18},{"ruleId":"851","severity":1,"message":"852","line":1318,"column":31,"nodeType":"853","messageId":"854","endLine":1318,"endColumn":46},{"ruleId":"812","severity":1,"message":"813","line":1378,"column":30,"nodeType":"814","messageId":"815","endLine":1378,"endColumn":32},{"ruleId":"812","severity":1,"message":"813","line":1386,"column":25,"nodeType":"814","messageId":"815","endLine":1386,"endColumn":27},{"ruleId":"795","severity":1,"message":"910","line":1407,"column":6,"nodeType":"797","endLine":1407,"endColumn":8,"suggestions":"911"},{"ruleId":"787","severity":1,"message":"912","line":1,"column":10,"nodeType":"789","messageId":"790","endLine":1,"endColumn":18},{"ruleId":"787","severity":1,"message":"913","line":9,"column":28,"nodeType":"789","messageId":"790","endLine":9,"endColumn":47},{"ruleId":"787","severity":1,"message":"847","line":171,"column":11,"nodeType":"789","messageId":"790","endLine":171,"endColumn":20},{"ruleId":"787","severity":1,"message":"847","line":199,"column":11,"nodeType":"789","messageId":"790","endLine":199,"endColumn":20},{"ruleId":"795","severity":1,"message":"914","line":370,"column":6,"nodeType":"797","endLine":370,"endColumn":8,"suggestions":"915"},{"ruleId":"787","severity":1,"message":"916","line":3,"column":8,"nodeType":"789","messageId":"790","endLine":3,"endColumn":12},{"ruleId":"812","severity":1,"message":"813","line":410,"column":23,"nodeType":"814","messageId":"815","endLine":410,"endColumn":25},{"ruleId":"812","severity":1,"message":"813","line":410,"column":40,"nodeType":"814","messageId":"815","endLine":410,"endColumn":42},{"ruleId":"795","severity":1,"message":"917","line":12,"column":8,"nodeType":"797","endLine":12,"endColumn":14,"suggestions":"918"},{"ruleId":"812","severity":1,"message":"813","line":42,"column":27,"nodeType":"814","messageId":"815","endLine":42,"endColumn":29},{"ruleId":"812","severity":1,"message":"813","line":42,"column":44,"nodeType":"814","messageId":"815","endLine":42,"endColumn":46},{"ruleId":"919","severity":1,"message":"920","line":99,"column":32,"nodeType":"921","messageId":"922","endLine":99,"endColumn":33,"suggestions":"923"},{"ruleId":"919","severity":1,"message":"924","line":99,"column":45,"nodeType":"921","messageId":"922","endLine":99,"endColumn":46,"suggestions":"925"},{"ruleId":"919","severity":1,"message":"926","line":3,"column":37,"nodeType":"921","messageId":"922","endLine":3,"endColumn":38,"suggestions":"927"},{"ruleId":"919","severity":1,"message":"926","line":3,"column":46,"nodeType":"921","messageId":"922","endLine":3,"endColumn":47,"suggestions":"928"},{"ruleId":"919","severity":1,"message":"926","line":5,"column":24,"nodeType":"921","messageId":"922","endLine":5,"endColumn":25,"suggestions":"929"},{"ruleId":"919","severity":1,"message":"926","line":5,"column":33,"nodeType":"921","messageId":"922","endLine":5,"endColumn":34,"suggestions":"930"},{"ruleId":"919","severity":1,"message":"920","line":6,"column":23,"nodeType":"921","messageId":"922","endLine":6,"endColumn":24,"suggestions":"931"},{"ruleId":"919","severity":1,"message":"924","line":6,"column":35,"nodeType":"921","messageId":"922","endLine":6,"endColumn":36,"suggestions":"932"},{"ruleId":"919","severity":1,"message":"933","line":6,"column":37,"nodeType":"921","messageId":"922","endLine":6,"endColumn":38,"suggestions":"934"},{"ruleId":"919","severity":1,"message":"935","line":6,"column":39,"nodeType":"921","messageId":"922","endLine":6,"endColumn":40,"suggestions":"936"},{"ruleId":"919","severity":1,"message":"926","line":9,"column":37,"nodeType":"921","messageId":"922","endLine":9,"endColumn":38,"suggestions":"937"},{"ruleId":"919","severity":1,"message":"926","line":9,"column":46,"nodeType":"921","messageId":"922","endLine":9,"endColumn":47,"suggestions":"938"},{"ruleId":"919","severity":1,"message":"926","line":11,"column":24,"nodeType":"921","messageId":"922","endLine":11,"endColumn":25,"suggestions":"939"},{"ruleId":"919","severity":1,"message":"926","line":11,"column":33,"nodeType":"921","messageId":"922","endLine":11,"endColumn":34,"suggestions":"940"},{"ruleId":"919","severity":1,"message":"920","line":12,"column":23,"nodeType":"921","messageId":"922","endLine":12,"endColumn":24,"suggestions":"941"},{"ruleId":"919","severity":1,"message":"924","line":12,"column":38,"nodeType":"921","messageId":"922","endLine":12,"endColumn":39,"suggestions":"942"},{"ruleId":"919","severity":1,"message":"926","line":15,"column":34,"nodeType":"921","messageId":"922","endLine":15,"endColumn":35,"suggestions":"943"},{"ruleId":"919","severity":1,"message":"926","line":15,"column":43,"nodeType":"921","messageId":"922","endLine":15,"endColumn":44,"suggestions":"944"},{"ruleId":"919","severity":1,"message":"926","line":17,"column":24,"nodeType":"921","messageId":"922","endLine":17,"endColumn":25,"suggestions":"945"},{"ruleId":"919","severity":1,"message":"926","line":17,"column":33,"nodeType":"921","messageId":"922","endLine":17,"endColumn":34,"suggestions":"946"},{"ruleId":"919","severity":1,"message":"920","line":18,"column":23,"nodeType":"921","messageId":"922","endLine":18,"endColumn":24,"suggestions":"947"},{"ruleId":"919","severity":1,"message":"924","line":18,"column":38,"nodeType":"921","messageId":"922","endLine":18,"endColumn":39,"suggestions":"948"},{"ruleId":"919","severity":1,"message":"926","line":21,"column":27,"nodeType":"921","messageId":"922","endLine":21,"endColumn":28,"suggestions":"949"},{"ruleId":"919","severity":1,"message":"926","line":21,"column":36,"nodeType":"921","messageId":"922","endLine":21,"endColumn":37,"suggestions":"950"},{"ruleId":"919","severity":1,"message":"926","line":23,"column":22,"nodeType":"921","messageId":"922","endLine":23,"endColumn":23,"suggestions":"951"},{"ruleId":"919","severity":1,"message":"926","line":23,"column":31,"nodeType":"921","messageId":"922","endLine":23,"endColumn":32,"suggestions":"952"},{"ruleId":"919","severity":1,"message":"920","line":24,"column":23,"nodeType":"921","messageId":"922","endLine":24,"endColumn":24,"suggestions":"953"},{"ruleId":"919","severity":1,"message":"924","line":24,"column":38,"nodeType":"921","messageId":"922","endLine":24,"endColumn":39,"suggestions":"954"},{"ruleId":"919","severity":1,"message":"935","line":24,"column":40,"nodeType":"921","messageId":"922","endLine":24,"endColumn":41,"suggestions":"955"},{"ruleId":"919","severity":1,"message":"926","line":27,"column":20,"nodeType":"921","messageId":"922","endLine":27,"endColumn":21,"suggestions":"956"},{"ruleId":"919","severity":1,"message":"926","line":27,"column":29,"nodeType":"921","messageId":"922","endLine":27,"endColumn":30,"suggestions":"957"},{"ruleId":"919","severity":1,"message":"926","line":29,"column":20,"nodeType":"921","messageId":"922","endLine":29,"endColumn":21,"suggestions":"958"},{"ruleId":"919","severity":1,"message":"926","line":29,"column":29,"nodeType":"921","messageId":"922","endLine":29,"endColumn":30,"suggestions":"959"},{"ruleId":"919","severity":1,"message":"920","line":30,"column":23,"nodeType":"921","messageId":"922","endLine":30,"endColumn":24,"suggestions":"960"},{"ruleId":"919","severity":1,"message":"924","line":30,"column":38,"nodeType":"921","messageId":"922","endLine":30,"endColumn":39,"suggestions":"961"},{"ruleId":"919","severity":1,"message":"926","line":33,"column":17,"nodeType":"921","messageId":"922","endLine":33,"endColumn":18,"suggestions":"962"},{"ruleId":"919","severity":1,"message":"920","line":36,"column":23,"nodeType":"921","messageId":"922","endLine":36,"endColumn":24,"suggestions":"963"},{"ruleId":"919","severity":1,"message":"924","line":36,"column":38,"nodeType":"921","messageId":"922","endLine":36,"endColumn":39,"suggestions":"964"},{"ruleId":"919","severity":1,"message":"926","line":39,"column":37,"nodeType":"921","messageId":"922","endLine":39,"endColumn":38,"suggestions":"965"},{"ruleId":"919","severity":1,"message":"926","line":41,"column":37,"nodeType":"921","messageId":"922","endLine":41,"endColumn":38,"suggestions":"966"},{"ruleId":"919","severity":1,"message":"920","line":42,"column":23,"nodeType":"921","messageId":"922","endLine":42,"endColumn":24,"suggestions":"967"},{"ruleId":"919","severity":1,"message":"924","line":42,"column":38,"nodeType":"921","messageId":"922","endLine":42,"endColumn":39,"suggestions":"968"},{"ruleId":"919","severity":1,"message":"926","line":45,"column":30,"nodeType":"921","messageId":"922","endLine":45,"endColumn":31,"suggestions":"969"},{"ruleId":"919","severity":1,"message":"926","line":45,"column":46,"nodeType":"921","messageId":"922","endLine":45,"endColumn":47,"suggestions":"970"},{"ruleId":"919","severity":1,"message":"926","line":45,"column":55,"nodeType":"921","messageId":"922","endLine":45,"endColumn":56,"suggestions":"971"},{"ruleId":"919","severity":1,"message":"926","line":45,"column":64,"nodeType":"921","messageId":"922","endLine":45,"endColumn":65,"suggestions":"972"},{"ruleId":"919","severity":1,"message":"926","line":47,"column":22,"nodeType":"921","messageId":"922","endLine":47,"endColumn":23,"suggestions":"973"},{"ruleId":"919","severity":1,"message":"926","line":47,"column":38,"nodeType":"921","messageId":"922","endLine":47,"endColumn":39,"suggestions":"974"},{"ruleId":"919","severity":1,"message":"926","line":47,"column":47,"nodeType":"921","messageId":"922","endLine":47,"endColumn":48,"suggestions":"975"},{"ruleId":"919","severity":1,"message":"926","line":47,"column":56,"nodeType":"921","messageId":"922","endLine":47,"endColumn":57,"suggestions":"976"},{"ruleId":"919","severity":1,"message":"920","line":48,"column":23,"nodeType":"921","messageId":"922","endLine":48,"endColumn":24,"suggestions":"977"},{"ruleId":"919","severity":1,"message":"924","line":48,"column":38,"nodeType":"921","messageId":"922","endLine":48,"endColumn":39,"suggestions":"978"},{"ruleId":"919","severity":1,"message":"920","line":54,"column":23,"nodeType":"921","messageId":"922","endLine":54,"endColumn":24,"suggestions":"979"},{"ruleId":"919","severity":1,"message":"924","line":54,"column":36,"nodeType":"921","messageId":"922","endLine":54,"endColumn":37,"suggestions":"980"},{"ruleId":"919","severity":1,"message":"920","line":60,"column":23,"nodeType":"921","messageId":"922","endLine":60,"endColumn":24,"suggestions":"981"},{"ruleId":"919","severity":1,"message":"924","line":60,"column":41,"nodeType":"921","messageId":"922","endLine":60,"endColumn":42,"suggestions":"982"},{"ruleId":"919","severity":1,"message":"920","line":66,"column":23,"nodeType":"921","messageId":"922","endLine":66,"endColumn":24,"suggestions":"983"},{"ruleId":"919","severity":1,"message":"924","line":66,"column":39,"nodeType":"921","messageId":"922","endLine":66,"endColumn":40,"suggestions":"984"},{"ruleId":"919","severity":1,"message":"920","line":72,"column":23,"nodeType":"921","messageId":"922","endLine":72,"endColumn":24,"suggestions":"985"},{"ruleId":"919","severity":1,"message":"924","line":72,"column":41,"nodeType":"921","messageId":"922","endLine":72,"endColumn":42,"suggestions":"986"},{"ruleId":"919","severity":1,"message":"926","line":75,"column":20,"nodeType":"921","messageId":"922","endLine":75,"endColumn":21,"suggestions":"987"},{"ruleId":"919","severity":1,"message":"926","line":75,"column":29,"nodeType":"921","messageId":"922","endLine":75,"endColumn":30,"suggestions":"988"},{"ruleId":"919","severity":1,"message":"926","line":77,"column":22,"nodeType":"921","messageId":"922","endLine":77,"endColumn":23,"suggestions":"989"},{"ruleId":"919","severity":1,"message":"926","line":77,"column":31,"nodeType":"921","messageId":"922","endLine":77,"endColumn":32,"suggestions":"990"},{"ruleId":"919","severity":1,"message":"920","line":78,"column":23,"nodeType":"921","messageId":"922","endLine":78,"endColumn":24,"suggestions":"991"},{"ruleId":"919","severity":1,"message":"924","line":78,"column":38,"nodeType":"921","messageId":"922","endLine":78,"endColumn":39,"suggestions":"992"},{"ruleId":"919","severity":1,"message":"926","line":81,"column":20,"nodeType":"921","messageId":"922","endLine":81,"endColumn":21,"suggestions":"993"},{"ruleId":"919","severity":1,"message":"926","line":81,"column":29,"nodeType":"921","messageId":"922","endLine":81,"endColumn":30,"suggestions":"994"},{"ruleId":"919","severity":1,"message":"926","line":83,"column":32,"nodeType":"921","messageId":"922","endLine":83,"endColumn":33,"suggestions":"995"},{"ruleId":"919","severity":1,"message":"926","line":83,"column":41,"nodeType":"921","messageId":"922","endLine":83,"endColumn":42,"suggestions":"996"},{"ruleId":"919","severity":1,"message":"920","line":84,"column":23,"nodeType":"921","messageId":"922","endLine":84,"endColumn":24,"suggestions":"997"},{"ruleId":"919","severity":1,"message":"924","line":84,"column":38,"nodeType":"921","messageId":"922","endLine":84,"endColumn":39,"suggestions":"998"},{"ruleId":"919","severity":1,"message":"935","line":84,"column":40,"nodeType":"921","messageId":"922","endLine":84,"endColumn":41,"suggestions":"999"},{"ruleId":"919","severity":1,"message":"926","line":87,"column":20,"nodeType":"921","messageId":"922","endLine":87,"endColumn":21,"suggestions":"1000"},{"ruleId":"919","severity":1,"message":"926","line":87,"column":29,"nodeType":"921","messageId":"922","endLine":87,"endColumn":30,"suggestions":"1001"},{"ruleId":"919","severity":1,"message":"926","line":89,"column":22,"nodeType":"921","messageId":"922","endLine":89,"endColumn":23,"suggestions":"1002"},{"ruleId":"919","severity":1,"message":"926","line":89,"column":31,"nodeType":"921","messageId":"922","endLine":89,"endColumn":32,"suggestions":"1003"},{"ruleId":"919","severity":1,"message":"920","line":90,"column":23,"nodeType":"921","messageId":"922","endLine":90,"endColumn":24,"suggestions":"1004"},{"ruleId":"919","severity":1,"message":"924","line":90,"column":38,"nodeType":"921","messageId":"922","endLine":90,"endColumn":39,"suggestions":"1005"},{"ruleId":"919","severity":1,"message":"926","line":93,"column":31,"nodeType":"921","messageId":"922","endLine":93,"endColumn":32,"suggestions":"1006"},{"ruleId":"919","severity":1,"message":"926","line":93,"column":47,"nodeType":"921","messageId":"922","endLine":93,"endColumn":48,"suggestions":"1007"},{"ruleId":"919","severity":1,"message":"926","line":95,"column":22,"nodeType":"921","messageId":"922","endLine":95,"endColumn":23,"suggestions":"1008"},{"ruleId":"919","severity":1,"message":"926","line":95,"column":38,"nodeType":"921","messageId":"922","endLine":95,"endColumn":39,"suggestions":"1009"},{"ruleId":"919","severity":1,"message":"920","line":96,"column":23,"nodeType":"921","messageId":"922","endLine":96,"endColumn":24,"suggestions":"1010"},{"ruleId":"919","severity":1,"message":"924","line":96,"column":38,"nodeType":"921","messageId":"922","endLine":96,"endColumn":39,"suggestions":"1011"},{"ruleId":"919","severity":1,"message":"1012","line":96,"column":40,"nodeType":"921","messageId":"922","endLine":96,"endColumn":41,"suggestions":"1013"},{"ruleId":"919","severity":1,"message":"926","line":99,"column":41,"nodeType":"921","messageId":"922","endLine":99,"endColumn":42,"suggestions":"1014"},{"ruleId":"919","severity":1,"message":"926","line":99,"column":50,"nodeType":"921","messageId":"922","endLine":99,"endColumn":51,"suggestions":"1015"},{"ruleId":"919","severity":1,"message":"926","line":101,"column":36,"nodeType":"921","messageId":"922","endLine":101,"endColumn":37,"suggestions":"1016"},{"ruleId":"919","severity":1,"message":"926","line":101,"column":45,"nodeType":"921","messageId":"922","endLine":101,"endColumn":46,"suggestions":"1017"},{"ruleId":"919","severity":1,"message":"920","line":102,"column":23,"nodeType":"921","messageId":"922","endLine":102,"endColumn":24,"suggestions":"1018"},{"ruleId":"919","severity":1,"message":"924","line":102,"column":38,"nodeType":"921","messageId":"922","endLine":102,"endColumn":39,"suggestions":"1019"},{"ruleId":"919","severity":1,"message":"926","line":105,"column":55,"nodeType":"921","messageId":"922","endLine":105,"endColumn":56,"suggestions":"1020"},{"ruleId":"919","severity":1,"message":"926","line":105,"column":64,"nodeType":"921","messageId":"922","endLine":105,"endColumn":65,"suggestions":"1021"},{"ruleId":"919","severity":1,"message":"926","line":107,"column":40,"nodeType":"921","messageId":"922","endLine":107,"endColumn":41,"suggestions":"1022"},{"ruleId":"919","severity":1,"message":"926","line":107,"column":49,"nodeType":"921","messageId":"922","endLine":107,"endColumn":50,"suggestions":"1023"},{"ruleId":"919","severity":1,"message":"920","line":108,"column":23,"nodeType":"921","messageId":"922","endLine":108,"endColumn":24,"suggestions":"1024"},{"ruleId":"919","severity":1,"message":"924","line":108,"column":36,"nodeType":"921","messageId":"922","endLine":108,"endColumn":37,"suggestions":"1025"},{"ruleId":"919","severity":1,"message":"926","line":111,"column":20,"nodeType":"921","messageId":"922","endLine":111,"endColumn":21,"suggestions":"1026"},{"ruleId":"919","severity":1,"message":"926","line":111,"column":29,"nodeType":"921","messageId":"922","endLine":111,"endColumn":30,"suggestions":"1027"},{"ruleId":"919","severity":1,"message":"926","line":111,"column":38,"nodeType":"921","messageId":"922","endLine":111,"endColumn":39,"suggestions":"1028"},{"ruleId":"919","severity":1,"message":"926","line":113,"column":20,"nodeType":"921","messageId":"922","endLine":113,"endColumn":21,"suggestions":"1029"},{"ruleId":"919","severity":1,"message":"926","line":113,"column":29,"nodeType":"921","messageId":"922","endLine":113,"endColumn":30,"suggestions":"1030"},{"ruleId":"919","severity":1,"message":"926","line":113,"column":38,"nodeType":"921","messageId":"922","endLine":113,"endColumn":39,"suggestions":"1031"},{"ruleId":"919","severity":1,"message":"920","line":114,"column":23,"nodeType":"921","messageId":"922","endLine":114,"endColumn":24,"suggestions":"1032"},{"ruleId":"919","severity":1,"message":"924","line":114,"column":36,"nodeType":"921","messageId":"922","endLine":114,"endColumn":37,"suggestions":"1033"},{"ruleId":"919","severity":1,"message":"926","line":117,"column":17,"nodeType":"921","messageId":"922","endLine":117,"endColumn":18,"suggestions":"1034"},{"ruleId":"919","severity":1,"message":"926","line":117,"column":29,"nodeType":"921","messageId":"922","endLine":117,"endColumn":30,"suggestions":"1035"},{"ruleId":"919","severity":1,"message":"926","line":117,"column":45,"nodeType":"921","messageId":"922","endLine":117,"endColumn":46,"suggestions":"1036"},{"ruleId":"919","severity":1,"message":"926","line":119,"column":22,"nodeType":"921","messageId":"922","endLine":119,"endColumn":23,"suggestions":"1037"},{"ruleId":"919","severity":1,"message":"926","line":119,"column":38,"nodeType":"921","messageId":"922","endLine":119,"endColumn":39,"suggestions":"1038"},{"ruleId":"919","severity":1,"message":"920","line":120,"column":23,"nodeType":"921","messageId":"922","endLine":120,"endColumn":24,"suggestions":"1039"},{"ruleId":"919","severity":1,"message":"924","line":120,"column":36,"nodeType":"921","messageId":"922","endLine":120,"endColumn":37,"suggestions":"1040"},{"ruleId":"919","severity":1,"message":"926","line":123,"column":27,"nodeType":"921","messageId":"922","endLine":123,"endColumn":28,"suggestions":"1041"},{"ruleId":"919","severity":1,"message":"926","line":123,"column":36,"nodeType":"921","messageId":"922","endLine":123,"endColumn":37,"suggestions":"1042"},{"ruleId":"919","severity":1,"message":"926","line":125,"column":27,"nodeType":"921","messageId":"922","endLine":125,"endColumn":28,"suggestions":"1043"},{"ruleId":"919","severity":1,"message":"926","line":125,"column":36,"nodeType":"921","messageId":"922","endLine":125,"endColumn":37,"suggestions":"1044"},{"ruleId":"919","severity":1,"message":"920","line":126,"column":23,"nodeType":"921","messageId":"922","endLine":126,"endColumn":24,"suggestions":"1045"},{"ruleId":"919","severity":1,"message":"924","line":126,"column":36,"nodeType":"921","messageId":"922","endLine":126,"endColumn":37,"suggestions":"1046"},{"ruleId":"919","severity":1,"message":"920","line":132,"column":23,"nodeType":"921","messageId":"922","endLine":132,"endColumn":24,"suggestions":"1047"},{"ruleId":"919","severity":1,"message":"924","line":132,"column":36,"nodeType":"921","messageId":"922","endLine":132,"endColumn":37,"suggestions":"1048"},{"ruleId":"919","severity":1,"message":"926","line":135,"column":24,"nodeType":"921","messageId":"922","endLine":135,"endColumn":25,"suggestions":"1049"},{"ruleId":"919","severity":1,"message":"926","line":135,"column":43,"nodeType":"921","messageId":"922","endLine":135,"endColumn":44,"suggestions":"1050"},{"ruleId":"919","severity":1,"message":"926","line":137,"column":31,"nodeType":"921","messageId":"922","endLine":137,"endColumn":32,"suggestions":"1051"},{"ruleId":"919","severity":1,"message":"920","line":138,"column":23,"nodeType":"921","messageId":"922","endLine":138,"endColumn":24,"suggestions":"1052"},{"ruleId":"919","severity":1,"message":"924","line":138,"column":39,"nodeType":"921","messageId":"922","endLine":138,"endColumn":40,"suggestions":"1053"},{"ruleId":"919","severity":1,"message":"935","line":138,"column":41,"nodeType":"921","messageId":"922","endLine":138,"endColumn":42,"suggestions":"1054"},{"ruleId":"919","severity":1,"message":"926","line":141,"column":38,"nodeType":"921","messageId":"922","endLine":141,"endColumn":39,"suggestions":"1055"},{"ruleId":"919","severity":1,"message":"926","line":141,"column":48,"nodeType":"921","messageId":"922","endLine":141,"endColumn":49,"suggestions":"1056"},{"ruleId":"919","severity":1,"message":"926","line":141,"column":57,"nodeType":"921","messageId":"922","endLine":141,"endColumn":58,"suggestions":"1057"},{"ruleId":"919","severity":1,"message":"926","line":143,"column":24,"nodeType":"921","messageId":"922","endLine":143,"endColumn":25,"suggestions":"1058"},{"ruleId":"919","severity":1,"message":"926","line":143,"column":34,"nodeType":"921","messageId":"922","endLine":143,"endColumn":35,"suggestions":"1059"},{"ruleId":"919","severity":1,"message":"926","line":143,"column":43,"nodeType":"921","messageId":"922","endLine":143,"endColumn":44,"suggestions":"1060"},{"ruleId":"919","severity":1,"message":"920","line":144,"column":23,"nodeType":"921","messageId":"922","endLine":144,"endColumn":24,"suggestions":"1061"},{"ruleId":"919","severity":1,"message":"924","line":144,"column":39,"nodeType":"921","messageId":"922","endLine":144,"endColumn":40,"suggestions":"1062"},{"ruleId":"919","severity":1,"message":"926","line":147,"column":34,"nodeType":"921","messageId":"922","endLine":147,"endColumn":35,"suggestions":"1063"},{"ruleId":"919","severity":1,"message":"926","line":147,"column":43,"nodeType":"921","messageId":"922","endLine":147,"endColumn":44,"suggestions":"1064"},{"ruleId":"919","severity":1,"message":"926","line":149,"column":24,"nodeType":"921","messageId":"922","endLine":149,"endColumn":25,"suggestions":"1065"},{"ruleId":"919","severity":1,"message":"926","line":149,"column":33,"nodeType":"921","messageId":"922","endLine":149,"endColumn":34,"suggestions":"1066"},{"ruleId":"919","severity":1,"message":"920","line":150,"column":23,"nodeType":"921","messageId":"922","endLine":150,"endColumn":24,"suggestions":"1067"},{"ruleId":"919","severity":1,"message":"924","line":150,"column":39,"nodeType":"921","messageId":"922","endLine":150,"endColumn":40,"suggestions":"1068"},{"ruleId":"919","severity":1,"message":"920","line":156,"column":23,"nodeType":"921","messageId":"922","endLine":156,"endColumn":24,"suggestions":"1069"},{"ruleId":"919","severity":1,"message":"924","line":156,"column":39,"nodeType":"921","messageId":"922","endLine":156,"endColumn":40,"suggestions":"1070"},{"ruleId":"919","severity":1,"message":"935","line":156,"column":41,"nodeType":"921","messageId":"922","endLine":156,"endColumn":42,"suggestions":"1071"},{"ruleId":"919","severity":1,"message":"926","line":159,"column":37,"nodeType":"921","messageId":"922","endLine":159,"endColumn":38,"suggestions":"1072"},{"ruleId":"919","severity":1,"message":"926","line":159,"column":46,"nodeType":"921","messageId":"922","endLine":159,"endColumn":47,"suggestions":"1073"},{"ruleId":"919","severity":1,"message":"926","line":161,"column":29,"nodeType":"921","messageId":"922","endLine":161,"endColumn":30,"suggestions":"1074"},{"ruleId":"919","severity":1,"message":"926","line":161,"column":38,"nodeType":"921","messageId":"922","endLine":161,"endColumn":39,"suggestions":"1075"},{"ruleId":"919","severity":1,"message":"920","line":162,"column":23,"nodeType":"921","messageId":"922","endLine":162,"endColumn":24,"suggestions":"1076"},{"ruleId":"919","severity":1,"message":"924","line":162,"column":39,"nodeType":"921","messageId":"922","endLine":162,"endColumn":40,"suggestions":"1077"},{"ruleId":"919","severity":1,"message":"926","line":165,"column":20,"nodeType":"921","messageId":"922","endLine":165,"endColumn":21,"suggestions":"1078"},{"ruleId":"919","severity":1,"message":"926","line":165,"column":36,"nodeType":"921","messageId":"922","endLine":165,"endColumn":37,"suggestions":"1079"},{"ruleId":"919","severity":1,"message":"926","line":165,"column":45,"nodeType":"921","messageId":"922","endLine":165,"endColumn":46,"suggestions":"1080"},{"ruleId":"919","severity":1,"message":"926","line":167,"column":20,"nodeType":"921","messageId":"922","endLine":167,"endColumn":21,"suggestions":"1081"},{"ruleId":"919","severity":1,"message":"926","line":167,"column":36,"nodeType":"921","messageId":"922","endLine":167,"endColumn":37,"suggestions":"1082"},{"ruleId":"919","severity":1,"message":"926","line":167,"column":45,"nodeType":"921","messageId":"922","endLine":167,"endColumn":46,"suggestions":"1083"},{"ruleId":"919","severity":1,"message":"920","line":168,"column":23,"nodeType":"921","messageId":"922","endLine":168,"endColumn":24,"suggestions":"1084"},{"ruleId":"919","severity":1,"message":"924","line":168,"column":39,"nodeType":"921","messageId":"922","endLine":168,"endColumn":40,"suggestions":"1085"},{"ruleId":"919","severity":1,"message":"926","line":171,"column":27,"nodeType":"921","messageId":"922","endLine":171,"endColumn":28,"suggestions":"1086"},{"ruleId":"919","severity":1,"message":"926","line":171,"column":36,"nodeType":"921","messageId":"922","endLine":171,"endColumn":37,"suggestions":"1087"},{"ruleId":"919","severity":1,"message":"926","line":173,"column":27,"nodeType":"921","messageId":"922","endLine":173,"endColumn":28,"suggestions":"1088"},{"ruleId":"919","severity":1,"message":"926","line":173,"column":36,"nodeType":"921","messageId":"922","endLine":173,"endColumn":37,"suggestions":"1089"},{"ruleId":"919","severity":1,"message":"920","line":174,"column":23,"nodeType":"921","messageId":"922","endLine":174,"endColumn":24,"suggestions":"1090"},{"ruleId":"919","severity":1,"message":"924","line":174,"column":39,"nodeType":"921","messageId":"922","endLine":174,"endColumn":40,"suggestions":"1091"},{"ruleId":"919","severity":1,"message":"926","line":177,"column":34,"nodeType":"921","messageId":"922","endLine":177,"endColumn":35,"suggestions":"1092"},{"ruleId":"919","severity":1,"message":"926","line":177,"column":43,"nodeType":"921","messageId":"922","endLine":177,"endColumn":44,"suggestions":"1093"},{"ruleId":"919","severity":1,"message":"926","line":179,"column":24,"nodeType":"921","messageId":"922","endLine":179,"endColumn":25,"suggestions":"1094"},{"ruleId":"919","severity":1,"message":"926","line":179,"column":33,"nodeType":"921","messageId":"922","endLine":179,"endColumn":34,"suggestions":"1095"},{"ruleId":"919","severity":1,"message":"920","line":180,"column":23,"nodeType":"921","messageId":"922","endLine":180,"endColumn":24,"suggestions":"1096"},{"ruleId":"919","severity":1,"message":"924","line":180,"column":39,"nodeType":"921","messageId":"922","endLine":180,"endColumn":40,"suggestions":"1097"},{"ruleId":"919","severity":1,"message":"926","line":183,"column":41,"nodeType":"921","messageId":"922","endLine":183,"endColumn":42,"suggestions":"1098"},{"ruleId":"919","severity":1,"message":"926","line":183,"column":50,"nodeType":"921","messageId":"922","endLine":183,"endColumn":51,"suggestions":"1099"},{"ruleId":"919","severity":1,"message":"926","line":185,"column":31,"nodeType":"921","messageId":"922","endLine":185,"endColumn":32,"suggestions":"1100"},{"ruleId":"919","severity":1,"message":"926","line":185,"column":40,"nodeType":"921","messageId":"922","endLine":185,"endColumn":41,"suggestions":"1101"},{"ruleId":"919","severity":1,"message":"920","line":186,"column":23,"nodeType":"921","messageId":"922","endLine":186,"endColumn":24,"suggestions":"1102"},{"ruleId":"919","severity":1,"message":"924","line":186,"column":39,"nodeType":"921","messageId":"922","endLine":186,"endColumn":40,"suggestions":"1103"},{"ruleId":"919","severity":1,"message":"926","line":189,"column":31,"nodeType":"921","messageId":"922","endLine":189,"endColumn":32,"suggestions":"1104"},{"ruleId":"919","severity":1,"message":"926","line":189,"column":40,"nodeType":"921","messageId":"922","endLine":189,"endColumn":41,"suggestions":"1105"},{"ruleId":"919","severity":1,"message":"926","line":191,"column":22,"nodeType":"921","messageId":"922","endLine":191,"endColumn":23,"suggestions":"1106"},{"ruleId":"919","severity":1,"message":"926","line":191,"column":31,"nodeType":"921","messageId":"922","endLine":191,"endColumn":32,"suggestions":"1107"},{"ruleId":"919","severity":1,"message":"920","line":192,"column":23,"nodeType":"921","messageId":"922","endLine":192,"endColumn":24,"suggestions":"1108"},{"ruleId":"919","severity":1,"message":"924","line":192,"column":39,"nodeType":"921","messageId":"922","endLine":192,"endColumn":40,"suggestions":"1109"},{"ruleId":"919","severity":1,"message":"926","line":195,"column":38,"nodeType":"921","messageId":"922","endLine":195,"endColumn":39,"suggestions":"1110"},{"ruleId":"919","severity":1,"message":"926","line":195,"column":47,"nodeType":"921","messageId":"922","endLine":195,"endColumn":48,"suggestions":"1111"},{"ruleId":"919","severity":1,"message":"926","line":197,"column":24,"nodeType":"921","messageId":"922","endLine":197,"endColumn":25,"suggestions":"1112"},{"ruleId":"919","severity":1,"message":"926","line":197,"column":33,"nodeType":"921","messageId":"922","endLine":197,"endColumn":34,"suggestions":"1113"},{"ruleId":"919","severity":1,"message":"920","line":198,"column":23,"nodeType":"921","messageId":"922","endLine":198,"endColumn":24,"suggestions":"1114"},{"ruleId":"919","severity":1,"message":"924","line":198,"column":39,"nodeType":"921","messageId":"922","endLine":198,"endColumn":40,"suggestions":"1115"},{"ruleId":"919","severity":1,"message":"926","line":201,"column":38,"nodeType":"921","messageId":"922","endLine":201,"endColumn":39,"suggestions":"1116"},{"ruleId":"919","severity":1,"message":"926","line":201,"column":47,"nodeType":"921","messageId":"922","endLine":201,"endColumn":48,"suggestions":"1117"},{"ruleId":"919","severity":1,"message":"926","line":203,"column":24,"nodeType":"921","messageId":"922","endLine":203,"endColumn":25,"suggestions":"1118"},{"ruleId":"919","severity":1,"message":"926","line":203,"column":33,"nodeType":"921","messageId":"922","endLine":203,"endColumn":34,"suggestions":"1119"},{"ruleId":"919","severity":1,"message":"920","line":204,"column":23,"nodeType":"921","messageId":"922","endLine":204,"endColumn":24,"suggestions":"1120"},{"ruleId":"919","severity":1,"message":"924","line":204,"column":39,"nodeType":"921","messageId":"922","endLine":204,"endColumn":40,"suggestions":"1121"},{"ruleId":"919","severity":1,"message":"926","line":207,"column":27,"nodeType":"921","messageId":"922","endLine":207,"endColumn":28,"suggestions":"1122"},{"ruleId":"919","severity":1,"message":"926","line":207,"column":36,"nodeType":"921","messageId":"922","endLine":207,"endColumn":37,"suggestions":"1123"},{"ruleId":"919","severity":1,"message":"926","line":209,"column":27,"nodeType":"921","messageId":"922","endLine":209,"endColumn":28,"suggestions":"1124"},{"ruleId":"919","severity":1,"message":"926","line":209,"column":36,"nodeType":"921","messageId":"922","endLine":209,"endColumn":37,"suggestions":"1125"},{"ruleId":"919","severity":1,"message":"920","line":210,"column":23,"nodeType":"921","messageId":"922","endLine":210,"endColumn":24,"suggestions":"1126"},{"ruleId":"919","severity":1,"message":"924","line":210,"column":39,"nodeType":"921","messageId":"922","endLine":210,"endColumn":40,"suggestions":"1127"},{"ruleId":"919","severity":1,"message":"926","line":219,"column":30,"nodeType":"921","messageId":"922","endLine":219,"endColumn":31,"suggestions":"1128"},{"ruleId":"919","severity":1,"message":"926","line":219,"column":45,"nodeType":"921","messageId":"922","endLine":219,"endColumn":46,"suggestions":"1129"},{"ruleId":"919","severity":1,"message":"926","line":221,"column":27,"nodeType":"921","messageId":"922","endLine":221,"endColumn":28,"suggestions":"1130"},{"ruleId":"919","severity":1,"message":"926","line":221,"column":42,"nodeType":"921","messageId":"922","endLine":221,"endColumn":43,"suggestions":"1131"},{"ruleId":"919","severity":1,"message":"920","line":222,"column":23,"nodeType":"921","messageId":"922","endLine":222,"endColumn":24,"suggestions":"1132"},{"ruleId":"919","severity":1,"message":"924","line":222,"column":39,"nodeType":"921","messageId":"922","endLine":222,"endColumn":40,"suggestions":"1133"},{"ruleId":"919","severity":1,"message":"926","line":225,"column":30,"nodeType":"921","messageId":"922","endLine":225,"endColumn":31,"suggestions":"1134"},{"ruleId":"919","severity":1,"message":"926","line":225,"column":39,"nodeType":"921","messageId":"922","endLine":225,"endColumn":40,"suggestions":"1135"},{"ruleId":"919","severity":1,"message":"926","line":227,"column":22,"nodeType":"921","messageId":"922","endLine":227,"endColumn":23,"suggestions":"1136"},{"ruleId":"919","severity":1,"message":"926","line":227,"column":31,"nodeType":"921","messageId":"922","endLine":227,"endColumn":32,"suggestions":"1137"},{"ruleId":"919","severity":1,"message":"920","line":228,"column":23,"nodeType":"921","messageId":"922","endLine":228,"endColumn":24,"suggestions":"1138"},{"ruleId":"919","severity":1,"message":"924","line":228,"column":39,"nodeType":"921","messageId":"922","endLine":228,"endColumn":40,"suggestions":"1139"},{"ruleId":"919","severity":1,"message":"935","line":228,"column":41,"nodeType":"921","messageId":"922","endLine":228,"endColumn":42,"suggestions":"1140"},{"ruleId":"919","severity":1,"message":"926","line":231,"column":51,"nodeType":"921","messageId":"922","endLine":231,"endColumn":52,"suggestions":"1141"},{"ruleId":"919","severity":1,"message":"926","line":231,"column":66,"nodeType":"921","messageId":"922","endLine":231,"endColumn":67,"suggestions":"1142"},{"ruleId":"919","severity":1,"message":"926","line":233,"column":46,"nodeType":"921","messageId":"922","endLine":233,"endColumn":47,"suggestions":"1143"},{"ruleId":"919","severity":1,"message":"926","line":233,"column":55,"nodeType":"921","messageId":"922","endLine":233,"endColumn":56,"suggestions":"1144"},{"ruleId":"919","severity":1,"message":"920","line":234,"column":23,"nodeType":"921","messageId":"922","endLine":234,"endColumn":24,"suggestions":"1145"},{"ruleId":"919","severity":1,"message":"924","line":234,"column":39,"nodeType":"921","messageId":"922","endLine":234,"endColumn":40,"suggestions":"1146"},{"ruleId":"919","severity":1,"message":"920","line":240,"column":23,"nodeType":"921","messageId":"922","endLine":240,"endColumn":24,"suggestions":"1147"},{"ruleId":"919","severity":1,"message":"924","line":240,"column":39,"nodeType":"921","messageId":"922","endLine":240,"endColumn":40,"suggestions":"1148"},{"ruleId":"919","severity":1,"message":"920","line":246,"column":23,"nodeType":"921","messageId":"922","endLine":246,"endColumn":24,"suggestions":"1149"},{"ruleId":"919","severity":1,"message":"924","line":246,"column":39,"nodeType":"921","messageId":"922","endLine":246,"endColumn":40,"suggestions":"1150"},{"ruleId":"919","severity":1,"message":"920","line":252,"column":23,"nodeType":"921","messageId":"922","endLine":252,"endColumn":24,"suggestions":"1151"},{"ruleId":"919","severity":1,"message":"924","line":252,"column":39,"nodeType":"921","messageId":"922","endLine":252,"endColumn":40,"suggestions":"1152"},{"ruleId":"919","severity":1,"message":"920","line":258,"column":23,"nodeType":"921","messageId":"922","endLine":258,"endColumn":24,"suggestions":"1153"},{"ruleId":"919","severity":1,"message":"924","line":258,"column":39,"nodeType":"921","messageId":"922","endLine":258,"endColumn":40,"suggestions":"1154"},{"ruleId":"919","severity":1,"message":"920","line":264,"column":23,"nodeType":"921","messageId":"922","endLine":264,"endColumn":24,"suggestions":"1155"},{"ruleId":"919","severity":1,"message":"924","line":264,"column":39,"nodeType":"921","messageId":"922","endLine":264,"endColumn":40,"suggestions":"1156"},{"ruleId":"919","severity":1,"message":"920","line":270,"column":23,"nodeType":"921","messageId":"922","endLine":270,"endColumn":24,"suggestions":"1157"},{"ruleId":"919","severity":1,"message":"924","line":270,"column":39,"nodeType":"921","messageId":"922","endLine":270,"endColumn":40,"suggestions":"1158"},{"ruleId":"919","severity":1,"message":"920","line":276,"column":23,"nodeType":"921","messageId":"922","endLine":276,"endColumn":24,"suggestions":"1159"},{"ruleId":"919","severity":1,"message":"924","line":276,"column":39,"nodeType":"921","messageId":"922","endLine":276,"endColumn":40,"suggestions":"1160"},{"ruleId":"919","severity":1,"message":"920","line":282,"column":23,"nodeType":"921","messageId":"922","endLine":282,"endColumn":24,"suggestions":"1161"},{"ruleId":"919","severity":1,"message":"924","line":282,"column":39,"nodeType":"921","messageId":"922","endLine":282,"endColumn":40,"suggestions":"1162"},{"ruleId":"919","severity":1,"message":"920","line":288,"column":23,"nodeType":"921","messageId":"922","endLine":288,"endColumn":24,"suggestions":"1163"},{"ruleId":"919","severity":1,"message":"924","line":288,"column":41,"nodeType":"921","messageId":"922","endLine":288,"endColumn":42,"suggestions":"1164"},{"ruleId":"919","severity":1,"message":"920","line":294,"column":23,"nodeType":"921","messageId":"922","endLine":294,"endColumn":24,"suggestions":"1165"},{"ruleId":"919","severity":1,"message":"924","line":294,"column":41,"nodeType":"921","messageId":"922","endLine":294,"endColumn":42,"suggestions":"1166"},{"ruleId":"919","severity":1,"message":"920","line":300,"column":23,"nodeType":"921","messageId":"922","endLine":300,"endColumn":24,"suggestions":"1167"},{"ruleId":"919","severity":1,"message":"924","line":300,"column":41,"nodeType":"921","messageId":"922","endLine":300,"endColumn":42,"suggestions":"1168"},{"ruleId":"919","severity":1,"message":"920","line":306,"column":23,"nodeType":"921","messageId":"922","endLine":306,"endColumn":24,"suggestions":"1169"},{"ruleId":"919","severity":1,"message":"924","line":306,"column":39,"nodeType":"921","messageId":"922","endLine":306,"endColumn":40,"suggestions":"1170"},{"ruleId":"919","severity":1,"message":"920","line":312,"column":23,"nodeType":"921","messageId":"922","endLine":312,"endColumn":24,"suggestions":"1171"},{"ruleId":"919","severity":1,"message":"924","line":312,"column":42,"nodeType":"921","messageId":"922","endLine":312,"endColumn":43,"suggestions":"1172"},{"ruleId":"919","severity":1,"message":"920","line":318,"column":23,"nodeType":"921","messageId":"922","endLine":318,"endColumn":24,"suggestions":"1173"},{"ruleId":"919","severity":1,"message":"1012","line":318,"column":36,"nodeType":"921","messageId":"922","endLine":318,"endColumn":37,"suggestions":"1174"},{"ruleId":"919","severity":1,"message":"924","line":318,"column":38,"nodeType":"921","messageId":"922","endLine":318,"endColumn":39,"suggestions":"1175"},{"ruleId":"919","severity":1,"message":"933","line":318,"column":40,"nodeType":"921","messageId":"922","endLine":318,"endColumn":41,"suggestions":"1176"},{"ruleId":"919","severity":1,"message":"935","line":318,"column":42,"nodeType":"921","messageId":"922","endLine":318,"endColumn":43,"suggestions":"1177"},{"ruleId":"919","severity":1,"message":"926","line":321,"column":27,"nodeType":"921","messageId":"922","endLine":321,"endColumn":28,"suggestions":"1178"},{"ruleId":"919","severity":1,"message":"926","line":323,"column":27,"nodeType":"921","messageId":"922","endLine":323,"endColumn":28,"suggestions":"1179"},{"ruleId":"919","severity":1,"message":"920","line":324,"column":23,"nodeType":"921","messageId":"922","endLine":324,"endColumn":24,"suggestions":"1180"},{"ruleId":"919","severity":1,"message":"1012","line":324,"column":36,"nodeType":"921","messageId":"922","endLine":324,"endColumn":37,"suggestions":"1181"},{"ruleId":"919","severity":1,"message":"924","line":324,"column":38,"nodeType":"921","messageId":"922","endLine":324,"endColumn":39,"suggestions":"1182"},{"ruleId":"919","severity":1,"message":"933","line":324,"column":40,"nodeType":"921","messageId":"922","endLine":324,"endColumn":41,"suggestions":"1183"},{"ruleId":"919","severity":1,"message":"935","line":324,"column":42,"nodeType":"921","messageId":"922","endLine":324,"endColumn":43,"suggestions":"1184"},{"ruleId":"919","severity":1,"message":"920","line":330,"column":23,"nodeType":"921","messageId":"922","endLine":330,"endColumn":24,"suggestions":"1185"},{"ruleId":"919","severity":1,"message":"1012","line":330,"column":36,"nodeType":"921","messageId":"922","endLine":330,"endColumn":37,"suggestions":"1186"},{"ruleId":"919","severity":1,"message":"924","line":330,"column":38,"nodeType":"921","messageId":"922","endLine":330,"endColumn":39,"suggestions":"1187"},{"ruleId":"919","severity":1,"message":"933","line":330,"column":40,"nodeType":"921","messageId":"922","endLine":330,"endColumn":41,"suggestions":"1188"},{"ruleId":"919","severity":1,"message":"935","line":330,"column":42,"nodeType":"921","messageId":"922","endLine":330,"endColumn":43,"suggestions":"1189"},{"ruleId":"919","severity":1,"message":"926","line":333,"column":34,"nodeType":"921","messageId":"922","endLine":333,"endColumn":35,"suggestions":"1190"},{"ruleId":"919","severity":1,"message":"926","line":335,"column":34,"nodeType":"921","messageId":"922","endLine":335,"endColumn":35,"suggestions":"1191"},{"ruleId":"919","severity":1,"message":"920","line":336,"column":23,"nodeType":"921","messageId":"922","endLine":336,"endColumn":24,"suggestions":"1192"},{"ruleId":"919","severity":1,"message":"1012","line":336,"column":36,"nodeType":"921","messageId":"922","endLine":336,"endColumn":37,"suggestions":"1193"},{"ruleId":"919","severity":1,"message":"924","line":336,"column":38,"nodeType":"921","messageId":"922","endLine":336,"endColumn":39,"suggestions":"1194"},{"ruleId":"919","severity":1,"message":"933","line":336,"column":40,"nodeType":"921","messageId":"922","endLine":336,"endColumn":41,"suggestions":"1195"},{"ruleId":"919","severity":1,"message":"935","line":336,"column":42,"nodeType":"921","messageId":"922","endLine":336,"endColumn":43,"suggestions":"1196"},{"ruleId":"919","severity":1,"message":"926","line":339,"column":50,"nodeType":"921","messageId":"922","endLine":339,"endColumn":51,"suggestions":"1197"},{"ruleId":"919","severity":1,"message":"926","line":339,"column":59,"nodeType":"921","messageId":"922","endLine":339,"endColumn":60,"suggestions":"1198"},{"ruleId":"919","severity":1,"message":"926","line":341,"column":45,"nodeType":"921","messageId":"922","endLine":341,"endColumn":46,"suggestions":"1199"},{"ruleId":"919","severity":1,"message":"926","line":341,"column":54,"nodeType":"921","messageId":"922","endLine":341,"endColumn":55,"suggestions":"1200"},{"ruleId":"919","severity":1,"message":"920","line":342,"column":23,"nodeType":"921","messageId":"922","endLine":342,"endColumn":24,"suggestions":"1201"},{"ruleId":"919","severity":1,"message":"924","line":342,"column":36,"nodeType":"921","messageId":"922","endLine":342,"endColumn":37,"suggestions":"1202"},{"ruleId":"919","severity":1,"message":"933","line":342,"column":38,"nodeType":"921","messageId":"922","endLine":342,"endColumn":39,"suggestions":"1203"},{"ruleId":"919","severity":1,"message":"935","line":342,"column":40,"nodeType":"921","messageId":"922","endLine":342,"endColumn":41,"suggestions":"1204"},{"ruleId":"919","severity":1,"message":"926","line":345,"column":27,"nodeType":"921","messageId":"922","endLine":345,"endColumn":28,"suggestions":"1205"},{"ruleId":"919","severity":1,"message":"926","line":345,"column":36,"nodeType":"921","messageId":"922","endLine":345,"endColumn":37,"suggestions":"1206"},{"ruleId":"919","severity":1,"message":"926","line":347,"column":29,"nodeType":"921","messageId":"922","endLine":347,"endColumn":30,"suggestions":"1207"},{"ruleId":"919","severity":1,"message":"926","line":347,"column":38,"nodeType":"921","messageId":"922","endLine":347,"endColumn":39,"suggestions":"1208"},{"ruleId":"919","severity":1,"message":"920","line":348,"column":23,"nodeType":"921","messageId":"922","endLine":348,"endColumn":24,"suggestions":"1209"},{"ruleId":"919","severity":1,"message":"924","line":348,"column":36,"nodeType":"921","messageId":"922","endLine":348,"endColumn":37,"suggestions":"1210"},{"ruleId":"919","severity":1,"message":"933","line":348,"column":38,"nodeType":"921","messageId":"922","endLine":348,"endColumn":39,"suggestions":"1211"},{"ruleId":"919","severity":1,"message":"935","line":348,"column":40,"nodeType":"921","messageId":"922","endLine":348,"endColumn":41,"suggestions":"1212"},{"ruleId":"919","severity":1,"message":"920","line":354,"column":23,"nodeType":"921","messageId":"922","endLine":354,"endColumn":24,"suggestions":"1213"},{"ruleId":"919","severity":1,"message":"924","line":354,"column":36,"nodeType":"921","messageId":"922","endLine":354,"endColumn":37,"suggestions":"1214"},{"ruleId":"919","severity":1,"message":"920","line":360,"column":23,"nodeType":"921","messageId":"922","endLine":360,"endColumn":24,"suggestions":"1215"},{"ruleId":"919","severity":1,"message":"924","line":360,"column":36,"nodeType":"921","messageId":"922","endLine":360,"endColumn":37,"suggestions":"1216"},{"ruleId":"919","severity":1,"message":"920","line":366,"column":23,"nodeType":"921","messageId":"922","endLine":366,"endColumn":24,"suggestions":"1217"},{"ruleId":"919","severity":1,"message":"924","line":366,"column":36,"nodeType":"921","messageId":"922","endLine":366,"endColumn":37,"suggestions":"1218"},{"ruleId":"919","severity":1,"message":"920","line":373,"column":23,"nodeType":"921","messageId":"922","endLine":373,"endColumn":24,"suggestions":"1219"},{"ruleId":"919","severity":1,"message":"924","line":373,"column":36,"nodeType":"921","messageId":"922","endLine":373,"endColumn":37,"suggestions":"1220"},{"ruleId":"919","severity":1,"message":"920","line":379,"column":23,"nodeType":"921","messageId":"922","endLine":379,"endColumn":24,"suggestions":"1221"},{"ruleId":"919","severity":1,"message":"924","line":379,"column":36,"nodeType":"921","messageId":"922","endLine":379,"endColumn":37,"suggestions":"1222"},{"ruleId":"919","severity":1,"message":"920","line":385,"column":23,"nodeType":"921","messageId":"922","endLine":385,"endColumn":24,"suggestions":"1223"},{"ruleId":"919","severity":1,"message":"924","line":385,"column":36,"nodeType":"921","messageId":"922","endLine":385,"endColumn":37,"suggestions":"1224"},{"ruleId":"919","severity":1,"message":"920","line":391,"column":23,"nodeType":"921","messageId":"922","endLine":391,"endColumn":24,"suggestions":"1225"},{"ruleId":"919","severity":1,"message":"924","line":391,"column":36,"nodeType":"921","messageId":"922","endLine":391,"endColumn":37,"suggestions":"1226"},{"ruleId":"919","severity":1,"message":"1227","line":394,"column":26,"nodeType":"921","messageId":"922","endLine":394,"endColumn":27,"suggestions":"1228"},{"ruleId":"919","severity":1,"message":"1227","line":394,"column":46,"nodeType":"921","messageId":"922","endLine":394,"endColumn":47,"suggestions":"1229"},{"ruleId":"919","severity":1,"message":"1227","line":396,"column":26,"nodeType":"921","messageId":"922","endLine":396,"endColumn":27,"suggestions":"1230"},{"ruleId":"919","severity":1,"message":"1227","line":396,"column":46,"nodeType":"921","messageId":"922","endLine":396,"endColumn":47,"suggestions":"1231"},{"ruleId":"919","severity":1,"message":"920","line":397,"column":23,"nodeType":"921","messageId":"922","endLine":397,"endColumn":24,"suggestions":"1232"},{"ruleId":"919","severity":1,"message":"924","line":397,"column":35,"nodeType":"921","messageId":"922","endLine":397,"endColumn":36,"suggestions":"1233"},{"ruleId":"919","severity":1,"message":"920","line":403,"column":23,"nodeType":"921","messageId":"922","endLine":403,"endColumn":24,"suggestions":"1234"},{"ruleId":"919","severity":1,"message":"924","line":403,"column":36,"nodeType":"921","messageId":"922","endLine":403,"endColumn":37,"suggestions":"1235"},{"ruleId":"919","severity":1,"message":"920","line":409,"column":23,"nodeType":"921","messageId":"922","endLine":409,"endColumn":24,"suggestions":"1236"},{"ruleId":"919","severity":1,"message":"924","line":409,"column":36,"nodeType":"921","messageId":"922","endLine":409,"endColumn":37,"suggestions":"1237"},{"ruleId":"919","severity":1,"message":"920","line":415,"column":23,"nodeType":"921","messageId":"922","endLine":415,"endColumn":24,"suggestions":"1238"},{"ruleId":"919","severity":1,"message":"924","line":415,"column":36,"nodeType":"921","messageId":"922","endLine":415,"endColumn":37,"suggestions":"1239"},{"ruleId":"919","severity":1,"message":"920","line":421,"column":23,"nodeType":"921","messageId":"922","endLine":421,"endColumn":24,"suggestions":"1240"},{"ruleId":"919","severity":1,"message":"924","line":421,"column":36,"nodeType":"921","messageId":"922","endLine":421,"endColumn":37,"suggestions":"1241"},{"ruleId":"919","severity":1,"message":"920","line":427,"column":23,"nodeType":"921","messageId":"922","endLine":427,"endColumn":24,"suggestions":"1242"},{"ruleId":"919","severity":1,"message":"924","line":427,"column":36,"nodeType":"921","messageId":"922","endLine":427,"endColumn":37,"suggestions":"1243"},{"ruleId":"919","severity":1,"message":"920","line":433,"column":23,"nodeType":"921","messageId":"922","endLine":433,"endColumn":24,"suggestions":"1244"},{"ruleId":"919","severity":1,"message":"924","line":433,"column":38,"nodeType":"921","messageId":"922","endLine":433,"endColumn":39,"suggestions":"1245"},{"ruleId":"919","severity":1,"message":"920","line":439,"column":23,"nodeType":"921","messageId":"922","endLine":439,"endColumn":24,"suggestions":"1246"},{"ruleId":"919","severity":1,"message":"924","line":439,"column":35,"nodeType":"921","messageId":"922","endLine":439,"endColumn":36,"suggestions":"1247"},{"ruleId":"919","severity":1,"message":"920","line":445,"column":23,"nodeType":"921","messageId":"922","endLine":445,"endColumn":24,"suggestions":"1248"},{"ruleId":"919","severity":1,"message":"924","line":445,"column":36,"nodeType":"921","messageId":"922","endLine":445,"endColumn":37,"suggestions":"1249"},{"ruleId":"919","severity":1,"message":"920","line":451,"column":23,"nodeType":"921","messageId":"922","endLine":451,"endColumn":24,"suggestions":"1250"},{"ruleId":"919","severity":1,"message":"924","line":451,"column":36,"nodeType":"921","messageId":"922","endLine":451,"endColumn":37,"suggestions":"1251"},{"ruleId":"919","severity":1,"message":"920","line":457,"column":23,"nodeType":"921","messageId":"922","endLine":457,"endColumn":24,"suggestions":"1252"},{"ruleId":"919","severity":1,"message":"924","line":457,"column":36,"nodeType":"921","messageId":"922","endLine":457,"endColumn":37,"suggestions":"1253"},{"ruleId":"919","severity":1,"message":"920","line":470,"column":23,"nodeType":"921","messageId":"922","endLine":470,"endColumn":24,"suggestions":"1254"},{"ruleId":"919","severity":1,"message":"924","line":470,"column":36,"nodeType":"921","messageId":"922","endLine":470,"endColumn":37,"suggestions":"1255"},{"ruleId":"919","severity":1,"message":"920","line":476,"column":23,"nodeType":"921","messageId":"922","endLine":476,"endColumn":24,"suggestions":"1256"},{"ruleId":"919","severity":1,"message":"924","line":476,"column":36,"nodeType":"921","messageId":"922","endLine":476,"endColumn":37,"suggestions":"1257"},{"ruleId":"919","severity":1,"message":"920","line":482,"column":23,"nodeType":"921","messageId":"922","endLine":482,"endColumn":24,"suggestions":"1258"},{"ruleId":"919","severity":1,"message":"924","line":482,"column":36,"nodeType":"921","messageId":"922","endLine":482,"endColumn":37,"suggestions":"1259"},{"ruleId":"919","severity":1,"message":"920","line":488,"column":23,"nodeType":"921","messageId":"922","endLine":488,"endColumn":24,"suggestions":"1260"},{"ruleId":"919","severity":1,"message":"924","line":488,"column":36,"nodeType":"921","messageId":"922","endLine":488,"endColumn":37,"suggestions":"1261"},{"ruleId":"919","severity":1,"message":"920","line":500,"column":23,"nodeType":"921","messageId":"922","endLine":500,"endColumn":24,"suggestions":"1262"},{"ruleId":"919","severity":1,"message":"924","line":500,"column":36,"nodeType":"921","messageId":"922","endLine":500,"endColumn":37,"suggestions":"1263"},{"ruleId":"919","severity":1,"message":"920","line":512,"column":23,"nodeType":"921","messageId":"922","endLine":512,"endColumn":24,"suggestions":"1264"},{"ruleId":"919","severity":1,"message":"924","line":512,"column":37,"nodeType":"921","messageId":"922","endLine":512,"endColumn":38,"suggestions":"1265"},{"ruleId":"919","severity":1,"message":"920","line":518,"column":23,"nodeType":"921","messageId":"922","endLine":518,"endColumn":24,"suggestions":"1266"},{"ruleId":"919","severity":1,"message":"924","line":518,"column":37,"nodeType":"921","messageId":"922","endLine":518,"endColumn":38,"suggestions":"1267"},{"ruleId":"919","severity":1,"message":"920","line":530,"column":23,"nodeType":"921","messageId":"922","endLine":530,"endColumn":24,"suggestions":"1268"},{"ruleId":"919","severity":1,"message":"924","line":530,"column":36,"nodeType":"921","messageId":"922","endLine":530,"endColumn":37,"suggestions":"1269"},{"ruleId":"919","severity":1,"message":"920","line":536,"column":23,"nodeType":"921","messageId":"922","endLine":536,"endColumn":24,"suggestions":"1270"},{"ruleId":"919","severity":1,"message":"924","line":536,"column":36,"nodeType":"921","messageId":"922","endLine":536,"endColumn":37,"suggestions":"1271"},{"ruleId":"919","severity":1,"message":"920","line":542,"column":23,"nodeType":"921","messageId":"922","endLine":542,"endColumn":24,"suggestions":"1272"},{"ruleId":"919","severity":1,"message":"924","line":542,"column":36,"nodeType":"921","messageId":"922","endLine":542,"endColumn":37,"suggestions":"1273"},{"ruleId":"919","severity":1,"message":"920","line":548,"column":23,"nodeType":"921","messageId":"922","endLine":548,"endColumn":24,"suggestions":"1274"},{"ruleId":"919","severity":1,"message":"924","line":548,"column":37,"nodeType":"921","messageId":"922","endLine":548,"endColumn":38,"suggestions":"1275"},{"ruleId":"919","severity":1,"message":"926","line":551,"column":17,"nodeType":"921","messageId":"922","endLine":551,"endColumn":18,"suggestions":"1276"},{"ruleId":"919","severity":1,"message":"926","line":551,"column":36,"nodeType":"921","messageId":"922","endLine":551,"endColumn":37,"suggestions":"1277"},{"ruleId":"919","severity":1,"message":"926","line":551,"column":49,"nodeType":"921","messageId":"922","endLine":551,"endColumn":50,"suggestions":"1278"},{"ruleId":"919","severity":1,"message":"926","line":551,"column":64,"nodeType":"921","messageId":"922","endLine":551,"endColumn":65,"suggestions":"1279"},{"ruleId":"919","severity":1,"message":"926","line":553,"column":24,"nodeType":"921","messageId":"922","endLine":553,"endColumn":25,"suggestions":"1280"},{"ruleId":"919","severity":1,"message":"926","line":553,"column":39,"nodeType":"921","messageId":"922","endLine":553,"endColumn":40,"suggestions":"1281"},{"ruleId":"919","severity":1,"message":"920","line":554,"column":23,"nodeType":"921","messageId":"922","endLine":554,"endColumn":24,"suggestions":"1282"},{"ruleId":"919","severity":1,"message":"924","line":554,"column":36,"nodeType":"921","messageId":"922","endLine":554,"endColumn":37,"suggestions":"1283"},{"ruleId":"919","severity":1,"message":"920","line":560,"column":23,"nodeType":"921","messageId":"922","endLine":560,"endColumn":24,"suggestions":"1284"},{"ruleId":"919","severity":1,"message":"924","line":560,"column":37,"nodeType":"921","messageId":"922","endLine":560,"endColumn":38,"suggestions":"1285"},{"ruleId":"919","severity":1,"message":"920","line":566,"column":23,"nodeType":"921","messageId":"922","endLine":566,"endColumn":24,"suggestions":"1286"},{"ruleId":"919","severity":1,"message":"924","line":566,"column":39,"nodeType":"921","messageId":"922","endLine":566,"endColumn":40,"suggestions":"1287"},{"ruleId":"919","severity":1,"message":"920","line":572,"column":23,"nodeType":"921","messageId":"922","endLine":572,"endColumn":24,"suggestions":"1288"},{"ruleId":"919","severity":1,"message":"924","line":572,"column":39,"nodeType":"921","messageId":"922","endLine":572,"endColumn":40,"suggestions":"1289"},{"ruleId":"919","severity":1,"message":"920","line":578,"column":23,"nodeType":"921","messageId":"922","endLine":578,"endColumn":24,"suggestions":"1290"},{"ruleId":"919","severity":1,"message":"924","line":578,"column":40,"nodeType":"921","messageId":"922","endLine":578,"endColumn":41,"suggestions":"1291"},{"ruleId":"919","severity":1,"message":"920","line":584,"column":23,"nodeType":"921","messageId":"922","endLine":584,"endColumn":24,"suggestions":"1292"},{"ruleId":"919","severity":1,"message":"924","line":584,"column":39,"nodeType":"921","messageId":"922","endLine":584,"endColumn":40,"suggestions":"1293"},{"ruleId":"919","severity":1,"message":"920","line":590,"column":23,"nodeType":"921","messageId":"922","endLine":590,"endColumn":24,"suggestions":"1294"},{"ruleId":"919","severity":1,"message":"924","line":590,"column":39,"nodeType":"921","messageId":"922","endLine":590,"endColumn":40,"suggestions":"1295"},{"ruleId":"919","severity":1,"message":"920","line":596,"column":23,"nodeType":"921","messageId":"922","endLine":596,"endColumn":24,"suggestions":"1296"},{"ruleId":"919","severity":1,"message":"924","line":596,"column":39,"nodeType":"921","messageId":"922","endLine":596,"endColumn":40,"suggestions":"1297"},{"ruleId":"919","severity":1,"message":"920","line":602,"column":23,"nodeType":"921","messageId":"922","endLine":602,"endColumn":24,"suggestions":"1298"},{"ruleId":"919","severity":1,"message":"924","line":602,"column":39,"nodeType":"921","messageId":"922","endLine":602,"endColumn":40,"suggestions":"1299"},{"ruleId":"919","severity":1,"message":"920","line":608,"column":23,"nodeType":"921","messageId":"922","endLine":608,"endColumn":24,"suggestions":"1300"},{"ruleId":"919","severity":1,"message":"924","line":608,"column":39,"nodeType":"921","messageId":"922","endLine":608,"endColumn":40,"suggestions":"1301"},{"ruleId":"919","severity":1,"message":"920","line":614,"column":24,"nodeType":"921","messageId":"922","endLine":614,"endColumn":25,"suggestions":"1302"},{"ruleId":"919","severity":1,"message":"924","line":614,"column":40,"nodeType":"921","messageId":"922","endLine":614,"endColumn":41,"suggestions":"1303"},{"ruleId":"919","severity":1,"message":"920","line":620,"column":23,"nodeType":"921","messageId":"922","endLine":620,"endColumn":24,"suggestions":"1304"},{"ruleId":"919","severity":1,"message":"924","line":620,"column":39,"nodeType":"921","messageId":"922","endLine":620,"endColumn":40,"suggestions":"1305"},{"ruleId":"919","severity":1,"message":"920","line":626,"column":23,"nodeType":"921","messageId":"922","endLine":626,"endColumn":24,"suggestions":"1306"},{"ruleId":"919","severity":1,"message":"924","line":626,"column":39,"nodeType":"921","messageId":"922","endLine":626,"endColumn":40,"suggestions":"1307"},{"ruleId":"919","severity":1,"message":"920","line":632,"column":23,"nodeType":"921","messageId":"922","endLine":632,"endColumn":24,"suggestions":"1308"},{"ruleId":"919","severity":1,"message":"924","line":632,"column":39,"nodeType":"921","messageId":"922","endLine":632,"endColumn":40,"suggestions":"1309"},{"ruleId":"919","severity":1,"message":"920","line":638,"column":23,"nodeType":"921","messageId":"922","endLine":638,"endColumn":24,"suggestions":"1310"},{"ruleId":"919","severity":1,"message":"924","line":638,"column":39,"nodeType":"921","messageId":"922","endLine":638,"endColumn":40,"suggestions":"1311"},{"ruleId":"919","severity":1,"message":"920","line":644,"column":23,"nodeType":"921","messageId":"922","endLine":644,"endColumn":24,"suggestions":"1312"},{"ruleId":"919","severity":1,"message":"924","line":644,"column":39,"nodeType":"921","messageId":"922","endLine":644,"endColumn":40,"suggestions":"1313"},{"ruleId":"919","severity":1,"message":"920","line":650,"column":23,"nodeType":"921","messageId":"922","endLine":650,"endColumn":24,"suggestions":"1314"},{"ruleId":"919","severity":1,"message":"924","line":650,"column":39,"nodeType":"921","messageId":"922","endLine":650,"endColumn":40,"suggestions":"1315"},{"ruleId":"919","severity":1,"message":"920","line":656,"column":23,"nodeType":"921","messageId":"922","endLine":656,"endColumn":24,"suggestions":"1316"},{"ruleId":"919","severity":1,"message":"924","line":656,"column":39,"nodeType":"921","messageId":"922","endLine":656,"endColumn":40,"suggestions":"1317"},{"ruleId":"919","severity":1,"message":"920","line":662,"column":23,"nodeType":"921","messageId":"922","endLine":662,"endColumn":24,"suggestions":"1318"},{"ruleId":"919","severity":1,"message":"924","line":662,"column":39,"nodeType":"921","messageId":"922","endLine":662,"endColumn":40,"suggestions":"1319"},{"ruleId":"919","severity":1,"message":"920","line":668,"column":23,"nodeType":"921","messageId":"922","endLine":668,"endColumn":24,"suggestions":"1320"},{"ruleId":"919","severity":1,"message":"924","line":668,"column":39,"nodeType":"921","messageId":"922","endLine":668,"endColumn":40,"suggestions":"1321"},{"ruleId":"919","severity":1,"message":"920","line":682,"column":23,"nodeType":"921","messageId":"922","endLine":682,"endColumn":24,"suggestions":"1322"},{"ruleId":"919","severity":1,"message":"924","line":682,"column":41,"nodeType":"921","messageId":"922","endLine":682,"endColumn":42,"suggestions":"1323"},{"ruleId":"919","severity":1,"message":"926","line":691,"column":37,"nodeType":"921","messageId":"922","endLine":691,"endColumn":38,"suggestions":"1324"},{"ruleId":"919","severity":1,"message":"926","line":691,"column":46,"nodeType":"921","messageId":"922","endLine":691,"endColumn":47,"suggestions":"1325"},{"ruleId":"919","severity":1,"message":"926","line":693,"column":23,"nodeType":"921","messageId":"922","endLine":693,"endColumn":24,"suggestions":"1326"},{"ruleId":"919","severity":1,"message":"926","line":693,"column":32,"nodeType":"921","messageId":"922","endLine":693,"endColumn":33,"suggestions":"1327"},{"ruleId":"919","severity":1,"message":"920","line":694,"column":23,"nodeType":"921","messageId":"922","endLine":694,"endColumn":24,"suggestions":"1328"},{"ruleId":"919","severity":1,"message":"924","line":694,"column":38,"nodeType":"921","messageId":"922","endLine":694,"endColumn":39,"suggestions":"1329"},{"ruleId":"919","severity":1,"message":"926","line":751,"column":41,"nodeType":"921","messageId":"922","endLine":751,"endColumn":42,"suggestions":"1330"},{"ruleId":"919","severity":1,"message":"926","line":751,"column":50,"nodeType":"921","messageId":"922","endLine":751,"endColumn":51,"suggestions":"1331"},{"ruleId":"919","severity":1,"message":"926","line":751,"column":59,"nodeType":"921","messageId":"922","endLine":751,"endColumn":60,"suggestions":"1332"},{"ruleId":"919","severity":1,"message":"926","line":751,"column":68,"nodeType":"921","messageId":"922","endLine":751,"endColumn":69,"suggestions":"1333"},{"ruleId":"919","severity":1,"message":"926","line":751,"column":77,"nodeType":"921","messageId":"922","endLine":751,"endColumn":78,"suggestions":"1334"},{"ruleId":"919","severity":1,"message":"926","line":753,"column":31,"nodeType":"921","messageId":"922","endLine":753,"endColumn":32,"suggestions":"1335"},{"ruleId":"919","severity":1,"message":"926","line":753,"column":40,"nodeType":"921","messageId":"922","endLine":753,"endColumn":41,"suggestions":"1336"},{"ruleId":"919","severity":1,"message":"926","line":753,"column":49,"nodeType":"921","messageId":"922","endLine":753,"endColumn":50,"suggestions":"1337"},{"ruleId":"919","severity":1,"message":"926","line":753,"column":58,"nodeType":"921","messageId":"922","endLine":753,"endColumn":59,"suggestions":"1338"},{"ruleId":"919","severity":1,"message":"926","line":753,"column":67,"nodeType":"921","messageId":"922","endLine":753,"endColumn":68,"suggestions":"1339"},{"ruleId":"919","severity":1,"message":"920","line":754,"column":23,"nodeType":"921","messageId":"922","endLine":754,"endColumn":24,"suggestions":"1340"},{"ruleId":"919","severity":1,"message":"924","line":754,"column":39,"nodeType":"921","messageId":"922","endLine":754,"endColumn":40,"suggestions":"1341"},"no-native-reassign",["1342"],"no-negated-in-lhs",["1343"],"no-unused-vars","'Pos' is assigned a value but never used.","Identifier","unusedVar","'axios' is defined but never used.","'authData' is assigned a value but never used.","'content' is assigned a value but never used.","'header' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'inventoryService'. Either include it or remove the dependency array.","ArrayExpression",["1344"],"'CRow' is defined but never used.","'CDataTable' is defined but never used.","'changeDateFormat' is assigned a value but never used.","'dateObj' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'endDate', 'inventoryService', and 'startDate'. Either include them or remove the dependency array.",["1345"],"'CDropdown' is defined but never used.","'CDropdownToggle' is defined but never used.","'CDropdownMenu' is defined but never used.","'CDropdownItem' is defined but never used.","'stat' is defined but never used.","'categoryArray' is assigned a value but never used.","'setCategoryArray' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'connect' is defined but never used.","'Box' is defined but never used.","'Checkbox' is defined but never used.","'HicksData' is defined but never used.","'CancelIcon' is defined but never used.","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","'invoiceNo' is assigned a value but never used.","'setInvoiceNo' is assigned a value but never used.","'saveInvoiceFlag' is assigned a value but never used.","'api' is assigned a value but never used.","'reviewItems' is assigned a value but never used.","'setReviewItems' is assigned a value but never used.","'costInc' is assigned a value but never used.","'costDec' is assigned a value but never used.","'isUpdated' is assigned a value but never used.","'updateIndex' is assigned a value but never used.","'itemNo' is assigned a value but never used.","'redState' is assigned a value but never used.","'searchVal' is assigned a value but never used.","'setSearchVal' is assigned a value but never used.","'dropdownLoader' is assigned a value but never used.","'setDropdownLoader' is assigned a value but never used.","'fetchingOptions' is assigned a value but never used.","'dropdownIndex' is assigned a value but never used.","no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'responses' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'res' is assigned a value but never used.","'costChange' is assigned a value but never used.","no-self-assign","'row.description' is assigned to itself.","MemberExpression","selfAssignment","'hicksvilleDropdown' is assigned a value but never used.","'searchDropdown' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'updateItemOld' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["1346"],"'productDetails' is assigned a value but never used.","'setModalLabel' is assigned a value but never used.","'detailsModal' is assigned a value but never used.","'setDetailsModal' is assigned a value but never used.","'details' is assigned a value but never used.","'setDetails' is assigned a value but never used.","'detailsIndex' is assigned a value but never used.","'unitCost' is assigned a value but never used.","'apiLoader' is assigned a value but never used.","'loader' is assigned a value but never used.","'TOTALQTY' is assigned a value but never used.","'pushToWoocom' is assigned a value but never used.","'data' is assigned a value but never used.","'tempTable' is assigned a value but never used.","'addProduct' is assigned a value but never used.","'invoiceData' is defined but never used.","'row.sku' is assigned to itself.","'row.isReviewed' is assigned to itself.","'row.linkingCorrect' is assigned to itself.","'chetak' is defined but never used.","'IconButton' is defined but never used.","'AddShoppingCartIcon' is defined but never used.","'InfoOutlinedIcon' is defined but never used.","'lightBlue' is defined but never used.","'disabled' is assigned a value but never used.","'setDisabled' is assigned a value but never used.","'setInvDate' is assigned a value but never used.","'setInvNo' is assigned a value but never used.","'setInvPage' is assigned a value but never used.","'stateUpdated' is assigned a value but never used.","'notFounds' is assigned a value but never used.","'unitsInCase' is assigned a value but never used.","'setUnitsInCase' is assigned a value but never used.","'price' is assigned a value but never used.","'setPrice' is assigned a value but never used.","'setRedState' is assigned a value but never used.","'selectedInvoice' is assigned a value but never used.","'showModal1' is assigned a value but never used.","'modalBody' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'sendInvoiceData' is assigned a value but never used.","'resScnInvDta' is assigned a value but never used.","'updateItem' is assigned a value but never used.","'addForReview' is assigned a value but never used.","'setMarkup' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.filename', 'props.selectedInvoice', and 'tesseractService'. Either include them or remove the dependency array.",["1347"],"'POSAxios' is defined but never used.","'setNewInventoryData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'inventoryService' and 'newInventoryData'. Either include them or remove the dependency array.",["1348"],"'Grid' is defined but never used.","React Hook useEffect has a missing dependency: 'props.isAuth'. Either include it or remove the dependency array. If 'setUser' needs the current value of 'props.isAuth', you can also switch to useReducer instead of useState and read 'props.isAuth' in the reducer.",["1349"],"no-useless-escape","Unnecessary escape character: \\$.","Literal","unnecessaryEscape",["1350","1351"],"Unnecessary escape character: \\*.",["1352","1353"],"Unnecessary escape character: \\..",["1354","1355"],["1356","1357"],["1358","1359"],["1360","1361"],["1362","1363"],["1364","1365"],"Unnecessary escape character: \\+.",["1366","1367"],"Unnecessary escape character: \\-.",["1368","1369"],["1370","1371"],["1372","1373"],["1374","1375"],["1376","1377"],["1378","1379"],["1380","1381"],["1382","1383"],["1384","1385"],["1386","1387"],["1388","1389"],["1390","1391"],["1392","1393"],["1394","1395"],["1396","1397"],["1398","1399"],["1400","1401"],["1402","1403"],["1404","1405"],["1406","1407"],["1408","1409"],["1410","1411"],["1412","1413"],["1414","1415"],["1416","1417"],["1418","1419"],["1420","1421"],["1422","1423"],["1424","1425"],["1426","1427"],["1428","1429"],["1430","1431"],["1432","1433"],["1434","1435"],["1436","1437"],["1438","1439"],["1440","1441"],["1442","1443"],["1444","1445"],["1446","1447"],["1448","1449"],["1450","1451"],["1452","1453"],["1454","1455"],["1456","1457"],["1458","1459"],["1460","1461"],["1462","1463"],["1464","1465"],["1466","1467"],["1468","1469"],["1470","1471"],["1472","1473"],["1474","1475"],["1476","1477"],["1478","1479"],["1480","1481"],["1482","1483"],["1484","1485"],["1486","1487"],["1488","1489"],["1490","1491"],["1492","1493"],["1494","1495"],["1496","1497"],["1498","1499"],["1500","1501"],["1502","1503"],["1504","1505"],["1506","1507"],["1508","1509"],["1510","1511"],["1512","1513"],["1514","1515"],["1516","1517"],["1518","1519"],"Unnecessary escape character: \\/.",["1520","1521"],["1522","1523"],["1524","1525"],["1526","1527"],["1528","1529"],["1530","1531"],["1532","1533"],["1534","1535"],["1536","1537"],["1538","1539"],["1540","1541"],["1542","1543"],["1544","1545"],["1546","1547"],["1548","1549"],["1550","1551"],["1552","1553"],["1554","1555"],["1556","1557"],["1558","1559"],["1560","1561"],["1562","1563"],["1564","1565"],["1566","1567"],["1568","1569"],["1570","1571"],["1572","1573"],["1574","1575"],["1576","1577"],["1578","1579"],["1580","1581"],["1582","1583"],["1584","1585"],["1586","1587"],["1588","1589"],["1590","1591"],["1592","1593"],["1594","1595"],["1596","1597"],["1598","1599"],["1600","1601"],["1602","1603"],["1604","1605"],["1606","1607"],["1608","1609"],["1610","1611"],["1612","1613"],["1614","1615"],["1616","1617"],["1618","1619"],["1620","1621"],["1622","1623"],["1624","1625"],["1626","1627"],["1628","1629"],["1630","1631"],["1632","1633"],["1634","1635"],["1636","1637"],["1638","1639"],["1640","1641"],["1642","1643"],["1644","1645"],["1646","1647"],["1648","1649"],["1650","1651"],["1652","1653"],["1654","1655"],["1656","1657"],["1658","1659"],["1660","1661"],["1662","1663"],["1664","1665"],["1666","1667"],["1668","1669"],["1670","1671"],["1672","1673"],["1674","1675"],["1676","1677"],["1678","1679"],["1680","1681"],["1682","1683"],["1684","1685"],["1686","1687"],["1688","1689"],["1690","1691"],["1692","1693"],["1694","1695"],["1696","1697"],["1698","1699"],["1700","1701"],["1702","1703"],["1704","1705"],["1706","1707"],["1708","1709"],["1710","1711"],["1712","1713"],["1714","1715"],["1716","1717"],["1718","1719"],["1720","1721"],["1722","1723"],["1724","1725"],["1726","1727"],["1728","1729"],["1730","1731"],["1732","1733"],["1734","1735"],["1736","1737"],["1738","1739"],["1740","1741"],["1742","1743"],["1744","1745"],["1746","1747"],["1748","1749"],["1750","1751"],["1752","1753"],["1754","1755"],["1756","1757"],["1758","1759"],["1760","1761"],["1762","1763"],["1764","1765"],["1766","1767"],["1768","1769"],["1770","1771"],["1772","1773"],["1774","1775"],["1776","1777"],["1778","1779"],["1780","1781"],["1782","1783"],["1784","1785"],["1786","1787"],["1788","1789"],["1790","1791"],["1792","1793"],["1794","1795"],["1796","1797"],["1798","1799"],["1800","1801"],["1802","1803"],["1804","1805"],["1806","1807"],["1808","1809"],["1810","1811"],["1812","1813"],["1814","1815"],["1816","1817"],["1818","1819"],["1820","1821"],["1822","1823"],["1824","1825"],["1826","1827"],["1828","1829"],["1830","1831"],["1832","1833"],["1834","1835"],["1836","1837"],["1838","1839"],["1840","1841"],["1842","1843"],["1844","1845"],["1846","1847"],["1848","1849"],["1850","1851"],["1852","1853"],["1854","1855"],["1856","1857"],["1858","1859"],["1860","1861"],["1862","1863"],["1864","1865"],["1866","1867"],["1868","1869"],["1870","1871"],["1872","1873"],["1874","1875"],["1876","1877"],["1878","1879"],["1880","1881"],["1882","1883"],["1884","1885"],["1886","1887"],["1888","1889"],["1890","1891"],["1892","1893"],["1894","1895"],["1896","1897"],["1898","1899"],["1900","1901"],["1902","1903"],["1904","1905"],["1906","1907"],["1908","1909"],["1910","1911"],["1912","1913"],["1914","1915"],["1916","1917"],["1918","1919"],["1920","1921"],["1922","1923"],["1924","1925"],["1926","1927"],["1928","1929"],["1930","1931"],["1932","1933"],["1934","1935"],["1936","1937"],["1938","1939"],["1940","1941"],["1942","1943"],["1944","1945"],["1946","1947"],"Unnecessary escape character: \\,.",["1948","1949"],["1950","1951"],["1952","1953"],["1954","1955"],["1956","1957"],["1958","1959"],["1960","1961"],["1962","1963"],["1964","1965"],["1966","1967"],["1968","1969"],["1970","1971"],["1972","1973"],["1974","1975"],["1976","1977"],["1978","1979"],["1980","1981"],["1982","1983"],["1984","1985"],["1986","1987"],["1988","1989"],["1990","1991"],["1992","1993"],["1994","1995"],["1996","1997"],["1998","1999"],["2000","2001"],["2002","2003"],["2004","2005"],["2006","2007"],["2008","2009"],["2010","2011"],["2012","2013"],["2014","2015"],["2016","2017"],["2018","2019"],["2020","2021"],["2022","2023"],["2024","2025"],["2026","2027"],["2028","2029"],["2030","2031"],["2032","2033"],["2034","2035"],["2036","2037"],["2038","2039"],["2040","2041"],["2042","2043"],["2044","2045"],["2046","2047"],["2048","2049"],["2050","2051"],["2052","2053"],["2054","2055"],["2056","2057"],["2058","2059"],["2060","2061"],["2062","2063"],["2064","2065"],["2066","2067"],["2068","2069"],["2070","2071"],["2072","2073"],["2074","2075"],["2076","2077"],["2078","2079"],["2080","2081"],["2082","2083"],["2084","2085"],["2086","2087"],["2088","2089"],["2090","2091"],["2092","2093"],["2094","2095"],["2096","2097"],["2098","2099"],["2100","2101"],["2102","2103"],["2104","2105"],["2106","2107"],["2108","2109"],["2110","2111"],["2112","2113"],["2114","2115"],["2116","2117"],["2118","2119"],["2120","2121"],["2122","2123"],["2124","2125"],["2126","2127"],["2128","2129"],["2130","2131"],["2132","2133"],["2134","2135"],["2136","2137"],["2138","2139"],["2140","2141"],["2142","2143"],["2144","2145"],["2146","2147"],["2148","2149"],["2150","2151"],["2152","2153"],["2154","2155"],["2156","2157"],["2158","2159"],["2160","2161"],["2162","2163"],["2164","2165"],["2166","2167"],["2168","2169"],["2170","2171"],["2172","2173"],["2174","2175"],"no-global-assign","no-unsafe-negation",{"desc":"2176","fix":"2177"},{"desc":"2178","fix":"2179"},{"desc":"2180","fix":"2181"},{"desc":"2182","fix":"2183"},{"desc":"2184","fix":"2185"},{"desc":"2186","fix":"2187"},{"messageId":"2188","fix":"2189","desc":"2190"},{"messageId":"2191","fix":"2192","desc":"2193"},{"messageId":"2188","fix":"2194","desc":"2190"},{"messageId":"2191","fix":"2195","desc":"2193"},{"messageId":"2188","fix":"2196","desc":"2190"},{"messageId":"2191","fix":"2197","desc":"2193"},{"messageId":"2188","fix":"2198","desc":"2190"},{"messageId":"2191","fix":"2199","desc":"2193"},{"messageId":"2188","fix":"2200","desc":"2190"},{"messageId":"2191","fix":"2201","desc":"2193"},{"messageId":"2188","fix":"2202","desc":"2190"},{"messageId":"2191","fix":"2203","desc":"2193"},{"messageId":"2188","fix":"2204","desc":"2190"},{"messageId":"2191","fix":"2205","desc":"2193"},{"messageId":"2188","fix":"2206","desc":"2190"},{"messageId":"2191","fix":"2207","desc":"2193"},{"messageId":"2188","fix":"2208","desc":"2190"},{"messageId":"2191","fix":"2209","desc":"2193"},{"messageId":"2188","fix":"2210","desc":"2190"},{"messageId":"2191","fix":"2211","desc":"2193"},{"messageId":"2188","fix":"2212","desc":"2190"},{"messageId":"2191","fix":"2213","desc":"2193"},{"messageId":"2188","fix":"2214","desc":"2190"},{"messageId":"2191","fix":"2215","desc":"2193"},{"messageId":"2188","fix":"2216","desc":"2190"},{"messageId":"2191","fix":"2217","desc":"2193"},{"messageId":"2188","fix":"2218","desc":"2190"},{"messageId":"2191","fix":"2219","desc":"2193"},{"messageId":"2188","fix":"2220","desc":"2190"},{"messageId":"2191","fix":"2221","desc":"2193"},{"messageId":"2188","fix":"2222","desc":"2190"},{"messageId":"2191","fix":"2223","desc":"2193"},{"messageId":"2188","fix":"2224","desc":"2190"},{"messageId":"2191","fix":"2225","desc":"2193"},{"messageId":"2188","fix":"2226","desc":"2190"},{"messageId":"2191","fix":"2227","desc":"2193"},{"messageId":"2188","fix":"2228","desc":"2190"},{"messageId":"2191","fix":"2229","desc":"2193"},{"messageId":"2188","fix":"2230","desc":"2190"},{"messageId":"2191","fix":"2231","desc":"2193"},{"messageId":"2188","fix":"2232","desc":"2190"},{"messageId":"2191","fix":"2233","desc":"2193"},{"messageId":"2188","fix":"2234","desc":"2190"},{"messageId":"2191","fix":"2235","desc":"2193"},{"messageId":"2188","fix":"2236","desc":"2190"},{"messageId":"2191","fix":"2237","desc":"2193"},{"messageId":"2188","fix":"2238","desc":"2190"},{"messageId":"2191","fix":"2239","desc":"2193"},{"messageId":"2188","fix":"2240","desc":"2190"},{"messageId":"2191","fix":"2241","desc":"2193"},{"messageId":"2188","fix":"2242","desc":"2190"},{"messageId":"2191","fix":"2243","desc":"2193"},{"messageId":"2188","fix":"2244","desc":"2190"},{"messageId":"2191","fix":"2245","desc":"2193"},{"messageId":"2188","fix":"2246","desc":"2190"},{"messageId":"2191","fix":"2247","desc":"2193"},{"messageId":"2188","fix":"2248","desc":"2190"},{"messageId":"2191","fix":"2249","desc":"2193"},{"messageId":"2188","fix":"2250","desc":"2190"},{"messageId":"2191","fix":"2251","desc":"2193"},{"messageId":"2188","fix":"2252","desc":"2190"},{"messageId":"2191","fix":"2253","desc":"2193"},{"messageId":"2188","fix":"2254","desc":"2190"},{"messageId":"2191","fix":"2255","desc":"2193"},{"messageId":"2188","fix":"2256","desc":"2190"},{"messageId":"2191","fix":"2257","desc":"2193"},{"messageId":"2188","fix":"2258","desc":"2190"},{"messageId":"2191","fix":"2259","desc":"2193"},{"messageId":"2188","fix":"2260","desc":"2190"},{"messageId":"2191","fix":"2261","desc":"2193"},{"messageId":"2188","fix":"2262","desc":"2190"},{"messageId":"2191","fix":"2263","desc":"2193"},{"messageId":"2188","fix":"2264","desc":"2190"},{"messageId":"2191","fix":"2265","desc":"2193"},{"messageId":"2188","fix":"2266","desc":"2190"},{"messageId":"2191","fix":"2267","desc":"2193"},{"messageId":"2188","fix":"2268","desc":"2190"},{"messageId":"2191","fix":"2269","desc":"2193"},{"messageId":"2188","fix":"2270","desc":"2190"},{"messageId":"2191","fix":"2271","desc":"2193"},{"messageId":"2188","fix":"2272","desc":"2190"},{"messageId":"2191","fix":"2273","desc":"2193"},{"messageId":"2188","fix":"2274","desc":"2190"},{"messageId":"2191","fix":"2275","desc":"2193"},{"messageId":"2188","fix":"2276","desc":"2190"},{"messageId":"2191","fix":"2277","desc":"2193"},{"messageId":"2188","fix":"2278","desc":"2190"},{"messageId":"2191","fix":"2279","desc":"2193"},{"messageId":"2188","fix":"2280","desc":"2190"},{"messageId":"2191","fix":"2281","desc":"2193"},{"messageId":"2188","fix":"2282","desc":"2190"},{"messageId":"2191","fix":"2283","desc":"2193"},{"messageId":"2188","fix":"2284","desc":"2190"},{"messageId":"2191","fix":"2285","desc":"2193"},{"messageId":"2188","fix":"2286","desc":"2190"},{"messageId":"2191","fix":"2287","desc":"2193"},{"messageId":"2188","fix":"2288","desc":"2190"},{"messageId":"2191","fix":"2289","desc":"2193"},{"messageId":"2188","fix":"2290","desc":"2190"},{"messageId":"2191","fix":"2291","desc":"2193"},{"messageId":"2188","fix":"2292","desc":"2190"},{"messageId":"2191","fix":"2293","desc":"2193"},{"messageId":"2188","fix":"2294","desc":"2190"},{"messageId":"2191","fix":"2295","desc":"2193"},{"messageId":"2188","fix":"2296","desc":"2190"},{"messageId":"2191","fix":"2297","desc":"2193"},{"messageId":"2188","fix":"2298","desc":"2190"},{"messageId":"2191","fix":"2299","desc":"2193"},{"messageId":"2188","fix":"2300","desc":"2190"},{"messageId":"2191","fix":"2301","desc":"2193"},{"messageId":"2188","fix":"2302","desc":"2190"},{"messageId":"2191","fix":"2303","desc":"2193"},{"messageId":"2188","fix":"2304","desc":"2190"},{"messageId":"2191","fix":"2305","desc":"2193"},{"messageId":"2188","fix":"2306","desc":"2190"},{"messageId":"2191","fix":"2307","desc":"2193"},{"messageId":"2188","fix":"2308","desc":"2190"},{"messageId":"2191","fix":"2309","desc":"2193"},{"messageId":"2188","fix":"2310","desc":"2190"},{"messageId":"2191","fix":"2311","desc":"2193"},{"messageId":"2188","fix":"2312","desc":"2190"},{"messageId":"2191","fix":"2313","desc":"2193"},{"messageId":"2188","fix":"2314","desc":"2190"},{"messageId":"2191","fix":"2315","desc":"2193"},{"messageId":"2188","fix":"2316","desc":"2190"},{"messageId":"2191","fix":"2317","desc":"2193"},{"messageId":"2188","fix":"2318","desc":"2190"},{"messageId":"2191","fix":"2319","desc":"2193"},{"messageId":"2188","fix":"2320","desc":"2190"},{"messageId":"2191","fix":"2321","desc":"2193"},{"messageId":"2188","fix":"2322","desc":"2190"},{"messageId":"2191","fix":"2323","desc":"2193"},{"messageId":"2188","fix":"2324","desc":"2190"},{"messageId":"2191","fix":"2325","desc":"2193"},{"messageId":"2188","fix":"2326","desc":"2190"},{"messageId":"2191","fix":"2327","desc":"2193"},{"messageId":"2188","fix":"2328","desc":"2190"},{"messageId":"2191","fix":"2329","desc":"2193"},{"messageId":"2188","fix":"2330","desc":"2190"},{"messageId":"2191","fix":"2331","desc":"2193"},{"messageId":"2188","fix":"2332","desc":"2190"},{"messageId":"2191","fix":"2333","desc":"2193"},{"messageId":"2188","fix":"2334","desc":"2190"},{"messageId":"2191","fix":"2335","desc":"2193"},{"messageId":"2188","fix":"2336","desc":"2190"},{"messageId":"2191","fix":"2337","desc":"2193"},{"messageId":"2188","fix":"2338","desc":"2190"},{"messageId":"2191","fix":"2339","desc":"2193"},{"messageId":"2188","fix":"2340","desc":"2190"},{"messageId":"2191","fix":"2341","desc":"2193"},{"messageId":"2188","fix":"2342","desc":"2190"},{"messageId":"2191","fix":"2343","desc":"2193"},{"messageId":"2188","fix":"2344","desc":"2190"},{"messageId":"2191","fix":"2345","desc":"2193"},{"messageId":"2188","fix":"2346","desc":"2190"},{"messageId":"2191","fix":"2347","desc":"2193"},{"messageId":"2188","fix":"2348","desc":"2190"},{"messageId":"2191","fix":"2349","desc":"2193"},{"messageId":"2188","fix":"2350","desc":"2190"},{"messageId":"2191","fix":"2351","desc":"2193"},{"messageId":"2188","fix":"2352","desc":"2190"},{"messageId":"2191","fix":"2353","desc":"2193"},{"messageId":"2188","fix":"2354","desc":"2190"},{"messageId":"2191","fix":"2355","desc":"2193"},{"messageId":"2188","fix":"2356","desc":"2190"},{"messageId":"2191","fix":"2357","desc":"2193"},{"messageId":"2188","fix":"2358","desc":"2190"},{"messageId":"2191","fix":"2359","desc":"2193"},{"messageId":"2188","fix":"2360","desc":"2190"},{"messageId":"2191","fix":"2361","desc":"2193"},{"messageId":"2188","fix":"2362","desc":"2190"},{"messageId":"2191","fix":"2363","desc":"2193"},{"messageId":"2188","fix":"2364","desc":"2190"},{"messageId":"2191","fix":"2365","desc":"2193"},{"messageId":"2188","fix":"2366","desc":"2190"},{"messageId":"2191","fix":"2367","desc":"2193"},{"messageId":"2188","fix":"2368","desc":"2190"},{"messageId":"2191","fix":"2369","desc":"2193"},{"messageId":"2188","fix":"2370","desc":"2190"},{"messageId":"2191","fix":"2371","desc":"2193"},{"messageId":"2188","fix":"2372","desc":"2190"},{"messageId":"2191","fix":"2373","desc":"2193"},{"messageId":"2188","fix":"2374","desc":"2190"},{"messageId":"2191","fix":"2375","desc":"2193"},{"messageId":"2188","fix":"2376","desc":"2190"},{"messageId":"2191","fix":"2377","desc":"2193"},{"messageId":"2188","fix":"2378","desc":"2190"},{"messageId":"2191","fix":"2379","desc":"2193"},{"messageId":"2188","fix":"2380","desc":"2190"},{"messageId":"2191","fix":"2381","desc":"2193"},{"messageId":"2188","fix":"2382","desc":"2190"},{"messageId":"2191","fix":"2383","desc":"2193"},{"messageId":"2188","fix":"2384","desc":"2190"},{"messageId":"2191","fix":"2385","desc":"2193"},{"messageId":"2188","fix":"2386","desc":"2190"},{"messageId":"2191","fix":"2387","desc":"2193"},{"messageId":"2188","fix":"2388","desc":"2190"},{"messageId":"2191","fix":"2389","desc":"2193"},{"messageId":"2188","fix":"2390","desc":"2190"},{"messageId":"2191","fix":"2391","desc":"2193"},{"messageId":"2188","fix":"2392","desc":"2190"},{"messageId":"2191","fix":"2393","desc":"2193"},{"messageId":"2188","fix":"2394","desc":"2190"},{"messageId":"2191","fix":"2395","desc":"2193"},{"messageId":"2188","fix":"2396","desc":"2190"},{"messageId":"2191","fix":"2397","desc":"2193"},{"messageId":"2188","fix":"2398","desc":"2190"},{"messageId":"2191","fix":"2399","desc":"2193"},{"messageId":"2188","fix":"2400","desc":"2190"},{"messageId":"2191","fix":"2401","desc":"2193"},{"messageId":"2188","fix":"2402","desc":"2190"},{"messageId":"2191","fix":"2403","desc":"2193"},{"messageId":"2188","fix":"2404","desc":"2190"},{"messageId":"2191","fix":"2405","desc":"2193"},{"messageId":"2188","fix":"2406","desc":"2190"},{"messageId":"2191","fix":"2407","desc":"2193"},{"messageId":"2188","fix":"2408","desc":"2190"},{"messageId":"2191","fix":"2409","desc":"2193"},{"messageId":"2188","fix":"2410","desc":"2190"},{"messageId":"2191","fix":"2411","desc":"2193"},{"messageId":"2188","fix":"2412","desc":"2190"},{"messageId":"2191","fix":"2413","desc":"2193"},{"messageId":"2188","fix":"2414","desc":"2190"},{"messageId":"2191","fix":"2415","desc":"2193"},{"messageId":"2188","fix":"2416","desc":"2190"},{"messageId":"2191","fix":"2417","desc":"2193"},{"messageId":"2188","fix":"2418","desc":"2190"},{"messageId":"2191","fix":"2419","desc":"2193"},{"messageId":"2188","fix":"2420","desc":"2190"},{"messageId":"2191","fix":"2421","desc":"2193"},{"messageId":"2188","fix":"2422","desc":"2190"},{"messageId":"2191","fix":"2423","desc":"2193"},{"messageId":"2188","fix":"2424","desc":"2190"},{"messageId":"2191","fix":"2425","desc":"2193"},{"messageId":"2188","fix":"2426","desc":"2190"},{"messageId":"2191","fix":"2427","desc":"2193"},{"messageId":"2188","fix":"2428","desc":"2190"},{"messageId":"2191","fix":"2429","desc":"2193"},{"messageId":"2188","fix":"2430","desc":"2190"},{"messageId":"2191","fix":"2431","desc":"2193"},{"messageId":"2188","fix":"2432","desc":"2190"},{"messageId":"2191","fix":"2433","desc":"2193"},{"messageId":"2188","fix":"2434","desc":"2190"},{"messageId":"2191","fix":"2435","desc":"2193"},{"messageId":"2188","fix":"2436","desc":"2190"},{"messageId":"2191","fix":"2437","desc":"2193"},{"messageId":"2188","fix":"2438","desc":"2190"},{"messageId":"2191","fix":"2439","desc":"2193"},{"messageId":"2188","fix":"2440","desc":"2190"},{"messageId":"2191","fix":"2441","desc":"2193"},{"messageId":"2188","fix":"2442","desc":"2190"},{"messageId":"2191","fix":"2443","desc":"2193"},{"messageId":"2188","fix":"2444","desc":"2190"},{"messageId":"2191","fix":"2445","desc":"2193"},{"messageId":"2188","fix":"2446","desc":"2190"},{"messageId":"2191","fix":"2447","desc":"2193"},{"messageId":"2188","fix":"2448","desc":"2190"},{"messageId":"2191","fix":"2449","desc":"2193"},{"messageId":"2188","fix":"2450","desc":"2190"},{"messageId":"2191","fix":"2451","desc":"2193"},{"messageId":"2188","fix":"2452","desc":"2190"},{"messageId":"2191","fix":"2453","desc":"2193"},{"messageId":"2188","fix":"2454","desc":"2190"},{"messageId":"2191","fix":"2455","desc":"2193"},{"messageId":"2188","fix":"2456","desc":"2190"},{"messageId":"2191","fix":"2457","desc":"2193"},{"messageId":"2188","fix":"2458","desc":"2190"},{"messageId":"2191","fix":"2459","desc":"2193"},{"messageId":"2188","fix":"2460","desc":"2190"},{"messageId":"2191","fix":"2461","desc":"2193"},{"messageId":"2188","fix":"2462","desc":"2190"},{"messageId":"2191","fix":"2463","desc":"2193"},{"messageId":"2188","fix":"2464","desc":"2190"},{"messageId":"2191","fix":"2465","desc":"2193"},{"messageId":"2188","fix":"2466","desc":"2190"},{"messageId":"2191","fix":"2467","desc":"2193"},{"messageId":"2188","fix":"2468","desc":"2190"},{"messageId":"2191","fix":"2469","desc":"2193"},{"messageId":"2188","fix":"2470","desc":"2190"},{"messageId":"2191","fix":"2471","desc":"2193"},{"messageId":"2188","fix":"2472","desc":"2190"},{"messageId":"2191","fix":"2473","desc":"2193"},{"messageId":"2188","fix":"2474","desc":"2190"},{"messageId":"2191","fix":"2475","desc":"2193"},{"messageId":"2188","fix":"2476","desc":"2190"},{"messageId":"2191","fix":"2477","desc":"2193"},{"messageId":"2188","fix":"2478","desc":"2190"},{"messageId":"2191","fix":"2479","desc":"2193"},{"messageId":"2188","fix":"2480","desc":"2190"},{"messageId":"2191","fix":"2481","desc":"2193"},{"messageId":"2188","fix":"2482","desc":"2190"},{"messageId":"2191","fix":"2483","desc":"2193"},{"messageId":"2188","fix":"2484","desc":"2190"},{"messageId":"2191","fix":"2485","desc":"2193"},{"messageId":"2188","fix":"2486","desc":"2190"},{"messageId":"2191","fix":"2487","desc":"2193"},{"messageId":"2188","fix":"2488","desc":"2190"},{"messageId":"2191","fix":"2489","desc":"2193"},{"messageId":"2188","fix":"2490","desc":"2190"},{"messageId":"2191","fix":"2491","desc":"2193"},{"messageId":"2188","fix":"2492","desc":"2190"},{"messageId":"2191","fix":"2493","desc":"2193"},{"messageId":"2188","fix":"2494","desc":"2190"},{"messageId":"2191","fix":"2495","desc":"2193"},{"messageId":"2188","fix":"2496","desc":"2190"},{"messageId":"2191","fix":"2497","desc":"2193"},{"messageId":"2188","fix":"2498","desc":"2190"},{"messageId":"2191","fix":"2499","desc":"2193"},{"messageId":"2188","fix":"2500","desc":"2190"},{"messageId":"2191","fix":"2501","desc":"2193"},{"messageId":"2188","fix":"2502","desc":"2190"},{"messageId":"2191","fix":"2503","desc":"2193"},{"messageId":"2188","fix":"2504","desc":"2190"},{"messageId":"2191","fix":"2505","desc":"2193"},{"messageId":"2188","fix":"2506","desc":"2190"},{"messageId":"2191","fix":"2507","desc":"2193"},{"messageId":"2188","fix":"2508","desc":"2190"},{"messageId":"2191","fix":"2509","desc":"2193"},{"messageId":"2188","fix":"2510","desc":"2190"},{"messageId":"2191","fix":"2511","desc":"2193"},{"messageId":"2188","fix":"2512","desc":"2190"},{"messageId":"2191","fix":"2513","desc":"2193"},{"messageId":"2188","fix":"2514","desc":"2190"},{"messageId":"2191","fix":"2515","desc":"2193"},{"messageId":"2188","fix":"2516","desc":"2190"},{"messageId":"2191","fix":"2517","desc":"2193"},{"messageId":"2188","fix":"2518","desc":"2190"},{"messageId":"2191","fix":"2519","desc":"2193"},{"messageId":"2188","fix":"2520","desc":"2190"},{"messageId":"2191","fix":"2521","desc":"2193"},{"messageId":"2188","fix":"2522","desc":"2190"},{"messageId":"2191","fix":"2523","desc":"2193"},{"messageId":"2188","fix":"2524","desc":"2190"},{"messageId":"2191","fix":"2525","desc":"2193"},{"messageId":"2188","fix":"2526","desc":"2190"},{"messageId":"2191","fix":"2527","desc":"2193"},{"messageId":"2188","fix":"2528","desc":"2190"},{"messageId":"2191","fix":"2529","desc":"2193"},{"messageId":"2188","fix":"2530","desc":"2190"},{"messageId":"2191","fix":"2531","desc":"2193"},{"messageId":"2188","fix":"2532","desc":"2190"},{"messageId":"2191","fix":"2533","desc":"2193"},{"messageId":"2188","fix":"2534","desc":"2190"},{"messageId":"2191","fix":"2535","desc":"2193"},{"messageId":"2188","fix":"2536","desc":"2190"},{"messageId":"2191","fix":"2537","desc":"2193"},{"messageId":"2188","fix":"2538","desc":"2190"},{"messageId":"2191","fix":"2539","desc":"2193"},{"messageId":"2188","fix":"2540","desc":"2190"},{"messageId":"2191","fix":"2541","desc":"2193"},{"messageId":"2188","fix":"2542","desc":"2190"},{"messageId":"2191","fix":"2543","desc":"2193"},{"messageId":"2188","fix":"2544","desc":"2190"},{"messageId":"2191","fix":"2545","desc":"2193"},{"messageId":"2188","fix":"2546","desc":"2190"},{"messageId":"2191","fix":"2547","desc":"2193"},{"messageId":"2188","fix":"2548","desc":"2190"},{"messageId":"2191","fix":"2549","desc":"2193"},{"messageId":"2188","fix":"2550","desc":"2190"},{"messageId":"2191","fix":"2551","desc":"2193"},{"messageId":"2188","fix":"2552","desc":"2190"},{"messageId":"2191","fix":"2553","desc":"2193"},{"messageId":"2188","fix":"2554","desc":"2190"},{"messageId":"2191","fix":"2555","desc":"2193"},{"messageId":"2188","fix":"2556","desc":"2190"},{"messageId":"2191","fix":"2557","desc":"2193"},{"messageId":"2188","fix":"2558","desc":"2190"},{"messageId":"2191","fix":"2559","desc":"2193"},{"messageId":"2188","fix":"2560","desc":"2190"},{"messageId":"2191","fix":"2561","desc":"2193"},{"messageId":"2188","fix":"2562","desc":"2190"},{"messageId":"2191","fix":"2563","desc":"2193"},{"messageId":"2188","fix":"2564","desc":"2190"},{"messageId":"2191","fix":"2565","desc":"2193"},{"messageId":"2188","fix":"2566","desc":"2190"},{"messageId":"2191","fix":"2567","desc":"2193"},{"messageId":"2188","fix":"2568","desc":"2190"},{"messageId":"2191","fix":"2569","desc":"2193"},{"messageId":"2188","fix":"2570","desc":"2190"},{"messageId":"2191","fix":"2571","desc":"2193"},{"messageId":"2188","fix":"2572","desc":"2190"},{"messageId":"2191","fix":"2573","desc":"2193"},{"messageId":"2188","fix":"2574","desc":"2190"},{"messageId":"2191","fix":"2575","desc":"2193"},{"messageId":"2188","fix":"2576","desc":"2190"},{"messageId":"2191","fix":"2577","desc":"2193"},{"messageId":"2188","fix":"2578","desc":"2190"},{"messageId":"2191","fix":"2579","desc":"2193"},{"messageId":"2188","fix":"2580","desc":"2190"},{"messageId":"2191","fix":"2581","desc":"2193"},{"messageId":"2188","fix":"2582","desc":"2190"},{"messageId":"2191","fix":"2583","desc":"2193"},{"messageId":"2188","fix":"2584","desc":"2190"},{"messageId":"2191","fix":"2585","desc":"2193"},{"messageId":"2188","fix":"2586","desc":"2190"},{"messageId":"2191","fix":"2587","desc":"2193"},{"messageId":"2188","fix":"2588","desc":"2190"},{"messageId":"2191","fix":"2589","desc":"2193"},{"messageId":"2188","fix":"2590","desc":"2190"},{"messageId":"2191","fix":"2591","desc":"2193"},{"messageId":"2188","fix":"2592","desc":"2190"},{"messageId":"2191","fix":"2593","desc":"2193"},{"messageId":"2188","fix":"2594","desc":"2190"},{"messageId":"2191","fix":"2595","desc":"2193"},{"messageId":"2188","fix":"2596","desc":"2190"},{"messageId":"2191","fix":"2597","desc":"2193"},{"messageId":"2188","fix":"2598","desc":"2190"},{"messageId":"2191","fix":"2599","desc":"2193"},{"messageId":"2188","fix":"2600","desc":"2190"},{"messageId":"2191","fix":"2601","desc":"2193"},{"messageId":"2188","fix":"2602","desc":"2190"},{"messageId":"2191","fix":"2603","desc":"2193"},{"messageId":"2188","fix":"2604","desc":"2190"},{"messageId":"2191","fix":"2605","desc":"2193"},{"messageId":"2188","fix":"2606","desc":"2190"},{"messageId":"2191","fix":"2607","desc":"2193"},{"messageId":"2188","fix":"2608","desc":"2190"},{"messageId":"2191","fix":"2609","desc":"2193"},{"messageId":"2188","fix":"2610","desc":"2190"},{"messageId":"2191","fix":"2611","desc":"2193"},{"messageId":"2188","fix":"2612","desc":"2190"},{"messageId":"2191","fix":"2613","desc":"2193"},{"messageId":"2188","fix":"2614","desc":"2190"},{"messageId":"2191","fix":"2615","desc":"2193"},{"messageId":"2188","fix":"2616","desc":"2190"},{"messageId":"2191","fix":"2617","desc":"2193"},{"messageId":"2188","fix":"2618","desc":"2190"},{"messageId":"2191","fix":"2619","desc":"2193"},{"messageId":"2188","fix":"2620","desc":"2190"},{"messageId":"2191","fix":"2621","desc":"2193"},{"messageId":"2188","fix":"2622","desc":"2190"},{"messageId":"2191","fix":"2623","desc":"2193"},{"messageId":"2188","fix":"2624","desc":"2190"},{"messageId":"2191","fix":"2625","desc":"2193"},{"messageId":"2188","fix":"2626","desc":"2190"},{"messageId":"2191","fix":"2627","desc":"2193"},{"messageId":"2188","fix":"2628","desc":"2190"},{"messageId":"2191","fix":"2629","desc":"2193"},{"messageId":"2188","fix":"2630","desc":"2190"},{"messageId":"2191","fix":"2631","desc":"2193"},{"messageId":"2188","fix":"2632","desc":"2190"},{"messageId":"2191","fix":"2633","desc":"2193"},{"messageId":"2188","fix":"2634","desc":"2190"},{"messageId":"2191","fix":"2635","desc":"2193"},{"messageId":"2188","fix":"2636","desc":"2190"},{"messageId":"2191","fix":"2637","desc":"2193"},{"messageId":"2188","fix":"2638","desc":"2190"},{"messageId":"2191","fix":"2639","desc":"2193"},{"messageId":"2188","fix":"2640","desc":"2190"},{"messageId":"2191","fix":"2641","desc":"2193"},{"messageId":"2188","fix":"2642","desc":"2190"},{"messageId":"2191","fix":"2643","desc":"2193"},{"messageId":"2188","fix":"2644","desc":"2190"},{"messageId":"2191","fix":"2645","desc":"2193"},{"messageId":"2188","fix":"2646","desc":"2190"},{"messageId":"2191","fix":"2647","desc":"2193"},{"messageId":"2188","fix":"2648","desc":"2190"},{"messageId":"2191","fix":"2649","desc":"2193"},{"messageId":"2188","fix":"2650","desc":"2190"},{"messageId":"2191","fix":"2651","desc":"2193"},{"messageId":"2188","fix":"2652","desc":"2190"},{"messageId":"2191","fix":"2653","desc":"2193"},{"messageId":"2188","fix":"2654","desc":"2190"},{"messageId":"2191","fix":"2655","desc":"2193"},{"messageId":"2188","fix":"2656","desc":"2190"},{"messageId":"2191","fix":"2657","desc":"2193"},{"messageId":"2188","fix":"2658","desc":"2190"},{"messageId":"2191","fix":"2659","desc":"2193"},{"messageId":"2188","fix":"2660","desc":"2190"},{"messageId":"2191","fix":"2661","desc":"2193"},{"messageId":"2188","fix":"2662","desc":"2190"},{"messageId":"2191","fix":"2663","desc":"2193"},{"messageId":"2188","fix":"2664","desc":"2190"},{"messageId":"2191","fix":"2665","desc":"2193"},{"messageId":"2188","fix":"2666","desc":"2190"},{"messageId":"2191","fix":"2667","desc":"2193"},{"messageId":"2188","fix":"2668","desc":"2190"},{"messageId":"2191","fix":"2669","desc":"2193"},{"messageId":"2188","fix":"2670","desc":"2190"},{"messageId":"2191","fix":"2671","desc":"2193"},{"messageId":"2188","fix":"2672","desc":"2190"},{"messageId":"2191","fix":"2673","desc":"2193"},{"messageId":"2188","fix":"2674","desc":"2190"},{"messageId":"2191","fix":"2675","desc":"2193"},{"messageId":"2188","fix":"2676","desc":"2190"},{"messageId":"2191","fix":"2677","desc":"2193"},{"messageId":"2188","fix":"2678","desc":"2190"},{"messageId":"2191","fix":"2679","desc":"2193"},{"messageId":"2188","fix":"2680","desc":"2190"},{"messageId":"2191","fix":"2681","desc":"2193"},{"messageId":"2188","fix":"2682","desc":"2190"},{"messageId":"2191","fix":"2683","desc":"2193"},{"messageId":"2188","fix":"2684","desc":"2190"},{"messageId":"2191","fix":"2685","desc":"2193"},{"messageId":"2188","fix":"2686","desc":"2190"},{"messageId":"2191","fix":"2687","desc":"2193"},{"messageId":"2188","fix":"2688","desc":"2190"},{"messageId":"2191","fix":"2689","desc":"2193"},{"messageId":"2188","fix":"2690","desc":"2190"},{"messageId":"2191","fix":"2691","desc":"2193"},{"messageId":"2188","fix":"2692","desc":"2190"},{"messageId":"2191","fix":"2693","desc":"2193"},{"messageId":"2188","fix":"2694","desc":"2190"},{"messageId":"2191","fix":"2695","desc":"2193"},{"messageId":"2188","fix":"2696","desc":"2190"},{"messageId":"2191","fix":"2697","desc":"2193"},{"messageId":"2188","fix":"2698","desc":"2190"},{"messageId":"2191","fix":"2699","desc":"2193"},{"messageId":"2188","fix":"2700","desc":"2190"},{"messageId":"2191","fix":"2701","desc":"2193"},{"messageId":"2188","fix":"2702","desc":"2190"},{"messageId":"2191","fix":"2703","desc":"2193"},{"messageId":"2188","fix":"2704","desc":"2190"},{"messageId":"2191","fix":"2705","desc":"2193"},{"messageId":"2188","fix":"2706","desc":"2190"},{"messageId":"2191","fix":"2707","desc":"2193"},{"messageId":"2188","fix":"2708","desc":"2190"},{"messageId":"2191","fix":"2709","desc":"2193"},{"messageId":"2188","fix":"2710","desc":"2190"},{"messageId":"2191","fix":"2711","desc":"2193"},{"messageId":"2188","fix":"2712","desc":"2190"},{"messageId":"2191","fix":"2713","desc":"2193"},{"messageId":"2188","fix":"2714","desc":"2190"},{"messageId":"2191","fix":"2715","desc":"2193"},{"messageId":"2188","fix":"2716","desc":"2190"},{"messageId":"2191","fix":"2717","desc":"2193"},{"messageId":"2188","fix":"2718","desc":"2190"},{"messageId":"2191","fix":"2719","desc":"2193"},{"messageId":"2188","fix":"2720","desc":"2190"},{"messageId":"2191","fix":"2721","desc":"2193"},{"messageId":"2188","fix":"2722","desc":"2190"},{"messageId":"2191","fix":"2723","desc":"2193"},{"messageId":"2188","fix":"2724","desc":"2190"},{"messageId":"2191","fix":"2725","desc":"2193"},{"messageId":"2188","fix":"2726","desc":"2190"},{"messageId":"2191","fix":"2727","desc":"2193"},{"messageId":"2188","fix":"2728","desc":"2190"},{"messageId":"2191","fix":"2729","desc":"2193"},{"messageId":"2188","fix":"2730","desc":"2190"},{"messageId":"2191","fix":"2731","desc":"2193"},{"messageId":"2188","fix":"2732","desc":"2190"},{"messageId":"2191","fix":"2733","desc":"2193"},{"messageId":"2188","fix":"2734","desc":"2190"},{"messageId":"2191","fix":"2735","desc":"2193"},{"messageId":"2188","fix":"2736","desc":"2190"},{"messageId":"2191","fix":"2737","desc":"2193"},{"messageId":"2188","fix":"2738","desc":"2190"},{"messageId":"2191","fix":"2739","desc":"2193"},{"messageId":"2188","fix":"2740","desc":"2190"},{"messageId":"2191","fix":"2741","desc":"2193"},{"messageId":"2188","fix":"2742","desc":"2190"},{"messageId":"2191","fix":"2743","desc":"2193"},{"messageId":"2188","fix":"2744","desc":"2190"},{"messageId":"2191","fix":"2745","desc":"2193"},{"messageId":"2188","fix":"2746","desc":"2190"},{"messageId":"2191","fix":"2747","desc":"2193"},{"messageId":"2188","fix":"2748","desc":"2190"},{"messageId":"2191","fix":"2749","desc":"2193"},{"messageId":"2188","fix":"2750","desc":"2190"},{"messageId":"2191","fix":"2751","desc":"2193"},{"messageId":"2188","fix":"2752","desc":"2190"},{"messageId":"2191","fix":"2753","desc":"2193"},{"messageId":"2188","fix":"2754","desc":"2190"},{"messageId":"2191","fix":"2755","desc":"2193"},{"messageId":"2188","fix":"2756","desc":"2190"},{"messageId":"2191","fix":"2757","desc":"2193"},{"messageId":"2188","fix":"2758","desc":"2190"},{"messageId":"2191","fix":"2759","desc":"2193"},{"messageId":"2188","fix":"2760","desc":"2190"},{"messageId":"2191","fix":"2761","desc":"2193"},{"messageId":"2188","fix":"2762","desc":"2190"},{"messageId":"2191","fix":"2763","desc":"2193"},{"messageId":"2188","fix":"2764","desc":"2190"},{"messageId":"2191","fix":"2765","desc":"2193"},{"messageId":"2188","fix":"2766","desc":"2190"},{"messageId":"2191","fix":"2767","desc":"2193"},{"messageId":"2188","fix":"2768","desc":"2190"},{"messageId":"2191","fix":"2769","desc":"2193"},{"messageId":"2188","fix":"2770","desc":"2190"},{"messageId":"2191","fix":"2771","desc":"2193"},{"messageId":"2188","fix":"2772","desc":"2190"},{"messageId":"2191","fix":"2773","desc":"2193"},{"messageId":"2188","fix":"2774","desc":"2190"},{"messageId":"2191","fix":"2775","desc":"2193"},{"messageId":"2188","fix":"2776","desc":"2190"},{"messageId":"2191","fix":"2777","desc":"2193"},{"messageId":"2188","fix":"2778","desc":"2190"},{"messageId":"2191","fix":"2779","desc":"2193"},{"messageId":"2188","fix":"2780","desc":"2190"},{"messageId":"2191","fix":"2781","desc":"2193"},{"messageId":"2188","fix":"2782","desc":"2190"},{"messageId":"2191","fix":"2783","desc":"2193"},{"messageId":"2188","fix":"2784","desc":"2190"},{"messageId":"2191","fix":"2785","desc":"2193"},{"messageId":"2188","fix":"2786","desc":"2190"},{"messageId":"2191","fix":"2787","desc":"2193"},{"messageId":"2188","fix":"2788","desc":"2190"},{"messageId":"2191","fix":"2789","desc":"2193"},{"messageId":"2188","fix":"2790","desc":"2190"},{"messageId":"2191","fix":"2791","desc":"2193"},{"messageId":"2188","fix":"2792","desc":"2190"},{"messageId":"2191","fix":"2793","desc":"2193"},{"messageId":"2188","fix":"2794","desc":"2190"},{"messageId":"2191","fix":"2795","desc":"2193"},{"messageId":"2188","fix":"2796","desc":"2190"},{"messageId":"2191","fix":"2797","desc":"2193"},{"messageId":"2188","fix":"2798","desc":"2190"},{"messageId":"2191","fix":"2799","desc":"2193"},{"messageId":"2188","fix":"2800","desc":"2190"},{"messageId":"2191","fix":"2801","desc":"2193"},{"messageId":"2188","fix":"2802","desc":"2190"},{"messageId":"2191","fix":"2803","desc":"2193"},{"messageId":"2188","fix":"2804","desc":"2190"},{"messageId":"2191","fix":"2805","desc":"2193"},{"messageId":"2188","fix":"2806","desc":"2190"},{"messageId":"2191","fix":"2807","desc":"2193"},{"messageId":"2188","fix":"2808","desc":"2190"},{"messageId":"2191","fix":"2809","desc":"2193"},{"messageId":"2188","fix":"2810","desc":"2190"},{"messageId":"2191","fix":"2811","desc":"2193"},{"messageId":"2188","fix":"2812","desc":"2190"},{"messageId":"2191","fix":"2813","desc":"2193"},{"messageId":"2188","fix":"2814","desc":"2190"},{"messageId":"2191","fix":"2815","desc":"2193"},{"messageId":"2188","fix":"2816","desc":"2190"},{"messageId":"2191","fix":"2817","desc":"2193"},{"messageId":"2188","fix":"2818","desc":"2190"},{"messageId":"2191","fix":"2819","desc":"2193"},{"messageId":"2188","fix":"2820","desc":"2190"},{"messageId":"2191","fix":"2821","desc":"2193"},{"messageId":"2188","fix":"2822","desc":"2190"},{"messageId":"2191","fix":"2823","desc":"2193"},{"messageId":"2188","fix":"2824","desc":"2190"},{"messageId":"2191","fix":"2825","desc":"2193"},{"messageId":"2188","fix":"2826","desc":"2190"},{"messageId":"2191","fix":"2827","desc":"2193"},{"messageId":"2188","fix":"2828","desc":"2190"},{"messageId":"2191","fix":"2829","desc":"2193"},{"messageId":"2188","fix":"2830","desc":"2190"},{"messageId":"2191","fix":"2831","desc":"2193"},{"messageId":"2188","fix":"2832","desc":"2190"},{"messageId":"2191","fix":"2833","desc":"2193"},{"messageId":"2188","fix":"2834","desc":"2190"},{"messageId":"2191","fix":"2835","desc":"2193"},{"messageId":"2188","fix":"2836","desc":"2190"},{"messageId":"2191","fix":"2837","desc":"2193"},{"messageId":"2188","fix":"2838","desc":"2190"},{"messageId":"2191","fix":"2839","desc":"2193"},{"messageId":"2188","fix":"2840","desc":"2190"},{"messageId":"2191","fix":"2841","desc":"2193"},{"messageId":"2188","fix":"2842","desc":"2190"},{"messageId":"2191","fix":"2843","desc":"2193"},{"messageId":"2188","fix":"2844","desc":"2190"},{"messageId":"2191","fix":"2845","desc":"2193"},{"messageId":"2188","fix":"2846","desc":"2190"},{"messageId":"2191","fix":"2847","desc":"2193"},{"messageId":"2188","fix":"2848","desc":"2190"},{"messageId":"2191","fix":"2849","desc":"2193"},{"messageId":"2188","fix":"2850","desc":"2190"},{"messageId":"2191","fix":"2851","desc":"2193"},{"messageId":"2188","fix":"2852","desc":"2190"},{"messageId":"2191","fix":"2853","desc":"2193"},{"messageId":"2188","fix":"2854","desc":"2190"},{"messageId":"2191","fix":"2855","desc":"2193"},{"messageId":"2188","fix":"2856","desc":"2190"},{"messageId":"2191","fix":"2857","desc":"2193"},{"messageId":"2188","fix":"2858","desc":"2190"},{"messageId":"2191","fix":"2859","desc":"2193"},{"messageId":"2188","fix":"2860","desc":"2190"},{"messageId":"2191","fix":"2861","desc":"2193"},{"messageId":"2188","fix":"2862","desc":"2190"},{"messageId":"2191","fix":"2863","desc":"2193"},{"messageId":"2188","fix":"2864","desc":"2190"},{"messageId":"2191","fix":"2865","desc":"2193"},{"messageId":"2188","fix":"2866","desc":"2190"},{"messageId":"2191","fix":"2867","desc":"2193"},{"messageId":"2188","fix":"2868","desc":"2190"},{"messageId":"2191","fix":"2869","desc":"2193"},{"messageId":"2188","fix":"2870","desc":"2190"},{"messageId":"2191","fix":"2871","desc":"2193"},{"messageId":"2188","fix":"2872","desc":"2190"},{"messageId":"2191","fix":"2873","desc":"2193"},{"messageId":"2188","fix":"2874","desc":"2190"},{"messageId":"2191","fix":"2875","desc":"2193"},{"messageId":"2188","fix":"2876","desc":"2190"},{"messageId":"2191","fix":"2877","desc":"2193"},{"messageId":"2188","fix":"2878","desc":"2190"},{"messageId":"2191","fix":"2879","desc":"2193"},{"messageId":"2188","fix":"2880","desc":"2190"},{"messageId":"2191","fix":"2881","desc":"2193"},{"messageId":"2188","fix":"2882","desc":"2190"},{"messageId":"2191","fix":"2883","desc":"2193"},{"messageId":"2188","fix":"2884","desc":"2190"},{"messageId":"2191","fix":"2885","desc":"2193"},{"messageId":"2188","fix":"2886","desc":"2190"},{"messageId":"2191","fix":"2887","desc":"2193"},{"messageId":"2188","fix":"2888","desc":"2190"},{"messageId":"2191","fix":"2889","desc":"2193"},{"messageId":"2188","fix":"2890","desc":"2190"},{"messageId":"2191","fix":"2891","desc":"2193"},{"messageId":"2188","fix":"2892","desc":"2190"},{"messageId":"2191","fix":"2893","desc":"2193"},{"messageId":"2188","fix":"2894","desc":"2190"},{"messageId":"2191","fix":"2895","desc":"2193"},{"messageId":"2188","fix":"2896","desc":"2190"},{"messageId":"2191","fix":"2897","desc":"2193"},{"messageId":"2188","fix":"2898","desc":"2190"},{"messageId":"2191","fix":"2899","desc":"2193"},{"messageId":"2188","fix":"2900","desc":"2190"},{"messageId":"2191","fix":"2901","desc":"2193"},{"messageId":"2188","fix":"2902","desc":"2190"},{"messageId":"2191","fix":"2903","desc":"2193"},{"messageId":"2188","fix":"2904","desc":"2190"},{"messageId":"2191","fix":"2905","desc":"2193"},{"messageId":"2188","fix":"2906","desc":"2190"},{"messageId":"2191","fix":"2907","desc":"2193"},{"messageId":"2188","fix":"2908","desc":"2190"},{"messageId":"2191","fix":"2909","desc":"2193"},{"messageId":"2188","fix":"2910","desc":"2190"},{"messageId":"2191","fix":"2911","desc":"2193"},{"messageId":"2188","fix":"2912","desc":"2190"},{"messageId":"2191","fix":"2913","desc":"2193"},{"messageId":"2188","fix":"2914","desc":"2190"},{"messageId":"2191","fix":"2915","desc":"2193"},{"messageId":"2188","fix":"2916","desc":"2190"},{"messageId":"2191","fix":"2917","desc":"2193"},{"messageId":"2188","fix":"2918","desc":"2190"},{"messageId":"2191","fix":"2919","desc":"2193"},{"messageId":"2188","fix":"2920","desc":"2190"},{"messageId":"2191","fix":"2921","desc":"2193"},{"messageId":"2188","fix":"2922","desc":"2190"},{"messageId":"2191","fix":"2923","desc":"2193"},{"messageId":"2188","fix":"2924","desc":"2190"},{"messageId":"2191","fix":"2925","desc":"2193"},{"messageId":"2188","fix":"2926","desc":"2190"},{"messageId":"2191","fix":"2927","desc":"2193"},{"messageId":"2188","fix":"2928","desc":"2190"},{"messageId":"2191","fix":"2929","desc":"2193"},{"messageId":"2188","fix":"2930","desc":"2190"},{"messageId":"2191","fix":"2931","desc":"2193"},{"messageId":"2188","fix":"2932","desc":"2190"},{"messageId":"2191","fix":"2933","desc":"2193"},{"messageId":"2188","fix":"2934","desc":"2190"},{"messageId":"2191","fix":"2935","desc":"2193"},{"messageId":"2188","fix":"2936","desc":"2190"},{"messageId":"2191","fix":"2937","desc":"2193"},{"messageId":"2188","fix":"2938","desc":"2190"},{"messageId":"2191","fix":"2939","desc":"2193"},{"messageId":"2188","fix":"2940","desc":"2190"},{"messageId":"2191","fix":"2941","desc":"2193"},{"messageId":"2188","fix":"2942","desc":"2190"},{"messageId":"2191","fix":"2943","desc":"2193"},{"messageId":"2188","fix":"2944","desc":"2190"},{"messageId":"2191","fix":"2945","desc":"2193"},{"messageId":"2188","fix":"2946","desc":"2190"},{"messageId":"2191","fix":"2947","desc":"2193"},{"messageId":"2188","fix":"2948","desc":"2190"},{"messageId":"2191","fix":"2949","desc":"2193"},{"messageId":"2188","fix":"2950","desc":"2190"},{"messageId":"2191","fix":"2951","desc":"2193"},{"messageId":"2188","fix":"2952","desc":"2190"},{"messageId":"2191","fix":"2953","desc":"2193"},{"messageId":"2188","fix":"2954","desc":"2190"},{"messageId":"2191","fix":"2955","desc":"2193"},{"messageId":"2188","fix":"2956","desc":"2190"},{"messageId":"2191","fix":"2957","desc":"2193"},{"messageId":"2188","fix":"2958","desc":"2190"},{"messageId":"2191","fix":"2959","desc":"2193"},{"messageId":"2188","fix":"2960","desc":"2190"},{"messageId":"2191","fix":"2961","desc":"2193"},{"messageId":"2188","fix":"2962","desc":"2190"},{"messageId":"2191","fix":"2963","desc":"2193"},{"messageId":"2188","fix":"2964","desc":"2190"},{"messageId":"2191","fix":"2965","desc":"2193"},{"messageId":"2188","fix":"2966","desc":"2190"},{"messageId":"2191","fix":"2967","desc":"2193"},{"messageId":"2188","fix":"2968","desc":"2190"},{"messageId":"2191","fix":"2969","desc":"2193"},{"messageId":"2188","fix":"2970","desc":"2190"},{"messageId":"2191","fix":"2971","desc":"2193"},{"messageId":"2188","fix":"2972","desc":"2190"},{"messageId":"2191","fix":"2973","desc":"2193"},{"messageId":"2188","fix":"2974","desc":"2190"},{"messageId":"2191","fix":"2975","desc":"2193"},{"messageId":"2188","fix":"2976","desc":"2190"},{"messageId":"2191","fix":"2977","desc":"2193"},{"messageId":"2188","fix":"2978","desc":"2190"},{"messageId":"2191","fix":"2979","desc":"2193"},{"messageId":"2188","fix":"2980","desc":"2190"},{"messageId":"2191","fix":"2981","desc":"2193"},{"messageId":"2188","fix":"2982","desc":"2190"},{"messageId":"2191","fix":"2983","desc":"2193"},{"messageId":"2188","fix":"2984","desc":"2190"},{"messageId":"2191","fix":"2985","desc":"2193"},{"messageId":"2188","fix":"2986","desc":"2190"},{"messageId":"2191","fix":"2987","desc":"2193"},{"messageId":"2188","fix":"2988","desc":"2190"},{"messageId":"2191","fix":"2989","desc":"2193"},{"messageId":"2188","fix":"2990","desc":"2190"},{"messageId":"2191","fix":"2991","desc":"2193"},{"messageId":"2188","fix":"2992","desc":"2190"},{"messageId":"2191","fix":"2993","desc":"2193"},{"messageId":"2188","fix":"2994","desc":"2190"},{"messageId":"2191","fix":"2995","desc":"2193"},{"messageId":"2188","fix":"2996","desc":"2190"},{"messageId":"2191","fix":"2997","desc":"2193"},{"messageId":"2188","fix":"2998","desc":"2190"},{"messageId":"2191","fix":"2999","desc":"2193"},{"messageId":"2188","fix":"3000","desc":"2190"},{"messageId":"2191","fix":"3001","desc":"2193"},{"messageId":"2188","fix":"3002","desc":"2190"},{"messageId":"2191","fix":"3003","desc":"2193"},{"messageId":"2188","fix":"3004","desc":"2190"},{"messageId":"2191","fix":"3005","desc":"2193"},{"messageId":"2188","fix":"3006","desc":"2190"},{"messageId":"2191","fix":"3007","desc":"2193"},{"messageId":"2188","fix":"3008","desc":"2190"},{"messageId":"2191","fix":"3009","desc":"2193"},{"messageId":"2188","fix":"3010","desc":"2190"},{"messageId":"2191","fix":"3011","desc":"2193"},{"messageId":"2188","fix":"3012","desc":"2190"},{"messageId":"2191","fix":"3013","desc":"2193"},{"messageId":"2188","fix":"3014","desc":"2190"},{"messageId":"2191","fix":"3015","desc":"2193"},{"messageId":"2188","fix":"3016","desc":"2190"},{"messageId":"2191","fix":"3017","desc":"2193"},"Update the dependencies array to be: [inventoryService]",{"range":"3018","text":"3019"},"Update the dependencies array to be: [endDate, inventoryService, startDate]",{"range":"3020","text":"3021"},"Update the dependencies array to be: [dispatch]",{"range":"3022","text":"3023"},"Update the dependencies array to be: [props.filename, props.selectedInvoice, tesseractService]",{"range":"3024","text":"3025"},"Update the dependencies array to be: [inventoryService, newInventoryData]",{"range":"3026","text":"3027"},"Update the dependencies array to be: [props.isAuth, user]",{"range":"3028","text":"3029"},"removeEscape",{"range":"3030","text":"3031"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"3032","text":"3033"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"3034","text":"3031"},{"range":"3035","text":"3033"},{"range":"3036","text":"3031"},{"range":"3037","text":"3033"},{"range":"3038","text":"3031"},{"range":"3039","text":"3033"},{"range":"3040","text":"3031"},{"range":"3041","text":"3033"},{"range":"3042","text":"3031"},{"range":"3043","text":"3033"},{"range":"3044","text":"3031"},{"range":"3045","text":"3033"},{"range":"3046","text":"3031"},{"range":"3047","text":"3033"},{"range":"3048","text":"3031"},{"range":"3049","text":"3033"},{"range":"3050","text":"3031"},{"range":"3051","text":"3033"},{"range":"3052","text":"3031"},{"range":"3053","text":"3033"},{"range":"3054","text":"3031"},{"range":"3055","text":"3033"},{"range":"3056","text":"3031"},{"range":"3057","text":"3033"},{"range":"3058","text":"3031"},{"range":"3059","text":"3033"},{"range":"3060","text":"3031"},{"range":"3061","text":"3033"},{"range":"3062","text":"3031"},{"range":"3063","text":"3033"},{"range":"3064","text":"3031"},{"range":"3065","text":"3033"},{"range":"3066","text":"3031"},{"range":"3067","text":"3033"},{"range":"3068","text":"3031"},{"range":"3069","text":"3033"},{"range":"3070","text":"3031"},{"range":"3071","text":"3033"},{"range":"3072","text":"3031"},{"range":"3073","text":"3033"},{"range":"3074","text":"3031"},{"range":"3075","text":"3033"},{"range":"3076","text":"3031"},{"range":"3077","text":"3033"},{"range":"3078","text":"3031"},{"range":"3079","text":"3033"},{"range":"3080","text":"3031"},{"range":"3081","text":"3033"},{"range":"3082","text":"3031"},{"range":"3083","text":"3033"},{"range":"3084","text":"3031"},{"range":"3085","text":"3033"},{"range":"3086","text":"3031"},{"range":"3087","text":"3033"},{"range":"3088","text":"3031"},{"range":"3089","text":"3033"},{"range":"3090","text":"3031"},{"range":"3091","text":"3033"},{"range":"3092","text":"3031"},{"range":"3093","text":"3033"},{"range":"3094","text":"3031"},{"range":"3095","text":"3033"},{"range":"3096","text":"3031"},{"range":"3097","text":"3033"},{"range":"3098","text":"3031"},{"range":"3099","text":"3033"},{"range":"3100","text":"3031"},{"range":"3101","text":"3033"},{"range":"3102","text":"3031"},{"range":"3103","text":"3033"},{"range":"3104","text":"3031"},{"range":"3105","text":"3033"},{"range":"3106","text":"3031"},{"range":"3107","text":"3033"},{"range":"3108","text":"3031"},{"range":"3109","text":"3033"},{"range":"3110","text":"3031"},{"range":"3111","text":"3033"},{"range":"3112","text":"3031"},{"range":"3113","text":"3033"},{"range":"3114","text":"3031"},{"range":"3115","text":"3033"},{"range":"3116","text":"3031"},{"range":"3117","text":"3033"},{"range":"3118","text":"3031"},{"range":"3119","text":"3033"},{"range":"3120","text":"3031"},{"range":"3121","text":"3033"},{"range":"3122","text":"3031"},{"range":"3123","text":"3033"},{"range":"3124","text":"3031"},{"range":"3125","text":"3033"},{"range":"3126","text":"3031"},{"range":"3127","text":"3033"},{"range":"3128","text":"3031"},{"range":"3129","text":"3033"},{"range":"3130","text":"3031"},{"range":"3131","text":"3033"},{"range":"3132","text":"3031"},{"range":"3133","text":"3033"},{"range":"3134","text":"3031"},{"range":"3135","text":"3033"},{"range":"3136","text":"3031"},{"range":"3137","text":"3033"},{"range":"3138","text":"3031"},{"range":"3139","text":"3033"},{"range":"3140","text":"3031"},{"range":"3141","text":"3033"},{"range":"3142","text":"3031"},{"range":"3143","text":"3033"},{"range":"3144","text":"3031"},{"range":"3145","text":"3033"},{"range":"3146","text":"3031"},{"range":"3147","text":"3033"},{"range":"3148","text":"3031"},{"range":"3149","text":"3033"},{"range":"3150","text":"3031"},{"range":"3151","text":"3033"},{"range":"3152","text":"3031"},{"range":"3153","text":"3033"},{"range":"3154","text":"3031"},{"range":"3155","text":"3033"},{"range":"3156","text":"3031"},{"range":"3157","text":"3033"},{"range":"3158","text":"3031"},{"range":"3159","text":"3033"},{"range":"3160","text":"3031"},{"range":"3161","text":"3033"},{"range":"3162","text":"3031"},{"range":"3163","text":"3033"},{"range":"3164","text":"3031"},{"range":"3165","text":"3033"},{"range":"3166","text":"3031"},{"range":"3167","text":"3033"},{"range":"3168","text":"3031"},{"range":"3169","text":"3033"},{"range":"3170","text":"3031"},{"range":"3171","text":"3033"},{"range":"3172","text":"3031"},{"range":"3173","text":"3033"},{"range":"3174","text":"3031"},{"range":"3175","text":"3033"},{"range":"3176","text":"3031"},{"range":"3177","text":"3033"},{"range":"3178","text":"3031"},{"range":"3179","text":"3033"},{"range":"3180","text":"3031"},{"range":"3181","text":"3033"},{"range":"3182","text":"3031"},{"range":"3183","text":"3033"},{"range":"3184","text":"3031"},{"range":"3185","text":"3033"},{"range":"3186","text":"3031"},{"range":"3187","text":"3033"},{"range":"3188","text":"3031"},{"range":"3189","text":"3033"},{"range":"3190","text":"3031"},{"range":"3191","text":"3033"},{"range":"3192","text":"3031"},{"range":"3193","text":"3033"},{"range":"3194","text":"3031"},{"range":"3195","text":"3033"},{"range":"3196","text":"3031"},{"range":"3197","text":"3033"},{"range":"3198","text":"3031"},{"range":"3199","text":"3033"},{"range":"3200","text":"3031"},{"range":"3201","text":"3033"},{"range":"3202","text":"3031"},{"range":"3203","text":"3033"},{"range":"3204","text":"3031"},{"range":"3205","text":"3033"},{"range":"3206","text":"3031"},{"range":"3207","text":"3033"},{"range":"3208","text":"3031"},{"range":"3209","text":"3033"},{"range":"3210","text":"3031"},{"range":"3211","text":"3033"},{"range":"3212","text":"3031"},{"range":"3213","text":"3033"},{"range":"3214","text":"3031"},{"range":"3215","text":"3033"},{"range":"3216","text":"3031"},{"range":"3217","text":"3033"},{"range":"3218","text":"3031"},{"range":"3219","text":"3033"},{"range":"3220","text":"3031"},{"range":"3221","text":"3033"},{"range":"3222","text":"3031"},{"range":"3223","text":"3033"},{"range":"3224","text":"3031"},{"range":"3225","text":"3033"},{"range":"3226","text":"3031"},{"range":"3227","text":"3033"},{"range":"3228","text":"3031"},{"range":"3229","text":"3033"},{"range":"3230","text":"3031"},{"range":"3231","text":"3033"},{"range":"3232","text":"3031"},{"range":"3233","text":"3033"},{"range":"3234","text":"3031"},{"range":"3235","text":"3033"},{"range":"3236","text":"3031"},{"range":"3237","text":"3033"},{"range":"3238","text":"3031"},{"range":"3239","text":"3033"},{"range":"3240","text":"3031"},{"range":"3241","text":"3033"},{"range":"3242","text":"3031"},{"range":"3243","text":"3033"},{"range":"3244","text":"3031"},{"range":"3245","text":"3033"},{"range":"3246","text":"3031"},{"range":"3247","text":"3033"},{"range":"3248","text":"3031"},{"range":"3249","text":"3033"},{"range":"3250","text":"3031"},{"range":"3251","text":"3033"},{"range":"3252","text":"3031"},{"range":"3253","text":"3033"},{"range":"3254","text":"3031"},{"range":"3255","text":"3033"},{"range":"3256","text":"3031"},{"range":"3257","text":"3033"},{"range":"3258","text":"3031"},{"range":"3259","text":"3033"},{"range":"3260","text":"3031"},{"range":"3261","text":"3033"},{"range":"3262","text":"3031"},{"range":"3263","text":"3033"},{"range":"3264","text":"3031"},{"range":"3265","text":"3033"},{"range":"3266","text":"3031"},{"range":"3267","text":"3033"},{"range":"3268","text":"3031"},{"range":"3269","text":"3033"},{"range":"3270","text":"3031"},{"range":"3271","text":"3033"},{"range":"3272","text":"3031"},{"range":"3273","text":"3033"},{"range":"3274","text":"3031"},{"range":"3275","text":"3033"},{"range":"3276","text":"3031"},{"range":"3277","text":"3033"},{"range":"3278","text":"3031"},{"range":"3279","text":"3033"},{"range":"3280","text":"3031"},{"range":"3281","text":"3033"},{"range":"3282","text":"3031"},{"range":"3283","text":"3033"},{"range":"3284","text":"3031"},{"range":"3285","text":"3033"},{"range":"3286","text":"3031"},{"range":"3287","text":"3033"},{"range":"3288","text":"3031"},{"range":"3289","text":"3033"},{"range":"3290","text":"3031"},{"range":"3291","text":"3033"},{"range":"3292","text":"3031"},{"range":"3293","text":"3033"},{"range":"3294","text":"3031"},{"range":"3295","text":"3033"},{"range":"3296","text":"3031"},{"range":"3297","text":"3033"},{"range":"3298","text":"3031"},{"range":"3299","text":"3033"},{"range":"3300","text":"3031"},{"range":"3301","text":"3033"},{"range":"3302","text":"3031"},{"range":"3303","text":"3033"},{"range":"3304","text":"3031"},{"range":"3305","text":"3033"},{"range":"3306","text":"3031"},{"range":"3307","text":"3033"},{"range":"3308","text":"3031"},{"range":"3309","text":"3033"},{"range":"3310","text":"3031"},{"range":"3311","text":"3033"},{"range":"3312","text":"3031"},{"range":"3313","text":"3033"},{"range":"3314","text":"3031"},{"range":"3315","text":"3033"},{"range":"3316","text":"3031"},{"range":"3317","text":"3033"},{"range":"3318","text":"3031"},{"range":"3319","text":"3033"},{"range":"3320","text":"3031"},{"range":"3321","text":"3033"},{"range":"3322","text":"3031"},{"range":"3323","text":"3033"},{"range":"3324","text":"3031"},{"range":"3325","text":"3033"},{"range":"3326","text":"3031"},{"range":"3327","text":"3033"},{"range":"3328","text":"3031"},{"range":"3329","text":"3033"},{"range":"3330","text":"3031"},{"range":"3331","text":"3033"},{"range":"3332","text":"3031"},{"range":"3333","text":"3033"},{"range":"3334","text":"3031"},{"range":"3335","text":"3033"},{"range":"3336","text":"3031"},{"range":"3337","text":"3033"},{"range":"3338","text":"3031"},{"range":"3339","text":"3033"},{"range":"3340","text":"3031"},{"range":"3341","text":"3033"},{"range":"3342","text":"3031"},{"range":"3343","text":"3033"},{"range":"3344","text":"3031"},{"range":"3345","text":"3033"},{"range":"3346","text":"3031"},{"range":"3347","text":"3033"},{"range":"3348","text":"3031"},{"range":"3349","text":"3033"},{"range":"3350","text":"3031"},{"range":"3351","text":"3033"},{"range":"3352","text":"3031"},{"range":"3353","text":"3033"},{"range":"3354","text":"3031"},{"range":"3355","text":"3033"},{"range":"3356","text":"3031"},{"range":"3357","text":"3033"},{"range":"3358","text":"3031"},{"range":"3359","text":"3033"},{"range":"3360","text":"3031"},{"range":"3361","text":"3033"},{"range":"3362","text":"3031"},{"range":"3363","text":"3033"},{"range":"3364","text":"3031"},{"range":"3365","text":"3033"},{"range":"3366","text":"3031"},{"range":"3367","text":"3033"},{"range":"3368","text":"3031"},{"range":"3369","text":"3033"},{"range":"3370","text":"3031"},{"range":"3371","text":"3033"},{"range":"3372","text":"3031"},{"range":"3373","text":"3033"},{"range":"3374","text":"3031"},{"range":"3375","text":"3033"},{"range":"3376","text":"3031"},{"range":"3377","text":"3033"},{"range":"3378","text":"3031"},{"range":"3379","text":"3033"},{"range":"3380","text":"3031"},{"range":"3381","text":"3033"},{"range":"3382","text":"3031"},{"range":"3383","text":"3033"},{"range":"3384","text":"3031"},{"range":"3385","text":"3033"},{"range":"3386","text":"3031"},{"range":"3387","text":"3033"},{"range":"3388","text":"3031"},{"range":"3389","text":"3033"},{"range":"3390","text":"3031"},{"range":"3391","text":"3033"},{"range":"3392","text":"3031"},{"range":"3393","text":"3033"},{"range":"3394","text":"3031"},{"range":"3395","text":"3033"},{"range":"3396","text":"3031"},{"range":"3397","text":"3033"},{"range":"3398","text":"3031"},{"range":"3399","text":"3033"},{"range":"3400","text":"3031"},{"range":"3401","text":"3033"},{"range":"3402","text":"3031"},{"range":"3403","text":"3033"},{"range":"3404","text":"3031"},{"range":"3405","text":"3033"},{"range":"3406","text":"3031"},{"range":"3407","text":"3033"},{"range":"3408","text":"3031"},{"range":"3409","text":"3033"},{"range":"3410","text":"3031"},{"range":"3411","text":"3033"},{"range":"3412","text":"3031"},{"range":"3413","text":"3033"},{"range":"3414","text":"3031"},{"range":"3415","text":"3033"},{"range":"3416","text":"3031"},{"range":"3417","text":"3033"},{"range":"3418","text":"3031"},{"range":"3419","text":"3033"},{"range":"3420","text":"3031"},{"range":"3421","text":"3033"},{"range":"3422","text":"3031"},{"range":"3423","text":"3033"},{"range":"3424","text":"3031"},{"range":"3425","text":"3033"},{"range":"3426","text":"3031"},{"range":"3427","text":"3033"},{"range":"3428","text":"3031"},{"range":"3429","text":"3033"},{"range":"3430","text":"3031"},{"range":"3431","text":"3033"},{"range":"3432","text":"3031"},{"range":"3433","text":"3033"},{"range":"3434","text":"3031"},{"range":"3435","text":"3033"},{"range":"3436","text":"3031"},{"range":"3437","text":"3033"},{"range":"3438","text":"3031"},{"range":"3439","text":"3033"},{"range":"3440","text":"3031"},{"range":"3441","text":"3033"},{"range":"3442","text":"3031"},{"range":"3443","text":"3033"},{"range":"3444","text":"3031"},{"range":"3445","text":"3033"},{"range":"3446","text":"3031"},{"range":"3447","text":"3033"},{"range":"3448","text":"3031"},{"range":"3449","text":"3033"},{"range":"3450","text":"3031"},{"range":"3451","text":"3033"},{"range":"3452","text":"3031"},{"range":"3453","text":"3033"},{"range":"3454","text":"3031"},{"range":"3455","text":"3033"},{"range":"3456","text":"3031"},{"range":"3457","text":"3033"},{"range":"3458","text":"3031"},{"range":"3459","text":"3033"},{"range":"3460","text":"3031"},{"range":"3461","text":"3033"},{"range":"3462","text":"3031"},{"range":"3463","text":"3033"},{"range":"3464","text":"3031"},{"range":"3465","text":"3033"},{"range":"3466","text":"3031"},{"range":"3467","text":"3033"},{"range":"3468","text":"3031"},{"range":"3469","text":"3033"},{"range":"3470","text":"3031"},{"range":"3471","text":"3033"},{"range":"3472","text":"3031"},{"range":"3473","text":"3033"},{"range":"3474","text":"3031"},{"range":"3475","text":"3033"},{"range":"3476","text":"3031"},{"range":"3477","text":"3033"},{"range":"3478","text":"3031"},{"range":"3479","text":"3033"},{"range":"3480","text":"3031"},{"range":"3481","text":"3033"},{"range":"3482","text":"3031"},{"range":"3483","text":"3033"},{"range":"3484","text":"3031"},{"range":"3485","text":"3033"},{"range":"3486","text":"3031"},{"range":"3487","text":"3033"},{"range":"3488","text":"3031"},{"range":"3489","text":"3033"},{"range":"3490","text":"3031"},{"range":"3491","text":"3033"},{"range":"3492","text":"3031"},{"range":"3493","text":"3033"},{"range":"3494","text":"3031"},{"range":"3495","text":"3033"},{"range":"3496","text":"3031"},{"range":"3497","text":"3033"},{"range":"3498","text":"3031"},{"range":"3499","text":"3033"},{"range":"3500","text":"3031"},{"range":"3501","text":"3033"},{"range":"3502","text":"3031"},{"range":"3503","text":"3033"},{"range":"3504","text":"3031"},{"range":"3505","text":"3033"},{"range":"3506","text":"3031"},{"range":"3507","text":"3033"},{"range":"3508","text":"3031"},{"range":"3509","text":"3033"},{"range":"3510","text":"3031"},{"range":"3511","text":"3033"},{"range":"3512","text":"3031"},{"range":"3513","text":"3033"},{"range":"3514","text":"3031"},{"range":"3515","text":"3033"},{"range":"3516","text":"3031"},{"range":"3517","text":"3033"},{"range":"3518","text":"3031"},{"range":"3519","text":"3033"},{"range":"3520","text":"3031"},{"range":"3521","text":"3033"},{"range":"3522","text":"3031"},{"range":"3523","text":"3033"},{"range":"3524","text":"3031"},{"range":"3525","text":"3033"},{"range":"3526","text":"3031"},{"range":"3527","text":"3033"},{"range":"3528","text":"3031"},{"range":"3529","text":"3033"},{"range":"3530","text":"3031"},{"range":"3531","text":"3033"},{"range":"3532","text":"3031"},{"range":"3533","text":"3033"},{"range":"3534","text":"3031"},{"range":"3535","text":"3033"},{"range":"3536","text":"3031"},{"range":"3537","text":"3033"},{"range":"3538","text":"3031"},{"range":"3539","text":"3033"},{"range":"3540","text":"3031"},{"range":"3541","text":"3033"},{"range":"3542","text":"3031"},{"range":"3543","text":"3033"},{"range":"3544","text":"3031"},{"range":"3545","text":"3033"},{"range":"3546","text":"3031"},{"range":"3547","text":"3033"},{"range":"3548","text":"3031"},{"range":"3549","text":"3033"},{"range":"3550","text":"3031"},{"range":"3551","text":"3033"},{"range":"3552","text":"3031"},{"range":"3553","text":"3033"},{"range":"3554","text":"3031"},{"range":"3555","text":"3033"},{"range":"3556","text":"3031"},{"range":"3557","text":"3033"},{"range":"3558","text":"3031"},{"range":"3559","text":"3033"},{"range":"3560","text":"3031"},{"range":"3561","text":"3033"},{"range":"3562","text":"3031"},{"range":"3563","text":"3033"},{"range":"3564","text":"3031"},{"range":"3565","text":"3033"},{"range":"3566","text":"3031"},{"range":"3567","text":"3033"},{"range":"3568","text":"3031"},{"range":"3569","text":"3033"},{"range":"3570","text":"3031"},{"range":"3571","text":"3033"},{"range":"3572","text":"3031"},{"range":"3573","text":"3033"},{"range":"3574","text":"3031"},{"range":"3575","text":"3033"},{"range":"3576","text":"3031"},{"range":"3577","text":"3033"},{"range":"3578","text":"3031"},{"range":"3579","text":"3033"},{"range":"3580","text":"3031"},{"range":"3581","text":"3033"},{"range":"3582","text":"3031"},{"range":"3583","text":"3033"},{"range":"3584","text":"3031"},{"range":"3585","text":"3033"},{"range":"3586","text":"3031"},{"range":"3587","text":"3033"},{"range":"3588","text":"3031"},{"range":"3589","text":"3033"},{"range":"3590","text":"3031"},{"range":"3591","text":"3033"},{"range":"3592","text":"3031"},{"range":"3593","text":"3033"},{"range":"3594","text":"3031"},{"range":"3595","text":"3033"},{"range":"3596","text":"3031"},{"range":"3597","text":"3033"},{"range":"3598","text":"3031"},{"range":"3599","text":"3033"},{"range":"3600","text":"3031"},{"range":"3601","text":"3033"},{"range":"3602","text":"3031"},{"range":"3603","text":"3033"},{"range":"3604","text":"3031"},{"range":"3605","text":"3033"},{"range":"3606","text":"3031"},{"range":"3607","text":"3033"},{"range":"3608","text":"3031"},{"range":"3609","text":"3033"},{"range":"3610","text":"3031"},{"range":"3611","text":"3033"},{"range":"3612","text":"3031"},{"range":"3613","text":"3033"},{"range":"3614","text":"3031"},{"range":"3615","text":"3033"},{"range":"3616","text":"3031"},{"range":"3617","text":"3033"},{"range":"3618","text":"3031"},{"range":"3619","text":"3033"},{"range":"3620","text":"3031"},{"range":"3621","text":"3033"},{"range":"3622","text":"3031"},{"range":"3623","text":"3033"},{"range":"3624","text":"3031"},{"range":"3625","text":"3033"},{"range":"3626","text":"3031"},{"range":"3627","text":"3033"},{"range":"3628","text":"3031"},{"range":"3629","text":"3033"},{"range":"3630","text":"3031"},{"range":"3631","text":"3033"},{"range":"3632","text":"3031"},{"range":"3633","text":"3033"},{"range":"3634","text":"3031"},{"range":"3635","text":"3033"},{"range":"3636","text":"3031"},{"range":"3637","text":"3033"},{"range":"3638","text":"3031"},{"range":"3639","text":"3033"},{"range":"3640","text":"3031"},{"range":"3641","text":"3033"},{"range":"3642","text":"3031"},{"range":"3643","text":"3033"},{"range":"3644","text":"3031"},{"range":"3645","text":"3033"},{"range":"3646","text":"3031"},{"range":"3647","text":"3033"},{"range":"3648","text":"3031"},{"range":"3649","text":"3033"},{"range":"3650","text":"3031"},{"range":"3651","text":"3033"},{"range":"3652","text":"3031"},{"range":"3653","text":"3033"},{"range":"3654","text":"3031"},{"range":"3655","text":"3033"},{"range":"3656","text":"3031"},{"range":"3657","text":"3033"},{"range":"3658","text":"3031"},{"range":"3659","text":"3033"},{"range":"3660","text":"3031"},{"range":"3661","text":"3033"},{"range":"3662","text":"3031"},{"range":"3663","text":"3033"},{"range":"3664","text":"3031"},{"range":"3665","text":"3033"},{"range":"3666","text":"3031"},{"range":"3667","text":"3033"},{"range":"3668","text":"3031"},{"range":"3669","text":"3033"},{"range":"3670","text":"3031"},{"range":"3671","text":"3033"},{"range":"3672","text":"3031"},{"range":"3673","text":"3033"},{"range":"3674","text":"3031"},{"range":"3675","text":"3033"},{"range":"3676","text":"3031"},{"range":"3677","text":"3033"},{"range":"3678","text":"3031"},{"range":"3679","text":"3033"},{"range":"3680","text":"3031"},{"range":"3681","text":"3033"},{"range":"3682","text":"3031"},{"range":"3683","text":"3033"},{"range":"3684","text":"3031"},{"range":"3685","text":"3033"},{"range":"3686","text":"3031"},{"range":"3687","text":"3033"},{"range":"3688","text":"3031"},{"range":"3689","text":"3033"},{"range":"3690","text":"3031"},{"range":"3691","text":"3033"},{"range":"3692","text":"3031"},{"range":"3693","text":"3033"},{"range":"3694","text":"3031"},{"range":"3695","text":"3033"},{"range":"3696","text":"3031"},{"range":"3697","text":"3033"},{"range":"3698","text":"3031"},{"range":"3699","text":"3033"},{"range":"3700","text":"3031"},{"range":"3701","text":"3033"},{"range":"3702","text":"3031"},{"range":"3703","text":"3033"},{"range":"3704","text":"3031"},{"range":"3705","text":"3033"},{"range":"3706","text":"3031"},{"range":"3707","text":"3033"},{"range":"3708","text":"3031"},{"range":"3709","text":"3033"},{"range":"3710","text":"3031"},{"range":"3711","text":"3033"},{"range":"3712","text":"3031"},{"range":"3713","text":"3033"},{"range":"3714","text":"3031"},{"range":"3715","text":"3033"},{"range":"3716","text":"3031"},{"range":"3717","text":"3033"},{"range":"3718","text":"3031"},{"range":"3719","text":"3033"},{"range":"3720","text":"3031"},{"range":"3721","text":"3033"},{"range":"3722","text":"3031"},{"range":"3723","text":"3033"},{"range":"3724","text":"3031"},{"range":"3725","text":"3033"},{"range":"3726","text":"3031"},{"range":"3727","text":"3033"},{"range":"3728","text":"3031"},{"range":"3729","text":"3033"},{"range":"3730","text":"3031"},{"range":"3731","text":"3033"},{"range":"3732","text":"3031"},{"range":"3733","text":"3033"},{"range":"3734","text":"3031"},{"range":"3735","text":"3033"},{"range":"3736","text":"3031"},{"range":"3737","text":"3033"},{"range":"3738","text":"3031"},{"range":"3739","text":"3033"},{"range":"3740","text":"3031"},{"range":"3741","text":"3033"},{"range":"3742","text":"3031"},{"range":"3743","text":"3033"},{"range":"3744","text":"3031"},{"range":"3745","text":"3033"},{"range":"3746","text":"3031"},{"range":"3747","text":"3033"},{"range":"3748","text":"3031"},{"range":"3749","text":"3033"},{"range":"3750","text":"3031"},{"range":"3751","text":"3033"},{"range":"3752","text":"3031"},{"range":"3753","text":"3033"},{"range":"3754","text":"3031"},{"range":"3755","text":"3033"},{"range":"3756","text":"3031"},{"range":"3757","text":"3033"},{"range":"3758","text":"3031"},{"range":"3759","text":"3033"},{"range":"3760","text":"3031"},{"range":"3761","text":"3033"},{"range":"3762","text":"3031"},{"range":"3763","text":"3033"},{"range":"3764","text":"3031"},{"range":"3765","text":"3033"},{"range":"3766","text":"3031"},{"range":"3767","text":"3033"},{"range":"3768","text":"3031"},{"range":"3769","text":"3033"},{"range":"3770","text":"3031"},{"range":"3771","text":"3033"},{"range":"3772","text":"3031"},{"range":"3773","text":"3033"},{"range":"3774","text":"3031"},{"range":"3775","text":"3033"},{"range":"3776","text":"3031"},{"range":"3777","text":"3033"},{"range":"3778","text":"3031"},{"range":"3779","text":"3033"},{"range":"3780","text":"3031"},{"range":"3781","text":"3033"},{"range":"3782","text":"3031"},{"range":"3783","text":"3033"},{"range":"3784","text":"3031"},{"range":"3785","text":"3033"},{"range":"3786","text":"3031"},{"range":"3787","text":"3033"},{"range":"3788","text":"3031"},{"range":"3789","text":"3033"},{"range":"3790","text":"3031"},{"range":"3791","text":"3033"},{"range":"3792","text":"3031"},{"range":"3793","text":"3033"},{"range":"3794","text":"3031"},{"range":"3795","text":"3033"},{"range":"3796","text":"3031"},{"range":"3797","text":"3033"},{"range":"3798","text":"3031"},{"range":"3799","text":"3033"},{"range":"3800","text":"3031"},{"range":"3801","text":"3033"},{"range":"3802","text":"3031"},{"range":"3803","text":"3033"},{"range":"3804","text":"3031"},{"range":"3805","text":"3033"},{"range":"3806","text":"3031"},{"range":"3807","text":"3033"},{"range":"3808","text":"3031"},{"range":"3809","text":"3033"},{"range":"3810","text":"3031"},{"range":"3811","text":"3033"},{"range":"3812","text":"3031"},{"range":"3813","text":"3033"},{"range":"3814","text":"3031"},{"range":"3815","text":"3033"},{"range":"3816","text":"3031"},{"range":"3817","text":"3033"},{"range":"3818","text":"3031"},{"range":"3819","text":"3033"},{"range":"3820","text":"3031"},{"range":"3821","text":"3033"},{"range":"3822","text":"3031"},{"range":"3823","text":"3033"},{"range":"3824","text":"3031"},{"range":"3825","text":"3033"},{"range":"3826","text":"3031"},{"range":"3827","text":"3033"},{"range":"3828","text":"3031"},{"range":"3829","text":"3033"},{"range":"3830","text":"3031"},{"range":"3831","text":"3033"},{"range":"3832","text":"3031"},{"range":"3833","text":"3033"},{"range":"3834","text":"3031"},{"range":"3835","text":"3033"},{"range":"3836","text":"3031"},{"range":"3837","text":"3033"},{"range":"3838","text":"3031"},{"range":"3839","text":"3033"},{"range":"3840","text":"3031"},{"range":"3841","text":"3033"},{"range":"3842","text":"3031"},{"range":"3843","text":"3033"},{"range":"3844","text":"3031"},{"range":"3845","text":"3033"},{"range":"3846","text":"3031"},{"range":"3847","text":"3033"},{"range":"3848","text":"3031"},{"range":"3849","text":"3033"},{"range":"3850","text":"3031"},{"range":"3851","text":"3033"},{"range":"3852","text":"3031"},{"range":"3853","text":"3033"},{"range":"3854","text":"3031"},{"range":"3855","text":"3033"},{"range":"3856","text":"3031"},{"range":"3857","text":"3033"},[2412,2414],"[inventoryService]",[6026,6028],"[endDate, inventoryService, startDate]",[94811,94813],"[dispatch]",[46692,46694],"[props.filename, props.selectedInvoice, tesseractService]",[10650,10652],"[inventoryService, newInventoryData]",[396,402],"[props.isAuth, user]",[3199,3200],"",[3199,3199],"\\",[3212,3213],[3212,3212],[82,83],[82,82],[91,92],[91,91],[193,194],[193,193],[202,203],[202,202],[238,239],[238,238],[250,251],[250,250],[252,253],[252,252],[254,255],[254,254],[321,322],[321,321],[330,331],[330,330],[432,433],[432,432],[441,442],[441,441],[477,478],[477,477],[492,493],[492,492],[562,563],[562,562],[571,572],[571,571],[669,670],[669,669],[678,679],[678,678],[714,715],[714,714],[729,730],[729,729],[787,788],[787,787],[796,797],[796,796],[887,888],[887,887],[896,897],[896,896],[932,933],[932,932],[947,948],[947,947],[949,950],[949,949],[1016,1017],[1016,1016],[1025,1026],[1025,1025],[1108,1109],[1108,1108],[1117,1118],[1117,1117],[1153,1154],[1153,1153],[1168,1169],[1168,1168],[1240,1241],[1240,1240],[1354,1355],[1354,1354],[1369,1370],[1369,1369],[1438,1439],[1438,1438],[1531,1532],[1531,1531],[1569,1570],[1569,1569],[1584,1585],[1584,1584],[1640,1641],[1640,1640],[1656,1657],[1656,1656],[1665,1666],[1665,1665],[1674,1675],[1674,1674],[1794,1795],[1794,1794],[1810,1811],[1810,1810],[1819,1820],[1819,1819],[1828,1829],[1828,1828],[1870,1871],[1870,1870],[1885,1886],[1885,1885],[2147,2148],[2147,2147],[2160,2161],[2160,2160],[2396,2397],[2396,2396],[2414,2415],[2414,2414],[2659,2660],[2659,2659],[2675,2676],[2675,2675],[2909,2910],[2909,2909],[2927,2928],[2927,2927],[2978,2979],[2978,2978],[2987,2988],[2987,2987],[3081,3082],[3081,3081],[3090,3091],[3090,3090],[3126,3127],[3126,3126],[3141,3142],[3141,3141],[3215,3216],[3215,3215],[3224,3225],[3224,3224],[3331,3332],[3331,3331],[3340,3341],[3340,3340],[3378,3379],[3378,3378],[3393,3394],[3393,3393],[3395,3396],[3395,3395],[3444,3445],[3444,3444],[3453,3454],[3453,3453],[3544,3545],[3544,3544],[3553,3554],[3553,3553],[3589,3590],[3589,3589],[3604,3605],[3604,3604],[3692,3693],[3692,3692],[3708,3709],[3708,3708],[3809,3810],[3809,3809],[3825,3826],[3825,3825],[3863,3864],[3863,3863],[3878,3879],[3878,3878],[3880,3881],[3880,3880],[3973,3974],[3973,3973],[3982,3983],[3982,3982],[4103,4104],[4103,4103],[4112,4113],[4112,4112],[4152,4153],[4152,4152],[4167,4168],[4167,4167],[4252,4253],[4252,4252],[4261,4262],[4261,4261],[4405,4406],[4405,4405],[4414,4415],[4414,4414],[4454,4455],[4454,4454],[4467,4468],[4467,4467],[4523,4524],[4523,4523],[4532,4533],[4532,4532],[4541,4542],[4541,4541],[4630,4631],[4630,4630],[4639,4640],[4639,4639],[4648,4649],[4648,4648],[4686,4687],[4686,4686],[4699,4700],[4699,4699],[4740,4741],[4740,4740],[4752,4753],[4752,4752],[4768,4769],[4768,4768],[4862,4863],[4862,4862],[4878,4879],[4878,4878],[4917,4918],[4917,4917],[4930,4931],[4930,4930],[4988,4989],[4988,4988],[4997,4998],[4997,4997],[5093,5094],[5093,5093],[5102,5103],[5102,5102],[5140,5141],[5140,5140],[5153,5154],[5153,5153],[5433,5434],[5433,5433],[5446,5447],[5446,5446],[5500,5501],[5500,5500],[5519,5520],[5519,5519],[5622,5623],[5622,5622],[5658,5659],[5658,5658],[5674,5675],[5674,5674],[5676,5677],[5676,5676],[5750,5751],[5750,5750],[5760,5761],[5760,5760],[5769,5770],[5769,5769],[5879,5880],[5879,5879],[5889,5890],[5889,5889],[5898,5899],[5898,5898],[5936,5937],[5936,5936],[5952,5953],[5952,5952],[6021,6022],[6021,6021],[6030,6031],[6030,6030],[6133,6134],[6133,6133],[6142,6143],[6142,6142],[6178,6179],[6178,6178],[6194,6195],[6194,6194],[6391,6392],[6391,6391],[6407,6408],[6407,6407],[6409,6410],[6409,6409],[6473,6474],[6473,6473],[6482,6483],[6482,6482],[6586,6587],[6586,6586],[6595,6596],[6595,6595],[6633,6634],[6633,6633],[6649,6650],[6649,6649],[6709,6710],[6709,6709],[6725,6726],[6725,6725],[6734,6735],[6734,6734],[6833,6834],[6833,6833],[6849,6850],[6849,6849],[6858,6859],[6858,6858],[6898,6899],[6898,6898],[6914,6915],[6914,6914],[6977,6978],[6977,6977],[6986,6987],[6986,6986],[7082,7083],[7082,7082],[7091,7092],[7091,7091],[7129,7130],[7129,7129],[7145,7146],[7145,7145],[7206,7207],[7206,7206],[7215,7216],[7215,7215],[7317,7318],[7317,7317],[7326,7327],[7326,7326],[7362,7363],[7362,7362],[7378,7379],[7378,7378],[7449,7450],[7449,7449],[7458,7459],[7458,7458],[7576,7577],[7576,7576],[7585,7586],[7585,7585],[7623,7624],[7623,7623],[7639,7640],[7639,7639],[7705,7706],[7705,7705],[7714,7715],[7714,7714],[7808,7809],[7808,7808],[7817,7818],[7817,7817],[7853,7854],[7853,7853],[7869,7870],[7869,7869],[7962,7963],[7962,7962],[7971,7972],[7971,7971],[8073,8074],[8073,8073],[8082,8083],[8082,8082],[8118,8119],[8118,8118],[8134,8135],[8134,8134],[8211,8212],[8211,8211],[8220,8221],[8220,8220],[8323,8324],[8323,8323],[8332,8333],[8332,8332],[8369,8370],[8369,8369],[8385,8386],[8385,8385],[8441,8442],[8441,8441],[8450,8451],[8450,8450],[8546,8547],[8546,8546],[8555,8556],[8555,8555],[8593,8594],[8593,8593],[8609,8610],[8609,8609],[8894,8895],[8894,8894],[8909,8910],[8909,8909],[9011,9012],[9011,9011],[9026,9027],[9026,9026],[9070,9071],[9070,9070],[9086,9087],[9086,9086],[9153,9154],[9153,9153],[9162,9163],[9162,9162],[9256,9257],[9256,9256],[9265,9266],[9265,9265],[9301,9302],[9301,9301],[9317,9318],[9317,9317],[9319,9320],[9319,9319],[9411,9412],[9411,9411],[9426,9427],[9426,9426],[9578,9579],[9578,9578],[9587,9588],[9587,9587],[9625,9626],[9625,9625],[9641,9642],[9641,9641],[9870,9871],[9870,9870],[9886,9887],[9886,9886],[10121,10122],[10121,10121],[10137,10138],[10137,10137],[10409,10410],[10409,10409],[10425,10426],[10425,10425],[10662,10663],[10662,10662],[10678,10679],[10678,10678],[10928,10929],[10928,10928],[10944,10945],[10944,10944],[11180,11181],[11180,11180],[11196,11197],[11196,11196],[11474,11475],[11474,11474],[11490,11491],[11490,11490],[11759,11760],[11759,11759],[11775,11776],[11775,11775],[12077,12078],[12077,12077],[12095,12096],[12095,12095],[12362,12363],[12362,12362],[12380,12381],[12380,12380],[12685,12686],[12685,12685],[12703,12704],[12703,12703],[13007,13008],[13007,13007],[13023,13024],[13023,13023],[13402,13403],[13402,13402],[13421,13422],[13421,13421],[13598,13599],[13598,13598],[13611,13612],[13611,13611],[13613,13614],[13613,13613],[13615,13616],[13615,13615],[13617,13618],[13617,13617],[13700,13701],[13700,13700],[13785,13786],[13785,13785],[13821,13822],[13821,13821],[13834,13835],[13834,13834],[13836,13837],[13836,13836],[13838,13839],[13838,13838],[13840,13841],[13840,13840],[14047,14048],[14047,14047],[14060,14061],[14060,14060],[14062,14063],[14062,14062],[14064,14065],[14064,14064],[14066,14067],[14066,14066],[14133,14134],[14133,14133],[14231,14232],[14231,14231],[14269,14270],[14269,14269],[14282,14283],[14282,14282],[14284,14285],[14284,14284],[14286,14287],[14286,14286],[14288,14289],[14288,14288],[14368,14369],[14368,14368],[14377,14378],[14377,14377],[14507,14508],[14507,14507],[14516,14517],[14516,14516],[14556,14557],[14556,14556],[14569,14570],[14569,14569],[14571,14572],[14571,14571],[14573,14574],[14573,14573],[14640,14641],[14640,14640],[14649,14650],[14649,14649],[14756,14757],[14756,14756],[14765,14766],[14765,14765],[14803,14804],[14803,14803],[14816,14817],[14816,14816],[14818,14819],[14818,14818],[14820,14821],[14820,14820],[15047,15048],[15047,15047],[15060,15061],[15060,15060],[15308,15309],[15308,15308],[15321,15322],[15321,15321],[15619,15620],[15619,15619],[15632,15633],[15632,15632],[15913,15914],[15913,15913],[15926,15927],[15926,15926],[16214,16215],[16214,16214],[16227,16228],[16227,16227],[16473,16474],[16473,16473],[16486,16487],[16486,16486],[16811,16812],[16811,16811],[16824,16825],[16824,16824],[16875,16876],[16875,16875],[16895,16896],[16895,16895],[16989,16990],[16989,16989],[17009,17010],[17009,17009],[17050,17051],[17050,17050],[17062,17063],[17062,17062],[17349,17350],[17349,17349],[17362,17363],[17362,17362],[17629,17630],[17629,17629],[17642,17643],[17642,17642],[17908,17909],[17908,17908],[17921,17922],[17921,17921],[18156,18157],[18156,18156],[18169,18170],[18169,18169],[18513,18514],[18513,18513],[18526,18527],[18526,18526],[18742,18743],[18742,18742],[18757,18758],[18757,18757],[19077,19078],[19077,19077],[19089,19090],[19089,19089],[19311,19312],[19311,19311],[19324,19325],[19324,19324],[19609,19610],[19609,19609],[19622,19623],[19622,19622],[19861,19862],[19861,19861],[19874,19875],[19874,19874],[20368,20369],[20368,20368],[20381,20382],[20381,20381],[20641,20642],[20641,20641],[20654,20655],[20654,20654],[20895,20896],[20895,20895],[20908,20909],[20908,20908],[21139,21140],[21139,21139],[21152,21153],[21152,21152],[21818,21819],[21818,21818],[21831,21832],[21831,21831],[22455,22456],[22455,22455],[22469,22470],[22469,22469],[22730,22731],[22730,22730],[22744,22745],[22744,22744],[23334,23335],[23334,23334],[23347,23348],[23347,23347],[23634,23635],[23634,23634],[23647,23648],[23647,23647],[23881,23882],[23881,23881],[23894,23895],[23894,23894],[24108,24109],[24108,24108],[24122,24123],[24122,24122],[24168,24169],[24168,24168],[24187,24188],[24187,24187],[24200,24201],[24200,24200],[24215,24216],[24215,24215],[24323,24324],[24323,24323],[24338,24339],[24338,24338],[24380,24381],[24380,24380],[24393,24394],[24393,24393],[24658,24659],[24658,24658],[24672,24673],[24672,24672],[24935,24936],[24935,24935],[24951,24952],[24951,24951],[25184,25185],[25184,25184],[25200,25201],[25200,25200],[25530,25531],[25530,25530],[25547,25548],[25547,25547],[25767,25768],[25767,25767],[25783,25784],[25783,25783],[26012,26013],[26012,26012],[26028,26029],[26028,26028],[26282,26283],[26282,26282],[26298,26299],[26298,26298],[26548,26549],[26548,26548],[26564,26565],[26564,26564],[26855,26856],[26855,26855],[26871,26872],[26871,26871],[27104,27105],[27104,27104],[27120,27121],[27120,27120],[27383,27384],[27383,27383],[27399,27400],[27399,27399],[27631,27632],[27631,27631],[27647,27648],[27647,27647],[27879,27880],[27879,27879],[27895,27896],[27895,27895],[28115,28116],[28115,28115],[28131,28132],[28131,28131],[28361,28362],[28361,28361],[28377,28378],[28377,28377],[28612,28613],[28612,28612],[28628,28629],[28628,28628],[28887,28888],[28887,28887],[28903,28904],[28903,28903],[29149,29150],[29149,29149],[29165,29166],[29165,29165],[29411,29412],[29411,29411],[29427,29428],[29427,29427],[29860,29861],[29860,29860],[29878,29879],[29878,29878],[30144,30145],[30144,30144],[30153,30154],[30153,30153],[30254,30255],[30254,30254],[30263,30264],[30263,30263],[30299,30300],[30299,30299],[30314,30315],[30314,30314],[32998,32999],[32998,32998],[33007,33008],[33007,33007],[33016,33017],[33016,33016],[33025,33026],[33025,33025],[33034,33035],[33034,33034],[33176,33177],[33176,33176],[33185,33186],[33185,33185],[33194,33195],[33194,33194],[33203,33204],[33203,33203],[33212,33213],[33212,33212],[33256,33257],[33256,33256],[33272,33273],[33272,33272]]