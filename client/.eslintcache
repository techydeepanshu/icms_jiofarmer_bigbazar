[{"/root/environment/inventory-management/client/src/index.js":"1","/root/environment/inventory-management/client/src/App.js":"2","/root/environment/inventory-management/client/src/store/reducer/reducerAuth.js":"3","/root/environment/inventory-management/client/src/store/action/actionAuth.js":"4","/root/environment/inventory-management/client/src/components/Invoice/Invoice.js":"5","/root/environment/inventory-management/client/src/components/Layout/Layout.js":"6","/root/environment/inventory-management/client/src/components/Home/Home.js":"7","/root/environment/inventory-management/client/src/components/DisplayData/DisplayData.js":"8","/root/environment/inventory-management/client/src/components/Navigation/Toolbar/Toolbar.js":"9","/root/environment/inventory-management/client/src/services/TesseractService.js":"10","/root/environment/inventory-management/client/src/utils/filterData.js":"11","/root/environment/inventory-management/client/src/components/Navigation/NavigationItems/NavigationItems.js":"12","/root/environment/inventory-management/client/src/components/Navigation/NavigationItems/NavigationItem/NavigationItem.js":"13","/home/alekh/Workspace/Tech/inventory-management/client/src/index.js":"14","/home/alekh/Workspace/Tech/inventory-management/client/src/store/reducer/reducerAuth.js":"15","/home/alekh/Workspace/Tech/inventory-management/client/src/App.js":"16","/home/alekh/Workspace/Tech/inventory-management/client/src/store/action/actionAuth.js":"17","/home/alekh/Workspace/Tech/inventory-management/client/src/components/Layout/Layout.js":"18","/home/alekh/Workspace/Tech/inventory-management/client/src/components/Invoice/Invoice.js":"19","/home/alekh/Workspace/Tech/inventory-management/client/src/services/TesseractService.js":"20","/home/alekh/Workspace/Tech/inventory-management/client/src/components/Navigation/Toolbar/Toolbar.js":"21","/home/alekh/Workspace/Tech/inventory-management/client/src/components/DisplayData/DisplayData.js":"22","/home/alekh/Workspace/Tech/inventory-management/client/src/components/Navigation/NavigationItems/NavigationItems.js":"23","/home/alekh/Workspace/Tech/inventory-management/client/src/utils/filterData.js":"24","/home/alekh/Workspace/Tech/inventory-management/client/src/components/Navigation/NavigationItems/NavigationItem/NavigationItem.js":"25","/home/alekh/Workspace/Tech/inventory-management/client/src/containers/Auth/Logout/Logout.js":"26","/home/alekh/Workspace/Tech/inventory-management/client/src/UI/Spinner/Spinner.js":"27","/home/alekh/Workspace/Tech/inventory-management/client/src/containers/Auth/Auth.js":"28","/home/alekh/Workspace/Tech/inventory-management/client/src/firebase.js":"29","/home/alekh/Workspace/Tech/inventory-management/client/src/UI/LoginPage.js":"30","/home/alekh/Workspace/Tech/inventory-management/client/src/services/LoginService.js":"31","/home/alekh/Workspace/Tech/inventory-management/client/src/services/axios.js":"32","/home/alekh/Workspace/Tech/inventory-management/client/src/UI/Button.js":"33","/home/alekh/Workspace/Tech/inventory-management/client/src/components/Update/UpdateInventory.js":"34","/home/alekh/Workspace/Tech/inventory-management/client/src/utils/invoice-filters/chetak.js":"35","/home/alekh/Workspace/Tech/inventory-management/client/src/utils/invoice-filters/krishna-foods.js":"36","/home/alekh/Workspace/Tech/inventory-management/client/src/utils/filter.js":"37","/home/alekh/Workspace/Tech/inventory-management/client/src/utils/optionData.js":"38"},{"size":976,"mtime":1612510117669,"results":"39","hashOfConfig":"40"},{"size":1512,"mtime":1612786646985,"results":"41","hashOfConfig":"40"},{"size":649,"mtime":1612510117669,"results":"42","hashOfConfig":"40"},{"size":1506,"mtime":1612510117669,"results":"43","hashOfConfig":"40"},{"size":2575,"mtime":1612510117669,"results":"44","hashOfConfig":"40"},{"size":419,"mtime":1612510117669,"results":"45","hashOfConfig":"40"},{"size":570,"mtime":1612510117669,"results":"46","hashOfConfig":"40"},{"size":8947,"mtime":1612510117669,"results":"47","hashOfConfig":"40"},{"size":715,"mtime":1612510117669,"results":"48","hashOfConfig":"40"},{"size":578,"mtime":1612510117669,"results":"49","hashOfConfig":"40"},{"size":4397,"mtime":1612511649809,"results":"50","hashOfConfig":"40"},{"size":729,"mtime":1612510117669,"results":"51","hashOfConfig":"40"},{"size":418,"mtime":1612510117669,"results":"52","hashOfConfig":"40"},{"size":697,"mtime":1613724740955,"results":"53","hashOfConfig":"54"},{"size":1004,"mtime":1613714811698,"results":"55","hashOfConfig":"54"},{"size":1700,"mtime":1613725415825,"results":"56","hashOfConfig":"54"},{"size":3684,"mtime":1613980006907,"results":"57","hashOfConfig":"54"},{"size":419,"mtime":1612244406482,"results":"58","hashOfConfig":"54"},{"size":4719,"mtime":1614407709582,"results":"59","hashOfConfig":"54"},{"size":591,"mtime":1614153497021,"results":"60","hashOfConfig":"54"},{"size":715,"mtime":1612244406486,"results":"61","hashOfConfig":"54"},{"size":10395,"mtime":1614413035579,"results":"62","hashOfConfig":"54"},{"size":673,"mtime":1613725677107,"results":"63","hashOfConfig":"54"},{"size":593,"mtime":1614407920087,"results":"64","hashOfConfig":"54"},{"size":418,"mtime":1612272681525,"results":"65","hashOfConfig":"54"},{"size":498,"mtime":1613715606197,"results":"66","hashOfConfig":"54"},{"size":167,"mtime":1614077522664,"results":"67","hashOfConfig":"54"},{"size":1633,"mtime":1613725942249,"results":"68","hashOfConfig":"54"},{"size":603,"mtime":1613714561299,"results":"69","hashOfConfig":"54"},{"size":1452,"mtime":1614077496032,"results":"70","hashOfConfig":"54"},{"size":187,"mtime":1613980006907,"results":"71","hashOfConfig":"54"},{"size":438,"mtime":1613980006907,"results":"72","hashOfConfig":"54"},{"size":316,"mtime":1614077475452,"results":"73","hashOfConfig":"54"},{"size":4459,"mtime":1614170642685,"results":"74","hashOfConfig":"54"},{"size":19162,"mtime":1614247434460,"results":"75","hashOfConfig":"54"},{"size":2853,"mtime":1614248081657,"results":"76","hashOfConfig":"54"},{"size":1339,"mtime":1614409681370,"results":"77","hashOfConfig":"54"},{"size":503,"mtime":1614409753503,"results":"78","hashOfConfig":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},"11gq97j",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"81"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"81"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"81"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"1au3gwh",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"112"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"112"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"112"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"112"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"112"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"112"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"/root/environment/inventory-management/client/src/index.js",[],["167","168"],"/root/environment/inventory-management/client/src/App.js",[],"/root/environment/inventory-management/client/src/store/reducer/reducerAuth.js",[],"/root/environment/inventory-management/client/src/store/action/actionAuth.js",[],"/root/environment/inventory-management/client/src/components/Invoice/Invoice.js",[],"/root/environment/inventory-management/client/src/components/Layout/Layout.js",[],"/root/environment/inventory-management/client/src/components/Home/Home.js",[],"/root/environment/inventory-management/client/src/components/DisplayData/DisplayData.js",["169","170","171","172","173","174","175","176","177","178"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { TesseractService } from \"../../services/TesseractService\";\nimport { calculateTableFields } from \"../../utils/filterData\";\nimport styles from \"./DisplayData.module.css\";\n\nconst DisplayData = (props) => {\n  const data = [\n    \"2 0 * CAS TCEPZ Deep Ind EggplntNaanPiza90z (12) 23.46 0.00\",\n    \"3 3 CAS ISMJT Deep Ind Smsa jlpnchse 36(5) 41.91 125.73\",\n    \"1 1 CAS DRM01 Deep Rea Soak&BoilKalaChana (12) 21.84 21.84\",\n    \"T 1 CAS 162 Deep Sna Papadi 12.30z (12) 44.01 44.01\",\n    \"Z 0 * CAS USB Deep Sou Sambhar 10oz. (12) 17-90 0.00\",\n    \"x Dp * CAS M27 Maharani Elayada 14.loz(12) 26.51 0.00\",\n    \"5 0 * CAS MLS Maharani Grated Coconutl4.1 (24) 50.26 0.00\",\n    \"1 1 CAS M2 Maharani Idiyappaml4.loz (12) 20.15 20.15\",\n    \"1 O:* CAS M3 Maharani Masala Dosa 14.10z(12) 21.24 0.00\",\n    \"T Q * CAS Mil Maharani Porotta Malbar12.3(30) 49.80 0.00\",\n    \"I 1 CAS M24 Maharani Veg. Cutlet 10.60z (12) 26.48 26.48\",\n    \"1 1 CAS ML17 Mirch Ma Aloo Puri 15.750z1{12) 20.88 20.88\",\n    \"z 1 CAS ML16 Mirch Ma Dal Puri 15.7502z{12) 20.88 20.388\",\n    \"I T CAS ML25 Mirch Ma WholeWheatRoti30pc (6) 34.52 34.52\",\n    \"2 0 *» CAS RCC Mirch Ma MM Chhole Chatpate (12) 15.63 0.00\",\n    \"1 0 * CAS SF06 Sujata F Methi Paratha 5P(24) 32.52 0.00\",\n    \"iT I CAS SF09 Sujata F Plain Paratha 24P(6) 27.24 27.24\",\n    \"iL x CAS SF12 Sujata F Tawa Chapati 30P{12) 47.04 47.04\",\n    \"2 0 * CAS TCST Tandoor 2 Chkn Samosa 7 ©z(l2) 41.33 0.00\",\n    \"2 0 * CAS TCC Tandoor “‘Chkrn Curry 100z. (12) 45.00 0.00\",\n    \"* Suggested retail $4.99 *\",\n    \"2 0 * CAS GIVMB Tandoor Veg.Msl.Burgerl0oz(12) 30.08 0.00\",\n    \"1 T CAS 24UID Udupi Fr F.P.Idli 24 Pcs(8) 33.20 33.20\",\n    \"1 T CAS IUMV Udupi Fr F.P.MenduVada 24pc (8) 37.34 37.34\",\n    \"* $5.99 Sticker *\",\n    \"X 0 * CAS UMD Udupi Fr Masala Dosa 4pc (12) 22.553 0.00\",\n    \"2 2 CAS UTT Udupi Fr Onion Uttapam 4pc (12) av 53 45.06\",\n    \"2 0 * CAS URM Udupi Fr OnionRavaMasalaDos (12) 22.55 0.00\",\n    \"2 0 * CAS UTR Udupi Fr Tamrind Rice 90z. (12) 18.67 0.00\",\n    \"5 5 CAS UP16 Upvas RajgaroWholel4.10z (20) 32.08 160.40\",\n    \"5 5 CAS F89 Upvas SingodaFlour28.20z (10) 25.48 127.40\",\n    \"3 0 * CAS UP1l Upvas Upvas Moraiyo 140z(20) 24.38 0.00\",\n    \"5 0 *. CAs UP12 Upvas Upvas Moraiyo 280z (10) 19.43 0.00\",\n    \"5 5 CAS UP13 Upvas UpvasMoraiyoFlrl4o(20) 21.63 108.15\",\n    \"5 0 * CAS UPl7 Upvas UpvasRajgaro28.20z(10) 19.43 0.00\",\n    \"5 0 * CAS UPl4 Upvas UpvasRajgaroFlrl4o(20) 21.63 0.00\",\n    \"5 0* CAS UPL5 Upvas UpvasRajgaroFlr28o(10) 18.88 0.00\",\n    \"Frozen----------------------[135]Bxs *wt= 2024 *$ 4742.15\",\n    \"1 0. * CAS 1238 Bansi Bhel PuriKitl4.1loz (16) 46.38 0.00\",\n    \"CONTINUED ON NEXT PAGE... (Total = $ 9,697.15)\",\n  ];\n  let emptyColumnList = [];\n  const [tableData, setTableData] = useState(null)\n  const [emptyColumn, setEmptyColumn] = useState([])\n  const [readData, setReadData] = useState(null)\n  const [description, setDescription] = useState([])\n  const tesseractService = new TesseractService();\n\n  const renderTableHeader = () => {\n    let header = [\n      \"Serial No.\",\n      \"Qty Shipped\",\n      \"ITEM NO\",\n      \"DESCRPTION\",\n      \"Units(Per item)\",\n      \"Unit Price\",\n      \"Extended Price\",\n      \"Mark up (%)\",\n      \"Selling Price\",\n    ];\n    return header.map((key, index) => {\n      return (\n        <th key={index}>\n          {key.toUpperCase()}\n          {key.includes(\"Mark\") ? (\n            <input\n              type=\"number\"\n              onChange={(e) => {\n                setMarkup(e.target.value);\n              }}\n            />\n          ) : null}\n        </th>\n      );\n    });\n  };\n\n  const renderTableData = () => {\n    if (tableData) {\n      let count = 0;\n      let rows = tableData.map((element, index) => {\n        let isEmpty =\n          element[0] == \"\" ||\n          element[1] == \"\" ||\n          element[3] == \"\" ||\n          element[4] == \"\" ||\n          description[index]?.Description === undefined\n        let isFree = element[0] != \"\" && element[4] == \"0.00\";\n        count++;\n        return (\n          <tr\n            key={index}\n            className={isEmpty ? styles.red : isFree ? styles.free : null}\n          >\n            <td>{count}</td>\n            <td className={isFree ? styles.element : null}>\n              <input\n                value={element[0]}\n                type=\"number\"\n                onChange={(e) => {\n                  handleChange(index, 0, e.target.value);\n                }}\n              />\n              <span className={styles.tooltip}>\n                The extended price for this is {element[4]} but quantity shipped\n                is {element[0]} is this a free item? Please eneter the unit\n                price manually.\n              </span>\n            </td>\n            <td>\n              <input\n                value={element[1]}\n                type=\"text\"\n                onChange={(e) => {\n                  handleChange(index, 1, e.target.value);\n                }}\n              />\n            </td>\n            <td>\n              {description[index]?.Description}\n            </td>\n            <td>{description[index]?.Quantity}</td>\n            <td>\n              <input\n                value={element[3]}\n                type=\"number\"\n                onChange={(e) => {\n                  handleChange(index, 3, e.target.value);\n                }}\n              />\n            </td>\n            <td>\n              <input\n                value={element[4]}\n                type=\"number\"\n                onChange={(e) => {\n                  handleChange(index, 4, e.target.value);\n                }}\n              />\n            </td>\n            <td>\n              <input\n                value={element[5]}\n                type=\"number\"\n                onChange={(e) => {\n                  handleChange(index, 5, e.target.value);\n                }}\n              />\n            </td>\n            <td>{element[6]}</td>\n          </tr>\n        );\n      });\n\n      return (\n        <>\n          <table className={styles.records}>\n            <tbody>\n              <tr>{renderTableHeader()}</tr>\n              {rows}\n            </tbody>\n          </table>\n          <button\n            type=\"submit\"\n            onClick={pushInventoryDetails}\n            className={styles.button}\n          >\n            Update Inventory\n          </button>\n        </>\n      );\n    } \n    return (\n      <h2>Fetching Data</h2>\n    );\n  };\n\n  const pushInventoryDetails = () => {\n      console.log(\"Pushing inventory\")\n  }\n\n  const handleChange = async (row, column, value) => {\n    let tempTableData = [...tableData];\n    tempTableData[row][column] = value;\n\n    if (\n      tempTableData[row][0] !== \"\" &&\n      tempTableData[row][1] !== \"\" &&\n      tempTableData[row][3] !== \"\" &&\n      tempTableData[row][3] !== \"\"\n    ) {\n      const index = emptyColumnList.indexOf(row);\n      if (index > -1) {\n        emptyColumnList.splice(index, 1);\n      }\n      setEmptyColumn(emptyColumnList)\n    }\n    if (column === 5 || column === 3) {\n      let cp = parseFloat(tempTableData[row][3]);\n      let markup = parseFloat(tempTableData[row][5]);\n      let sp = cp + (cp * markup) / 100;\n      sp = sp / tempTableData[row][7];\n      tempTableData[row][6] = isNaN(sp) ? 0 : sp.toFixed(2);\n    }\n    if (column === 1 ) {\n      const item = await tesseractService.GetProductDetails(value)\n      let productDetails = [...description]\n      productDetails[row] = item\n      setDescription(productDetails)\n    }\n    setTableData(tempTableData)\n  };\n\n  const setMarkup = (value) => {\n    let tempTableData = [...tableData];\n\n    for (let index = 0; index < tempTableData.length; index++) {\n      handleChange(index, 5, value);\n    }\n  };\n\n  useEffect(() => {\n    const  postImage = async() => {\n        const res = await tesseractService.PostImage(props.file);\n        setTableData(calculateTableFields(res));\n    }\n\n    const getDescription = async () => {\n      console.log(\"Here tabledata\", tableData);\n      const productDetails = await Promise.all(tableData.map(async (product) => {\n        try {\n          const item = await tesseractService.GetProductDetails(product[1])\n          // console.log(\"Gettting description for\", product[1], item)\n          return item\n        } catch (error) {\n          console.log(\"error fetching descripton\", error)\n          return null\n        }\n      }))\n      setDescription(productDetails);\n    }\n    if (!tableData) {\n      postImage()\n      // .then( res => getDescription())\n    } \n    if(description.length === 0  && tableData) {\n      getDescription()\n    }\n  },[readData, description, tableData]);\n\n  console.log(\"Item fetched\", tableData, description)\n  return (\n    <div>\n      {renderTableData()}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.userId,\n  };\n};\n\nexport default connect(mapStateToProps)(DisplayData);\n","/root/environment/inventory-management/client/src/components/Navigation/Toolbar/Toolbar.js",[],"/root/environment/inventory-management/client/src/services/TesseractService.js",[],"/root/environment/inventory-management/client/src/utils/filterData.js",["179","180","181","182","183","184","185","186","187","188","189","190","191","192","193"],"export const calculateTableFields = (data) => {\n  let itemArray = [\"CAS\", \"Deep\", \"BAG\", \"PK\", \"TRY\", \"CAs\"];\n  let filteredData = data\n    .filter((line) => itemArray.some((item) => line.text.includes(item)))\n    .filter((line) => line.text.includes(\"(\"))\n    .map((line) => line.text.trim());\n\n  let regExp = /[&\\/\\\\#,;?<>{}»«=§+$~%-'\"“:]/g;\n\n  let tableData = filteredData.map((data, index) => {\n    data = data.replaceAll(regExp, \".\");\n    data = data.replaceAll(\"..\", \"\");\n    data = data.replace(\"*\", \" \");\n    data = data.replaceAll(\"  \", \" \");\n    data = data.replaceAll(\"-\", \".\");\n\n    let digitOne = [\"i\", \"I\", \"l\", \"L\", \"T\", \"t\"];\n    let digitZero = [\"0\", \"O\", \"o\"];\n    let checkedIndex = 0;\n    /**first col */\n    let ly = [];\n    for (let i = checkedIndex; i < data.length; i++) {\n      if (\n        !isNaN(parseInt(data[i])) ||\n        i == 0 ||\n        digitZero.includes(data[i]) ||\n        digitOne.includes(data[i])\n      ) {\n        ly.push(data[i]);\n      } else if (data[i] == \" \") {\n        checkedIndex = i + 1;\n        break;\n      }\n    }\n\n    /**second col */\n    let qty = [];\n    for (let i = checkedIndex; i < data.length; i++) {\n      if (!isNaN(parseInt(data[i]))) {\n        qty.push(data[i]);\n      } else if (digitOne.includes(data[i])) {\n        qty.push(\"1\");\n      } else if (digitZero.includes(data[i])) {\n        qty.push(\"0\");\n      } else {\n        checkedIndex = i + 1;\n        break;\n      }\n    }\n    qty = qty.join(\"\").replaceAll(\" \", \"\");\n\n    /**filter dots */\n    let dotCount = [];\n    for (let i = checkedIndex; i < data.length; i++) {\n      if (data[i] == \".\" || data[i + 1] == \".\") {\n        dotCount.push(data[i]);\n      } else if (data[i] == \" \") {\n        checkedIndex = i + 1;\n        break;\n      } else {\n        checkedIndex = i;\n        break;\n      }\n    }\n\n    /**Filter space  & itemNO*/\n    let spaceCount = 0;\n    let itemNo = [];\n    for (let i = checkedIndex; i < data.length; i++) {\n      if (data[i] === \" \" && spaceCount === 1) {\n        checkedIndex = i;\n        break;\n      } else if (data[i] == \"*\") {\n        continue;\n      } else {\n        itemNo.push(data[i]);\n        if (data[i] === \" \") {\n          spaceCount++;\n        }\n      }\n    }\n    itemNo = itemNo.join(\"\").trim().replaceAll(\".\", \"\");\n\n    /**\n     * third col & pieces count\n     */\n    let description = [];\n    let pieces = [];\n    let flag2 = false;\n    for (let i = checkedIndex; i < data.length; i++) {\n      if (flag2) {\n        pieces.push(data[i]);\n      }\n      if (data[i] == \")\") {\n        description.push(data[i]);\n        checkedIndex = i + 2;\n        break;\n      } else {\n        if (data[i] == \"(\") {\n          flag2 = true;\n        }\n        description.push(data[i]);\n      }\n    }\n    description = description.join(\"\").trim();\n    pieces = parseInt(pieces.join(\"\").trim().replaceAll(\")\", \"\"));\n\n    /**unit price(4th col) */\n    let unitPrice = [];\n    for (let i = checkedIndex; i < data.length; i++) {\n      unitPrice.push(data[i]);\n      if (data[i] == \".\") {\n        unitPrice.push(data[i + 1]);\n        unitPrice.push(data[i + 2]);\n        checkedIndex = i + 3;\n        break;\n      }\n    }\n    unitPrice = unitPrice.join(\"\").replaceAll(\" \", \"\");\n\n    /**extended price(5th col) */\n    // let extendedPrice = [];\n    // for (let i = checkedIndex; i < data.length; i++) {\n    //   extendedPrice.push(data[i]);\n    //   if (data[i] == \".\") {\n    //     extendedPrice.push(data[i + 1]);\n    //     extendedPrice.push(data[i + 2]);\n    //     checkedIndex = i;\n    //     break;\n    //   }\n    // }\n    var extendedPrice = data.split(\" \").splice(-1)[0]\n    // extendedPrice = extendedPrice\n    //   .join(\"\")\n    //   .replaceAll(\" \", \"\")\n    //   .replaceAll(\",\", \".\")\n    //   .replaceAll(\"%\", \"\")\n    //   .replaceAll(\"..\", \".\");\n\n    if (unitPrice[unitPrice.length - 1] == \".\") {\n      console.log(\"enter if in unit price\");\n      unitPrice = unitPrice + \"00\";\n    }\n\n    /** set quantity 0 for not shipped items. */\n    if (qty == \"\" && extendedPrice == \"0.00\") {\n      qty = \"0\";\n    }\n\n    if (extendedPrice == \"0.00\" && qty == \"0\") {\n      // initialData.push(index);\n      return null;\n    }\n\n    return [\n      qty,\n      itemNo,\n      description,\n      unitPrice,\n      extendedPrice,\n      0,\n      (unitPrice / pieces).toFixed(2),\n      pieces,\n    ];\n  });\n  return tableData.filter((data) => data !== null);\n};\n","/root/environment/inventory-management/client/src/components/Navigation/NavigationItems/NavigationItems.js",["194"],"import React, { useEffect, useState } from 'react'\n\nimport styles from './NavigationItems.module.css'\nimport NavigationItem from './NavigationItem/NavigationItem'\n\nconst NavigationItems = (props) => {\n    const [user, setUser] = useState(props.isAuth)\n    useEffect(() => {\n        setUser(props.isAuth)\n       console.log(\"User\", user)\n    }, [user])\n    return (\n        <ul className = {styles.NavigationItems}>\n            <NavigationItem link = '/' exact>\n                Home\n            </NavigationItem>\n            {props.isAuth ? \n                <NavigationItem link = \"/invoice\">\n                    Scan Invoice\n                </NavigationItem> \n            :null}\n        </ul>\n)};\n\nexport default NavigationItems;","/root/environment/inventory-management/client/src/components/Navigation/NavigationItems/NavigationItem/NavigationItem.js",[],["195","196"],"/home/alekh/Workspace/Tech/inventory-management/client/src/index.js",[],["197","198"],"/home/alekh/Workspace/Tech/inventory-management/client/src/store/reducer/reducerAuth.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/App.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/store/action/actionAuth.js",["199","200"],"import axios from 'axios'\nimport firebase from \"../../firebase\"\nimport { LoginService } from \"../../services/LoginService\"\n\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\nexport const AUTH_FAIL = 'AUTH_FAIL'\nexport const AUTH_START = 'AUTH_START'\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\n\n const authSuccess = (token, userId) => {\n    return {\n        type: AUTH_SUCCESS,\n        token: token,\n        userId: userId\n    }\n}\n const authFail = (error) => {\n    return {\n        type: AUTH_FAIL,\n        error: error\n    }\n}\n\nconst authStart = () => {\n    return {\n        type: AUTH_START\n    }\n}\nexport const authLogout = () => {\n    localStorage.removeItem('token')\n    localStorage.removeItem('expirationDate')\n    localStorage.removeItem('userId')\n    return {\n        type: AUTH_LOGOUT\n    }\n}\nexport const logout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(authLogout());\n        }, expirationTime * 1000);\n    };\n};\nexport const auth = (email, password ) => {\n    return dispatch => {\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        }\n        const loginService = new LoginService();\n\n        // const url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDmK-zcj0LVrrQKbAfflUa-Hi_kRT4-ZWM\";\n        dispatch(authStart())\n        // axios.post(url, authData)\n        // .then(response => {\n        //     console.log(response.data)\n            // const expirationDate = new Date(new Date().getTime + 3600 * 1000)\n            // localStorage.setItem('token', response.data.idToken)\n            // localStorage.setItem('expirationDate', expirationDate)\n            // localStorage.setItem('userId', response.data.localId)\n            // dispatch(authSuccess(response.data.idToken, response.data.localId))\n            // dispatch(logout(response.data.expiresIn))\n        // })\n        // .catch(err => {\n        //     console.log(err.response.data.error.message)\n        //     dispatch(authFail(err.response.data.error.message))\n        // })\n        firebase.auth().signInWithEmailAndPassword(email, password)\n            .then((response) => {\n                const token = response[\"user\"][\"za\"];\n                const uid = response[\"user\"][\"uid\"];\n                console.log(response);\n                const expirationDate = new Date(new Date().getTime + 3600 * 1000);\n                localStorage.setItem(\"token\", token);\n                localStorage.setItem(\"expirationDate\", expirationDate);\n                localStorage.setItem(\"userId\", uid);\n                dispatch(authSuccess(token, uid));\n                dispatch(logout(3600));\n                loginService.authenticate(uid)\n                    .then(res => console.log('auth from server',res))\n                    .catch(err => console.log('err on auth', err))\n            })\n            .catch((err) => {\n                console.log('err during login',err.message);\n                dispatch(authFail(err.message));\n            })\n    }\n}\n\nexport const checkAuthentication = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        if(!token) {\n            dispatch(authLogout())\n        }\n        else {\n            const expirationDate  = new Date(localStorage.getItem('expirationDate'))\n            if(expirationDate < new Date()) {\n                dispatch(authLogout())\n            }\n            else {\n                dispatch(authSuccess(token, localStorage.getItem('userId')))\n                // dispatch(logout((expirationDate.getTime() - new Date().getTime()) / 1000 ));\n            } \n        }\n    }\n}","/home/alekh/Workspace/Tech/inventory-management/client/src/components/Layout/Layout.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/components/Invoice/Invoice.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/services/TesseractService.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/components/Navigation/Toolbar/Toolbar.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/components/DisplayData/DisplayData.js",["201","202","203","204"],"/home/alekh/Workspace/Tech/inventory-management/client/src/components/Navigation/NavigationItems/NavigationItems.js",["205"],"import React, { useEffect, useState } from 'react'\n\nimport styles from './NavigationItems.module.css'\nimport NavigationItem from './NavigationItem/NavigationItem'\nimport CwIcon from \"../../../Images/CwIcon.png\"\n\nconst NavigationItems = (props) => {\n    const [user, setUser] = useState(props.isAuth)\n    useEffect(() => {\n        setUser(props.isAuth)\n        console.log(\"User\", user)\n    }, [user])\n    return (\n        <ul className={styles.NavigationItems}>\n            <img className={styles.logo}  src={CwIcon} alt=\"\"/>\n            {props.isAuth ? <NavigationItem link = \"/logout\">Logout</NavigationItem> :null}\n        </ul>\n    )\n};\n\nexport default NavigationItems;","/home/alekh/Workspace/Tech/inventory-management/client/src/utils/filterData.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/components/Navigation/NavigationItems/NavigationItem/NavigationItem.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/containers/Auth/Logout/Logout.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/UI/Spinner/Spinner.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/containers/Auth/Auth.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/firebase.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/UI/LoginPage.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/services/LoginService.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/services/axios.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/UI/Button.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/components/Update/UpdateInventory.js",["206"],"import React, { useEffect, useState } from 'react'\nimport { Redirect } from 'react-router';\nimport firebase from \"../../firebase\";\nimport Button from '../../UI/Button';\nimport Spinner from '../../UI/Spinner/Spinner';\n\nconst UpdateInventory = ({newInventoryData, header}) => {\n    const [inventory, setInventory] = useState([])\n    const [redirect, setRedirect] = useState(false)\n    const [loader, setLoader] = useState(true)\n    const getInventoryData = () => {\n        const ref = firebase.database().ref(\"/test\");\n        ref.on(\"value\", (snapshot) => {\n            console.log(snapshot.val());\n            if (snapshot.val()) {\n                const data = Object.values(snapshot.val());\n                setInventory(data)\n                setLoader(false)\n            }\n        });\n    }\n    const renderTableHeader = () => {\n      return header.map((key, index) => {\n        return (\n          <th key={index}>\n            {key.toUpperCase()}\n          </th>\n        );\n      });\n    };\n    const renderTableData = () => {\n        let rows = newInventoryData.map((element, index) => {\n          return (\n            <tr key={index}>\n              <td>{index + 1}</td>\n              <td>{element.qty}</td>\n              <td>{element.itemNo}</td>\n              <td>{element.description}</td>\n              <td>{element.pieces}</td>\n              <td>{element.unitPrice}</td>\n              <td>{element.extendedPrice}</td>\n              <td>{element.markup}</td>\n              <td>{element.sp}</td>\n            </tr>\n          );\n        });\n        return (\n          <div >\n            <table className=\"table table-hover table-responsive-sm\">\n              <tbody>\n                <tr>{renderTableHeader()}</tr>\n                {rows}\n              </tbody>\n            </table>\n            <Button\n              text=\"Confirm Submit\"\n              color=\"btn btn-info\"\n              type=\"submit\"\n              onClick={pushInventoryDetails}\n            />\n          </div>\n        );\n    };\n    /**Incomplete push inventory function*/\n    const pushInventoryDetails = async () => {\n        setLoader(true)\n        let data = newInventoryData.map((element) => {\n          return {\n            item: element.itemNo,\n            qty: parseInt(element.qty),\n            cp: element.unitPrice,\n            markup: element.markup,\n            sp: element.sp,\n          };\n        });\n\n        data = [...data, ...inventory];\n        console.log(\"Before\", data.length);\n\n        var duplicates = {};\n        for (var i = 0; i < data.length; i++) {\n          if (duplicates.hasOwnProperty(data[i].item)) {\n            duplicates[data[i].item].push(i);\n          } else if (data.lastIndexOf(data[i].item) !== i) {\n            duplicates[data[i].item] = [i];\n          }\n        }\n        // console.log(\"duplicates\", duplicates)\n        let tempData = Object.values(duplicates).filter(\n          (ele) => ele.length > 1\n        );\n        // let indices = tempData.map(ele => ...ele)\n        if (tempData.length > 0) {\n          tempData.forEach((index) => {\n            let temp = 0;\n            index.forEach((val) => {\n              if (data[val]) {\n                console.log(\"data[val]\", data[val]);\n                temp += data[val].qty;\n                if (temp - data[val].qty !== 0) {\n                  data[val] = null;\n                }\n              }\n            });\n            data[index[0]].qty = temp;\n          });\n        }\n        data = data.filter((ele) => ele !== null);\n        console.log(\"All Data\", data);\n\n        const success = await updateData(data)\n        setLoader(false)\n        if (success) {\n          \n          window.alert(\"Inventory updated successfully\");\n          setRedirect(true)\n        } else {\n          window.alert(\"Inventory not updated\");\n        }\n      \n    };\n\n    const updateData = async (data) => {\n        try {\n            await data.map((item) => {\n                firebase\n                  .database()\n                  .ref(\"/test\")\n                  .child(`${item.item}`)\n                  .set(item);\n                });\n            return true;\n        } catch (error) {\n            return false;\n        }\n    };\n\n    useEffect(() => {\n      getInventoryData()\n    }, [])\n\n    if (redirect) {\n      return  <Redirect to=\"/\" />;\n    }\n    if (loader) {\n      return <Spinner />\n    }\n    return (\n      <div>\n        {renderTableData()}\n      </div>\n    );\n}\n\nexport default UpdateInventory\n","/home/alekh/Workspace/Tech/inventory-management/client/src/utils/invoice-filters/chetak.js",["207","208","209"],"const data = [\n  {\n    1: \"ORDER DT \",\n    2: \"CUST \",\n    3: \"NO. \",\n    4: \"P.O. NO. \",\n    5: \"SHIP VIA \",\n    6: \"DATE SHIPPED \",\n    7: \"TERMS \",\n  },\n  {\n    1: \"10/08/2020 \",\n    2: \"NY246 \",\n    3: \"\",\n    4: \"\",\n    5: \"PK#934671 Driver \",\n    6: \"10/09/2020 \",\n    7: \"Bill to Bill/Net 30 \",\n  },\n  {\n    1: \"QTY. ORDERED \",\n    2: \"QTY. SHIPPED \",\n    3: \"ITEM \",\n    4: \"NO. \",\n    5: \"DESCRIPTION \",\n    6: \"UNIT PRICE \",\n    7: \"EXTENDED PRICE \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"61 \",\n    4: \"Deep Sna \",\n    5: \"Sev Thin 12 OZ (12) \",\n    6: \"30.09 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"DTB14 \",\n    4: \"Deep Sna \",\n    5: \"Total Bhel FP 14oz (12) \",\n    6: \"32.51 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"S18 \",\n    4: \"Deep Spi \",\n    5: \"Cor-Cumin Pwd 14oz (20) \",\n    6: \"44.19 \",\n    7: \"44.19 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"S14 \",\n    4: \"Deep Spi \",\n    5: \"Corianderpdr14oz (20) \",\n    6: \"30.99 \",\n    7: \"30.99 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"S16 \",\n    4: \"Deep Spi \",\n    5: \"Cumin Pwd 14oz (20) \",\n    6: \"52.99 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"S15 \",\n    4: \"Deep Spi \",\n    5: \"Cumin Seeds 14oz (20) \",\n    6: \"49.79 \",\n    7: \"49.79 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"S81 \",\n    4: \"Deep Spi \",\n    5: \"Dill Seeds 7 OZ (20) \",\n    6: \"19.89 \",\n    7: \"19.89 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"S25 \",\n    4: \"Deep Spi \",\n    5: \"Garam Masala 14 OZ (20) \",\n    6: \"66.20 \",\n    7: \"66.20 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"S167 \",\n    4: \"Deep Spi \",\n    5: \"KSHMIRIChiliPD14oz (20) \",\n    6: \"55.18 \",\n    7: \"55.18 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"S73 \",\n    4: \"Deep Spi \",\n    5: \"Methi Bhardo 7 OZ (20) \",\n    6: \"24.29 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"S32 \",\n    4: \"Deep Spi \",\n    5: \"Red Chili Crush7oz (20) \",\n    6: \"27.69 \",\n    7: \"27.69 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"S30 \",\n    4: \"Deep Spi \",\n    5: \"Red Chili X Hot7oz (20) \",\n    6: \"19.89 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"S78 \",\n    4: \"Deep Spi \",\n    5: \"Sesame Sds Wshd7oz (20) \",\n    6: \"22.09 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"S80 \",\n    4: \"Deep Spi \",\n    5: \"SesameSeedsNatr. 70(20) \",\n    6: \"19.89 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"S64 \",\n    4: \"Deep Spi \",\n    5: \"Whole Chilli 3.5oz (30) \",\n    6: \"24.98 \",\n    7: \"24.98 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"BAG \",\n    3: \"CW1 \",\n    4: \"Generic \",\n    5: \"DrywholeCoconut22L(1) \",\n    6: \"75.02 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"T53 \",\n    4: \"Horlicks \",\n    5: \"Horlicks Plain17. (24) \",\n    6: \"105.81 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"T53L \",\n    4: \"Horlicks \",\n    5: \"Horlicks Plain2.: (12) \",\n    6: \"99.26 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"T66 \",\n    4: \"Horlicks \",\n    5: \"HorlicksChoco.17.5 (24) \",\n    6: \"113.78 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"55M \",\n    4: \"Mirch Ma \",\n    5: \"AgraDalMooth 12oz (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"54M \",\n    4: \"Mirch Ma \",\n    5: \"Aloo Bhujia 12 oz. (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"20M \",\n    4: \"Mirch Ma \",\n    5: \"Bhadran Moong 12oz (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"31M \",\n    4: \"Mirch Ma \",\n    5: \"Bombay Bh-Puril2oz (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"13M \",\n    4: \"Mirch Ma \",\n    5: \"Boondi- - MM 12oz (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"29M \",\n    4: \"Mirch Ma \",\n    5: \"Channa-MN 12oz(15) \",\n    6: \"26.36 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"28M \",\n    4: \"Mirch Ma \",\n    5: \"Channadal-MM 12oz (15) \",\n    6: \"25.31 \",\n    7: \"25.31 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"12M \",\n    4: \"Mirch Ma \",\n    5: \"Chevda Mix-MM - 12oz (15) \",\n    6: \"25.31 \",\n    7: \"25.31 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"26M \",\n    4: \"Mirch Ma \",\n    5: \"Chuckry-Stcksmm12o - (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"27M \",\n    4: \"Mirch Ma \",\n    5: \"Corn Chvda-MM 12oz (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"19M \",\n    4: \"Mirch Ma \",\n    5: \"Dal Muth 12oz (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"15M \",\n    4: \"Mirch Ma \",\n    5: \"Ganthiya-MM 12oz (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"21M \",\n    4: \"Mirch Ma \",\n    5: \"GreenVatana- - MM12oz (15) \",\n    6: \"26.36 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"2 0 * \",\n    2: \"CAS \",\n    3: \"59M \",\n    4: \"Mirch Ma \",\n    5: \"Khatta Mitha 12oz (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"32M \",\n    4: \"Mirch Ma \",\n    5: \"Madras Mix 12oz (15) \",\n    6: \"26.36 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"73M \",\n    4: \"Mirch Ma \",\n    5: \"Methi Puri 12oz (15) \",\n    6: \"25.32 \",\n    7: \"25.32 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"22M \",\n    4: \"Mirch Ma \",\n    5: \"Moong Dal-MM - 12oz (15) \",\n    6: \"25.31 \",\n    7: \"25.31 \",\n  },\n  {\n    1: \"2 2 \",\n    2: \"CAS \",\n    3: \"78M \",\n    4: \"Mirch Ma \",\n    5: \"Nylon Thin Sev24oz (12) \",\n    6: \"29.10 \",\n    7: \"58.20 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"14M \",\n    4: \"Mirch Ma \",\n    5: \"Papadi - MM 12oz (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"57M \",\n    4: \"Mirch Ma \",\n    5: \"Peanut Bhujia 12oz (15) \",\n    6: \"26.36 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"\",\n    2: \"* \",\n    3: \"Price \",\n    4: \"increase \",\n    5: \"till May 2020 * \",\n    6: \"\",\n    7: \"\",\n  },\n];\n\nexport const chetak = (data) => {\n \n  let filteredData = data.map((line) => Object.values(line).join(\"\").trim());\n\n  let tableData = filteredData.map((row, index) => {\n    // console.log(\"Data received in row\", row)\n    row = row.replaceAll(\"* \", \"\")\n    const extendedPrice = row.split(\" \").splice(-1)[0];\n    const unitPrice = row.split(\" \").splice(-2)[0];\n    // var pcs = row.split(\" \").splice(-3)[0];\n    // var qtyOredered = row.split(\" \").splice(0)[0];\n    const qty = row.split(\" \").splice(1)[0];\n    const description = row.split(\" \").splice(4).slice(0, -2).join(\" \");\n    const itemNo = row.split(\" \").splice(2).slice(0, 2).join(\" \");\n    const pieces = 0\n    const markup = 0\n    if (isNaN(extendedPrice) || isNaN(unitPrice)) {\n      return null;\n    }\n    if (extendedPrice == \"0.00\" && qty == \"0\") {\n      return null;\n    }\n    return {\n      qty,\n      itemNo,\n      description,\n      pieces,\n      unitPrice,\n      extendedPrice,\n      markup,\n    };\n  });\n  console.table(tableData)\n  return tableData.filter((data) => data !== null);\n};\n/**\n * onChange={(event, newValue) => {\n                  // console.log(\"Selected Value\", newValue)\n                  if (newValue) {\n                    // element[1] = newValue\n                    // // let itemDescription = [...itemNoDescription]\n                    // // itemDescription[index] = productDetails[newValue].Description\n                    // // setItemNoDescription(itemDescription);\n                    // // console.log(\"Old value\", itemDescription,);\n                    // let tempTableData = [...tableData];\n                    handleChange(index, 1, newValue);\n                  }\n */\n/**scan.jpg\n * 1: {1: \"\", 2: \"ORDER DT \", 3: \"CUST \", 4: \"NO. \", 5: \"P.O. \", 6: \"NO. \", 7: \"SHIP VIA \", 8: \"DATE SHIPPED \", 9: \"TERMS \"}\n2: {1: \"\", 2: \"10/08/2020 \", 3: \"NY246 \", 4: \"\", 5: \"\", 6: \"\", 7: \"PK#934671- Driver \", 8: \"10/09/2020 \", 9: \"Bill to Bill/Net 30 \"}\n3: {1: \"\", 2: \"QTY. ORDERED \", 3: \"QTY. SHIPPED \", 4: \"ITEM \", 5: \"NO. \", 6: \"\", 7: \"DESCRIPTION \", 8: \"UNIT PRICE \", 9: \"EXTENDED PRICE \"}\n4: {1: \"2 \", 2: \"0 * \", 3: \"CAS \", 4: \"HSMJ \", 5: \"Deep \", 6: \"Fro \", 7: \"8JlpnoChsSmsa7oz (12) \", 8: \"27.77 \", 9: \"0.00 \"}\n5: {1: \"2 \", 2: \"0 * \", 3: \"CAS \", 4: \"EBM \", 5: \"Deep \", 6: \"Fro \", 7: \"Bhindi Masala 10oz (12) \", 8: \"26.49 \", 9: \"0.00 \"}\n6: {1: \"\", 2: \"\", 3: \"* \", 4: \"Price \", 5: \"reduction \", 6: \"\", 7: \"from $2.55 to $2.21 * \", 8: \"\", 9: \"\"}\n7: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"ECH \", 5: \"Deep \", 6: \"Fro \", 7: \"Chhole 10oz (12) \", 8: \"26.49 \", 9: \"26.49 \"}\n8: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"HVSI \", 5: \"Deep \", 6: \"Fro \", 7: \"Cktl.SpringRoll35P (24) \", 8: \"67.13 \", 9: \"67.13 \"}\n9: {1: \"\", 2: \"\", 3: \"* \", 4: \"$3.99 \", 5: \"Sticker \", 6: \"* \", 7: \"\", 8: \"\", 9: \"\"}\n10: {1: \"5 \", 2: \"5 \", 3: \"CAS \", 4: \"I5P \", 5: \"Deep \", 6: \"Fro \", 7: \"CktlPotatoSmsasopc( (24) \", 8: \"52.74 \", 9: \"263.70 \"}\n11: {1: \"2 \", 2: \"2 \", 3: \"CAS \", 4: \"SDK \", 5: \"Deep \", 6: \"Fro \", 7: \"Dal Makhani 10 oz. (12) \", 8: \"18.68 \", 9: \"37.36 \"}\n12: {1: \"2 \", 2: \"2 \", 3: \"CAS \", 4: \"BR27 \", 5: \"Deep \", 6: \"Fro \", 7: \"DeepChoralFafda7oz (24) \", 8: \"28.91 \", 9: \"57.82 \"}\n13: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"BR27 \", 5: \"Deep \", 6: \"Fro \", 7: \"DeepChoralFafda7oz (24) \", 8: \"28.91 \", 9: \"0.00 \"}\n14: {1: \"\", 2: \"\", 3: \"* \", 4: \"\", 5: \"Free! \", 6: \"\", 7: \"\", 8: \"\", 9: \"\"}\n15: {1: \"5 \", 2: \"5 \", 3: \"CAS \", 4: \"JPS \", 5: \"Deep \", 6: \"Fro \", 7: \"Jumbo Punjbi 8pc (8) \", 8: \"33.44 \", 9: \"167.20 \"}\n16: {1: \"15 \", 2: \"15 \", 3: \"CAS \", 4: \"IJPS \", 5: \"Deep \", 6: \"Fro \", 7: \"Jumbo Samosa 15pc (4) \", 8: \"26.77 \", 9: \"401.55 \"}\n17: {1: \"2 \", 2: \"2 \", 3: \"CAS \", 4: \"EMK \", 5: \"Deep \", 6: \"Fro \", 7: \"Malai Kofta 10oz (12) \", 8: \"41.36 \", 9: \"82.72 \"}\n18: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"EMP \", 5: \"Deep \", 6: \"Fro \", 7: \"Mutter Paneer 10oz (12) \", 8: \"34.17 \", 9: \"34.17 \"}\n19: {1: \"1 \", 2: \"0 * \", 3: \"CAS \", 4: \"DF13 \", 5: \"Deep \", 6: \"Fro \", 7: \"Onion Pakora 10oz (24) \", 8: \"42.15 \", 9: \"0.00 \"}\n20: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"EPM \", 5: \"Deep \", 6: \"Fro \", 7: \"Paneer MakhanilOoz (12) \", 8: \"30.99 \", 9: \"30.99 \"}\n21: {1: \"2 \", 2: \"2 \", 3: \"CAS \", 4: \"ISMVT \", 5: \"Deep \", 6: \"Fro \", 7: \"Prty Smsa Veg 36pc (5) \", 8: \"44.11 \", 9: \"88.22 \"}\n22: {1: \"1 \", 2: \"0 * \", 3: \"CAS \", 4: \"DF12 \", 5: \"Deep \", 6: \"Fro \", 7: \"Spinach PakoralOoz (24) \", 8: \"42.15 \", 9: \"0.00 \"}\n23: {1: \"2 \", 2: \"0 * \", 3: \"CAS \", 4: \"EUN \", 5: \"Deep \", 6: \"Fro \", 7: \"Undhiu 10 OZ. (12) \", 8: \"26.49 \", 9: \"0.00 \"}\n24: {1: \"2 \", 2: \"0 * \", 3: \"CAS \", 4: \"VMB16 \", 5: \"Deep \", 6: \"Fro \", 7: \"Veg MasalaBurgerFP (8) \", 8: \"67.96 \", 9: \"0.00 \"}\n25: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"DIQ35 \", 5: \"Deep \", 6: \"IQF \", 7: \"Arvi 120z (24) \", 8: \"30.90 \", 9: \"30.90 \"}\n26: {1: \"3 \", 2: \"0 * \", 3: \"CAS \", 4: \"DIQ11 \", 5: \"Deep \", 6: \"IQF \", 7: \"Baby Bhindi 12oz (24) \", 8: \"26.58 \", 9: \"0.00 \"}\n27: {1: \"3 \", 2: \"0 * \", 3: \"CAS \", 4: \"DIQ12 \", 5: \"Deep \", 6: \"IQF \", 7: \"Bhindi Cut 12oz (24) \", 8: \"27.90 \", 9: \"0.00 \"}\n28: {1: \"1 \", 2: \"0 * \", 3: \"CAS \", 4: \"DIQ36 \", 5: \"Deep \", 6: \"IQF \", 7: \"Chauri 12Oz (24) \", 8: \"31.86 \", 9: \"0.00 \"}\n29: {1: \"1 \", 2: \"0 * \", 3: \"CAS \", 4: \"DIQ13 \", 5: \"Deep \", 6: \"IQF \", 7: \"Chikoo Slices12oz (24) \", 8: \"37.86 \", 9: \"0.00 \"}\n30: {1: \"2 \", 2: \"2 \", 3: \"CAS \", 4: \"DIQ77 \", 5: \"Deep \", 6: \"IQF \", 7: \"Coconut Slices12Oz (24) \", 8: \"46.38 \", 9: \"92.76 \"}\n31: {1: \"2 \", 2: \"2 \", 3: \"CAS \", 4: \"DIQ14 \", 5: \"Deep \", 6: \"IQF \", 7: \"Drumsticks 120z (24) \", 8: \"29.22 \", 9: \"58.44 \"}\n32: {1: \"3 \", 2: \"0 * \", 3: \"CAS \", 4: \"DIQ99 \", 5: \"Deep \", 6: \"IQF \", 7: \"Fro.Mango Pulp14. 1 (24) \", 8: \"40.54 \", 9: \"0.00 \"}\n33: {1: \"3 \", 2: \"3 \", 3: \"CAS \", 4: \"DIQ63 \", 5: \"Deep \", 6: \"IQF \", 7: \"Green Peas 21b (12) \", 8: \"31.92 \", 9: \"95.76 \"}\n34: {1: \"3 \", 2: \"3 \", 3: \"CAS \", 4: \"DIQ62 \", 5: \"Deep \", 6: \"IQF \", 7: \"Green Peas 3. 851b (6) \", 8: \"28.17 \", 9: \"84.51 \"}\n35: {1: \"3 \", 2: \"0 * \", 3: \"CAS \", 4: \"DIQ98 \", 5: \"Deep \", 6: \"IQF \", 7: \"GreenMangol2oz (24) \", 8: \"35.83 \", 9: \"0.00 \"}\n36: {1: \"3 \", 2: \"0 * \", 3: \"CAS \", 4: \"DIQ97 \", 5: \"Deep \", 6: \"IQF \", 7: \"Mango Pulp 30oz (12) \", 8: \"41.14 \", 9: \"0.00 \"}\n37: {1: \"3 \", 2: \"0 * \", 3: \"CAS \", 4: \"DIQ96 \", 5: \"Deep \", 6: \"IQF \", 7: \"Mango Slices 12oz (24) \", 8: \"58.25 \", 9: \"0.00 \"}\n38: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"DIQ72 \", 5: \"Deep \", 6: \"IQF \", 7: \"Methi Chopped 10oz (24) \", 8: \"41.09 \", 9: \"41.09 \"}\n39: {1: \"2 \", 2: \"2 \", 3: \"CAS \", 4: \"DIQ67 \", 5: \"Deep \", 6: \"IQF \", 7: \"Peas & Carrot 21b (12) \", 8: \"27.74 \", 9: \"55.48 \"}\n40: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"DIQ24 \", 5: \"Deep \", 6: \"IQF \", 7: \"Punjabi Tinda12oz (24) \", 8: \"29.22 \", 9: \"29.22 \"}\n41: {1: \"10 \", 2: \"10 \", 3: \"CAS \", 4: \"DIQ42 \", 5: \"Deep \", 6: \"IQF \", 7: \"ShreddedCoconut12o (24) \", 8: \"43.74 \", 9: \"437.40 \"}\n42: {1: \"10 \", 2: \"0 * \", 3: \"CAS \", 4: \"DIQ41 \", 5: \"Deep \", 6: \"IQF \", 7: \"Shreddedcoconut240( (12) \", 8: \"43.21 \", 9: \"0.00 \"}\n43: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"DIQ27 \", 5: \"Deep \", 6: \"IQF \", 7: \"Suran 120z (24) \", 8: \"26.58 \", 9: \"26.58 \"}\n */\n\n /**scan 7\n  * 1: {1: \"1 \", 2: \"1 \", 3: \"CAS DDL2 Deep Dai Dahi Lowfat 21b (8) \", 4: \"17.36 \", 5: \"17.36 \"}\n2: {1: \"1 \", 2: \"1 \", 3: \"CAS DDL5 Deep Dai Dahi Lowfat 51b (6) \", 4: \"30.66 \", 5: \"30.66 \"}\n3: {1: \"1 \", 2: \"1 \", 3: \"CAS DDL5 Deep Dai Dahi Lowfat 51b (6) \", 4: \"30.66 \", 5: \"0.00 \"}\n4: {1: \"\", 2: \"\", 3: \"* *** Free! \", 4: \"\", 5: \"\"}\n5: {1: \"1 \", 2: \"1 \", 3: \"CAS DDW2 Deep Dai Dahi Whl milk 21b (8) \", 4: \"17.36 \", 5: \"17.36 \"}\n6: {1: \"5 \", 2: \"5 \", 3: \"CAS DDW5 Deep Dai Dahi Whlemlk 51b (6) \", 4: \"30.66 \", 5: \"153.30 \"}\n7: {1: \"1 \", 2: \"1 \", 3: \"CAS DB21 Deep Dai Raw Paneer 12oz. (20) \", 4: \"63.95 \", 5: \"63.95 \"}\n8: {1: \"\", 2: \"\", 3: \"* Suggested Retail Price $3.49 * \", 4: \"\", 5: \"\"}\n9: {1: \"1 \", 2: \"1 \", 3: \"CAS DB22 Deep Dai Raw Paneer 2.5 lbs (10) \", 4: \"104.75 \", 5: \"104.75 \"}\n10: {1: \"\", 2: \"Refrigerated \", 3: \"[11] Bxs *wt= 282 \", 4: \"$387.38 \", 5: \"\"}\n  */\n /** scan 2\n  * 1: {1: \"\", 2: \"ORDER DT \", 3: \"CUST \", 4: \"NO. \", 5: \"P.O. NO. \", 6: \"SHIP VIA \", 7: \"DATE SHIPPED \", 8: \"TERMS \"}\n2: {1: \"\", 2: \"10/08/2020 \", 3: \"NY246 \", 4: \"\", 5: \"\", 6: \"PK#934671- Driver \", 7: \"10/09/2020 \", 8: \"Bill to Bill/Net 30 \"}\n3: {1: \"\", 2: \"QTY. ORDERED \", 3: \"QTY. SHIPPED \", 4: \"ITEM \", 5: \"NO. \", 6: \"DESCRIPTION \", 7: \"UNIT PRICE \", 8: \"EXTENDED PRICE \"}\n4: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"K36 \", 5: \"Bansi \", 6: \"Kolh Jaggery 10Lb (4) \", 7: \"24.60 \", 8: \"24.60 \"}\n5: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"P18 \", 5: \"Bansi \", 6: \"Kurmura Ladoo3. 5oz (50) \", 7: \"36.11 \", 8: \"36.11 \"}\n6: {1: \"3 \", 2: \"3 \", 3: \"CAS \", 4: \"MH1 \", 5: \"Bansi \", 6: \"Phool Makhana 7oz (20) \", 7: \"72.69 \", 8: \"218.07 \"}\n7: {1: \"1 \", 2: \"0 * \", 3: \"CAS \", 4: \"G144L \", 5: \"Bansi \", 6: \"Poha Thick 4lb (10) \", 7: \"34.50 \", 8: \"0.00 \"}\n8: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"G53 \", 5: \"Bansi \", 6: \"Rst.Gulabichana14 (20) \", 7: \"38.78 \", 8: \"38.78 \"}\n9: {1: \"1 \", 2: \"0 * \", 3: \"CAS \", 4: \"T69 \", 5: \"Boost \", 6: \"Boost Powder 15.75(24) \", 7: \"119.04 \", 8: \"0.00 \"}\n10: {1: \"2 \", 2: \"2 \", 3: \"CAS \", 4: \"K38N \", 5: \"Britanni \", 6: \"Bourbon 3.5oz (30) \", 7: \"12.66 \", 8: \"25.32 \"}\n11: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"K38L \", 5: \"Britanni \", 6: \"Bourbon 6.9 OZ (24) \", 7: \"17.15 \", 8: \"17.15 \"}\n12: {1: \"2 \", 2: \"2 \", 3: \"CAS \", 4: \"BN121 \", 5: \"Britanni \", 6: \"Bourbon Cappuccino (24) \", 7: \"8.45 \", 8: \"16.90 \"}\n13: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"BN113 \", 5: \"Britanni \", 6: \"Chocolush 2. 64oz (24) \", 7: \"17.32 \", 8: \"17.32 \"}\n14: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"BN14 \", 5: \"Britanni \", 6: \"Digestive 14.11 oz (12) \", 7: \"19.31 \", 8: \"19.31 \"}\n15: {1: \"2 \", 2: \"2 \", 3: \"CAS \", 4: \"BN71 \", 5: \"Britanni \", 6: \"Fifty Fifty 2. 2oz (48) \", 7: \"11.09 \", 8: \"22.18 \"}\n16: {1: \"\", 2: \"\", 3: \"* \", 4: \"Suggested \", 5: \"retail \", 6: \"price 3 for $ 1.00 * \", 7: \"\", 8: \"\"}\n17: {1: \"5 \", 2: \"5 \", 3: \"CAS \", 4: \"R53P \", 5: \"Britanni \", 6: \"GDPistaAlmond2.630( (48) \", 7: \"18.32 \", 8: \"91.60 \"}\n18: {1: \"\", 2: \"\", 3: \"* 2 \", 4: \"FOR \", 5: \"$1 PRE \", 6: \"PRINTED \", 7: \"\", 8: \"\"}\n19: {1: \"5 \", 2: \"5 \", 3: \"CAS \", 4: \"K46P \", 5: \"Britanni \", 6: \"Good day Cashew2.6 (48) \", 7: \"18.32 \", 8: \"91.60 \"}\n20: {1: \"\", 2: \"\", 3: \"* 2 \", 4: \"FOR \", 5: \"$1 PRE \", 6: \"PRINTED \", 7: \"\", 8: \"\"}\n21: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"K39 \", 5: \"Britanni \", 6: \"LittleHearts2.640z(72) \", 7: \"33.96 \", 8: \"33.96 \"}\n22: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"K4OS \", 5: \"Britanni \", 6: \"Marie Gold . loz (60) \", 7: \"16.92 \", 8: \"16.92 \"}\n23: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"K40 \", 5: \"Britanni \", 6: \"Marie Gold 5.29oz (60) \", 7: \"28.33 \", 8: \"28.33 \"}\n24: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"BN119 \", 5: \"Britanni \", 6: \"Marie Gold FP (10) \", 7: \"19.13 \", 8: \"19.13 \"}\n25: {1: \"2 \", 2: \"2 \", 3: \"CAS \", 4: \"BN25 \", 5: \"Britanni \", 6: \"Milk Bikis 3. 17oz (24) \", 7: \"7.73 \", 8: \"15.46 \"}\n26: {1: \"2 \", 2: \"2 \", 3: \"CAS \", 4: \"K47S \", 5: \"Britanni \", 6: \"Nice Time 2. . 8oz (30) \", 7: \"10.56 \", 8: \"21.12 \"}\n27: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"BN12 \", 5: \"Britanni \", 6: \"Nutri. 5 Grain8. 7oz (18) \", 7: \"27.08 \", 8: \"27.08 \"}\n28: {1: \"3 \", 2: \"3 \", 3: \"CAS \", 4: \"BN69 \", 5: \"Britanni \", 6: \"PunjabiCookies21. (8) \", 7: \"21.47 \", 8: \"64.41 \"}\n29: {1: \"\", 2: \"\", 3: \"* \", 4: \"Suggested \", 5: \"Retail \", 6: \"$3.49 * \", 7: \"\", 8: \"\"}\n30: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"BG4 \", 5: \"Britanni \", 6: \"Pure Cow Ghee500Ml (24) \", 7: \"135.86 \", 8: \"135.86 \"}\n31: {1: \"2 \", 2: \"2 \", 3: \"CAS \", 4: \"BN112 \", 5: \"Britanni \", 6: \"Tiger Glucose FP (5) \", 7: \"7.07 \", 8: \"14.14 \"}\n32: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"BN114 \", 5: \"Britanni \", 6: \"Time Pass 1.4oz (40) \", 7: \"7.04 \", 8: \"7.04 \"}\n33: {1: \"\", 2: \"\", 3: \"* \", 4: \"Suggested \", 5: \"Retail \", 6: \"Price 4 for 1$ * \", 7: \"\", 8: \"\"}\n34: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"BN27 \", 5: \"Britanni \", 6: \"WaferCaramel6.2oz (24) \", 7: \"33.69 \", 8: \"33.69 \"}\n35: {1: \"5 \", 2: \"5 \", 3: \"CAS \", 4: \"BN72M \", 5: \"Britanni \", 6: \"Wheat Rusk 21.51oz (12) \", 7: \"26.16 \", 8: \"130.80 \"}\n36: {1: \"1 \", 2: \"0 * \", 3: \"CAS \", 4: \"Q22 \", 5: \"Complan \", 6: \"ComplanChoco.17. (30) \", 7: \"165.33 \", 8: \"0.00 \"}\n37: {1: \"10 \", 2: \"10 \", 3: \"CAS \", 4: \"BS23 \", 5: \"Deep \", 6: \"Panipuri 4 Oz. (16) \", 7: \"31.24 \", 8: \"312.40 \"}\n38: {1: \"2 \", 2: \"2 \", 3: \"CAS \", 4: \"F24S \", 5: \"Deep Flo \", 6: \"AllPurpFlMaida2 (20) \", 7: \"26.80 \", 8: \"53.60 \"}\n39: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"F24L \", 5: \"Deep Flo \", 6: \"AllPurpFlMaida4 (10) \", 7: \"25.70 \", 8: \"25.70 \"}\n40: {1: \"2 \", 2: \"2 \", 3: \"CAS \", 4: \"F35L \", 5: \"Deep Flo \", 6: \"Besan 81b(5) \", 7: \"40.00 \", 8: \"80.00 \"}\n41: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"F73 \", 5: \"Deep Flo \", 6: \"CrackWheat (Kansar) (10) \", 7: \"22.40 \", 8: \"22.40 \"}\n42: {1: \"1 \", 2: \"0 * \", 3: \"CAS \", 4: \"F72 \", 5: \"Deep Flo \", 6: \"CrackedWheat (Fada) (10) \", 7: \"22.40 \", 8: \"0.00 \"}\n43: {1: \"2 \", 2: \"2 \", 3: \"CAS \", 4: \"F95 \", 5: \"Deep Flo \", 6: \"MultiGrainFlour101 (4) \", 7: \"30.00 \", 8: \"60.00 \"}\n44: {1: \"\", 2: \"\", 3: \"* \", 4: \"ABSOLUTELY \", 5: \"NO \", 6: \"RETURNS * \", 7: \"\", 8: \"\"}\n\nArray[1]\n1: {1: \"DATE \", 2: \"NUMBER \", 3: \"PAGE \"}\n2: {1: \"10/09/2020 \", 2: \"935459 \", 3: \"5 of 9 \"}\n__proto__: Object\n  * \n  */","/home/alekh/Workspace/Tech/inventory-management/client/src/utils/invoice-filters/krishna-foods.js",["210","211"],"/**krishna foods\n * 1: {1: \"Quantity \", 2: \"Item Code \", 3: \"Description \", 4: \"U/M \", 5: \"Price Each \", 6: \"Amount \"}\n2: {1: \"10 \", 2: \"Gur Rewari \", 3: \"Gur Rewari 400 gms 20 / ctn \", 4: \"\", 5: \"52.00 \", 6: \"520.00 \"}\n3: {1: \"3 \", 2: \"Sugar Rewari \", 3: \"Sugar rewari 400 gms 20 / ctn \", 4: \"\", 5: \"52.00 \", 6: \"156.00 \"}\n4: {1: \"6 \", 2: \"Gur Gajj \", 3: \"Dry Fruit Gur Gajjak 400 gms 20 / ctn \", 4: \"\", 5: \"70.00 \", 6: \"420.00 \"}\n5: {1: \"4 \", 2: \"Gurr Khasta Gajjak \", 3: \"Gur Khasta Gajjak 400 gms / 20 ctn \", 4: \"\", 5: \"70.00 \", 6: \"280.00 \"}\n6: {1: \"1 \", 2: \"seasme ladoo \", 3: \"Seasme ladoo Bikaji, 240 gm / 20 ctn \", 4: \"\", 5: \"50.00 \", 6: \"50.00 \"}\n7: {1: \"\", 2: \"Peanut Ladoo \", 3: \"Peanut Ladoo Bikaji 240 gms / 20 ctn \", 4: \"\", 5: \"50.00 \", 6: \"50.00 \"}\n8: {1: \"X \", 2: \"Rajgeron ladoo \", 3: \"Rajgeron Ladoo Bikaji 150 gm 20 / ctn \", 4: \"\", 5: \"50.00 \", 6: \"50.00 \"}\n9: {1: \"\", 2: \"Pea ChiKi \", 3: \"Peanut Chikki 400 gms / 20 ctn \", 4: \"\", 5: \"55.00 \", 6: \"110.00 \"}\n10: {1: \"\", 2: \"Se Chikki \", 3: \"Saesme Chikki 400 Gms / 20 Ctn \", 4: \"\", 5: \"65.00 \", 6: \"65.00 \"}\n11: {1: \"\", 2: \"Ass Chiki \", 3: \"Assorted Chikki 400 gms 20 / ctn \", 4: \"\", 5: \"65.00 \", 6: \"130.00 \"}\n12: {1: \"3 \", 2: \"Gobhi Parantha 4 \", 3: \"Gobhi Parantha (4 Pcs X 12 Pks ) Bikaji \", 4: \"\", 5: \"21.00 \", 6: \"63.00 \"}\n13: {1: \"\", 2: \"Methi Parantha 6 \", 3: \"Methi Parantha (6 Pcs X 12 Pks ) Bikaji \", 4: \"\", 5: \"19.80 \", 6: \"59.40 \"}\n14: {1: \"\", 2: \"Home Style Paran \", 3: \"Home Style Parantha ( 6 Pcs X 12 Pks ) Bikaji \", 4: \"\", 5: \"19.20 \", 6: \"57.60 \"}\n__proto__: Object\n1: {1: {…}, 2: {…}}\n2: {1: {…}, 2: {…}}\n3: {1: {…}, 2: {…}}\nlength: 4\n__proto__: Array(0)\nstatusCode: 200\n__proto__: Object\n\n */\nexport const krishnaFoods = (data) => {\n    let filteredData = data.filter((line) => line[6] !== \"\" && !isNaN(line[6]));\n        // .filter((line) => line./* text. */ includes(\"(\"))\n        // .map((line) => line./* text. */ trim());\n\n    let tableData = filteredData.map((row, index) => {\n        let qty = row[1].trim()\n        const itemNo = row[2].trim()\n        const description = row[3].trim()\n        const unitPrice = row[5].trim()\n        const extendedPrice = row[6].trim()\n        const pieces = 0;\n        const markup = 0;\n        if(isNaN(extendedPrice) || isNaN(unitPrice)){\n          return null\n        }\n        if (extendedPrice == \"0.00\" && qty == \"0\") {\n            return null;\n        }\n        if(isNaN(qty) || !qty) {\n          // itemNo = [qty, itemNo].join(\" \")\n          qty = (parseFloat(extendedPrice)/ parseFloat(unitPrice)).toFixed(0)\n           \n        }\n        return {\n          qty,\n          itemNo,\n          description,\n          pieces,\n          unitPrice,\n          extendedPrice,\n          markup,\n        };\n    });\n    console.table(filteredData)\n    return tableData.filter((data) => data !== null);\n    \n};","/home/alekh/Workspace/Tech/inventory-management/client/src/utils/filter.js",["212"],"export const applyFilter=(data,options)=>{\n  let result=[];\n  for(var prop in data){\n    if (Object.prototype.hasOwnProperty.call(data,prop)){\n      let str=convertRowToString(data[prop]);\n      str=str.replace(/[`~!@#%^&=:;'<>?,\\*]/gi, '');\n      str=str.replace(/ +(?= )/g,'');\n      if((options.regex).test(str)){\n        let obj={};\n        for(let j=0;j<options.header.length;j++){\n          let x=\"\";\n          if(Array.isArray(options.body[j])){\n            let index=str.search(options.body[j][1]);\n            x=str.substr(0,index);\n            str=str.substr(x.length);\n          }else{\n            let y=str.split(\" \");\n            str=\"\";\n            for(let k=0;k<options.body[j];k++)x+=y[k]+\" \";\n            for(let k=options.body[j];k<y.length;k++)str+=y[k]+\" \";\n          }\n          x=x.trimStart();\n          x=x.trimEnd();\n          str=str.trimStart();\n          str=str.trimEnd();\n          obj[options.header[j]]=x;\n        }\n        result.push(obj);\n      }\n    }\n  }\n  return result;\n}\n\nconst convertRowToString=(obj)=>{\n  let str=\"\";\n  for (var prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj,prop)){\n      str+=obj[prop]+\" \";\n    }\n  }\n  //remove multiple instances of multiple space with single space\n  str=str.replace(/ +(?= )/g,'');\n  str=str.trimStart();\n  str=str.trimEnd();\n  return str;\n}\n","/home/alekh/Workspace/Tech/inventory-management/client/src/utils/optionData.js",[],{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":8,"column":9,"nodeType":"219","messageId":"220","endLine":8,"endColumn":13},{"ruleId":"217","severity":1,"message":"221","line":52,"column":10,"nodeType":"219","messageId":"220","endLine":52,"endColumn":21},{"ruleId":"217","severity":1,"message":"222","line":53,"column":20,"nodeType":"219","messageId":"220","endLine":53,"endColumn":31},{"ruleId":"223","severity":1,"message":"224","line":91,"column":22,"nodeType":"225","messageId":"226","endLine":91,"endColumn":24},{"ruleId":"223","severity":1,"message":"224","line":92,"column":22,"nodeType":"225","messageId":"226","endLine":92,"endColumn":24},{"ruleId":"223","severity":1,"message":"224","line":93,"column":22,"nodeType":"225","messageId":"226","endLine":93,"endColumn":24},{"ruleId":"223","severity":1,"message":"224","line":94,"column":22,"nodeType":"225","messageId":"226","endLine":94,"endColumn":24},{"ruleId":"223","severity":1,"message":"227","line":96,"column":33,"nodeType":"225","messageId":"226","endLine":96,"endColumn":35},{"ruleId":"223","severity":1,"message":"224","line":96,"column":53,"nodeType":"225","messageId":"226","endLine":96,"endColumn":55},{"ruleId":"228","severity":1,"message":"229","line":257,"column":5,"nodeType":"230","endLine":257,"endColumn":39,"suggestions":"231"},{"ruleId":"232","severity":1,"message":"233","line":8,"column":19,"nodeType":"234","messageId":"235","endLine":8,"endColumn":20,"suggestions":"236"},{"ruleId":"223","severity":1,"message":"224","line":25,"column":11,"nodeType":"225","messageId":"226","endLine":25,"endColumn":13},{"ruleId":"223","severity":1,"message":"224","line":30,"column":26,"nodeType":"225","messageId":"226","endLine":30,"endColumn":28},{"ruleId":"223","severity":1,"message":"224","line":55,"column":19,"nodeType":"225","messageId":"226","endLine":55,"endColumn":21},{"ruleId":"223","severity":1,"message":"224","line":55,"column":41,"nodeType":"225","messageId":"226","endLine":55,"endColumn":43},{"ruleId":"223","severity":1,"message":"224","line":57,"column":26,"nodeType":"225","messageId":"226","endLine":57,"endColumn":28},{"ruleId":"223","severity":1,"message":"224","line":73,"column":26,"nodeType":"225","messageId":"226","endLine":73,"endColumn":28},{"ruleId":"223","severity":1,"message":"224","line":94,"column":19,"nodeType":"225","messageId":"226","endLine":94,"endColumn":21},{"ruleId":"223","severity":1,"message":"224","line":99,"column":21,"nodeType":"225","messageId":"226","endLine":99,"endColumn":23},{"ruleId":"223","severity":1,"message":"224","line":112,"column":19,"nodeType":"225","messageId":"226","endLine":112,"endColumn":21},{"ruleId":"223","severity":1,"message":"224","line":140,"column":41,"nodeType":"225","messageId":"226","endLine":140,"endColumn":43},{"ruleId":"223","severity":1,"message":"224","line":146,"column":13,"nodeType":"225","messageId":"226","endLine":146,"endColumn":15},{"ruleId":"223","severity":1,"message":"224","line":146,"column":36,"nodeType":"225","messageId":"226","endLine":146,"endColumn":38},{"ruleId":"223","severity":1,"message":"224","line":150,"column":23,"nodeType":"225","messageId":"226","endLine":150,"endColumn":25},{"ruleId":"223","severity":1,"message":"224","line":150,"column":40,"nodeType":"225","messageId":"226","endLine":150,"endColumn":42},{"ruleId":"228","severity":1,"message":"237","line":11,"column":8,"nodeType":"230","endLine":11,"endColumn":14,"suggestions":"238"},{"ruleId":"213","replacedBy":"239"},{"ruleId":"215","replacedBy":"240"},{"ruleId":"213","replacedBy":"241"},{"ruleId":"215","replacedBy":"242"},{"ruleId":"217","severity":1,"message":"243","line":1,"column":8,"nodeType":"219","messageId":"220","endLine":1,"endColumn":13},{"ruleId":"217","severity":1,"message":"244","line":46,"column":15,"nodeType":"219","messageId":"220","endLine":46,"endColumn":23},{"ruleId":"217","severity":1,"message":"245","line":19,"column":10,"nodeType":"219","messageId":"220","endLine":19,"endColumn":23},{"ruleId":"223","severity":1,"message":"227","line":72,"column":34,"nodeType":"225","messageId":"226","endLine":72,"endColumn":36},{"ruleId":"223","severity":1,"message":"224","line":267,"column":27,"nodeType":"225","messageId":"226","endLine":267,"endColumn":29},{"ruleId":"228","severity":1,"message":"246","line":287,"column":6,"nodeType":"230","endLine":287,"endColumn":8,"suggestions":"247"},{"ruleId":"228","severity":1,"message":"237","line":12,"column":8,"nodeType":"230","endLine":12,"endColumn":14,"suggestions":"248"},{"ruleId":"249","severity":1,"message":"250","line":125,"column":35,"nodeType":"251","messageId":"252","endLine":125,"endColumn":37},{"ruleId":"217","severity":1,"message":"218","line":1,"column":7,"nodeType":"219","messageId":"220","endLine":1,"endColumn":11},{"ruleId":"223","severity":1,"message":"224","line":410,"column":23,"nodeType":"225","messageId":"226","endLine":410,"endColumn":25},{"ruleId":"223","severity":1,"message":"224","line":410,"column":40,"nodeType":"225","messageId":"226","endLine":410,"endColumn":42},{"ruleId":"223","severity":1,"message":"224","line":42,"column":27,"nodeType":"225","messageId":"226","endLine":42,"endColumn":29},{"ruleId":"223","severity":1,"message":"224","line":42,"column":44,"nodeType":"225","messageId":"226","endLine":42,"endColumn":46},{"ruleId":"232","severity":1,"message":"253","line":6,"column":41,"nodeType":"234","messageId":"235","endLine":6,"endColumn":42,"suggestions":"254"},"no-native-reassign",["255"],"no-negated-in-lhs",["256"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'emptyColumn' is assigned a value but never used.","'setReadData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.file' and 'tesseractService'. Either include them or remove the dependency array.","ArrayExpression",["257"],"no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["258","259"],"React Hook useEffect has a missing dependency: 'props.isAuth'. Either include it or remove the dependency array. If 'setUser' needs the current value of 'props.isAuth', you can also switch to useReducer instead of useState and read 'props.isAuth' in the reducer.",["260"],["255"],["256"],["255"],["256"],"'axios' is defined but never used.","'authData' is assigned a value but never used.","'inventoryData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.filename', 'props.selectedInvoice', and 'tesseractService'. Either include them or remove the dependency array.",["261"],["262"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Unnecessary escape character: \\*.",["263","264"],"no-global-assign","no-unsafe-negation",{"desc":"265","fix":"266"},{"messageId":"267","fix":"268","desc":"269"},{"messageId":"270","fix":"271","desc":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"273","fix":"277"},{"messageId":"267","fix":"278","desc":"269"},{"messageId":"270","fix":"279","desc":"272"},"Update the dependencies array to be: [readData, description, tableData, tesseractService, props.file]",{"range":"280","text":"281"},"removeEscape",{"range":"282","text":"283"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"284","text":"285"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [props.isAuth, user]",{"range":"286","text":"287"},"Update the dependencies array to be: [props.filename, props.selectedInvoice, tesseractService]",{"range":"288","text":"289"},{"range":"290","text":"287"},{"range":"291","text":"283"},{"range":"292","text":"285"},[8631,8665],"[readData, description, tableData, tesseractService, props.file]",[314,315],"",[314,314],"\\",[344,350],"[props.isAuth, user]",[9832,9834],"[props.filename, props.selectedInvoice, tesseractService]",[393,399],[229,230],[229,229]]