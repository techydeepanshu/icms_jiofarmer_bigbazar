[{"/root/environment/inventory-management/client/src/index.js":"1","/root/environment/inventory-management/client/src/App.js":"2","/root/environment/inventory-management/client/src/store/reducer/reducerAuth.js":"3","/root/environment/inventory-management/client/src/store/action/actionAuth.js":"4","/root/environment/inventory-management/client/src/components/Invoice/Invoice.js":"5","/root/environment/inventory-management/client/src/components/Layout/Layout.js":"6","/root/environment/inventory-management/client/src/components/DisplayData/DisplayData.js":"7","/root/environment/inventory-management/client/src/components/Navigation/Toolbar/Toolbar.js":"8","/root/environment/inventory-management/client/src/services/TesseractService.js":"9","/root/environment/inventory-management/client/src/utils/filterData.js":"10","/root/environment/inventory-management/client/src/components/Navigation/NavigationItems/NavigationItems.js":"11","/root/environment/inventory-management/client/src/components/Navigation/NavigationItems/NavigationItem/NavigationItem.js":"12","/root/environment/inventory-management/client/src/UI/Spinner/Spinner.js":"13","/root/environment/inventory-management/client/src/containers/Auth/Auth.js":"14","/root/environment/inventory-management/client/src/containers/Auth/Logout/Logout.js":"15","/root/environment/inventory-management/client/src/firebase.js":"16","/root/environment/inventory-management/client/src/services/LoginService.js":"17","/root/environment/inventory-management/client/src/UI/LoginPage.js":"18","/root/environment/inventory-management/client/src/services/axios.js":"19","/root/environment/inventory-management/client/src/UI/Button.js":"20","/root/environment/inventory-management/client/src/components/Update/UpdateInventory.js":"21","/root/environment/inventory-management/client/src/utils/invoice-filters/chetak.js":"22","/root/environment/inventory-management/client/src/utils/filter.js":"23","/root/environment/inventory-management/client/src/utils/invoice-filters/krishna-foods.js":"24","/root/environment/inventory-management/client/src/utils/optionData.js":"25","/root/environment/inventory-management/client/src/services/InventoryService.js":"26","/home/alekh/Workspace/Tech/inventory-management/client/src/index.js":"27","/home/alekh/Workspace/Tech/inventory-management/client/src/App.js":"28","/home/alekh/Workspace/Tech/inventory-management/client/src/store/reducer/reducerAuth.js":"29","/home/alekh/Workspace/Tech/inventory-management/client/src/store/action/actionAuth.js":"30","/home/alekh/Workspace/Tech/inventory-management/client/src/components/Layout/Layout.js":"31","/home/alekh/Workspace/Tech/inventory-management/client/src/containers/Auth/Auth.js":"32","/home/alekh/Workspace/Tech/inventory-management/client/src/containers/Auth/Logout/Logout.js":"33","/home/alekh/Workspace/Tech/inventory-management/client/src/UI/Spinner/Spinner.js":"34","/home/alekh/Workspace/Tech/inventory-management/client/src/components/Invoice/Invoice.js":"35","/home/alekh/Workspace/Tech/inventory-management/client/src/firebase.js":"36","/home/alekh/Workspace/Tech/inventory-management/client/src/UI/LoginPage.js":"37","/home/alekh/Workspace/Tech/inventory-management/client/src/services/LoginService.js":"38","/home/alekh/Workspace/Tech/inventory-management/client/src/components/Navigation/Toolbar/Toolbar.js":"39","/home/alekh/Workspace/Tech/inventory-management/client/src/services/TesseractService.js":"40","/home/alekh/Workspace/Tech/inventory-management/client/src/components/DisplayData/DisplayData.js":"41","/home/alekh/Workspace/Tech/inventory-management/client/src/services/axios.js":"42","/home/alekh/Workspace/Tech/inventory-management/client/src/components/Navigation/NavigationItems/NavigationItems.js":"43","/home/alekh/Workspace/Tech/inventory-management/client/src/UI/Button.js":"44","/home/alekh/Workspace/Tech/inventory-management/client/src/utils/filterData.js":"45","/home/alekh/Workspace/Tech/inventory-management/client/src/components/Update/UpdateInventory.js":"46","/home/alekh/Workspace/Tech/inventory-management/client/src/utils/invoice-filters/chetak.js":"47","/home/alekh/Workspace/Tech/inventory-management/client/src/components/Navigation/NavigationItems/NavigationItem/NavigationItem.js":"48","/home/alekh/Workspace/Tech/inventory-management/client/src/utils/invoice-filters/krishna-foods.js":"49","/home/alekh/Workspace/Tech/inventory-management/client/src/utils/optionData.js":"50","/home/alekh/Workspace/Tech/inventory-management/client/src/utils/filter.js":"51","/home/alekh/Workspace/Tech/inventory-management/client/src/services/InventoryService.js":"52"},{"size":697,"mtime":1614833803677,"results":"53","hashOfConfig":"54"},{"size":1966,"mtime":1614945240488,"results":"55","hashOfConfig":"54"},{"size":1004,"mtime":1614833803677,"results":"56","hashOfConfig":"54"},{"size":3706,"mtime":1614833803677,"results":"57","hashOfConfig":"54"},{"size":6060,"mtime":1614936341586,"results":"58","hashOfConfig":"54"},{"size":419,"mtime":1612510117669,"results":"59","hashOfConfig":"54"},{"size":12011,"mtime":1614936341586,"results":"60","hashOfConfig":"54"},{"size":718,"mtime":1614833803677,"results":"61","hashOfConfig":"54"},{"size":591,"mtime":1614833803677,"results":"62","hashOfConfig":"54"},{"size":1102,"mtime":1614833803677,"results":"63","hashOfConfig":"54"},{"size":676,"mtime":1614833803677,"results":"64","hashOfConfig":"54"},{"size":418,"mtime":1612510117669,"results":"65","hashOfConfig":"54"},{"size":167,"mtime":1614833803677,"results":"66","hashOfConfig":"54"},{"size":1633,"mtime":1614833803677,"results":"67","hashOfConfig":"54"},{"size":498,"mtime":1614833803677,"results":"68","hashOfConfig":"54"},{"size":603,"mtime":1614833803677,"results":"69","hashOfConfig":"54"},{"size":187,"mtime":1614833803677,"results":"70","hashOfConfig":"54"},{"size":1452,"mtime":1614833803677,"results":"71","hashOfConfig":"54"},{"size":711,"mtime":1614939486808,"results":"72","hashOfConfig":"54"},{"size":316,"mtime":1614833803677,"results":"73","hashOfConfig":"54"},{"size":5209,"mtime":1614945156546,"results":"74","hashOfConfig":"54"},{"size":19158,"mtime":1614936341590,"results":"75","hashOfConfig":"54"},{"size":2151,"mtime":1614833803677,"results":"76","hashOfConfig":"54"},{"size":2853,"mtime":1614833803681,"results":"77","hashOfConfig":"54"},{"size":1451,"mtime":1614833803681,"results":"78","hashOfConfig":"54"},{"size":821,"mtime":1614945312330,"results":"79","hashOfConfig":"54"},{"size":697,"mtime":1614922858914,"results":"80","hashOfConfig":"81"},{"size":1700,"mtime":1615278122167,"results":"82","hashOfConfig":"81"},{"size":1004,"mtime":1614922858914,"results":"83","hashOfConfig":"81"},{"size":3706,"mtime":1615034797235,"results":"84","hashOfConfig":"81"},{"size":419,"mtime":1614922858914,"results":"85","hashOfConfig":"81"},{"size":1633,"mtime":1614922858914,"results":"86","hashOfConfig":"81"},{"size":498,"mtime":1614922858914,"results":"87","hashOfConfig":"81"},{"size":167,"mtime":1614922858914,"results":"88","hashOfConfig":"81"},{"size":6060,"mtime":1615371046634,"results":"89","hashOfConfig":"81"},{"size":603,"mtime":1614922858914,"results":"90","hashOfConfig":"81"},{"size":1452,"mtime":1614922858914,"results":"91","hashOfConfig":"81"},{"size":187,"mtime":1614922858914,"results":"92","hashOfConfig":"81"},{"size":718,"mtime":1615034797235,"results":"93","hashOfConfig":"81"},{"size":591,"mtime":1614922858914,"results":"94","hashOfConfig":"81"},{"size":12659,"mtime":1615378239983,"results":"95","hashOfConfig":"81"},{"size":686,"mtime":1615377729199,"results":"96","hashOfConfig":"81"},{"size":676,"mtime":1615034797235,"results":"97","hashOfConfig":"81"},{"size":316,"mtime":1614922858914,"results":"98","hashOfConfig":"81"},{"size":1102,"mtime":1615034797235,"results":"99","hashOfConfig":"81"},{"size":7841,"mtime":1615377568346,"results":"100","hashOfConfig":"81"},{"size":19158,"mtime":1615377766531,"results":"101","hashOfConfig":"81"},{"size":418,"mtime":1614922858914,"results":"102","hashOfConfig":"81"},{"size":2853,"mtime":1614922858918,"results":"103","hashOfConfig":"81"},{"size":1451,"mtime":1614922858918,"results":"104","hashOfConfig":"81"},{"size":2151,"mtime":1614922858914,"results":"105","hashOfConfig":"81"},{"size":831,"mtime":1615377305591,"results":"106","hashOfConfig":"81"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},"11gq97j",{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"109"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"109"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"109"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"109"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"109"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"109"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"109"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},"1au3gwh",{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"169"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"169"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"169"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"169"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"169"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"169"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"169"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/root/environment/inventory-management/client/src/index.js",[],["221","222"],"/root/environment/inventory-management/client/src/App.js",[],"/root/environment/inventory-management/client/src/store/reducer/reducerAuth.js",[],"/root/environment/inventory-management/client/src/store/action/actionAuth.js",["223","224"],"import axios from 'axios'\nimport firebase from \"../../firebase\"\nimport { LoginService } from \"../../services/LoginService\"\n\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\nexport const AUTH_FAIL = 'AUTH_FAIL'\nexport const AUTH_START = 'AUTH_START'\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\n\n const authSuccess = (token, userId) => {\n    return {\n        type: AUTH_SUCCESS,\n        token: token,\n        userId: userId\n    }\n}\n const authFail = (error) => {\n    return {\n        type: AUTH_FAIL,\n        error: error\n    }\n}\n\nconst authStart = () => {\n    return {\n        type: AUTH_START\n    }\n}\nexport const authLogout = () => {\n    localStorage.removeItem('token')\n    localStorage.removeItem('expirationDate')\n    localStorage.removeItem('userId')\n    return {\n        type: AUTH_LOGOUT\n    }\n}\nexport const logout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(authLogout());\n        }, expirationTime * 1000);\n    };\n};\nexport const auth = (email, password ) => {\n    return dispatch => {\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        }\n        const loginService = new LoginService();\n\n        // const url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDmK-zcj0LVrrQKbAfflUa-Hi_kRT4-ZWM\";\n        dispatch(authStart())\n        // axios.post(url, authData)\n        // .then(response => {\n        //     console.log(response.data)\n            // const expirationDate = new Date(new Date().getTime + 3600 * 1000)\n            // localStorage.setItem('token', response.data.idToken)\n            // localStorage.setItem('expirationDate', expirationDate)\n            // localStorage.setItem('userId', response.data.localId)\n            // dispatch(authSuccess(response.data.idToken, response.data.localId))\n            // dispatch(logout(response.data.expiresIn))\n        // })\n        // .catch(err => {\n        //     console.log(err.response.data.error.message)\n        //     dispatch(authFail(err.response.data.error.message))\n        // })\n        firebase.auth().signInWithEmailAndPassword(email, password)\n            .then((response) => {\n                const token = response[\"user\"][\"za\"];\n                const uid = response[\"user\"][\"uid\"];\n                // console.log(response);\n                const expirationDate = new Date(new Date().getTime + 3600 * 1000);\n                localStorage.setItem(\"token\", token);\n                localStorage.setItem(\"expirationDate\", expirationDate);\n                localStorage.setItem(\"userId\", uid);\n                dispatch(authSuccess(token, uid));\n                dispatch(logout(3600));\n                loginService.authenticate(uid)\n                    .then(res => {/* console.log('auth from server',res) */})\n                    .catch(err => {/* console.log('err on auth', err) */})\n            })\n            .catch((err) => {\n                // console.log('err during login',err.message);\n                dispatch(authFail(err.message));\n            })\n    }\n}\n\nexport const checkAuthentication = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        if(!token) {\n            dispatch(authLogout())\n        }\n        else {\n            const expirationDate  = new Date(localStorage.getItem('expirationDate'))\n            if(expirationDate < new Date()) {\n                dispatch(authLogout())\n            }\n            else {\n                dispatch(authSuccess(token, localStorage.getItem('userId')))\n                // dispatch(logout((expirationDate.getTime() - new Date().getTime()) / 1000 ));\n            } \n        }\n    }\n}","/root/environment/inventory-management/client/src/components/Invoice/Invoice.js",["225"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport styles from \"./Invoice.module.css\";\nimport { Route } from \"react-router-dom\";\nimport DisplayData from \"../DisplayData/DisplayData\";\nimport { TesseractService } from \"../../services/TesseractService\";\nimport Dropzone from \"react-dropzone\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\n\nconst Invoice = (props) => {\n  const dropdownOptions = [\n    { value: \"Chetak\", slug: \"chetak\" },\n    // { value: \"Laxmi\", slug: \"laxmi\" },\n    { value: \"Sea Mark\", slug: \"sea-mark\" },\n    { value: \"Best Foods\", slug: \"best-foods\" },\n    { value: \"Krishna Foods\", slug: \"krishna-foods\" },\n    { value: \"Joy Gourmet Foods\", slug: \"joy-gourmet-foods\" },\n    { value: \"Advance Foods\", slug: \"advance-foods\" },\n  ];\n  const [selectedDropdown, setSelectedDropdown] = useState(\n    dropdownOptions[0].slug\n  );\n  // const [file, setFile] = useState(null);\n  const [file, setFile] = useState([]);\n  const [imagePreviewUrl, setImagePreviewUrl] = useState([]);\n  const [redirect, setRedirect] = useState(false);\n  const [filename, setFilename] = useState(null);\n  const [loader, setLoader] = useState(false);\n\n  const tesseractService = new TesseractService();\n  const path = props.match.url + `/${selectedDropdown}`;\n  const handleDropdownChange = (e) => {\n    setSelectedDropdown(e.target.value);\n  };\n  const handleFileChange = async (files) => {\n    files = Object.values(files);\n\n    if (files.length <= 9) {\n      const inputFiles = [];\n      const imagePreviewUrls = [];\n      files.forEach( (selectedFile) => {\n        let reader = new FileReader();\n        inputFiles.push(selectedFile);\n        reader.onloadend = () => {\n          // console.log(\"reader result\", reader.result)\n          imagePreviewUrls.push(reader.result);\n          // setImagePreviewUrl(imagePreviewUrls)\n        };\n        reader.readAsDataURL(selectedFile);\n      });\n      setTimeout(() => {\n        setFile(inputFiles);\n        setImagePreviewUrl(imagePreviewUrls);\n      }, 1000);\n      \n    } else {\n      alert(\"Select only upto 9 files\")\n    }\n  };\n  const scanInvoice = () => {\n    if (file.length > 0) {\n      const postImage = async () => {\n        setLoader(true);\n        // const res = await tesseractService.PostImage(file);\n        // setFilename(res.filename);\n        // console.log(\"file and response on upload mage\", res, file);\n        const filenames = await Promise.all(\n          file.map(async (inputFile) => {\n            try {\n              const res = await tesseractService.PostImage(inputFile);\n              // console.log(\"Gettting description for\", inputFile, res)\n              return res.filename;\n            } catch (error) {\n              console.log(\"error fetching descripton\", error);\n              // return null;\n              throw new Error(\"error\")\n            }\n          })\n        );\n        setFilename(filenames);\n      };\n      // postImage()\n      //   .then((data) => {\n          setLoader(false);\n          setRedirect(true);\n          props.history.push(path);\n        // })\n        // .catch((err) => {\n        //   setLoader(false);\n        //   alert(\"Please try again.\");\n        //   // console.log(\"err\", err);\n        // });\n      // .finally(() => setLoader(false));\n    } else {\n      alert(\"Select an image\");\n    }\n  };\n\n\n  const displaySelectFile = () => {\n    return (\n      <div className={styles.main}>\n        <div className=\"\">\n          <label className=\"\">Select Invoice </label>\n          <select\n            className={styles.Dropdown}\n            value={selectedDropdown}\n            onChange={handleDropdownChange}\n          >\n            {dropdownOptions.map((opt) => {\n              return (\n                <option key={opt.slug} value={opt.slug}>\n                  {opt.value}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        <div className={styles.file_upload}>\n          <div className={styles.Filter}>\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              name=\"image\"\n              id=\"file\"\n              multiple\n              className={styles.file_upload_btn}\n              onChange={(e) => handleFileChange(e.target.files)}\n            />\n          </div>\n        </div>\n        <Dropzone onDrop={(acceptedFiles) => handleFileChange(acceptedFiles)}>\n          {({ getRootProps, getInputProps }) => (\n            <section>\n              <div {...getRootProps()}>\n                <input {...getInputProps()} />\n                <div className={styles.image_upload_wrap}>\n                  <div className={styles.drag_text}>\n                    {imagePreviewUrl.length > 0 ? (\n                      <Fragment>\n                        <h3>Preview</h3>\n                        {imagePreviewUrl.map((file, index) => (\n                          <img\n                            alt=\"Preview\"\n                            key={index}\n                            src={file}\n                            className={styles.previewStyle}\n                          />\n                        ))}\n                      </Fragment>\n                    ) : (\n                      <h3>Drag and drop a file or select add Image</h3>\n                    )}\n                    <div className=\"content\"></div>\n                  </div>\n                </div>\n              </div>\n            </section>\n          )}\n        </Dropzone>\n        <button type=\"button\" onClick={scanInvoice} className={styles.button}>\n          {\" \"}\n          Scan Invoice\n        </button>\n      </div>\n    );\n  };\n  useEffect(() => {\n  //  console.log(\"useeffect Input files\", file)\n  //  console.log(\"useeffect Preview url\", imagePreviewUrl)\n  },[file, imagePreviewUrl])\n  if (redirect) {\n    return (\n      <Route\n        path={path}\n        component={() => (\n          <DisplayData filename={filename} selectedInvoice={selectedDropdown} />\n        )}\n      />\n    );\n  }\n  if (loader) {\n    return <Spinner />;\n  }\n  return <div>{displaySelectFile()}</div>;\n};\n\nexport default Invoice;\n","/root/environment/inventory-management/client/src/components/Layout/Layout.js",[],"/root/environment/inventory-management/client/src/components/DisplayData/DisplayData.js",["226","227","228","229","230","231"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { TesseractService } from \"../../services/TesseractService\";\nimport Button from \"../../UI/Button\";\nimport { chooseFilter } from \"../../utils/filterData\";\nimport UpdateInventory from \"../Update/UpdateInventory\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport styles from \"./DisplayData.module.css\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\nimport { chetak } from \"../../utils/invoice-filters/chetak\";\n\nconst DisplayData = (props) => {\n  let emptyColumnList = [];\n  const [tableData, setTableData] = useState([]);\n  const [emptyColumn, setEmptyColumn] = useState([]);\n  const [productDetails, setProductDetails] = useState([]);\n  const [pushToInventory, setPushToInventory] = useState(false);\n  const [inventoryData, setInventoryData] = useState([])\n  const [itemNoDropdown, setItemNoDropdown] = useState([])\n  const [loader, setLoader] = useState(true);\n  const tesseractService = new TesseractService();\n  const header = [\n        \"Serial No.\",\n        \"Qty Shipped\",\n        \"ITEM NO\",\n        \"DESCRPTION\",\n        \"Units(Per item)\",\n        \"Unit Price\",\n        \"Extended Price\",\n        \"Mark up (%)\",\n        \"Selling Price\",\n  ];\n\n  const addRow = () => {\n    let tempTableData = [...tableData]\n    tempTableData.push({qty: 0, itemNo: \"\", description: \"\", pieces: 0, unitPrice: 0.00, extendedPrice: \"\", markup: 0, sp: 0})\n    setTableData(tempTableData)\n  };\n  const renderTableHeader = () => {\n    return header.map((key, index) => {\n      return (\n        <th key={index}>\n          {key.toUpperCase()}\n          {key.includes(\"Mark\") ? (\n            <TextField\n                type={\"number\"}\n                variant=\"outlined\"\n                onChange={(e) => {\n                  setMarkup(e.target.value);\n                }}\n                style={{width: 100}}\n              />\n          ) : null}\n        </th>\n      );\n    });\n  };\n\n  const renderTableData = () => {\n    if (tableData) {\n      // console.log(\"invoiceData\", itemNoDropdown);\n      let rows = tableData.map((element, index) => {\n        let isEmpty =\n          element.qty === \"\" ||\n          element.itemNo === \"\" ||\n          !element.pieces ||\n          isNaN(element.unitPrice) ||\n          isNaN(element.extendedPrice);\n        if (isEmpty) {\n          let emptyColumn = [...emptyColumnList, index];\n          emptyColumnList = [...new Set(emptyColumn)];\n        }\n        let isFree = element.qty != 0 && element.extendedPrice === \"0.00\";\n        return (\n          <tr\n            key={index}\n            className={isEmpty ? styles.red : isFree ? styles.free : null}\n          >\n            <td>{index + 1 }</td>\n            <td className={isFree ? styles.element : null}>\n              <TextField\n                type=\"number\"\n                value={element.qty}\n                id=\"outlined-secondary\"\n                variant=\"outlined\"\n                onChange={(e) => {\n                  handleChange(index, \"qty\", e.target.value);\n                }}\n                style={{ width: 100 }}\n              />\n              <span className={styles.tooltip}>\n                The extended price for this is {element.extendedPrice} but\n                quantity shipped is {element.qty} is this a free item? Please\n                eneter the unit price manually.\n              </span>\n            </td>\n            <td>\n              <Autocomplete\n                value={element.itemNo}\n                onChange={(event, newValue) => {\n                  if (newValue) {\n                    handleChange(index, \"itemNo\", newValue);\n                  }\n                }}\n                id=\"combo-box\"\n                options={itemNoDropdown}\n                getOptionLabel={(option) => option}\n                style={{ width: 200 }}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    variant=\"outlined\"\n                  />\n                )}\n              />\n            </td>\n            <td>{element.description}</td>\n            <td>{element.pieces}</td>\n            <td>\n              <TextField\n                type=\"number\"\n                value={element.unitPrice}\n                id=\"outlined-secondary\"\n                variant=\"outlined\"\n                onChange={(e) => {\n                  handleChange(index, \"unitPrice\", e.target.value);\n                }}\n                style={{ width: 100 }}\n              />\n            </td>\n            <td>{element.extendedPrice}</td>\n            <td>\n              <TextField\n                type=\"number\"\n                value={element.markup}\n                id=\"outlined-secondary\"\n                variant=\"outlined\"\n                onChange={(e) => {\n                  handleChange(index, \"markup\", e.target.value);\n                }}\n                style={{ width: 100 }}\n              />\n            </td>\n            <td>{element.sp}</td>\n          </tr>\n        );\n      });\n\n      return (\n        <div className={styles.tablewrapper}>\n          <table className=\"table table-hover table-responsive-sm\">\n            <tbody>\n              <tr>{renderTableHeader()}</tr>\n              {rows}\n              <tr onClick={addRow}>Add column</tr>\n            </tbody>\n          </table>\n          <Button\n            text=\"Update Inventory\"\n            color=\"btn btn-info\"\n            type=\"submit\"\n            onClick={pushInventoryDetails}\n          />\n        </div>\n      );\n    }\n    return <h2>Fetching Data</h2>;\n  };\n\n  const pushInventoryDetails = () => {\n    // console.log(\"Pushing inventory\");\n    if (emptyColumn.length === 0 && emptyColumnList.length === 0) {\n      let tempTable = []\n      tableData.forEach((element, index) => {\n        let rowData = {index: index + 1, ...element}\n        tempTable.push(rowData)\n      });\n      setInventoryData(tempTable)\n      setPushToInventory(true);\n    } else {\n      alert(\"Please fill all the values\");\n    }\n  };\n\n  const handleChange = async (row, key, value) => {\n    let tempTableData = [...tableData];\n    tempTableData[row][key] = value;\n\n    // console.log(\"Empty col list\", emptyColumnList, emptyColumn);\n    if (\n      tempTableData[row][\"qty\"] !== \"\" &&\n      tempTableData[row][\"itemNo\"] !== \"\" &&\n      tempTableData[row][\"unitPrice\"] !== \"\"\n    ) {\n      const index = emptyColumnList.indexOf(row);\n      if (index > -1) {\n        emptyColumnList.splice(index, 1);\n      }\n      setEmptyColumn(emptyColumnList);\n    }\n    if (key === \"itemNo\") {\n      tempTableData[row][\"description\"] = productDetails[value].Description;\n      tempTableData[row][\"pieces\"] = productDetails[value].Quantity;\n    }\n\n    if (key === \"unitPrice\" || key === \"markup\" || key === \"itemNo\") {\n      let cp = parseFloat(tempTableData[row][\"unitPrice\"]);\n      let markup = parseFloat(tempTableData[row][\"markup\"]);\n      let sp = cp + (cp * markup) / 100;\n      if (tempTableData[row][\"pieces\"]) {\n        sp = sp / tempTableData[row][\"pieces\"];\n      }\n      tempTableData[row][\"sp\"] = isNaN(sp) ? 0 : sp.toFixed(2);\n    }\n    console.log(tempTableData[row][\"extendedPrice\"], typeof(tempTableData[row][\"extendedPrice\"]))\n    if (\n      (key === \"qty\" || key === \"unitPrice\")/*  &&\n      tempTableData[row][\"extendedPrice\"] !== \"0.00\" */\n    ) {\n      const extendedPrice =\n        parseFloat(tempTableData[row][\"qty\"]) *\n        parseFloat(tempTableData[row][\"unitPrice\"]);\n      // console.log(\"enter if\", value, extendedPrice);\n      if (!isNaN(extendedPrice)) {\n        tempTableData[row][\"extendedPrice\"] = extendedPrice.toFixed(2);\n      }\n    }\n    setTableData(tempTableData);\n  };\n\n  const setMarkup = (value) => {\n    let tempTableData = [...tableData];\n\n    for (let index = 0; index < tempTableData.length; index++) {\n      handleChange(index, \"markup\" , value);\n    }\n  };\n\n  useEffect(() => {\n    /**Fetch the data from the aws textract for the image */\n    async function fetchOCRData() {\n      return chetak();\n\n      setLoader(true)\n      const ocrData = await Promise.all(\n        props.filename.map(async (file) => {\n          try {\n            const res = await tesseractService.GetOCRData(file);\n            // console.log(\"Gettting description for\", inputFile, res)\n            // return res.body;\n            return chooseFilter(props.selectedInvoice, res.body);\n          } catch (error) {\n            // console.log(\"error fetching descripton\", error);\n            // return null;\n            throw new Error(error);\n          }\n        })\n      );\n      // const ocrData = await tesseractService.GetOCRData(props.filename);\n      // console.log(\"ocr recieved data\", ocrData);\n      /**\n       * combine ocrdata into \"newData\" and return it\n       */\n      // setLoader(false);\n      /** apply filter for the specific invoice */\n      let newData = []\n      ocrData.forEach(data => newData=[...newData,...data])\n      return newData\n    }\n    async function invoiceData () {\n      const products = await tesseractService.GetProductDetails(props.selectedInvoice);\n      return products\n      // setItemNoDropdown(Object.keys(products))\n      // setProductDetails(products);\n    };\n    fetchOCRData()\n      .then(ocrData => {\n        invoiceData()\n          .then(products => {\n            // /**post processing the table data after returning form filter */\n            function convertToUpperCase(obj) {\n              let newObj = {}\n              for ( let key in obj) {\n                // console.log(\"obj[key]\", obj[key])\n                newObj[key.toUpperCase()] = obj[key]\n              }\n              return newObj\n            }\n            products = convertToUpperCase(products)\n            // console.log(\"The products key\", products)\n            let table = ocrData.map(row =>{\n              /**For invoices which dont have item no, set description as item no */\n              if (row.itemNo === undefined) {\n                row.itemNo = row.description.trim().toUpperCase()\n              }\n              row.itemNo = row.itemNo.toString().toUpperCase();\n              row.description = products[row.itemNo] !== undefined ? products[row.itemNo].Description: row.description\n              row.pieces = products[row.itemNo] !== undefined ? products[row.itemNo].Quantity : 0\n              row.markup = 0\n              let sp = 0\n              if (parseInt(row.pieces)) {\n                sp = (parseFloat(row.unitPrice)/parseInt(row.pieces)).toFixed(2)\n              }\n              /**filter out the rows for which qty shipped & extendedPrice is zero */\n              if (row.qty == \"0\" && row.extendedPrice === \"0.00\") {\n                return null\n              }\n              /**Calulate qty for which qty is not read/scanned by textract */\n              if (!row.qty) {\n                row.qty = (\n                  parseFloat(row.extendedPrice) / parseFloat(row.unitPrice)\n                ).toFixed(0);\n              }\n              return {...row, sp}\n            })\n            setLoader(false);\n            setTableData(table.filter((data) => data !== null));\n            setItemNoDropdown(Object.keys(products));\n            setProductDetails(products);\n          })\n          .catch(err => {\n            setLoader(false);\n            // console.log(\"err with ocr\", err)\n          })\n          // .then(() => setLoader(false))\n      })\n    // invoiceData();\n  }, []);\n\n  useEffect(() => {\n    // console.log(\"rerendered\", tableData[0]);\n  }, [ tableData ])\n  // console.log(\"Item fetched\", tableData, productDetails)\n  if (loader) {\n    return <Spinner />;\n  }\n  return (\n    <div className=\"container-fluid\">\n      {pushToInventory ? (\n        <UpdateInventory newInventoryData={tableData} header={header}/>\n      ) : (\n        renderTableData()\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.userId,\n  };\n};\n\nexport default connect(mapStateToProps)(DisplayData);","/root/environment/inventory-management/client/src/components/Navigation/Toolbar/Toolbar.js",[],"/root/environment/inventory-management/client/src/services/TesseractService.js",[],"/root/environment/inventory-management/client/src/utils/filterData.js",[],"/root/environment/inventory-management/client/src/components/Navigation/NavigationItems/NavigationItems.js",["232"],"import React, { useEffect, useState } from 'react'\n\nimport styles from './NavigationItems.module.css'\nimport NavigationItem from './NavigationItem/NavigationItem'\nimport CwIcon from \"../../../Images/CwIcon.png\"\n\nconst NavigationItems = (props) => {\n    const [user, setUser] = useState(props.isAuth)\n    useEffect(() => {\n        setUser(props.isAuth)\n        // console.log(\"User\", user)\n    }, [user])\n    return (\n        <ul className={styles.NavigationItems}>\n            <img className={styles.logo}  src={CwIcon} alt=\"\"/>\n            {props.isAuth ? <NavigationItem link = \"/logout\">Logout</NavigationItem> :null}\n        </ul>\n    )\n};\n\nexport default NavigationItems;","/root/environment/inventory-management/client/src/components/Navigation/NavigationItems/NavigationItem/NavigationItem.js",[],"/root/environment/inventory-management/client/src/UI/Spinner/Spinner.js",[],"/root/environment/inventory-management/client/src/containers/Auth/Auth.js",[],"/root/environment/inventory-management/client/src/containers/Auth/Logout/Logout.js",[],"/root/environment/inventory-management/client/src/firebase.js",[],"/root/environment/inventory-management/client/src/services/LoginService.js",[],"/root/environment/inventory-management/client/src/UI/LoginPage.js",[],"/root/environment/inventory-management/client/src/services/axios.js",[],"/root/environment/inventory-management/client/src/UI/Button.js",[],"/root/environment/inventory-management/client/src/components/Update/UpdateInventory.js",["233","234","235","236","237"],"/root/environment/inventory-management/client/src/utils/invoice-filters/chetak.js",["238","239"],"const data = [\n  {\n    1: \"ORDER DT \",\n    2: \"CUST \",\n    3: \"NO. \",\n    4: \"P.O. NO. \",\n    5: \"SHIP VIA \",\n    6: \"DATE SHIPPED \",\n    7: \"TERMS \",\n  },\n  {\n    1: \"10/08/2020 \",\n    2: \"NY246 \",\n    3: \"\",\n    4: \"\",\n    5: \"PK#934671 Driver \",\n    6: \"10/09/2020 \",\n    7: \"Bill to Bill/Net 30 \",\n  },\n  {\n    1: \"QTY. ORDERED \",\n    2: \"QTY. SHIPPED \",\n    3: \"ITEM \",\n    4: \"NO. \",\n    5: \"DESCRIPTION \",\n    6: \"UNIT PRICE \",\n    7: \"EXTENDED PRICE \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"61 \",\n    4: \"Deep Sna \",\n    5: \"Sev Thin 12 OZ (12) \",\n    6: \"30.09 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"DTB14 \",\n    4: \"Deep Sna \",\n    5: \"Total Bhel FP 14oz (12) \",\n    6: \"32.51 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"S18 \",\n    4: \"Deep Spi \",\n    5: \"Cor-Cumin Pwd 14oz (20) \",\n    6: \"44.19 \",\n    7: \"44.19 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"S14 \",\n    4: \"Deep Spi \",\n    5: \"Corianderpdr14oz (20) \",\n    6: \"30.99 \",\n    7: \"30.99 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"S16 \",\n    4: \"Deep Spi \",\n    5: \"Cumin Pwd 14oz (20) \",\n    6: \"52.99 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"S15 \",\n    4: \"Deep Spi \",\n    5: \"Cumin Seeds 14oz (20) \",\n    6: \"49.79 \",\n    7: \"49.79 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"S81 \",\n    4: \"Deep Spi \",\n    5: \"Dill Seeds 7 OZ (20) \",\n    6: \"19.89 \",\n    7: \"19.89 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"S25 \",\n    4: \"Deep Spi \",\n    5: \"Garam Masala 14 OZ (20) \",\n    6: \"66.20 \",\n    7: \"66.20 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"S167 \",\n    4: \"Deep Spi \",\n    5: \"KSHMIRIChiliPD14oz (20) \",\n    6: \"55.18 \",\n    7: \"55.18 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"S73 \",\n    4: \"Deep Spi \",\n    5: \"Methi Bhardo 7 OZ (20) \",\n    6: \"24.29 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"S32 \",\n    4: \"Deep Spi \",\n    5: \"Red Chili Crush7oz (20) \",\n    6: \"27.69 \",\n    7: \"27.69 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"S30 \",\n    4: \"Deep Spi \",\n    5: \"Red Chili X Hot7oz (20) \",\n    6: \"19.89 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"S78 \",\n    4: \"Deep Spi \",\n    5: \"Sesame Sds Wshd7oz (20) \",\n    6: \"22.09 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"S80 \",\n    4: \"Deep Spi \",\n    5: \"SesameSeedsNatr. 70(20) \",\n    6: \"19.89 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"S64 \",\n    4: \"Deep Spi \",\n    5: \"Whole Chilli 3.5oz (30) \",\n    6: \"24.98 \",\n    7: \"24.98 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"BAG \",\n    3: \"CW1 \",\n    4: \"Generic \",\n    5: \"DrywholeCoconut22L(1) \",\n    6: \"75.02 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"T53 \",\n    4: \"Horlicks \",\n    5: \"Horlicks Plain17. (24) \",\n    6: \"105.81 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"T53L \",\n    4: \"Horlicks \",\n    5: \"Horlicks Plain2.: (12) \",\n    6: \"99.26 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"T66 \",\n    4: \"Horlicks \",\n    5: \"HorlicksChoco.17.5 (24) \",\n    6: \"113.78 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"55M \",\n    4: \"Mirch Ma \",\n    5: \"AgraDalMooth 12oz (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"54M \",\n    4: \"Mirch Ma \",\n    5: \"Aloo Bhujia 12 oz. (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"20M \",\n    4: \"Mirch Ma \",\n    5: \"Bhadran Moong 12oz (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"31M \",\n    4: \"Mirch Ma \",\n    5: \"Bombay Bh-Puril2oz (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"13M \",\n    4: \"Mirch Ma \",\n    5: \"Boondi- - MM 12oz (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"29M \",\n    4: \"Mirch Ma \",\n    5: \"Channa-MN 12oz(15) \",\n    6: \"26.36 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"28M \",\n    4: \"Mirch Ma \",\n    5: \"Channadal-MM 12oz (15) \",\n    6: \"25.31 \",\n    7: \"25.31 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"12M \",\n    4: \"Mirch Ma \",\n    5: \"Chevda Mix-MM - 12oz (15) \",\n    6: \"25.31 \",\n    7: \"25.31 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"26M \",\n    4: \"Mirch Ma \",\n    5: \"Chuckry-Stcksmm12o - (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"27M \",\n    4: \"Mirch Ma \",\n    5: \"Corn Chvda-MM 12oz (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"19M \",\n    4: \"Mirch Ma \",\n    5: \"Dal Muth 12oz (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"15M \",\n    4: \"Mirch Ma \",\n    5: \"Ganthiya-MM 12oz (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"21M \",\n    4: \"Mirch Ma \",\n    5: \"GreenVatana- - MM12oz (15) \",\n    6: \"26.36 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"2 0 * \",\n    2: \"CAS \",\n    3: \"59M \",\n    4: \"Mirch Ma \",\n    5: \"Khatta Mitha 12oz (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"32M \",\n    4: \"Mirch Ma \",\n    5: \"Madras Mix 12oz (15) \",\n    6: \"26.36 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"73M \",\n    4: \"Mirch Ma \",\n    5: \"Methi Puri 12oz (15) \",\n    6: \"25.32 \",\n    7: \"25.32 \",\n  },\n  {\n    1: \"1 1 \",\n    2: \"CAS \",\n    3: \"22M \",\n    4: \"Mirch Ma \",\n    5: \"Moong Dal-MM - 12oz (15) \",\n    6: \"25.31 \",\n    7: \"25.31 \",\n  },\n  {\n    1: \"2 2 \",\n    2: \"CAS \",\n    3: \"78M \",\n    4: \"Mirch Ma \",\n    5: \"Nylon Thin Sev24oz (12) \",\n    6: \"29.10 \",\n    7: \"58.20 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"14M \",\n    4: \"Mirch Ma \",\n    5: \"Papadi - MM 12oz (15) \",\n    6: \"25.31 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"1 0 * \",\n    2: \"CAS \",\n    3: \"57M \",\n    4: \"Mirch Ma \",\n    5: \"Peanut Bhujia 12oz (15) \",\n    6: \"26.36 \",\n    7: \"0.00 \",\n  },\n  {\n    1: \"\",\n    2: \"* \",\n    3: \"Price \",\n    4: \"increase \",\n    5: \"till May 2020 * \",\n    6: \"\",\n    7: \"\",\n  },\n];\n\nexport const chetak = () => {\n \n  let filteredData = data.map((line) => Object.values(line).join(\"\").trim());\n\n  let tableData = filteredData.map((row, index) => {\n    // console.log(\"Data received in row\", row)\n    row = row.replaceAll(\"* \", \"\")\n    const extendedPrice = row.split(\" \").splice(-1)[0];\n    const unitPrice = row.split(\" \").splice(-2)[0];\n    // var pcs = row.split(\" \").splice(-3)[0];\n    // var qtyOredered = row.split(\" \").splice(0)[0];\n    const qty = row.split(\" \").splice(1)[0];\n    const description = row.split(\" \").splice(4).slice(0, -2).join(\" \");\n    const itemNo = row.split(\" \").splice(2).slice(0, 2).join(\" \");\n    const pieces = 0\n    const markup = 0\n    if (isNaN(extendedPrice) || isNaN(unitPrice)) {\n      return null;\n    }\n    if (extendedPrice == \"0.00\" && qty == \"0\") {\n      return null;\n    }\n    return {\n      qty,\n      itemNo,\n      description,\n      pieces,\n      unitPrice,\n      extendedPrice,\n      markup,\n    };\n  });\n  console.table(tableData)\n  return tableData.filter((data) => data !== null);\n};\n/**\n * onChange={(event, newValue) => {\n                  // console.log(\"Selected Value\", newValue)\n                  if (newValue) {\n                    // element[1] = newValue\n                    // // let itemDescription = [...itemNoDescription]\n                    // // itemDescription[index] = productDetails[newValue].Description\n                    // // setItemNoDescription(itemDescription);\n                    // // console.log(\"Old value\", itemDescription,);\n                    // let tempTableData = [...tableData];\n                    handleChange(index, 1, newValue);\n                  }\n */\n/**scan.jpg\n * 1: {1: \"\", 2: \"ORDER DT \", 3: \"CUST \", 4: \"NO. \", 5: \"P.O. \", 6: \"NO. \", 7: \"SHIP VIA \", 8: \"DATE SHIPPED \", 9: \"TERMS \"}\n2: {1: \"\", 2: \"10/08/2020 \", 3: \"NY246 \", 4: \"\", 5: \"\", 6: \"\", 7: \"PK#934671- Driver \", 8: \"10/09/2020 \", 9: \"Bill to Bill/Net 30 \"}\n3: {1: \"\", 2: \"QTY. ORDERED \", 3: \"QTY. SHIPPED \", 4: \"ITEM \", 5: \"NO. \", 6: \"\", 7: \"DESCRIPTION \", 8: \"UNIT PRICE \", 9: \"EXTENDED PRICE \"}\n4: {1: \"2 \", 2: \"0 * \", 3: \"CAS \", 4: \"HSMJ \", 5: \"Deep \", 6: \"Fro \", 7: \"8JlpnoChsSmsa7oz (12) \", 8: \"27.77 \", 9: \"0.00 \"}\n5: {1: \"2 \", 2: \"0 * \", 3: \"CAS \", 4: \"EBM \", 5: \"Deep \", 6: \"Fro \", 7: \"Bhindi Masala 10oz (12) \", 8: \"26.49 \", 9: \"0.00 \"}\n6: {1: \"\", 2: \"\", 3: \"* \", 4: \"Price \", 5: \"reduction \", 6: \"\", 7: \"from $2.55 to $2.21 * \", 8: \"\", 9: \"\"}\n7: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"ECH \", 5: \"Deep \", 6: \"Fro \", 7: \"Chhole 10oz (12) \", 8: \"26.49 \", 9: \"26.49 \"}\n8: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"HVSI \", 5: \"Deep \", 6: \"Fro \", 7: \"Cktl.SpringRoll35P (24) \", 8: \"67.13 \", 9: \"67.13 \"}\n9: {1: \"\", 2: \"\", 3: \"* \", 4: \"$3.99 \", 5: \"Sticker \", 6: \"* \", 7: \"\", 8: \"\", 9: \"\"}\n10: {1: \"5 \", 2: \"5 \", 3: \"CAS \", 4: \"I5P \", 5: \"Deep \", 6: \"Fro \", 7: \"CktlPotatoSmsasopc( (24) \", 8: \"52.74 \", 9: \"263.70 \"}\n11: {1: \"2 \", 2: \"2 \", 3: \"CAS \", 4: \"SDK \", 5: \"Deep \", 6: \"Fro \", 7: \"Dal Makhani 10 oz. (12) \", 8: \"18.68 \", 9: \"37.36 \"}\n12: {1: \"2 \", 2: \"2 \", 3: \"CAS \", 4: \"BR27 \", 5: \"Deep \", 6: \"Fro \", 7: \"DeepChoralFafda7oz (24) \", 8: \"28.91 \", 9: \"57.82 \"}\n13: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"BR27 \", 5: \"Deep \", 6: \"Fro \", 7: \"DeepChoralFafda7oz (24) \", 8: \"28.91 \", 9: \"0.00 \"}\n14: {1: \"\", 2: \"\", 3: \"* \", 4: \"\", 5: \"Free! \", 6: \"\", 7: \"\", 8: \"\", 9: \"\"}\n15: {1: \"5 \", 2: \"5 \", 3: \"CAS \", 4: \"JPS \", 5: \"Deep \", 6: \"Fro \", 7: \"Jumbo Punjbi 8pc (8) \", 8: \"33.44 \", 9: \"167.20 \"}\n16: {1: \"15 \", 2: \"15 \", 3: \"CAS \", 4: \"IJPS \", 5: \"Deep \", 6: \"Fro \", 7: \"Jumbo Samosa 15pc (4) \", 8: \"26.77 \", 9: \"401.55 \"}\n17: {1: \"2 \", 2: \"2 \", 3: \"CAS \", 4: \"EMK \", 5: \"Deep \", 6: \"Fro \", 7: \"Malai Kofta 10oz (12) \", 8: \"41.36 \", 9: \"82.72 \"}\n18: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"EMP \", 5: \"Deep \", 6: \"Fro \", 7: \"Mutter Paneer 10oz (12) \", 8: \"34.17 \", 9: \"34.17 \"}\n19: {1: \"1 \", 2: \"0 * \", 3: \"CAS \", 4: \"DF13 \", 5: \"Deep \", 6: \"Fro \", 7: \"Onion Pakora 10oz (24) \", 8: \"42.15 \", 9: \"0.00 \"}\n20: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"EPM \", 5: \"Deep \", 6: \"Fro \", 7: \"Paneer MakhanilOoz (12) \", 8: \"30.99 \", 9: \"30.99 \"}\n21: {1: \"2 \", 2: \"2 \", 3: \"CAS \", 4: \"ISMVT \", 5: \"Deep \", 6: \"Fro \", 7: \"Prty Smsa Veg 36pc (5) \", 8: \"44.11 \", 9: \"88.22 \"}\n22: {1: \"1 \", 2: \"0 * \", 3: \"CAS \", 4: \"DF12 \", 5: \"Deep \", 6: \"Fro \", 7: \"Spinach PakoralOoz (24) \", 8: \"42.15 \", 9: \"0.00 \"}\n23: {1: \"2 \", 2: \"0 * \", 3: \"CAS \", 4: \"EUN \", 5: \"Deep \", 6: \"Fro \", 7: \"Undhiu 10 OZ. (12) \", 8: \"26.49 \", 9: \"0.00 \"}\n24: {1: \"2 \", 2: \"0 * \", 3: \"CAS \", 4: \"VMB16 \", 5: \"Deep \", 6: \"Fro \", 7: \"Veg MasalaBurgerFP (8) \", 8: \"67.96 \", 9: \"0.00 \"}\n25: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"DIQ35 \", 5: \"Deep \", 6: \"IQF \", 7: \"Arvi 120z (24) \", 8: \"30.90 \", 9: \"30.90 \"}\n26: {1: \"3 \", 2: \"0 * \", 3: \"CAS \", 4: \"DIQ11 \", 5: \"Deep \", 6: \"IQF \", 7: \"Baby Bhindi 12oz (24) \", 8: \"26.58 \", 9: \"0.00 \"}\n27: {1: \"3 \", 2: \"0 * \", 3: \"CAS \", 4: \"DIQ12 \", 5: \"Deep \", 6: \"IQF \", 7: \"Bhindi Cut 12oz (24) \", 8: \"27.90 \", 9: \"0.00 \"}\n28: {1: \"1 \", 2: \"0 * \", 3: \"CAS \", 4: \"DIQ36 \", 5: \"Deep \", 6: \"IQF \", 7: \"Chauri 12Oz (24) \", 8: \"31.86 \", 9: \"0.00 \"}\n29: {1: \"1 \", 2: \"0 * \", 3: \"CAS \", 4: \"DIQ13 \", 5: \"Deep \", 6: \"IQF \", 7: \"Chikoo Slices12oz (24) \", 8: \"37.86 \", 9: \"0.00 \"}\n30: {1: \"2 \", 2: \"2 \", 3: \"CAS \", 4: \"DIQ77 \", 5: \"Deep \", 6: \"IQF \", 7: \"Coconut Slices12Oz (24) \", 8: \"46.38 \", 9: \"92.76 \"}\n31: {1: \"2 \", 2: \"2 \", 3: \"CAS \", 4: \"DIQ14 \", 5: \"Deep \", 6: \"IQF \", 7: \"Drumsticks 120z (24) \", 8: \"29.22 \", 9: \"58.44 \"}\n32: {1: \"3 \", 2: \"0 * \", 3: \"CAS \", 4: \"DIQ99 \", 5: \"Deep \", 6: \"IQF \", 7: \"Fro.Mango Pulp14. 1 (24) \", 8: \"40.54 \", 9: \"0.00 \"}\n33: {1: \"3 \", 2: \"3 \", 3: \"CAS \", 4: \"DIQ63 \", 5: \"Deep \", 6: \"IQF \", 7: \"Green Peas 21b (12) \", 8: \"31.92 \", 9: \"95.76 \"}\n34: {1: \"3 \", 2: \"3 \", 3: \"CAS \", 4: \"DIQ62 \", 5: \"Deep \", 6: \"IQF \", 7: \"Green Peas 3. 851b (6) \", 8: \"28.17 \", 9: \"84.51 \"}\n35: {1: \"3 \", 2: \"0 * \", 3: \"CAS \", 4: \"DIQ98 \", 5: \"Deep \", 6: \"IQF \", 7: \"GreenMangol2oz (24) \", 8: \"35.83 \", 9: \"0.00 \"}\n36: {1: \"3 \", 2: \"0 * \", 3: \"CAS \", 4: \"DIQ97 \", 5: \"Deep \", 6: \"IQF \", 7: \"Mango Pulp 30oz (12) \", 8: \"41.14 \", 9: \"0.00 \"}\n37: {1: \"3 \", 2: \"0 * \", 3: \"CAS \", 4: \"DIQ96 \", 5: \"Deep \", 6: \"IQF \", 7: \"Mango Slices 12oz (24) \", 8: \"58.25 \", 9: \"0.00 \"}\n38: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"DIQ72 \", 5: \"Deep \", 6: \"IQF \", 7: \"Methi Chopped 10oz (24) \", 8: \"41.09 \", 9: \"41.09 \"}\n39: {1: \"2 \", 2: \"2 \", 3: \"CAS \", 4: \"DIQ67 \", 5: \"Deep \", 6: \"IQF \", 7: \"Peas & Carrot 21b (12) \", 8: \"27.74 \", 9: \"55.48 \"}\n40: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"DIQ24 \", 5: \"Deep \", 6: \"IQF \", 7: \"Punjabi Tinda12oz (24) \", 8: \"29.22 \", 9: \"29.22 \"}\n41: {1: \"10 \", 2: \"10 \", 3: \"CAS \", 4: \"DIQ42 \", 5: \"Deep \", 6: \"IQF \", 7: \"ShreddedCoconut12o (24) \", 8: \"43.74 \", 9: \"437.40 \"}\n42: {1: \"10 \", 2: \"0 * \", 3: \"CAS \", 4: \"DIQ41 \", 5: \"Deep \", 6: \"IQF \", 7: \"Shreddedcoconut240( (12) \", 8: \"43.21 \", 9: \"0.00 \"}\n43: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"DIQ27 \", 5: \"Deep \", 6: \"IQF \", 7: \"Suran 120z (24) \", 8: \"26.58 \", 9: \"26.58 \"}\n */\n\n /**scan 7\n  * 1: {1: \"1 \", 2: \"1 \", 3: \"CAS DDL2 Deep Dai Dahi Lowfat 21b (8) \", 4: \"17.36 \", 5: \"17.36 \"}\n2: {1: \"1 \", 2: \"1 \", 3: \"CAS DDL5 Deep Dai Dahi Lowfat 51b (6) \", 4: \"30.66 \", 5: \"30.66 \"}\n3: {1: \"1 \", 2: \"1 \", 3: \"CAS DDL5 Deep Dai Dahi Lowfat 51b (6) \", 4: \"30.66 \", 5: \"0.00 \"}\n4: {1: \"\", 2: \"\", 3: \"* *** Free! \", 4: \"\", 5: \"\"}\n5: {1: \"1 \", 2: \"1 \", 3: \"CAS DDW2 Deep Dai Dahi Whl milk 21b (8) \", 4: \"17.36 \", 5: \"17.36 \"}\n6: {1: \"5 \", 2: \"5 \", 3: \"CAS DDW5 Deep Dai Dahi Whlemlk 51b (6) \", 4: \"30.66 \", 5: \"153.30 \"}\n7: {1: \"1 \", 2: \"1 \", 3: \"CAS DB21 Deep Dai Raw Paneer 12oz. (20) \", 4: \"63.95 \", 5: \"63.95 \"}\n8: {1: \"\", 2: \"\", 3: \"* Suggested Retail Price $3.49 * \", 4: \"\", 5: \"\"}\n9: {1: \"1 \", 2: \"1 \", 3: \"CAS DB22 Deep Dai Raw Paneer 2.5 lbs (10) \", 4: \"104.75 \", 5: \"104.75 \"}\n10: {1: \"\", 2: \"Refrigerated \", 3: \"[11] Bxs *wt= 282 \", 4: \"$387.38 \", 5: \"\"}\n  */\n /** scan 2\n  * 1: {1: \"\", 2: \"ORDER DT \", 3: \"CUST \", 4: \"NO. \", 5: \"P.O. NO. \", 6: \"SHIP VIA \", 7: \"DATE SHIPPED \", 8: \"TERMS \"}\n2: {1: \"\", 2: \"10/08/2020 \", 3: \"NY246 \", 4: \"\", 5: \"\", 6: \"PK#934671- Driver \", 7: \"10/09/2020 \", 8: \"Bill to Bill/Net 30 \"}\n3: {1: \"\", 2: \"QTY. ORDERED \", 3: \"QTY. SHIPPED \", 4: \"ITEM \", 5: \"NO. \", 6: \"DESCRIPTION \", 7: \"UNIT PRICE \", 8: \"EXTENDED PRICE \"}\n4: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"K36 \", 5: \"Bansi \", 6: \"Kolh Jaggery 10Lb (4) \", 7: \"24.60 \", 8: \"24.60 \"}\n5: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"P18 \", 5: \"Bansi \", 6: \"Kurmura Ladoo3. 5oz (50) \", 7: \"36.11 \", 8: \"36.11 \"}\n6: {1: \"3 \", 2: \"3 \", 3: \"CAS \", 4: \"MH1 \", 5: \"Bansi \", 6: \"Phool Makhana 7oz (20) \", 7: \"72.69 \", 8: \"218.07 \"}\n7: {1: \"1 \", 2: \"0 * \", 3: \"CAS \", 4: \"G144L \", 5: \"Bansi \", 6: \"Poha Thick 4lb (10) \", 7: \"34.50 \", 8: \"0.00 \"}\n8: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"G53 \", 5: \"Bansi \", 6: \"Rst.Gulabichana14 (20) \", 7: \"38.78 \", 8: \"38.78 \"}\n9: {1: \"1 \", 2: \"0 * \", 3: \"CAS \", 4: \"T69 \", 5: \"Boost \", 6: \"Boost Powder 15.75(24) \", 7: \"119.04 \", 8: \"0.00 \"}\n10: {1: \"2 \", 2: \"2 \", 3: \"CAS \", 4: \"K38N \", 5: \"Britanni \", 6: \"Bourbon 3.5oz (30) \", 7: \"12.66 \", 8: \"25.32 \"}\n11: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"K38L \", 5: \"Britanni \", 6: \"Bourbon 6.9 OZ (24) \", 7: \"17.15 \", 8: \"17.15 \"}\n12: {1: \"2 \", 2: \"2 \", 3: \"CAS \", 4: \"BN121 \", 5: \"Britanni \", 6: \"Bourbon Cappuccino (24) \", 7: \"8.45 \", 8: \"16.90 \"}\n13: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"BN113 \", 5: \"Britanni \", 6: \"Chocolush 2. 64oz (24) \", 7: \"17.32 \", 8: \"17.32 \"}\n14: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"BN14 \", 5: \"Britanni \", 6: \"Digestive 14.11 oz (12) \", 7: \"19.31 \", 8: \"19.31 \"}\n15: {1: \"2 \", 2: \"2 \", 3: \"CAS \", 4: \"BN71 \", 5: \"Britanni \", 6: \"Fifty Fifty 2. 2oz (48) \", 7: \"11.09 \", 8: \"22.18 \"}\n16: {1: \"\", 2: \"\", 3: \"* \", 4: \"Suggested \", 5: \"retail \", 6: \"price 3 for $ 1.00 * \", 7: \"\", 8: \"\"}\n17: {1: \"5 \", 2: \"5 \", 3: \"CAS \", 4: \"R53P \", 5: \"Britanni \", 6: \"GDPistaAlmond2.630( (48) \", 7: \"18.32 \", 8: \"91.60 \"}\n18: {1: \"\", 2: \"\", 3: \"* 2 \", 4: \"FOR \", 5: \"$1 PRE \", 6: \"PRINTED \", 7: \"\", 8: \"\"}\n19: {1: \"5 \", 2: \"5 \", 3: \"CAS \", 4: \"K46P \", 5: \"Britanni \", 6: \"Good day Cashew2.6 (48) \", 7: \"18.32 \", 8: \"91.60 \"}\n20: {1: \"\", 2: \"\", 3: \"* 2 \", 4: \"FOR \", 5: \"$1 PRE \", 6: \"PRINTED \", 7: \"\", 8: \"\"}\n21: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"K39 \", 5: \"Britanni \", 6: \"LittleHearts2.640z(72) \", 7: \"33.96 \", 8: \"33.96 \"}\n22: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"K4OS \", 5: \"Britanni \", 6: \"Marie Gold . loz (60) \", 7: \"16.92 \", 8: \"16.92 \"}\n23: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"K40 \", 5: \"Britanni \", 6: \"Marie Gold 5.29oz (60) \", 7: \"28.33 \", 8: \"28.33 \"}\n24: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"BN119 \", 5: \"Britanni \", 6: \"Marie Gold FP (10) \", 7: \"19.13 \", 8: \"19.13 \"}\n25: {1: \"2 \", 2: \"2 \", 3: \"CAS \", 4: \"BN25 \", 5: \"Britanni \", 6: \"Milk Bikis 3. 17oz (24) \", 7: \"7.73 \", 8: \"15.46 \"}\n26: {1: \"2 \", 2: \"2 \", 3: \"CAS \", 4: \"K47S \", 5: \"Britanni \", 6: \"Nice Time 2. . 8oz (30) \", 7: \"10.56 \", 8: \"21.12 \"}\n27: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"BN12 \", 5: \"Britanni \", 6: \"Nutri. 5 Grain8. 7oz (18) \", 7: \"27.08 \", 8: \"27.08 \"}\n28: {1: \"3 \", 2: \"3 \", 3: \"CAS \", 4: \"BN69 \", 5: \"Britanni \", 6: \"PunjabiCookies21. (8) \", 7: \"21.47 \", 8: \"64.41 \"}\n29: {1: \"\", 2: \"\", 3: \"* \", 4: \"Suggested \", 5: \"Retail \", 6: \"$3.49 * \", 7: \"\", 8: \"\"}\n30: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"BG4 \", 5: \"Britanni \", 6: \"Pure Cow Ghee500Ml (24) \", 7: \"135.86 \", 8: \"135.86 \"}\n31: {1: \"2 \", 2: \"2 \", 3: \"CAS \", 4: \"BN112 \", 5: \"Britanni \", 6: \"Tiger Glucose FP (5) \", 7: \"7.07 \", 8: \"14.14 \"}\n32: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"BN114 \", 5: \"Britanni \", 6: \"Time Pass 1.4oz (40) \", 7: \"7.04 \", 8: \"7.04 \"}\n33: {1: \"\", 2: \"\", 3: \"* \", 4: \"Suggested \", 5: \"Retail \", 6: \"Price 4 for 1$ * \", 7: \"\", 8: \"\"}\n34: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"BN27 \", 5: \"Britanni \", 6: \"WaferCaramel6.2oz (24) \", 7: \"33.69 \", 8: \"33.69 \"}\n35: {1: \"5 \", 2: \"5 \", 3: \"CAS \", 4: \"BN72M \", 5: \"Britanni \", 6: \"Wheat Rusk 21.51oz (12) \", 7: \"26.16 \", 8: \"130.80 \"}\n36: {1: \"1 \", 2: \"0 * \", 3: \"CAS \", 4: \"Q22 \", 5: \"Complan \", 6: \"ComplanChoco.17. (30) \", 7: \"165.33 \", 8: \"0.00 \"}\n37: {1: \"10 \", 2: \"10 \", 3: \"CAS \", 4: \"BS23 \", 5: \"Deep \", 6: \"Panipuri 4 Oz. (16) \", 7: \"31.24 \", 8: \"312.40 \"}\n38: {1: \"2 \", 2: \"2 \", 3: \"CAS \", 4: \"F24S \", 5: \"Deep Flo \", 6: \"AllPurpFlMaida2 (20) \", 7: \"26.80 \", 8: \"53.60 \"}\n39: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"F24L \", 5: \"Deep Flo \", 6: \"AllPurpFlMaida4 (10) \", 7: \"25.70 \", 8: \"25.70 \"}\n40: {1: \"2 \", 2: \"2 \", 3: \"CAS \", 4: \"F35L \", 5: \"Deep Flo \", 6: \"Besan 81b(5) \", 7: \"40.00 \", 8: \"80.00 \"}\n41: {1: \"1 \", 2: \"1 \", 3: \"CAS \", 4: \"F73 \", 5: \"Deep Flo \", 6: \"CrackWheat (Kansar) (10) \", 7: \"22.40 \", 8: \"22.40 \"}\n42: {1: \"1 \", 2: \"0 * \", 3: \"CAS \", 4: \"F72 \", 5: \"Deep Flo \", 6: \"CrackedWheat (Fada) (10) \", 7: \"22.40 \", 8: \"0.00 \"}\n43: {1: \"2 \", 2: \"2 \", 3: \"CAS \", 4: \"F95 \", 5: \"Deep Flo \", 6: \"MultiGrainFlour101 (4) \", 7: \"30.00 \", 8: \"60.00 \"}\n44: {1: \"\", 2: \"\", 3: \"* \", 4: \"ABSOLUTELY \", 5: \"NO \", 6: \"RETURNS * \", 7: \"\", 8: \"\"}\n\nArray[1]\n1: {1: \"DATE \", 2: \"NUMBER \", 3: \"PAGE \"}\n2: {1: \"10/09/2020 \", 2: \"935459 \", 3: \"5 of 9 \"}\n__proto__: Object\n  * \n  */","/root/environment/inventory-management/client/src/utils/filter.js",["240","241","242","243"],"export const applyFilter=(arr,options)=>{\n  let result=[];\n  for(let i=0;i<arr.length;i++){\n    let data=arr[i];\n    for(var prop in data){\n      if (Object.prototype.hasOwnProperty.call(data,prop)){\n        let str=convertRowToString(data[prop]);\n        str=str.replace(/[`~!@#\\$%^&=:;'<>?,\\*]/gi, '');\n        str=str.replace(/ +(?= )/g,'');\n        str=str.trimStart();\n        str=str.trimEnd();\n        if((options.regex).test(str)){\n          let obj={};\n          for(let j=0;j<options.header.length;j++){\n            let x=\"\";\n            if(Array.isArray(options.body[j])){\n              let index=str.search(options.body[j][1]);\n              x=str.substr(0,index);\n              str=str.substr(x.length);\n            }else{\n              let y=str.split(\" \");\n              str=\"\";\n              for(let k=0;k<options.body[j];k++)x+=y[k]+\" \";\n              for(let k=options.body[j];k<y.length;k++)str+=y[k]+\" \";\n            }\n            x=x.trimStart();\n            x=x.trimEnd();\n            str=str.trimStart();\n            str=str.trimEnd();\n            obj[options.header[j]]=x.toUpperCase();\n          }\n          result.push(obj);\n        }\n      }\n    }\n  }\n  return result;\n}\n\nconst convertRowToString=(obj)=>{\n  let str=\"\";\n  for (var prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj,prop)){\n      str+=obj[prop]+\" \";\n    }\n  }\n  //remove multiple instances of multiple space with single space\n  str=str.replace(/ +(?= )/g,'');\n  str=str.trimStart();\n  str=str.trimEnd();\n  return str;\n}\n\nexport const emptyColumn=(arr)=>{\n  let data=[];\n  for(let i=0;i<arr.length;i++){\n    let obj={};\n    let table=arr[i];\n    for(var prop in table){\n      if (Object.prototype.hasOwnProperty.call(table,prop)){\n        let str=table[prop][1];\n        str=str.replace(/[`~!@#\\$%^&=:;'<>?,\\*]/gi, '');\n        str=str.replace(/ +(?= )/g,'');\n        str=str.trimStart();\n        str=str.trimEnd();\n        let b=str.split(\" \");\n        str=\"\";\n        for(let j=1;j<b.length;j++)str+=b[j];\n        let o=Object.assign({},table[prop]);\n        o[1]=str;\n        obj[prop]=o;\n      }\n    }\n    data.push(obj);\n  }\n  return data;\n}","/root/environment/inventory-management/client/src/utils/invoice-filters/krishna-foods.js",["244","245"],"/**krishna foods\n * 1: {1: \"Quantity \", 2: \"Item Code \", 3: \"Description \", 4: \"U/M \", 5: \"Price Each \", 6: \"Amount \"}\n2: {1: \"10 \", 2: \"Gur Rewari \", 3: \"Gur Rewari 400 gms 20 / ctn \", 4: \"\", 5: \"52.00 \", 6: \"520.00 \"}\n3: {1: \"3 \", 2: \"Sugar Rewari \", 3: \"Sugar rewari 400 gms 20 / ctn \", 4: \"\", 5: \"52.00 \", 6: \"156.00 \"}\n4: {1: \"6 \", 2: \"Gur Gajj \", 3: \"Dry Fruit Gur Gajjak 400 gms 20 / ctn \", 4: \"\", 5: \"70.00 \", 6: \"420.00 \"}\n5: {1: \"4 \", 2: \"Gurr Khasta Gajjak \", 3: \"Gur Khasta Gajjak 400 gms / 20 ctn \", 4: \"\", 5: \"70.00 \", 6: \"280.00 \"}\n6: {1: \"1 \", 2: \"seasme ladoo \", 3: \"Seasme ladoo Bikaji, 240 gm / 20 ctn \", 4: \"\", 5: \"50.00 \", 6: \"50.00 \"}\n7: {1: \"\", 2: \"Peanut Ladoo \", 3: \"Peanut Ladoo Bikaji 240 gms / 20 ctn \", 4: \"\", 5: \"50.00 \", 6: \"50.00 \"}\n8: {1: \"X \", 2: \"Rajgeron ladoo \", 3: \"Rajgeron Ladoo Bikaji 150 gm 20 / ctn \", 4: \"\", 5: \"50.00 \", 6: \"50.00 \"}\n9: {1: \"\", 2: \"Pea ChiKi \", 3: \"Peanut Chikki 400 gms / 20 ctn \", 4: \"\", 5: \"55.00 \", 6: \"110.00 \"}\n10: {1: \"\", 2: \"Se Chikki \", 3: \"Saesme Chikki 400 Gms / 20 Ctn \", 4: \"\", 5: \"65.00 \", 6: \"65.00 \"}\n11: {1: \"\", 2: \"Ass Chiki \", 3: \"Assorted Chikki 400 gms 20 / ctn \", 4: \"\", 5: \"65.00 \", 6: \"130.00 \"}\n12: {1: \"3 \", 2: \"Gobhi Parantha 4 \", 3: \"Gobhi Parantha (4 Pcs X 12 Pks ) Bikaji \", 4: \"\", 5: \"21.00 \", 6: \"63.00 \"}\n13: {1: \"\", 2: \"Methi Parantha 6 \", 3: \"Methi Parantha (6 Pcs X 12 Pks ) Bikaji \", 4: \"\", 5: \"19.80 \", 6: \"59.40 \"}\n14: {1: \"\", 2: \"Home Style Paran \", 3: \"Home Style Parantha ( 6 Pcs X 12 Pks ) Bikaji \", 4: \"\", 5: \"19.20 \", 6: \"57.60 \"}\n__proto__: Object\n1: {1: {…}, 2: {…}}\n2: {1: {…}, 2: {…}}\n3: {1: {…}, 2: {…}}\nlength: 4\n__proto__: Array(0)\nstatusCode: 200\n__proto__: Object\n\n */\nexport const krishnaFoods = (data) => {\n    let filteredData = data.filter((line) => line[6] !== \"\" && !isNaN(line[6]));\n        // .filter((line) => line./* text. */ includes(\"(\"))\n        // .map((line) => line./* text. */ trim());\n\n    let tableData = filteredData.map((row, index) => {\n        let qty = row[1].trim()\n        const itemNo = row[2].trim()\n        const description = row[3].trim()\n        const unitPrice = row[5].trim()\n        const extendedPrice = row[6].trim()\n        const pieces = 0;\n        const markup = 0;\n        if(isNaN(extendedPrice) || isNaN(unitPrice)){\n          return null\n        }\n        if (extendedPrice == \"0.00\" && qty == \"0\") {\n            return null;\n        }\n        if(isNaN(qty) || !qty) {\n          // itemNo = [qty, itemNo].join(\" \")\n          qty = (parseFloat(extendedPrice)/ parseFloat(unitPrice)).toFixed(0)\n           \n        }\n        return {\n          qty,\n          itemNo,\n          description,\n          pieces,\n          unitPrice,\n          extendedPrice,\n          markup,\n        };\n    });\n    console.table(filteredData)\n    return tableData.filter((data) => data !== null);\n    \n};","/root/environment/inventory-management/client/src/utils/optionData.js",[],"/root/environment/inventory-management/client/src/services/InventoryService.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/index.js",[],["246","247"],"/home/alekh/Workspace/Tech/inventory-management/client/src/App.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/store/reducer/reducerAuth.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/store/action/actionAuth.js",["248","249"],"/home/alekh/Workspace/Tech/inventory-management/client/src/components/Layout/Layout.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/containers/Auth/Auth.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/containers/Auth/Logout/Logout.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/UI/Spinner/Spinner.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/components/Invoice/Invoice.js",["250"],"/home/alekh/Workspace/Tech/inventory-management/client/src/firebase.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/UI/LoginPage.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/services/LoginService.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/components/Navigation/Toolbar/Toolbar.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/services/TesseractService.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/components/DisplayData/DisplayData.js",["251","252","253","254","255","256"],"/home/alekh/Workspace/Tech/inventory-management/client/src/services/axios.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/components/Navigation/NavigationItems/NavigationItems.js",["257"],"/home/alekh/Workspace/Tech/inventory-management/client/src/UI/Button.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/utils/filterData.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/components/Update/UpdateInventory.js",["258","259","260","261","262","263","264","265"],"import React, { useEffect, useState } from 'react'\nimport { Redirect } from 'react-router';\nimport firebase from \"../../firebase\";\nimport { InventoryService } from '../../services/InventoryService';\nimport Button from '../../UI/Button';\nimport Spinner from '../../UI/Spinner/Spinner';\n\nconst UpdateInventory = (props) => {\n    const header = props.header\n    const [newInventoryData, setNewInventoryData] = useState(props.newInventoryData);\n    const [inventory, setInventory] = useState([])\n    const [redirect, setRedirect] = useState(false)\n    const [loader, setLoader] = useState(true)\n    const [wooComProducts, setWooComProducts] = useState([])\n    const inventoryService = new InventoryService()\n    const getInventoryData = () => {\n        const ref = firebase.database().ref(\"/test\");\n        ref.on(\"value\", (snapshot) => {\n            // console.log(snapshot.val());\n            if (snapshot.val()) {\n                const data = Object.values(snapshot.val());\n                setInventory(data)\n            }\n            \n        });\n    }\n    const renderTableHeader = () => {\n      return header.map((key, index) => {\n        return (\n          <th key={index}>\n            {key.toUpperCase()}\n          </th>\n        );\n      });\n    };\n    const renderTableData = () => {\n        let rows = newInventoryData.map((element, index) => {\n          return (\n            <tr key={index}>\n              <td>{index + 1}</td>\n              <td>{element.qty}</td>\n              <td>{element.itemNo}</td>\n              <td>{element.description}</td>\n              <td>{element.pieces}</td>\n              <td>{element.unitPrice}</td>\n              <td>{element.extendedPrice}</td>\n              <td>{element.markup}</td>\n              <td>{element.sp}</td>\n            </tr>\n          );\n        });\n        return (\n          <div >\n            <table className=\"table table-hover table-responsive-sm\">\n              <tbody>\n                <tr>{renderTableHeader()}</tr>\n                {rows}\n              </tbody>\n            </table>\n            <Button\n              text=\"Confirm Submit\"\n              color=\"btn btn-info\"\n              type=\"submit\"\n              onClick={pushInventoryDetails}\n            />\n          </div>\n        );\n    };\n    /**Incomplete push inventory function*/\n    const pushInventoryDetails = async () => {\n        setLoader(true)\n        let data = newInventoryData.map((element) => {\n          return {\n            item: element.itemNo,\n            qty: parseInt(element.qty) * parseInt(element.pieces),\n            cp: element.unitPrice,\n            markup: element.markup,\n            sp: element.sp,\n          };\n        });\n\n        // data = [...data, ...inventory];\n        // console.log(\"Before\", data.length);\n\n        var duplicates = {};\n        for (var i = 0; i < data.length; i++) {\n          if (duplicates.hasOwnProperty(data[i].item)) {\n            duplicates[data[i].item].push(i);\n          } else if (data.lastIndexOf(data[i].item) !== i) {\n            duplicates[data[i].item] = [i];\n          }\n        }\n        // console.log(\"duplicates\", duplicates)\n        let tempData = Object.values(duplicates).filter(\n          (ele) => ele.length > 1\n        );\n        // let indices = tempData.map(ele => ...ele)\n        if (tempData.length > 0) {\n          tempData.forEach((index) => {\n            let temp = 0;\n            index.forEach((val) => {\n              if (data[val]) {\n                // console.log(\"data[val]\", data[val]);\n                temp += data[val].qty;\n                if (temp - data[val].qty !== 0) {\n                  data[val] = null;\n                }\n              }\n            });\n            data[index[0]].qty = temp;\n          });\n        }\n        data = data.filter((ele) => ele !== null);\n        // console.log(\"All Data\", data);\n\n        /**\n         * add the fileds of  data from the woocom & ocr \n         */\n        let updatedWoocomProducts = data.map((product, index) => {\n          /**find index of the item in fetched woocom product list */\n          const wooIndex = wooComProducts.findIndex(wooProduct => product.item === wooProduct.itemNo)\n          if (wooIndex !== -1) {\n            /**get the qty & other fileds of the woocom product */\n            let {id, stock_quantity} = wooComProducts[wooIndex]\n            stock_quantity += product.qty\n            const regular_price = product.sp\n            return {id, regular_price, stock_quantity, itemNo: product.item}\n          }\n          return null\n        })\n\n        // const success = await pushToFirebase(data)\n        const wooComResponse = await pushToWoocom(updatedWoocomProducts)\n\n        /**filter out the items not pushed on store */ \n        const itemsNotPushed = newInventoryData.filter(\n          ({ itemNo: item1 }) => !wooComResponse.some(({ itemNo: item2 }) => item1 !== item2)\n        );\n        /**set the current table data to be the not pushed items */\n        setNewInventoryData(itemsNotPushed)\n        // console.log(\"woo com\", itemsNotPushed)\n        setLoader(false)\n        if (itemsNotPushed.length === 0) {\n          window.alert(\"Inventory updated successfully\");\n          setRedirect(true)\n        } else {\n          window.alert(\"Inventory not updated\");\n        }\n      \n    };\n\n    const pushToFirebase = async (data) => {\n        try {\n            await data.map((item) => {\n                firebase\n                  .database()\n                  .ref(\"/test\")\n                  .child(`${item.item}`)\n                  .set(item);\n                });\n            return true;\n        } catch (error) {\n            return false;\n        }\n    };\n\n    const pushToWoocom = async (products) => {\n      setLoader(true)\n      const responses = await Promise.all(\n        products.map(async (product) => {\n          try {\n            const res = await inventoryService.UpdateProductDetails(product.id,{regular_price: product.regular_price, stock_quantity: product.stock_quantity} /* {regular_price, stock_quantity} = product */);\n            const {id, name, regular_price, price, sku, slug, stock_quantity, sale_price} = res\n            return {id, name, regular_price, stock_quantity, itemNo: product.itemNo}\n          } catch (error) {\n            /**\n             * break the event loop if any product fails\n             */\n            console.log(error)\n             alert(\"Couldn't update product on website.\");\n            return null\n          }\n        })\n      );\n      setLoader(false)\n      return responses.filter(item => item !== null)\n    }\n    useEffect(() => {\n      getInventoryData()\n      async function getProducts() {\n        const items = await Promise.all(\n          newInventoryData.map(async (row) => {\n            try {\n              /**\n               * The args in getproductdetails will be the sku fetched from the json file\n               * const sku = jsonfile[row.itemNo]\n               */\n              const res = await inventoryService.GetProductDetails(row.sku);\n              const {id, name, regular_price, price, sku, slug, stock_quantity, sale_price} = res[0]\n              return {id, name, regular_price, price, sku, slug, stock_quantity, sale_price, itemNo: row.itemNo}\n            } catch (error) {\n              // throw new Error(error);\n              alert(\"Couldn't fetch product from woodpress.\")\n              return null\n            }\n          })\n        );\n        setLoader(false)\n        setWooComProducts(items)\n      }\n      getProducts()\n    }, [])\n    useEffect(() => {\n      // console.log(\"Inventory data\", newInventoryData)\n    }, [newInventoryData, setLoader])\n    if (redirect) {\n      return  <Redirect to=\"/\" />;\n    }\n    if (loader) {\n      return <Spinner />\n    }\n    return (\n      <div>\n        {renderTableData()}\n      </div>\n    );\n}\n\nexport default UpdateInventory\n","/home/alekh/Workspace/Tech/inventory-management/client/src/utils/invoice-filters/chetak.js",["266","267"],"/home/alekh/Workspace/Tech/inventory-management/client/src/components/Navigation/NavigationItems/NavigationItem/NavigationItem.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/utils/invoice-filters/krishna-foods.js",["268","269"],"/home/alekh/Workspace/Tech/inventory-management/client/src/utils/optionData.js",[],"/home/alekh/Workspace/Tech/inventory-management/client/src/utils/filter.js",["270","271","272","273"],"/home/alekh/Workspace/Tech/inventory-management/client/src/services/InventoryService.js",[],{"ruleId":"274","replacedBy":"275"},{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","severity":1,"message":"279","line":1,"column":8,"nodeType":"280","messageId":"281","endLine":1,"endColumn":13},{"ruleId":"278","severity":1,"message":"282","line":46,"column":15,"nodeType":"280","messageId":"281","endLine":46,"endColumn":23},{"ruleId":"278","severity":1,"message":"283","line":61,"column":13,"nodeType":"280","messageId":"281","endLine":61,"endColumn":22},{"ruleId":"278","severity":1,"message":"284","line":20,"column":10,"nodeType":"280","messageId":"281","endLine":20,"endColumn":23},{"ruleId":"285","severity":1,"message":"286","line":75,"column":34,"nodeType":"287","messageId":"288","endLine":75,"endColumn":36},{"ruleId":"289","severity":1,"message":"290","line":246,"column":7,"nodeType":"291","messageId":"292","endLine":260,"endColumn":9},{"ruleId":"289","severity":1,"message":"290","line":268,"column":7,"nodeType":"293","messageId":"292","endLine":270,"endColumn":21},{"ruleId":"285","severity":1,"message":"294","line":307,"column":27,"nodeType":"287","messageId":"288","endLine":307,"endColumn":29},{"ruleId":"295","severity":1,"message":"296","line":330,"column":6,"nodeType":"297","endLine":330,"endColumn":8,"suggestions":"298"},{"ruleId":"295","severity":1,"message":"299","line":12,"column":8,"nodeType":"297","endLine":12,"endColumn":14,"suggestions":"300"},{"ruleId":"301","severity":1,"message":"302","line":127,"column":35,"nodeType":"303","messageId":"304","endLine":127,"endColumn":37},{"ruleId":"278","severity":1,"message":"305","line":142,"column":22,"nodeType":"280","messageId":"281","endLine":142,"endColumn":33},{"ruleId":"278","severity":1,"message":"306","line":143,"column":15,"nodeType":"280","messageId":"281","endLine":143,"endColumn":20},{"ruleId":"307","severity":1,"message":"308","line":149,"column":21,"nodeType":"309","messageId":"288","endLine":149,"endColumn":23},{"ruleId":"295","severity":1,"message":"310","line":159,"column":8,"nodeType":"297","endLine":159,"endColumn":10,"suggestions":"311"},{"ruleId":"285","severity":1,"message":"294","line":410,"column":23,"nodeType":"287","messageId":"288","endLine":410,"endColumn":25},{"ruleId":"285","severity":1,"message":"294","line":410,"column":40,"nodeType":"287","messageId":"288","endLine":410,"endColumn":42},{"ruleId":"312","severity":1,"message":"313","line":8,"column":32,"nodeType":"314","messageId":"315","endLine":8,"endColumn":33,"suggestions":"316"},{"ruleId":"312","severity":1,"message":"317","line":8,"column":45,"nodeType":"314","messageId":"315","endLine":8,"endColumn":46,"suggestions":"318"},{"ruleId":"312","severity":1,"message":"313","line":62,"column":32,"nodeType":"314","messageId":"315","endLine":62,"endColumn":33,"suggestions":"319"},{"ruleId":"312","severity":1,"message":"317","line":62,"column":45,"nodeType":"314","messageId":"315","endLine":62,"endColumn":46,"suggestions":"320"},{"ruleId":"285","severity":1,"message":"294","line":42,"column":27,"nodeType":"287","messageId":"288","endLine":42,"endColumn":29},{"ruleId":"285","severity":1,"message":"294","line":42,"column":44,"nodeType":"287","messageId":"288","endLine":42,"endColumn":46},{"ruleId":"274","replacedBy":"321"},{"ruleId":"276","replacedBy":"322"},{"ruleId":"278","severity":1,"message":"279","line":1,"column":8,"nodeType":"280","messageId":"281","endLine":1,"endColumn":13},{"ruleId":"278","severity":1,"message":"282","line":46,"column":15,"nodeType":"280","messageId":"281","endLine":46,"endColumn":23},{"ruleId":"278","severity":1,"message":"283","line":61,"column":13,"nodeType":"280","messageId":"281","endLine":61,"endColumn":22},{"ruleId":"278","severity":1,"message":"284","line":20,"column":10,"nodeType":"280","messageId":"281","endLine":20,"endColumn":23},{"ruleId":"285","severity":1,"message":"286","line":80,"column":34,"nodeType":"287","messageId":"288","endLine":80,"endColumn":36},{"ruleId":"289","severity":1,"message":"290","line":265,"column":7,"nodeType":"291","messageId":"292","endLine":279,"endColumn":9},{"ruleId":"289","severity":1,"message":"290","line":287,"column":7,"nodeType":"293","messageId":"292","endLine":289,"endColumn":21},{"ruleId":"285","severity":1,"message":"294","line":327,"column":27,"nodeType":"287","messageId":"288","endLine":327,"endColumn":29},{"ruleId":"295","severity":1,"message":"296","line":350,"column":6,"nodeType":"297","endLine":350,"endColumn":8,"suggestions":"323"},{"ruleId":"295","severity":1,"message":"299","line":12,"column":8,"nodeType":"297","endLine":12,"endColumn":14,"suggestions":"324"},{"ruleId":"278","severity":1,"message":"325","line":11,"column":12,"nodeType":"280","messageId":"281","endLine":11,"endColumn":21},{"ruleId":"278","severity":1,"message":"326","line":152,"column":11,"nodeType":"280","messageId":"281","endLine":152,"endColumn":25},{"ruleId":"301","severity":1,"message":"302","line":154,"column":35,"nodeType":"303","messageId":"304","endLine":154,"endColumn":37},{"ruleId":"278","severity":1,"message":"327","line":173,"column":45,"nodeType":"280","messageId":"281","endLine":173,"endColumn":50},{"ruleId":"278","severity":1,"message":"328","line":173,"column":52,"nodeType":"280","messageId":"281","endLine":173,"endColumn":55},{"ruleId":"278","severity":1,"message":"329","line":173,"column":57,"nodeType":"280","messageId":"281","endLine":173,"endColumn":61},{"ruleId":"278","severity":1,"message":"330","line":173,"column":79,"nodeType":"280","messageId":"281","endLine":173,"endColumn":89},{"ruleId":"295","severity":1,"message":"310","line":212,"column":8,"nodeType":"297","endLine":212,"endColumn":10,"suggestions":"331"},{"ruleId":"285","severity":1,"message":"294","line":410,"column":23,"nodeType":"287","messageId":"288","endLine":410,"endColumn":25},{"ruleId":"285","severity":1,"message":"294","line":410,"column":40,"nodeType":"287","messageId":"288","endLine":410,"endColumn":42},{"ruleId":"285","severity":1,"message":"294","line":42,"column":27,"nodeType":"287","messageId":"288","endLine":42,"endColumn":29},{"ruleId":"285","severity":1,"message":"294","line":42,"column":44,"nodeType":"287","messageId":"288","endLine":42,"endColumn":46},{"ruleId":"312","severity":1,"message":"313","line":8,"column":32,"nodeType":"314","messageId":"315","endLine":8,"endColumn":33,"suggestions":"332"},{"ruleId":"312","severity":1,"message":"317","line":8,"column":45,"nodeType":"314","messageId":"315","endLine":8,"endColumn":46,"suggestions":"333"},{"ruleId":"312","severity":1,"message":"313","line":62,"column":32,"nodeType":"314","messageId":"315","endLine":62,"endColumn":33,"suggestions":"334"},{"ruleId":"312","severity":1,"message":"317","line":62,"column":45,"nodeType":"314","messageId":"315","endLine":62,"endColumn":46,"suggestions":"335"},"no-native-reassign",["336"],"no-negated-in-lhs",["337"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'authData' is assigned a value but never used.","'postImage' is assigned a value but never used.","'inventoryData' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","VariableDeclaration","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.filename', 'props.selectedInvoice', and 'tesseractService'. Either include them or remove the dependency array.","ArrayExpression",["338"],"React Hook useEffect has a missing dependency: 'props.isAuth'. Either include it or remove the dependency array. If 'setUser' needs the current value of 'props.isAuth', you can also switch to useReducer instead of useState and read 'props.isAuth' in the reducer.",["339"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'getProducts' is defined but never used.","'items' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","React Hook useEffect has missing dependencies: 'inventoryService' and 'newInventoryData'. Either include them or remove the dependency array.",["340"],"no-useless-escape","Unnecessary escape character: \\$.","Literal","unnecessaryEscape",["341","342"],"Unnecessary escape character: \\*.",["343","344"],["345","346"],["347","348"],["336"],["337"],["349"],["350"],"'inventory' is assigned a value but never used.","'pushToFirebase' is assigned a value but never used.","'price' is assigned a value but never used.","'sku' is assigned a value but never used.","'slug' is assigned a value but never used.","'sale_price' is assigned a value but never used.",["351"],["352","353"],["354","355"],["356","357"],["358","359"],"no-global-assign","no-unsafe-negation",{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},{"messageId":"366","fix":"367","desc":"368"},{"messageId":"369","fix":"370","desc":"371"},{"messageId":"366","fix":"372","desc":"368"},{"messageId":"369","fix":"373","desc":"371"},{"messageId":"366","fix":"374","desc":"368"},{"messageId":"369","fix":"375","desc":"371"},{"messageId":"366","fix":"376","desc":"368"},{"messageId":"369","fix":"377","desc":"371"},{"desc":"360","fix":"378"},{"desc":"362","fix":"379"},{"desc":"364","fix":"380"},{"messageId":"366","fix":"381","desc":"368"},{"messageId":"369","fix":"382","desc":"371"},{"messageId":"366","fix":"383","desc":"368"},{"messageId":"369","fix":"384","desc":"371"},{"messageId":"366","fix":"385","desc":"368"},{"messageId":"369","fix":"386","desc":"371"},{"messageId":"366","fix":"387","desc":"368"},{"messageId":"369","fix":"388","desc":"371"},"Update the dependencies array to be: [props.filename, props.selectedInvoice, tesseractService]",{"range":"389","text":"390"},"Update the dependencies array to be: [props.isAuth, user]",{"range":"391","text":"392"},"Update the dependencies array to be: [inventoryService, newInventoryData]",{"range":"393","text":"394"},"removeEscape",{"range":"395","text":"396"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"397","text":"398"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"399","text":"396"},{"range":"400","text":"398"},{"range":"401","text":"396"},{"range":"402","text":"398"},{"range":"403","text":"396"},{"range":"404","text":"398"},{"range":"405","text":"390"},{"range":"406","text":"392"},{"range":"407","text":"394"},{"range":"408","text":"396"},{"range":"409","text":"398"},{"range":"410","text":"396"},{"range":"411","text":"398"},{"range":"412","text":"396"},{"range":"413","text":"398"},{"range":"414","text":"396"},{"range":"415","text":"398"},[11448,11450],"[props.filename, props.selectedInvoice, tesseractService]",[396,402],"[props.isAuth, user]",[4987,4989],"[inventoryService, newInventoryData]",[279,280],"",[279,279],"\\",[292,293],[292,292],[1799,1800],[1799,1799],[1812,1813],[1812,1812],[12096,12098],[396,402],[7503,7505],[279,280],[279,279],[292,293],[292,292],[1799,1800],[1799,1799],[1812,1813],[1812,1812]]