[{"C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\index.js":"1","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\App.js":"2","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\store\\reducer\\reducerAuth.js":"3","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\store\\reducer\\posStateReducer.js":"4","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\store\\reducer\\loadersReducer.js":"5","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\store\\reducer\\redItemsReducer.js":"6","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\store\\reducer\\openInvoiceReducer.js":"7","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\store\\reducer\\userDetailsReducer.js":"8","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\store\\action\\actionAuth.js":"9","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\components\\Layout\\Layout.js":"10","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\components\\Invoice\\Invoice.js":"11","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\components\\Queue\\Queue.js":"12","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\components\\Pos\\Pos.js":"13","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\components\\Inventory\\Inventory.js":"14","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\containers\\Auth\\Auth.js":"15","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\UI\\Spinner\\Spinner.js":"16","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\containers\\Auth\\Logout\\Logout.js":"17","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\components\\HandWrittenInvoice\\HandWrittenInvoice.js":"18","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\components\\SaveInvoiceData\\SaveInvoiceData.js":"19","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\firebase.js":"20","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\UI\\Button.js":"21","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\UI\\LoginPage.js":"22","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\services\\LoginService.js":"23","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\services\\InventoryService.js":"24","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\services\\TesseractService.js":"25","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\services\\Api.js":"26","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\components\\DisplayData\\DisplayData.js":"27","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\utils\\invoiceList.js":"28","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\components\\Update\\UpdateInventory.js":"29","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\components\\Navigation\\Toolbar\\Toolbar.js":"30","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\services\\axios.js":"31","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\utils\\filterData.js":"32","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\utils\\invoice-filters\\chetak.js":"33","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\components\\Navigation\\NavigationItems\\NavigationItems.js":"34","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\utils\\optionData.js":"35","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\utils\\filter.js":"36","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\utils\\invoice-filters\\krishna-foods.js":"37","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\components\\Navigation\\NavigationItems\\NavigationItem\\NavigationItem.js":"38"},{"size":1221,"mtime":1641444404816,"results":"39","hashOfConfig":"40"},{"size":2483,"mtime":1641444404592,"results":"41","hashOfConfig":"40"},{"size":1045,"mtime":1641444404820,"results":"42","hashOfConfig":"40"},{"size":485,"mtime":1641444404820,"results":"43","hashOfConfig":"40"},{"size":412,"mtime":1641444404820,"results":"44","hashOfConfig":"40"},{"size":515,"mtime":1641444404820,"results":"45","hashOfConfig":"40"},{"size":591,"mtime":1641444404820,"results":"46","hashOfConfig":"40"},{"size":412,"mtime":1641444404820,"results":"47","hashOfConfig":"40"},{"size":4082,"mtime":1641444404820,"results":"48","hashOfConfig":"40"},{"size":435,"mtime":1641444404805,"results":"49","hashOfConfig":"40"},{"size":6279,"mtime":1641444404805,"results":"50","hashOfConfig":"40"},{"size":10196,"mtime":1641444404808,"results":"51","hashOfConfig":"40"},{"size":14998,"mtime":1641444404808,"results":"52","hashOfConfig":"40"},{"size":9751,"mtime":1641444404803,"results":"53","hashOfConfig":"40"},{"size":1690,"mtime":1641444404812,"results":"54","hashOfConfig":"40"},{"size":174,"mtime":1641444404595,"results":"55","hashOfConfig":"40"},{"size":517,"mtime":1641444404816,"results":"56","hashOfConfig":"40"},{"size":63933,"mtime":1641444404797,"results":"57","hashOfConfig":"40"},{"size":108837,"mtime":1641444404812,"results":"58","hashOfConfig":"40"},{"size":617,"mtime":1641444404816,"results":"59","hashOfConfig":"40"},{"size":335,"mtime":1641444404595,"results":"60","hashOfConfig":"40"},{"size":1485,"mtime":1641444404595,"results":"61","hashOfConfig":"40"},{"size":261,"mtime":1641444404816,"results":"62","hashOfConfig":"40"},{"size":5958,"mtime":1641444404816,"results":"63","hashOfConfig":"40"},{"size":1048,"mtime":1641444404816,"results":"64","hashOfConfig":"40"},{"size":394,"mtime":1641444404816,"results":"65","hashOfConfig":"40"},{"size":51241,"mtime":1641444404597,"results":"66","hashOfConfig":"40"},{"size":28357,"mtime":1641724961047,"results":"67","hashOfConfig":"40"},{"size":11212,"mtime":1641444404812,"results":"68","hashOfConfig":"40"},{"size":838,"mtime":1641444404808,"results":"69","hashOfConfig":"40"},{"size":1169,"mtime":1641444404816,"results":"70","hashOfConfig":"40"},{"size":1009,"mtime":1641548967757,"results":"71","hashOfConfig":"40"},{"size":7607,"mtime":1641444404824,"results":"72","hashOfConfig":"40"},{"size":1152,"mtime":1641444404808,"results":"73","hashOfConfig":"40"},{"size":42525,"mtime":1641639394580,"results":"74","hashOfConfig":"40"},{"size":4016,"mtime":1641638914620,"results":"75","hashOfConfig":"40"},{"size":2915,"mtime":1641444404825,"results":"76","hashOfConfig":"40"},{"size":433,"mtime":1641444404807,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"13zoa7d",{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"80"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":43,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":74,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"80"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"80"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":403,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"80"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"80"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"80"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\index.js",[],["171","172"],"C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\App.js",["173"],"import React, { Component, Suspense } from \"react\";\r\nimport Layout from './components/Layout/Layout';\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from \"./UI/Spinner/Spinner\";\r\nimport { checkAuthentication } from \"./store/action/actionAuth\";\r\n\r\nconst Auth = React.lazy(() => import(\"./containers/Auth/Auth\"));\r\nconst Logout = React.lazy(() => import(\"./containers/Auth/Logout/Logout\"));\r\nconst Invoice = React.lazy(() => import(\"./components/Invoice/Invoice\"));\r\nconst Queue =React.lazy(()=>import(\"./components/Queue/Queue\"));\r\nconst Pos=React.lazy(()=>import(\"./components/Pos/Pos\"));\r\nconst SaveInvoiceData = React.lazy(()=>import(\"./components/SaveInvoiceData/SaveInvoiceData\"));\r\nconst Inventory=React.lazy(()=>import(\"./components/Inventory/Inventory\"));\r\nconst HandWrittenInvoice=React.lazy(()=>import(\"./components/HandWrittenInvoice/HandWrittenInvoice\"));\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.checkAuthentication();\r\n  }\r\n  render() {\r\n    let routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Auth} />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    );\r\n    if (this.props.isAuthenticated) {\r\n      routes = (\r\n        <Switch>\r\n          <Route path=\"/invoice\" component={Invoice} />\r\n          {/* <Route path=\"/auth\" component={Auth} /> */}\r\n          {/* <Route path=\"/orders\" component={Orders} /> */}\r\n          <Route path=\"/logout\" component={Logout} />\r\n          <Route path=\"/queue\" component={Queue}/>\r\n          <Route path=\"/handwritten\" component={HandWrittenInvoice} />\r\n          {/* <Route path=\"/pos\" component={Pos}/> */}\r\n          <Route path=\"/invoicedata\" component={SaveInvoiceData} />\r\n          <Route path=\"/inventory\" component={Inventory}/>\r\n         \r\n          <Redirect to=\"/invoice\" />\r\n        </Switch>\r\n      );\r\n    }\r\n    return (\r\n      <Suspense fallback = {<Spinner />}>\r\n        <BrowserRouter>\r\n            <div>\r\n            <Layout>\r\n              {routes}\r\n            </Layout>\r\n            </div>\r\n        </BrowserRouter>  \r\n      </Suspense>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n       checkAuthentication: () => dispatch(checkAuthentication())\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\store\\reducer\\reducerAuth.js",[],"C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\store\\reducer\\posStateReducer.js",[],"C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\store\\reducer\\loadersReducer.js",[],"C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\store\\reducer\\redItemsReducer.js",[],"C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\store\\reducer\\openInvoiceReducer.js",[],"C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\store\\reducer\\userDetailsReducer.js",[],"C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\store\\action\\actionAuth.js",["174","175"],"import axios from 'axios'\r\nimport firebase from \"../../firebase\"\r\nimport { LoginService } from \"../../services/LoginService\"\r\n\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\nexport const AUTH_FAIL = 'AUTH_FAIL'\r\nexport const AUTH_START = 'AUTH_START'\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\r\n\r\n const authSuccess = (token, userId) => {\r\n    return {\r\n        type: AUTH_SUCCESS,\r\n        token: token,\r\n        userId: userId\r\n    }\r\n}\r\n const authFail = (error) => {\r\n    return {\r\n        type: AUTH_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nconst authStart = () => {\r\n    return {\r\n        type: AUTH_START\r\n    }\r\n}\r\nexport const authLogout = () => {\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('expirationDate')\r\n    localStorage.removeItem('userId')\r\n    return {\r\n        type: AUTH_LOGOUT\r\n    }\r\n}\r\nexport const logout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(authLogout());\r\n        }, expirationTime * 1000);\r\n    };\r\n};\r\nexport const auth = (email, password ) => {\r\n    return dispatch => {\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        }\r\n        const loginService = new LoginService();\r\n\r\n        // const url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDmK-zcj0LVrrQKbAfflUa-Hi_kRT4-ZWM\";\r\n        dispatch(authStart())\r\n        // axios.post(url, authData)\r\n        // .then(response => {\r\n        //     console.log(response.data)\r\n            // const expirationDate = new Date(new Date().getTime + 3600 * 1000)\r\n            // localStorage.setItem('token', response.data.idToken)\r\n            // localStorage.setItem('expirationDate', expirationDate)\r\n            // localStorage.setItem('userId', response.data.localId)\r\n            // dispatch(authSuccess(response.data.idToken, response.data.localId))\r\n            // dispatch(logout(response.data.expiresIn))\r\n        // })\r\n        // .catch(err => {\r\n        //     console.log(err.response.data.error.message)\r\n        //     dispatch(authFail(err.response.data.error.message))\r\n        // })\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then((response) => {\r\n                // const token = response[\"user\"][\"za\"];\r\n                const userId = response[\"user\"][\"uid\"];\r\n                // console.log(response);\r\n                loginService.authenticate({userId, email})\r\n                    .then(res => {\r\n                        const expirationDate = new Date(new Date().getTime() + 43200 * 1000);\r\n                        localStorage.setItem(\"token\", res.token);\r\n                        localStorage.setItem(\"expirationDate\", expirationDate);\r\n                        localStorage.setItem(\"userId\", userId);\r\n                        dispatch(authSuccess(res.token, userId));\r\n                        dispatch(logout(43200));\r\n                    })\r\n                    .catch(err => {\r\n                        dispatch(authFail(err.error));\r\n                    })\r\n            })\r\n            .catch((err) => {\r\n                // console.log('err during login',err.message);\r\n                dispatch(authFail(err.message));\r\n            })\r\n    }\r\n}\r\n\r\nexport const checkAuthentication = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token')\r\n        if(!token) {\r\n            dispatch(authLogout())\r\n        }\r\n        else {\r\n            /**\r\n             * get all data stored in browser- Object.entries(localStorage)\r\n             */\r\n            const expirationDate  = new Date(localStorage.getItem('expirationDate'))\r\n            if(expirationDate < new Date()) {\r\n                dispatch(authLogout())\r\n            }\r\n            else {\r\n                dispatch(authSuccess(token, localStorage.getItem('userId')))\r\n                /**write here for automatic logout */\r\n                dispatch(logout((expirationDate.getTime() - new Date().getTime()) / 1000 ));\r\n            } \r\n        }\r\n    }\r\n}","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\components\\Layout\\Layout.js",[],"C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\components\\Invoice\\Invoice.js",[],"C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\components\\Queue\\Queue.js",["176","177","178"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { InventoryService } from \"../../services/InventoryService\";\r\nimport { Api } from \"../../services/Api\";\r\nimport {\r\n  CModal,\r\n  CModalBody,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CButton,\r\n  CContainer,\r\n  CCol,\r\n  CRow,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CDropdown,\r\n  CDropdownToggle,\r\n  CDropdownMenu,\r\n  CDropdownItem,\r\n} from \"@coreui/react\";\r\nimport firebase from \"../../firebase\";\r\nimport Spinner from \"../../UI/Spinner/Spinner\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { TextField } from \"@material-ui/core\";\r\nconst Queue = () => {\r\n  const inventoryService = new InventoryService();\r\n  const api = new Api();\r\n  const [queue, setQueue] = useState([]);\r\n  const [loader, setLoader] = useState(true);\r\n  const [categoryArray, setCategoryArray] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [content, setContent] = useState(null);\r\n  const [header, setHeader] = useState([]);\r\n  const [fuzzSuggestion, setFuzzSuggestion] = useState([]);\r\n  const [modalLabel, setModalLabel] = useState(\"\");\r\n  const [selectedItemNo, setSelectedItemNo] = useState(\"\")\r\n  const [state, setState] = useState({\r\n    name: \"\",\r\n    type: \"\",\r\n    regular_price: \"\",\r\n    description: \"\",\r\n    short_description: \"\",\r\n    categories: [],\r\n    images: [],\r\n    label: \"\",\r\n  });\r\n  const handleChange = (event, val) => {\r\n    let newState = { ...state };\r\n    if (event.target.name !== \"categories\" && event.target.name !== \"images\")\r\n      newState[event.target.name] = event.target.value;\r\n    else {\r\n      let o = null;\r\n      if (event.target.name === \"categories\") {\r\n        o = { id: val };\r\n        newState[event.target.name] = [o];\r\n      } else {\r\n        o = { src: val };\r\n        newState[event.target.name].push(o);\r\n      }\r\n    }\r\n    setState(newState);\r\n  };\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n  useEffect(() => {\r\n    const ref = firebase.database().ref(\"/queue\");\r\n    ref.on(\"value\", (snapshot) => {\r\n      if (snapshot.val()) {\r\n        const data = Object.values(snapshot.val());\r\n        setQueue(data);\r\n        setLoader(false);\r\n      }\r\n    });\r\n    let c = [];\r\n    inventoryService\r\n      .getAllProducts()\r\n      .then((res) => {\r\n        c = res.map((d) => d.categories[0].id);\r\n        setCategoryArray([...new Set(c)]);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n  const setContentExtra = (o) => {\r\n    setContent(o);\r\n    let header = [];\r\n    for (var prop in o) {\r\n      if (Object.prototype.hasOwnProperty.call(o, prop)) {\r\n        header.push(prop);\r\n      }\r\n    }\r\n    setHeader(header);\r\n    let newState = {\r\n      name: o.description,\r\n      type: \"simple\",\r\n      regular_price: o.cp,\r\n      description: o.description,\r\n      short_description: o.description,\r\n      categories: [],\r\n      images: [],\r\n      label: o.description,\r\n    };\r\n    setState(newState);\r\n    api\r\n      .GetFuzz(o.description, \"queue\")\r\n      .then((res) => {\r\n        const filter = res.result.map((element) => {\r\n          let obj = { ...element };\r\n          obj.label = `${element.name}- ${element.price}- ${element.upc}`;\r\n          return obj;\r\n        });\r\n        setFuzzSuggestion(filter);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  const addProduct = () => {\r\n    console.log(selectedItemNo)\r\n    setShowModal(!showModal);\r\n    inventoryService\r\n      .createProduct(state)\r\n      .then(() => deleteAddedProducts(selectedItemNo))\r\n      .then((res) => alert(\"Successfully created a product\"))\r\n      .catch((err) => alert(\"Some error occuured in creating product\"));\r\n  };\r\n\r\n  const deleteAddedProducts = (item) => {\r\n    console.log('item to be deleted', item)\r\n    try {\r\n      firebase.database().ref(`/queue/${item}`).remove();\r\n      let temp = [...queue];\r\n      const filetered = temp.filter((product) => product.itemNo !== item)\r\n      setQueue(filetered);\r\n      return true;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return false;\r\n    }\r\n  };\r\n  if (loader) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  return (\r\n    <div style={{ marginTop: \"90px\" }}>\r\n      <div className=\"row\">\r\n        {queue.map((q, i) => (\r\n          <div className=\"col-md-4\" key={q.sku} style={{ padding: \"10px\" }}>\r\n            <div style={{ border: \"1px solid grey\", margin: \"10px\" }}>\r\n              <div className=\"text-center bg-secondary\">{q.itemNo}</div>\r\n              <br />\r\n              <div className=\"text-center\">{q.description}</div>\r\n              <br />\r\n              <div className=\"row\" style={{ marginBottom: \"10px\" }}>\r\n                <div className=\"col-md-9\"></div>\r\n                <div className=\"col-md-3\">\r\n                  <button\r\n                    className=\"btn btn-sm btn-primary\"\r\n                    onClick={() => {\r\n                      setShowModal(true);\r\n                      setModalLabel(q.description);\r\n                      setSelectedItemNo(q.itemNo)\r\n                      setContentExtra(q);\r\n                    }}\r\n                  >\r\n                    Details\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <CModal show={showModal} onClose={toggleModal}>\r\n        <CModalHeader closeButton>{modalLabel}</CModalHeader>\r\n        <CModalBody>\r\n          <CContainer fluid>\r\n            <CRow>\r\n              <CCol sm=\"12\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"name\">Name</CLabel>\r\n                  <Autocomplete\r\n                    value={state}\r\n                    onChange={(event, newValue) => {\r\n                      if (newValue) {\r\n                        let newState = { ...state };\r\n                        console.log(newValue);\r\n                        newState.name = newValue.name;\r\n                        newState.short_description = newValue.name;\r\n                        newState.description = newValue.name;\r\n                        newState.regular_price = newValue.price;\r\n                        newState.label = newValue.name;\r\n                        setState(newState);\r\n                      }\r\n                    }}\r\n                    id=\"combo-box\"\r\n                    options={fuzzSuggestion}\r\n                    getOptionLabel={(option) => option.label ?? option.name}\r\n                    style={{ paddingTop: 4 }}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} variant=\"outlined\" size=\"small\" />\r\n                    )}\r\n                  />\r\n                </CFormGroup>\r\n                <CRow>\r\n                  <CCol sm=\"6\">\r\n                    <CFormGroup>\r\n                      <CLabel htmlFor=\"type\">Type</CLabel>\r\n                      <CInput\r\n                        type=\"text\"\r\n                        name=\"type\"\r\n                        value={state.type}\r\n                        onChange={(event) => handleChange(event, \"\")}\r\n                      />\r\n                    </CFormGroup>\r\n                  </CCol>\r\n                  <CCol sm=\"6\">\r\n                    <CFormGroup>\r\n                      <CLabel htmlFor=\"regular_price\">Regular Price</CLabel>\r\n                      <CInput\r\n                        type=\"text\"\r\n                        name=\"regular_price\"\r\n                        value={state.regular_price}\r\n                        onChange={(event) => handleChange(event, \"\")}\r\n                      />\r\n                    </CFormGroup>\r\n                  </CCol>\r\n                </CRow>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"description\">Description</CLabel>\r\n                  <CInput\r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    value={state.description}\r\n                    onChange={(event) => handleChange(event, \"\")}\r\n                  />\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"short_description\">Short Description</CLabel>\r\n                  <CInput\r\n                    type=\"text\"\r\n                    name=\"short_description\"\r\n                    value={state.short_description}\r\n                    onChange={(event) => handleChange(event, \"\")}\r\n                  />\r\n                </CFormGroup>\r\n                <CRow>\r\n                  <CCol sm=\"3\">\r\n                    <CFormGroup>\r\n                      <CLabel htmlFor=\"categories\">Category</CLabel>\r\n                      <CDropdown name=\"categories\" className=\"mt-2\">\r\n                        <CDropdownToggle caret>\r\n                          {state.categories.length === 0\r\n                            ? \"Select a Category\"\r\n                            : state.categories[0].id}\r\n                        </CDropdownToggle>\r\n                        <CDropdownMenu>\r\n                          {categoryArray.map((e, i) => (\r\n                            <CDropdownItem\r\n                              key={i}\r\n                              name=\"categories\"\r\n                              onClick={(event) => handleChange(event, e)}\r\n                            >\r\n                              {e}\r\n                            </CDropdownItem>\r\n                          ))}\r\n                        </CDropdownMenu>\r\n                      </CDropdown>\r\n                    </CFormGroup>\r\n                  </CCol>\r\n                  <CCol sm=\"9\"></CCol>\r\n                </CRow>\r\n              </CCol>\r\n            </CRow>\r\n          </CContainer>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"primary\" onClick={() => addProduct()}>\r\n            Add\r\n          </CButton>{\" \"}\r\n          <CButton color=\"secondary\" onClick={toggleModal}>\r\n            Cancel\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <div className=\"row\" style={{ marginTop: \"40px\" }}>\r\n        <div className=\"col-md-2\">\r\n          <Link className=\"btn btn-lg btn-info\" to=\"/invoice\">\r\n            Back\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Queue;\r\n","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\components\\Pos\\Pos.js",["179","180","181","182","183","184","185","186","187","188"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { InventoryService } from \"../../services/InventoryService\";\r\nimport { Api } from \"../../services/Api\";\r\nimport {\r\n  CModal,\r\n  CModalBody,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CButton,\r\n  CContainer,\r\n  CCol,\r\n  CRow,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CDropdown,\r\n  CDropdownToggle,\r\n  CDropdownMenu,\r\n  CDropdownItem,\r\n} from \"@coreui/react\";\r\nimport firebase from \"../../firebase\";\r\nimport Spinner from \"../../UI/Spinner/Spinner\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { stat } from \"fs\";\r\nconst POS = () => {\r\n  const inventoryService = new InventoryService();\r\n  const api = new Api();\r\n  const [queue, setQueue] = useState([]);\r\n  const [loader, setLoader] = useState(true);\r\n  const [categoryArray, setCategoryArray] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [content, setContent] = useState(null);\r\n  const [header, setHeader] = useState([]);\r\n  const [fuzzSuggestion, setFuzzSuggestion] = useState([]);\r\n  const [selectedItemNo, setSelectedItemNo] = useState(\"\");\r\n  const [modalLabel, setModalLabel] = useState(\"\");\r\n  const [state, setState] = useState({\r\n    item: \"\",\r\n    quantity: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    pos: \"\",\r\n    barcode: \"\",\r\n    posSku: \"\",\r\n    invoice: \"\",\r\n    size: \"\",\r\n    department: \"\",\r\n    unitCost: \"\",\r\n    unitPrice: \"\"\r\n  });\r\n  const handleChange = (key, val) => {\r\n    setState({\r\n      ...state,\r\n      [key]: val,\r\n    });\r\n  };\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n  useEffect(() => {\r\n    const ref = firebase.database().ref(\"/review\");\r\n    ref.on(\"value\", (snapshot) => {\r\n      if (snapshot.val()) {\r\n        const data = Object.values(snapshot.val());\r\n        console.log(data);\r\n        setQueue(data);\r\n        setLoader(false);\r\n      }\r\n    });\r\n  }, []);\r\n  const setContentExtra = (o) => {\r\n    setContent(o);\r\n    let header = [];\r\n    for (var prop in o) {\r\n      if (Object.prototype.hasOwnProperty.call(o, prop)) {\r\n        header.push(prop);\r\n      }\r\n    }\r\n    setHeader(header);\r\n    let newState = {\r\n      item: o.itemNo,\r\n      description: o.description,\r\n      pos: o.posName,\r\n      barcode: o.barcode,\r\n      posSku: o.posSku || \"\",\r\n      invoice: o.invoiceName,\r\n      size: \"loading...\",\r\n      department: \"loading...\",\r\n      unitCost: \"loading...\",\r\n      unitPrice: \"loading...\"\r\n\r\n    };\r\n    setState(newState);\r\n\r\n    let prdctSize;\r\n    let fuzzwuzzResult;\r\n    let dprtmnt;\r\n    let untCst;\r\n    let untPrce;\r\n    api\r\n      .GetFuzz(o.description, \"pos\")\r\n      .then((res) => {\r\n        fuzzwuzzResult = res.result;\r\n        const filter = res.result.map((element) => {\r\n          let obj = { ...element };\r\n          obj.label = `${element.name}- ${element.price}- ${element.upc} - ${element.size}`;\r\n          console.log(obj);\r\n          return obj;\r\n          \r\n        });\r\n        \r\n        for(let i=0;i<fuzzwuzzResult.length;i++){\r\n          if(o.posSku == fuzzwuzzResult[i].sku){\r\n            prdctSize = fuzzwuzzResult[i].size !== null ? fuzzwuzzResult[i].size : \"NOT AVAILABLE\";\r\n            dprtmnt = fuzzwuzzResult[i].department !== null ? fuzzwuzzResult[i].department : \"NOT AVAILABLE\";\r\n            untCst = fuzzwuzzResult[i].cost !== null ? fuzzwuzzResult[i].cost : \"NOT AVAILABLE\";\r\n            untPrce = fuzzwuzzResult[i].price !== null ? fuzzwuzzResult[i].price : \"NOT AVAILABLE\";\r\n            break;\r\n          }\r\n        }\r\n        console.log(dprtmnt + untCst + untPrce+\"$\"+prdctSize);\r\n       \r\n        newState = {\r\n          item: o.itemNo,\r\n          description: o.description,\r\n          pos: o.posName,\r\n          barcode: o.barcode,\r\n          posSku: o.posSku || \"\",\r\n          invoice: o.invoiceName,\r\n          size: prdctSize,\r\n          department: dprtmnt,\r\n          unitCost: untCst,\r\n          unitPrice: untPrce,\r\n        };\r\n        setState(newState);\r\n        setFuzzSuggestion(filter);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  /* const changeDropdown = () => {\r\n    api\r\n      .GetFuzz(\"\", \"pos\")\r\n      .then((res) => {\r\n        const filter = res.result.map((element) => {\r\n          let obj = { ...element };\r\n          obj.label = `${element.name}- ${element.price}- ${element.upc} - ${element.size} }`;\r\n          console.log(obj);\r\n          return obj;\r\n          \r\n        });\r\n        setFuzzSuggestion(filter);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n */\r\n  const addProduct = () => {\r\n    console.log(selectedItemNo);\r\n    setShowModal(!showModal);\r\n    console.log(state);\r\n    const data = {\r\n      invoiceName: state.invoice,\r\n      itemName: state.item,\r\n      value: { POS: state.pos, \r\n        Barcode: state.barcode, \r\n        PosSKU: state.posSku, \r\n        isReviewed: \"true\",\r\n        Size: state.size, \r\n        Department: state.department,\r\n        SellerCost: state.unitCost,\r\n        SellingPrice: state.unitPrice\r\n      },\r\n    };\r\n    \r\n    setLoader(true);\r\n    inventoryService\r\n      .UpdateProductFields(data)\r\n      .then((res) => {\r\n        if (!res) {\r\n          throw new Error(\"Product not created\")\r\n        }\r\n        console.log(res);\r\n        alert(\"Successfully updated fields\");\r\n      })\r\n      .then(() => deleteAddedProducts(selectedItemNo))\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Some error occuured in creating product\");\r\n      })\r\n      .finally(() => setLoader(false));\r\n  };\r\n\r\n  const deleteAddedProducts = (item) => {\r\n    try {\r\n      firebase.database().ref(`/review/${item}`).remove();\r\n      let temp = [...queue];\r\n      const filetered = temp.filter((product) => product.itemNo !== item);\r\n      setQueue(filetered);\r\n      return true;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return false;\r\n    }\r\n  };\r\n  if (loader) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  return (\r\n    <div style={{ marginTop: \"90px\" }}>\r\n      <div className=\"row\">\r\n        {queue.map((q, i) => (\r\n          <div className=\"col-md-4\" key={q.itemNo} style={{ padding: \"10px\" }}>\r\n            <div style={{ border: \"1px solid grey\", margin: \"10px\" }}>\r\n              <div className=\"text-center bg-secondary\">{q.itemNo}</div>\r\n              <br />\r\n              <div className=\"text-center\">{q.description}</div>\r\n              <br />\r\n              <div className=\"row\" style={{ marginBottom: \"10px\" }}>\r\n                <div className=\"col-md-9\"></div>\r\n                <div className=\"col-md-3\">\r\n                  <button\r\n                    className=\"btn btn-sm btn-primary\"\r\n                    onClick={() => {\r\n                      setShowModal(true);\r\n                      setModalLabel(q.itemNo);\r\n                      setSelectedItemNo(q.itemNo);\r\n                      setContentExtra(q);\r\n                    }}\r\n                  >\r\n                    Details\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <CModal show={showModal} onClose={toggleModal}>\r\n        <CModalHeader closeButton>{modalLabel}</CModalHeader>\r\n        <CModalBody>\r\n          <CContainer fluid>\r\n            <CRow>\r\n              <CCol sm=\"12\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"name\">Name</CLabel>\r\n                  <Autocomplete\r\n                    value={state.item}\r\n                    onChange={(event, newValue) => {\r\n                      if (newValue) {\r\n                        let newState = { ...state };\r\n                        console.log(newValue);\r\n                        // newState.item = newValue.name;\r\n                        newState.description = newValue.name;\r\n                        newState.barcode = newValue.upc;\r\n                        newState.pos = newValue.name;\r\n                        newState.posSku = newValue.sku;\r\n                        newState.size = newValue.size;\r\n                        newState.department = newValue.department;\r\n                        newState.unitCost = newValue.cost;\r\n                        newState.unitPrice = newValue.price;\r\n                        setState(newState);\r\n                        console.log(newValue);\r\n                        console.log(newState);\r\n                        console.log(state);\r\n                      }\r\n                    }}\r\n                    id=\"combo-box\"\r\n                    options={fuzzSuggestion}\r\n                    getOptionLabel={(option) => option.label ?? state.item}\r\n                    style={{ paddingTop: 4 }}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} variant=\"outlined\" size=\"small\" />\r\n                    )}\r\n                  />\r\n                </CFormGroup>\r\n                <CRow>\r\n                  <CCol sm=\"6\">\r\n                    <CFormGroup>\r\n                      <CLabel htmlFor=\"type\">Barcode</CLabel>\r\n                      <CInput \r\n                        disabled\r\n                        type=\"text\"\r\n                        name=\"type\"\r\n                        value={state.barcode}\r\n                        onChange={(event) =>\r\n                          handleChange(\"barcode\", event.target.value)\r\n                        }\r\n                      />\r\n                    </CFormGroup>\r\n                  </CCol>\r\n                  <CCol sm=\"6\">\r\n                    <CFormGroup>\r\n                      <CLabel htmlFor=\"short_description\">POS SKU</CLabel>\r\n                      <CInput\r\n                        disabled\r\n                        type=\"text\"\r\n                        name=\"short_description\"\r\n                        value={state.posSku}\r\n                        onChange={(event) =>\r\n                          handleChange(\"posSku\", event.target.value)\r\n                        }\r\n                      />\r\n                    </CFormGroup>\r\n                  </CCol>\r\n                </CRow>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"description\">Invoice Description</CLabel>\r\n                  <CInput\r\n                    disabled\r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    value={state.description}\r\n                    onChange={(event) =>\r\n                      handleChange(\"description\", event.target.value)\r\n                    }\r\n                  />\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"regular_price\">POS Name</CLabel>\r\n                  <CInput\r\n                    disabled\r\n                    type=\"text\"\r\n                    name=\"regular_price\"\r\n                    value={state.pos}\r\n                    onChange={(event) =>\r\n                      handleChange(\"pos\", event.target.value)\r\n                    }\r\n                  />\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"size\">POS Size</CLabel>\r\n                  <CInput\r\n                    disabled\r\n                    type=\"text\"\r\n                    name=\"size\"\r\n                    value={state.size}\r\n                    onChange={(event) =>\r\n                      handleChange(\"size\", event.target.value)\r\n                    }\r\n                  />\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"department\">Department</CLabel>\r\n                  <CInput\r\n                    disabled\r\n                    type=\"text\"\r\n                    name=\"department\"\r\n                    value={state.department}\r\n                    onChange={(event) =>\r\n                      handleChange(\"department\", event.target.value)\r\n                    }\r\n                  />\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"unitPrice\">POS Unit Price</CLabel>\r\n                  <CInput\r\n                    disabled\r\n                    type=\"text\"\r\n                    name=\"unitPrice\"\r\n                    value={state.unitPrice}\r\n                    onChange={(event) =>\r\n                      handleChange(\"unitPrice\", event.target.value)\r\n                    }\r\n                  />\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"unitCost\">POS Unit Cost</CLabel>\r\n                  <CInput\r\n                    disabled\r\n                    type=\"text\"\r\n                    name=\"unitCost\"\r\n                    value={state.unitCost}\r\n                    onChange={(event) =>\r\n                      handleChange(\"unitCost\", event.target.value)\r\n                    }\r\n                  />\r\n                </CFormGroup>\r\n                {/* <CRow>\r\n                  <CCol sm=\"3\">\r\n                    <CFormGroup>\r\n                      <CLabel htmlFor=\"categories\">Category</CLabel>\r\n                      <CDropdown name=\"categories\" className=\"mt-2\">\r\n                        <CDropdownToggle caret>\r\n                          {state.categories.length === 0\r\n                            ? \"Select a Category\"\r\n                            : state.categories[0].id}\r\n                        </CDropdownToggle>\r\n                        <CDropdownMenu>\r\n                          {categoryArray.map((e, i) => (\r\n                            <CDropdownItem\r\n                              key={i}\r\n                              name=\"categories\"\r\n                              onClick={(event) => handleChange(event, e)}\r\n                            >\r\n                              {e}\r\n                            </CDropdownItem>\r\n                          ))}\r\n                        </CDropdownMenu>\r\n                      </CDropdown>\r\n                    </CFormGroup>\r\n                  </CCol>\r\n                  <CCol sm=\"9\"></CCol>\r\n                </CRow> */}\r\n              </CCol>\r\n            </CRow>\r\n          </CContainer>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n        {/* <button onClick={() => changeDropdown()} \r\n          style={{backgroundColor: \"green\",\r\n          border: \"none\",\r\n          color: \"white\",\r\n          padding: \"4px 8px\",\r\n          textAlign: \"center\",\r\n          textDecoration: \"none\",\r\n          display: \"inline-block\",\r\n          fontSize: \"14px\",\r\n          align: \"left\"}} >\r\n            Change Dropdown\r\n          </button> */}\r\n          <CButton color=\"primary\" onClick={() => addProduct()}>\r\n            Add\r\n          </CButton>{\" \"}\r\n          <CButton color=\"secondary\" onClick={toggleModal}>\r\n            Cancel\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <div className=\"row\" style={{ marginTop: \"40px\" }}>\r\n        <div className=\"col-md-2\">\r\n          <Link className=\"btn btn-lg btn-info\" to=\"/invoice\">\r\n            Back\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default POS;\r\n","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\components\\Inventory\\Inventory.js",["189","190","191","192","193"],"import { CRow, CCol, CDataTable } from \"@coreui/react\";\r\nimport { InventoryService } from \"../../services/InventoryService\";\r\nimport Spinner from \"../../UI/Spinner/Spinner\";\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Axios from \"axios\";\r\n\r\nconst columns = [\r\n  { id: \"upc\", label: \"UPC\" },\r\n  { id: \"sku\", label: \"SKU\" },\r\n  { id: \"itemName\", label: \"Item Name\" },\r\n  { id: \"cost\", label: \"Cost\" },\r\n  { id: \"price\", label: \"Price\" },\r\n  { id: \"currentStockQuantity\", label: \"Current Stock Quantity\" },\r\n  { id: \"posSoldQuantity\", label: \"POS Sold Quantity\" },\r\n  { id: \"wordpressSoldQty\", label: \"Wordpress Sold Qty.\" },\r\n  { id: \"OnHand\", label: \"On Hand\"},\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    paddingTop: 50,\r\n  },\r\n  container: {\r\n    maxHeight: \"80vh\",\r\n    marginTop: 10,\r\n  },\r\n  table: {\r\n    \"& thead th\": {\r\n      fontWeight: \"600\",\r\n      fontSize: 20,\r\n      backgroundColor: \"grey\",\r\n    },\r\n    \"& tbody td\": {\r\n      fontWeight: \"300\",\r\n    },\r\n    \"& tbody tr:hover\": {\r\n      backgroundColor: \"#fffbf2\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default function StickyHeadTable() {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(100);\r\n  const inventoryService = new InventoryService();\r\n  const [products, setProducts] = React.useState([]);\r\n  const [loader, setLoader] = React.useState(true);\r\n  const [searchVal, setSearchVal] = React.useState(\"\");\r\n  const [startDate, setStartDate] = React.useState(\"20-July-2021\");\r\n  const [endDate, setEndDate] = React.useState(\"22-July-2021\");\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const changeDateFormat = (date) => {\r\n    let defaultDate = new Date(date);\r\n    let month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"][defaultDate.getMonth()];\r\n    let formattedDate = defaultDate.getDate()+\"-\"+month+\"-\"+defaultDate.getFullYear();\r\n    return formattedDate;\r\n  }\r\n\r\n  const onGo = () => {\r\n    console.log(startDate);\r\n    console.log(endDate);\r\n    const options = {\r\n      method: \"GET\",\r\n      headers:{\r\n        UserId: \"lRRqlkYefuV=\",\r\n        Password: \"lRRqlkYefuV6jJ==\",\r\n        Pin: \"qzOUsBmZFgMDlwGtrgYypxUz\",\r\n        'Content-Type' : 'application/x-www-form-urlencoded; charset=UTF-8',\r\n      },\r\n      body:{\r\n        STARTDATE: startDate,\r\n        ENDDATE: endDate\r\n      },\r\n      json: true,\r\n    }    \r\n    const dateObj = {startDate: startDate, endDate: endDate};\r\n    try {\r\n      setLoader(true);\r\n      const res = Axios.get(\"https://dataservices.sypramsoftware.com/api/Product/GetSoldItemList\",options)\r\n                    .then(response => {return response});\r\n      const data = res.map((item) => {\r\n        const {\r\n          UPC,\r\n          SKU,\r\n          //ItemName,\r\n          ITEMNAME,\r\n          //Price,\r\n          PRICEPERUNIT,\r\n          Cost,\r\n          TotalQty,\r\n          //soldQty,\r\n          QuantitySold,\r\n          wordpressSoldQty,\r\n          OnHand\r\n        } = item;\r\n        return {\r\n          upc: UPC,\r\n          itemName: ITEMNAME,\r\n          cost: Cost,\r\n          price: PRICEPERUNIT,\r\n          sku: SKU,\r\n          currentStockQuantity: TotalQty,\r\n          posSoldQuantity: QuantitySold,\r\n          wordpressSoldQty,\r\n          OnHand: OnHand\r\n        };\r\n      });\r\n\r\n      setProducts(data);\r\n    } catch (error) {\r\n      alert(\"Couldn't sync inventory\", error);\r\n    } finally {\r\n      setLoader(false);\r\n    }\r\n  }\r\n\r\n  const getProducts = async () => {\r\n    try {\r\n      setLoader(true);\r\n      const res = await inventoryService.SyncInventory();\r\n      const data = res.map((item) => {\r\n        const {\r\n          UPC,\r\n          SKU,\r\n          ItemName,\r\n          Price,\r\n          Cost,\r\n          TotalQty,\r\n          soldQty,\r\n          wordpressSoldQty,\r\n        } = item;\r\n        return {\r\n          upc: UPC,\r\n          itemName: ItemName,\r\n          cost: Cost,\r\n          price: Price,\r\n          sku: SKU,\r\n          currentStockQuantity: TotalQty,\r\n          posSoldQuantity: soldQty,\r\n          wordpressSoldQty,\r\n        };\r\n      });\r\n      setProducts(data);\r\n      alert(\"Sync complete\");\r\n    } catch (error) {\r\n      alert(\"Couldn't sync inventory\", error);\r\n    } finally {\r\n      setLoader(false);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    async function getInitialSyncedData() {\r\n      try {\r\n        setLoader(true);\r\n        const res = await inventoryService.getInitialSyncedData();\r\n        const data = res.map((item) => {\r\n          const {\r\n            UPC,\r\n            SKU,\r\n            //ItemName,\r\n            ITEMNAME,\r\n            //Price,\r\n            PRICEPERUNIT,\r\n            Cost,\r\n            TotalQty,\r\n            //soldQty,\r\n            QuantitySold,\r\n            wordpressSoldQty,\r\n            OnHand\r\n          } = item;\r\n          return {\r\n            upc: UPC,\r\n            itemName: ITEMNAME,\r\n            cost: Cost,\r\n            price: PRICEPERUNIT,\r\n            sku: SKU,\r\n            currentStockQuantity: TotalQty,\r\n            posSoldQuantity: QuantitySold,\r\n            wordpressSoldQty,\r\n            OnHand: OnHand\r\n          };\r\n        });\r\n\r\n        setProducts(data);\r\n      } catch (error) {\r\n        alert(\"Couldn't sync inventory\", error);\r\n      } finally {\r\n        setLoader(false);\r\n      }\r\n    }\r\n    console.log(startDate, endDate);\r\n    getInitialSyncedData();\r\n  }, []);\r\n\r\n  if (loader) {\r\n    return <Spinner />;\r\n  }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Grid style={{ display: \"flex\" }}>\r\n        <TextField\r\n          label=\"Search\"\r\n          variant=\"outlined\"\r\n          value={searchVal}\r\n          style={{ marginLeft: 20 }}\r\n          onChange={(e) => setSearchVal(e.target.value)}\r\n        />\r\n        <TextField\r\n          id=\"date\"\r\n          label=\"Start Date\"\r\n          type=\"date\"\r\n          value={startDate}\r\n          style={{ marginLeft: 20 }}          \r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          onChange={(event) => setStartDate(event.target.value)}          \r\n        />\r\n        <TextField\r\n          id=\"date\"\r\n          label=\"End Date\"\r\n          type=\"date\"\r\n          value={endDate}\r\n          style={{ marginLeft: 20 }}          \r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          onChange={(event) => setEndDate(event.target.value)}\r\n        />\r\n        <button  style={{backgroundColor: \"green\",\r\n          border: \"none\",\r\n          color: \"white\",\r\n          padding: \"4px 8px\",\r\n          textAlign: \"center\",\r\n          textDecoration: \"none\",\r\n          display: \"inline-block\",\r\n          fontSize: \"14px\",\r\n          align: \"left\",\r\n          marginLeft: 20}}\r\n          onClick={() => onGo()}>\r\n            Go!\r\n          </button>\r\n\r\n        <Box style={{ flexGrow: 1 }} />\r\n        <CCol sm=\"1\">\r\n          <button className=\"btn btn-lg btn-info\" onClick={() => getProducts()}>\r\n            Sync\r\n          </button>\r\n        </CCol>\r\n      </Grid>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\" className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {products\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .filter((item) => {\r\n                if (searchVal) {\r\n                  if (item.itemName.toLowerCase().includes(searchVal)) {\r\n                    return item;\r\n                  } else {\r\n                    return null;\r\n                  }\r\n                }\r\n                return item;\r\n              })\r\n              .map((row) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" key={row.upc}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[100, 200, 500]}\r\n        component=\"div\"\r\n        count={products.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\containers\\Auth\\Auth.js",[],"C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\UI\\Spinner\\Spinner.js",[],"C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\containers\\Auth\\Logout\\Logout.js",[],"C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\components\\HandWrittenInvoice\\HandWrittenInvoice.js",["194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236"],"import React, { useEffect, useState } from 'react';\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport { dropdownOptions } from \"../../utils/invoiceList\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { InventoryService } from \"../../services/InventoryService\";\r\nimport {\r\n  CModal,\r\n  CModalBody,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CButton,\r\n  CContainer,\r\n  CCol,\r\n  CRow,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CDropdown,\r\n  CDropdownToggle,\r\n  CDropdownMenu,\r\n  CDropdownItem,\r\n} from \"@coreui/react\";\r\n\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { TesseractService } from \"../../services/TesseractService\";\r\nimport Button from \"../../UI/Button\";\r\nimport styles from \"../DisplayData/DisplayData.module.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport Cancel from \"@material-ui/icons/Cancel\";\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n    width: \"100%\",\r\n    paddingTop: 50,\r\n    },\r\n    container: {\r\n        maxHeight: \"80vh\",\r\n        marginTop: 10,\r\n      },\r\n      table: {\r\n        \"& thead th\": {\r\n          fontWeight: \"600\",\r\n          fontSize: 20,\r\n          backgroundColor: \"grey\",\r\n        },\r\n        \"& tbody td\": {\r\n          fontWeight: \"300\",\r\n        },\r\n        \"& tbody tr:hover\": {\r\n          backgroundColor: \"#fffbf2\",\r\n          cursor: \"pointer\",\r\n        },\r\n      },\r\n});\r\n\r\nconst HandwrittenInvoice = () => {\r\n    // const [loader, setLoader] = useState();\r\n    const tesseractService = new TesseractService();\r\n    const [tableData, setTableData] = useState([]);\r\n    const [productDetails, setProductDetails] = useState([]);\r\n    const [itemNoDropdown, setItemNoDropdown] = useState([]);\r\n\r\n    const dispatch = useDispatch();\r\n    const numOfCollections = dropdownOptions.length;\r\n    const dropdownLabel = \"Select Invoice(\"+   numOfCollections   + \")\";\r\n    // const [invoice, setInvoice] = useState(\"\");\r\n    let invoice = \"\";\r\n    const classes = useStyles();\r\n    const inventoryService = new InventoryService();\r\n    const [options, setOptions] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [modalLabel, setModalLabel] = useState(\"\");\r\n\r\n    const [todayDate, setTodayDate] = useState(\"\");\r\n    const [userEmail, setUserEmail] = useState(\"\");\r\n\r\n    const [itemName, setItemName] = useState(\"\");\r\n    const [unitsInCase, setUnitsInCase] = useState(\"\");\r\n    const [caseCost, setCaseCost] = useState(\"\");\r\n\r\n    const [newUnitCost, setNewUnitCost] = useState(\"\");\r\n    const [newUnitPrice, setNewUnitPrice] = useState(\"\");\r\n\r\n    const [showPosIndex, setShowPosIndex] = useState(-1);\r\n    const showPosState = useSelector(state => state.showPosState);\r\n    const notFounds = useSelector(state => state.redItems.notFounds);\r\n\r\n    const [detailsModal, setDetailsModal] = useState(false);\r\n    const [details, setDetails] = useState(\"\");\r\n    const [detailsIndex, setDetailsIndex] = useState(-1);\r\n    const [unitCost, setUnitCost] = useState(\"\");\r\n    const [redState, setRedState] = useState(\"true\");\r\n\r\n    \r\n    \r\n    const [posProduct, setPosProduct] = useState({\r\n      isReviewed: \"\",\r\n      Item: \"\",\r\n      Quantity: \"\",\r\n      Description: \"\",\r\n      Price: \"\",\r\n      POS: \"\",\r\n      Barcode: \"\",\r\n      PosSKU: \"\",\r\n      Size: \"\",\r\n      Department: \"\",\r\n      SellerCost: \"\",\r\n      SellingPrice: \"\",\r\n    });\r\n\r\n    const apiLoader = useSelector(state => state.loaders.apiLoader);\r\n    const loader = useSelector(state => state.loaders.loader);\r\n\r\n    let posProducts = []\r\n    let wooComProducts = [];\r\n    let singleItemData = [];\r\n    let updateSku = \"\";\r\n    let itemNo = \"\";\r\n\r\n    const header = [\r\n      \"Serial No.\",\r\n      \"Barcode\",\r\n      \"POS SKU\",\r\n      \"Qty Shipped\",,\r\n      \"Unit Cost\",\r\n      \"ITEM NO\",\r\n      \"Link Product\",\r\n      \r\n      \"DESCRIPTION\",\r\n      \"Units in  Case\",\r\n      \"Case cost\",\r\n      \"Extended Price\",\r\n     \r\n      \"Unit Price\",\r\n      \"Mark up (%)\",\r\n      \"Add Details\",\r\n      // \"Tick to Delete\",\r\n      \"Update POS\",\r\n      // \"Reverse POS Update\",\r\n      \"NO LINKING\",\r\n      \"Serial No.(2)\"\r\n  ];\r\n\r\n//*********************************************************************POS UPDATE STARTS******************************************* */    \r\n\r\n  //Function to fetch wooCom Prpducts.\r\n  async function getProducts() {\r\n    console.log(\"IN WOOCOM PRODUCTS\");\r\n    const items = await Promise.all(\r\n      singleItemData.map(async (row) => {\r\n        console.log(row.barcode);\r\n        try {\r\n          const res = await inventoryService.GetProductDetails(row.barcode);\r\n          console.log(res);\r\n          const {\r\n            id,\r\n            name,\r\n            regular_price,\r\n            price,\r\n            sku,\r\n            slug,\r\n            stock_quantity,\r\n            sale_price,\r\n          } = res[0];\r\n          return {\r\n            id,\r\n            name,\r\n            regular_price,\r\n            price,\r\n            sku,\r\n            slug,\r\n            stock_quantity,\r\n            sale_price,\r\n            itemNo: row.itemNo,\r\n          };\r\n        } catch (error) {\r\n          // tempNotFoundProducts.push(row);\r\n          console.log(\"Couldn't fetch product from woodpress.\", row.itemNo);\r\n          return null;\r\n        }\r\n      })\r\n    );\r\n    // setLoader(false);\r\n    // dispatch({type: \"LOADER\"});\r\n    console.log(items);\r\n    wooComProducts = items;\r\n    // setWooComProducts(items.filter((ele) => ele !== null));\r\n    // setNotFoundProducts(tempNotFoundProducts);\r\n  }    \r\n      \r\n  //function to fetch POS products.\r\n  async function getPosProducts() {\r\n    console.log(\"IN POS PRODUCTS\");\r\n    // setLoader(true);\r\n    // dispatch({type: \"LOADER\"});\r\n    let hasErrorOccured = false;\r\n    const items = await Promise.all(\r\n      singleItemData\r\n        .map(async (row) => {\r\n          console.log(row.barcode);\r\n          try {\r\n            const res = await inventoryService.GetPOSProductDetails(\r\n              row.barcode\r\n            );\r\n            console.log(res);\r\n            if(!Array.isArray(res)){\r\n              alert(\"API not working\");\r\n              return;\r\n            }\r\n            console.log(\"fetched pos data\", res);\r\n            const { SKU, UPC, ITEMNAME, TOTALQTY, DEPNAME } = res[0];\r\n            console.log(SKU);\r\n            console.log(updateSku);\r\n            if(SKU == updateSku){\r\n              console.log(SKU);\r\n              console.log(updateSku);\r\n              return {\r\n                ...row,\r\n                COST: row.newUnitCost,\r\n                PRICE: row.newUnitPrice,\r\n                SKU,\r\n                UPC,\r\n                ITEMNAME,\r\n                // TOTALQTY:\r\n                //   parseInt(row.qty) * parseInt(row.pieces) + parseInt(TOTALQTY),\r\n                itemNo: row.itemNo,\r\n                isNew: false,\r\n                BUYASCASE: 1,\r\n                // CASEUNITS: row.pieces.toString(),\r\n                // CASECOST: row.unitPrice.toString(),\r\n                DEPNAME,\r\n              };\r\n            } else {\r\n              alert(\"SKU mismatch!!\");\r\n            }\r\n\r\n            \r\n            \r\n          } catch (error) {\r\n            hasErrorOccured = true;\r\n            return {\r\n              ...row,\r\n              COST: row.cp,\r\n              PRICE: row.sp,\r\n              SKU: row.posSku,\r\n              UPC: row.barcode,\r\n              ITEMNAME: row.description,\r\n              TOTALQTY: parseInt(row.qty) * parseInt(row.pieces),\r\n              itemNo: row.itemNo,\r\n              isNew: true,\r\n              BUYASCASE: 1,\r\n              CASEUNITS: row.pieces.toString(),\r\n              CASECOST: row.unitPrice.toString(),\r\n              DEPNAME: \"\",\r\n            };\r\n          }\r\n        })\r\n    );\r\n    if (hasErrorOccured) {\r\n      alert(\"Couldn't fetch some data from POS\");\r\n    }\r\n    // setLoader(false);\r\n    // dispatch({type: \"LOADER\"});\r\n    console.log(items);\r\n    posProducts = items;\r\n    console.log(posProducts);\r\n    // setPosProducts(items.filter((ele) => ele !== null));\r\n  }\r\n\r\n  //PUSH TO WOOCOM.\r\n  const pushToWoocom = async (products) => {\r\n    // setLoader(true);\r\n    // dispatch({type: \"LOADER\"});\r\n    const responses = await Promise.all(\r\n      products.map(async (product) => {\r\n        try {\r\n          const res = await inventoryService.UpdateProductDetails(product.id, {\r\n            regular_price: product.regular_price,\r\n            stock_quantity: product.stock_quantity,\r\n          });\r\n          const { id, name, regular_price, stock_quantity } = res;\r\n          return {\r\n            id,\r\n            name,\r\n            regular_price,\r\n            stock_quantity,\r\n            itemNo: product.itemNo,\r\n          };\r\n        } catch (error) {\r\n          console.log(error);\r\n          alert(\"Couldn't update product on website.\");\r\n          return null;\r\n        }\r\n      })\r\n    );\r\n    // setLoader(false);\r\n    // dispatch({type: \"LOADER\"});\r\n  };\r\n\r\n  //PUSH TO POS.\r\n  const pushToPOS = async (products) => {\r\n    // setLoader(true);\r\n    // dispatch({type: \"LOADER\"});\r\n    console.log(products);\r\n    const responses = await Promise.all(\r\n      products.map(async (product) => {\r\n        try {\r\n          const {\r\n            COST,\r\n            PRICE,\r\n            UPC,\r\n            TOTALQTY,\r\n            isNew,\r\n            ITEMNAME,\r\n            BUYASCASE,\r\n            CASEUNITS,\r\n            CASECOST,\r\n            SKU,\r\n            DEPNAME,\r\n            itemNo\r\n          } = product;\r\n          const res = await inventoryService.UpdatePOSProducts(\r\n            JSON.stringify({\r\n              UPC,\r\n              ITEMNAME,\r\n              DESCRIPTION: \"\",\r\n              PRICE,\r\n              COST,\r\n              QTY: TOTALQTY,\r\n              SIZE: \"\",\r\n              PACK: \"\",\r\n              REPLACEQTY: 1,\r\n              DEPARTMENT: DEPNAME,\r\n              CATEGORY: \"\",\r\n              SUBCATEGORY: \"\",\r\n              ISFOODSTAMP: 1,\r\n              ISWEIGHTED: 0,\r\n              ISTAXABLE: 1,\r\n              // VENDORNAME: invoice.slug,\r\n              // VENDORCODE: itemNo,\r\n              // VENDORCOST: \"\",\r\n              ISNEWITEM: isNew ? 1 : 0,\r\n              BUYASCASE,\r\n              CASEUNITS,\r\n              CASECOST,\r\n              COMPANYNAME: invoice.slug,\r\n              PRODUCTCODE: itemNo,\r\n            })\r\n          );\r\n          console.log(\"updated pos data\", res);\r\n          const data = {\r\n            UPC,\r\n            SKU,\r\n            Cost: COST,\r\n            ItemName: ITEMNAME,\r\n            Price: PRICE,\r\n            TotalQty: TOTALQTY,\r\n          };\r\n          //not needed as of now, parikshit.\r\n          // if (isNew) {\r\n          //   const response = await inventoryService.CreateDBProduct(data);\r\n          //   console.log(\"Created new product\", response);\r\n          // } else {\r\n          //   const response = await inventoryService.UpdateDBProduct({\r\n          //     count: parseInt(product.qty) * parseInt(product.pieces),\r\n          //     UPC,\r\n          //   });\r\n          //   console.log(\"updated existing product\", response);\r\n          // }\r\n\r\n          console.log(\"res from POS\", res);\r\n          return true;\r\n        } catch (error) {\r\n          console.log(error);\r\n          return null;\r\n        }\r\n      })\r\n    );\r\n    // setLoader(false);\r\n    // dispatch({type: \"LOADER\"});\r\n  };\r\n\r\n  const pushInventoryDetails2 = async () => {\r\n    console.log(posProducts);\r\n    // setLoader(true);\r\n    // let data = singleItemData.map((element) => {\r\n    //   return {\r\n    //     item: element.itemNo,\r\n    //     qty: parseInt(element.qty) * parseInt(element.pieces),\r\n    //     cp: element.unitPrice,\r\n    //     markup: element.markup,\r\n    //     sp: element.sp,\r\n    //     description: element.description,\r\n    //   };\r\n    // });\r\n\r\n    // var duplicates = {};\r\n    // for (var i = 0; i < data.length; i++) {\r\n    //   if (duplicates.hasOwnProperty(data[i].item)) {\r\n    //     duplicates[data[i].item].push(i);\r\n    //   } else if (data.lastIndexOf(data[i].item) !== i) {\r\n    //     duplicates[data[i].item] = [i];\r\n    //   }\r\n    // }\r\n\r\n    // let tempData = Object.values(duplicates).filter((ele) => ele.length > 1);\r\n    // if (tempData.length > 0) {\r\n    //   tempData.forEach((index) => {\r\n    //     let temp = 0;\r\n    //     index.forEach((val) => {\r\n    //       if (data[val]) {\r\n    //         // console.log(\"data[val]\", data[val]);\r\n    //         temp += data[val].qty;\r\n    //         if (temp - data[val].qty !== 0) {\r\n    //           data[val] = null;\r\n    //         }\r\n    //       }\r\n    //     });\r\n    //     data[index[0]].qty = temp;\r\n    //   });\r\n    // }\r\n    // data = data.filter((ele) => ele !== null);\r\n\r\n    /**\r\n     * add the fileds of  data from the woocom & ocr\r\n    */\r\n    console.log(wooComProducts.length);\r\n    // if(wooComProducts[0] != null){\r\n    //   let updatedWoocomProducts = data\r\n    //     .map((product, index) => {\r\n    //       /**find index of the item in fetched woocom product list */\r\n    //       const wooIndex = wooComProducts.findIndex(\r\n    //         (wooProduct) => product.item === wooProduct.itemNo\r\n    //       );\r\n    //       if (wooIndex !== -1) {\r\n    //         /**get the qty & other fileds of the woocom product */\r\n    //         let { id, stock_quantity } = wooComProducts[wooIndex];\r\n    //         stock_quantity += product.qty;\r\n    //         const regular_price = product.sp;\r\n    //         return { id, regular_price, stock_quantity, itemNo: product.item };\r\n    //       }\r\n    //       return null;\r\n    //     })\r\n    //     .filter((item) => item !== null);\r\n\r\n    //   console.log(updatedWoocomProducts); \r\n    //   await pushToWoocom(updatedWoocomProducts);\r\n    //   }\r\n    await pushToPOS(posProducts);\r\n\r\n    // setLoader(false);\r\n    // dispatch({type: \"LOADER\"});\r\n    // if (itemsNotPushed.length === 0) {\r\n    window.alert(\"Inventory updated successfully\");\r\n    // setRedirect(true);\r\n    // } else {\r\n    //   window.alert(\"Inventory not updated\");\r\n    // }\r\n  };\r\n\r\n  function toConsoleState() {\r\n    console.log(wooComProducts);\r\n    console.log(posProducts);\r\n    console.log(singleItemData);\r\n  }\r\n\r\n  const pushSingleItemToInventory = async (index) =>{\r\n    // setApiLoader(true);\r\n    // dispatch({type: \"API_LOADER\"});\r\n    const product = [];\r\n    \r\n    const tempTable = [];\r\n    product.push(posProduct);\r\n    console.log(product);\r\n    product.isUpdated = \"true\";\r\n    itemNo = product.itemNo;\r\n    \r\n\r\n    // setLoader(false);\r\n    // dispatch({type: \"LOADER\"});\r\n    // console.log(tempTable);\r\n    singleItemData = [posProduct];\r\n    singleItemData[0].isUpdated = \"true\";\r\n    // setPushToInventory(true);\r\n    console.log(singleItemData);\r\n    \r\n    updateSku = singleItemData[0].posSku;\r\n\r\n\r\n    await getProducts();\r\n    await getPosProducts();\r\n    console.log(posProducts);\r\n    if(posProducts[0] != undefined ){\r\n      await pushInventoryDetails2();\r\n      toConsoleState();\r\n      console.log(singleItemData);\r\n      console.log(singleItemData.itemNo);\r\n      // await inventoryService.UpdateInvoiceData(inv, num, day, singleItemData[0].itemNo); \r\n\r\n      //Update unit cost n price in db, after update POS.\r\n      let data1 = {\r\n        cost: singleItemData[0].newUnitCost,\r\n        price: singleItemData[0].newUnitPrice,\r\n        item: singleItemData[0].itemNo,\r\n        invoice: invoice.slug\r\n      }\r\n      console.log(data1)\r\n      await inventoryService.UpdateDBafterPosUpdate(data1);\r\n\r\n      //Log Generate.\r\n      console.log(\"PRODUCTT\");\r\n      console.log(singleItemData);\r\n      const log = {\r\n        InvoiceName: invoice.slug,\r\n        InvoiceDate: \"\",\r\n        ItemNo: singleItemData[0].itemNo,\r\n        InvoiceDescription: singleItemData[0].description,\r\n        PosDescription: singleItemData[0].pos,\r\n        OldUnitCost: singleItemData[0].unitCost,\r\n        OldUnitPrice: singleItemData[0].unitPrice,\r\n        //OldMargin: singleItemData[0].margin.toFixed(2).toString(),\r\n        OldMargin: (((singleItemData[0].unitPrice - singleItemData[0].unitCost)/singleItemData[0].unitCost)*100).toFixed(2).toString(),\r\n        NewUnitCost: singleItemData[0].newUnitCost,\r\n        NewUnitPrice: singleItemData[0].newUnitPrice,\r\n        //NewMargin:( ((singleItemData[0].sp- singleItemData[0].cp)/ singleItemData[0].cp)*100).toFixed(2).toString(),\r\n        NewMargin: (((singleItemData[0].newUnitPrice - singleItemData[0].newUnitCost)/singleItemData[0].newUnitCost)*100).toFixed(2).toString(),\r\n        UpdateDate: todayDate,\r\n        Person: userEmail,\r\n        TimeStamp: new Date().toTimeString().split(\" \")[0], \r\n        HandWritten: \"YES\"\r\n      }\r\n      console.log(log);\r\n\r\n      const logUpdate = await inventoryService.posLogs(log);\r\n      console.log(logUpdate)\r\n\r\n    } else {\r\n      alert(\"POS not updated!!\");\r\n    }\r\n    // setApiLoader(false);\r\n    // dispatch({type: \"API_LOADER\"});\r\n\r\n    \r\n    \r\n  }\r\n//*********************************************************************POS UPDATE ENDS******************************************* */\r\n  const reverseUpdate = async(index) => {\r\n  console.log(index);\r\n  console.log(tableData);\r\n  console.log(tableData[index]);\r\n  let item = tableData[index];\r\n  let data = {\r\n    invoice: invoice.slug,\r\n    itemNo: item.itemNo,\r\n  }\r\n  const result = await inventoryService.reverseUpdate(data);\r\n  console.log(result);\r\n  if(result.ok == 1){\r\n    setProductsInTable();\r\n  }else {\r\n    alert(\"Some error occured in updation\");\r\n  }\r\n    }\r\n\r\n  const linkManually = async(index) => {\r\n  console.log(index);\r\n  console.log(tableData);\r\n  console.log(tableData[index]);\r\n  let item = tableData[index];\r\n  console.log(item)\r\n  let data = {\r\n    invoice: invoice.slug,\r\n    itemNo: item.itemNo,\r\n  }\r\n  const result = await inventoryService.linkManually(data);\r\n  console.log(result);\r\n\r\n  //Update unit cost from excel.\r\n  // const skuData = {sku: item.posSku};\r\n  // const res = await inventoryService.fetchProductFromPosList(skuData);\r\n  // console.log(res); \r\n\r\n\r\n\r\n  //Log Generate.\r\n  const costChange = item.cp - item.cost;\r\n  const invError = item.cp >= 3*item.cost ? \"YES\" : \"\";\r\n  console.log(invError);\r\n  let logState = {\r\n    InvoiceDescription: item.description,\r\n    PosDescription: item.posName,\r\n    SKU: item.posSku,\r\n    Barcode: item.barcode,\r\n    InvoiceName: invoice.slug,\r\n    ItemCode: item.itemNo,\r\n    LinkingDate: todayDate,\r\n    PersonName: userEmail,\r\n    Size: item.size,\r\n    PosUnitCost: item.cost,\r\n    PosUnitPrice: item.sellingPrice,\r\n    // InvoiceNo: num,\r\n    // InvoiceDate: day,\r\n    Department: item.department,\r\n    InvUnitCost: item.cp,\r\n    CostIncrease: invError == \"YES\" ? \"\" : costChange > 0 ? \"YES\" : \"\",\r\n    CostDecrease: invError == \"YES\" ? \"\" : costChange < 0 ? \"YES\" : \"\",\r\n    CostSame: invError == \"YES\" ? \"\" : costChange == 0 ? \"YES\" : \"\",\r\n    InvError: invError\r\n  }\r\n  console.log(logState);\r\n  const logResult = await inventoryService.linkManuallyLog(logState);\r\n  console.log(logResult);\r\n  \r\n  \r\n  \r\n  \r\n  if(result.statusText == \"OK\"){\r\n    setProductsInTable();\r\n    // setProductsInTableNew(inv, num, day);\r\n  }else {\r\n    alert(\"Some error occured in updation\");\r\n    setProductsInTable();\r\n    // setProductsInTableNew(inv, num, day);\r\n  }\r\n\r\n    }\r\n\r\n  const updateUnits = async (index) => {\r\n    const item = tableData[index];\r\n    console.log(item);\r\n    const data = {\r\n      invoiceName: invoice.slug,\r\n      itemName: item.itemNo,\r\n      value: {\r\n        Quantity: item.pieces\r\n      }\r\n    }\r\n    inventoryService\r\n    .UpdateProductFields(data)\r\n    .then((res) => {\r\n      if (!res) {\r\n        throw new Error(\"Product not updated\")\r\n      }\r\n      console.log(res);\r\n      alert(\"Successfully updated fields\");\r\n      // setStateUpdated(true);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      alert(\"Some error occuured in creating product\");\r\n    })\r\n    .finally(setProductsInTable());\r\n    // console.log(res);\r\n    }\r\n\r\n  const linkingCorrect = async (index) => {\r\n      console.log(index);\r\n      console.log(tableData);\r\n      console.log(tableData[index]);\r\n      let item = tableData[index];\r\n      console.log(item)\r\n      let data = {\r\n        invoice: invoice.slug,\r\n        itemNo: item.itemNo,\r\n      }\r\n      console.log(data);\r\n      const res = await inventoryService.linkingCorrect(data);\r\n      console.log(res);\r\n      if(res.statusText == \"OK\") {\r\n        \r\n        const costChange = item.cp - item.cost;\r\n        const invError = item.cp >= 3*item.cost ? \"YES\" : \"\";\r\n        \r\n        let logState = {\r\n          InvoiceDescription: item.description,\r\n          PosDescription: item.posName,\r\n          SKU: item.posSku,\r\n          Barcode: item.barcode,\r\n          InvoiceName: invoice.slug,\r\n          ItemCode: item.itemNo,\r\n          LinkingDate: todayDate,\r\n          PersonName: userEmail,\r\n          Size: item.size,\r\n          PosUnitCost: item.cost,\r\n          PosUnitPrice: item.sellingPrice,\r\n          // InvoiceNo: num,\r\n          // InvoiceDate: day,\r\n          Department: item.department,\r\n          InvUnitCost: item.cp,\r\n          CostIncrease: \"\",\r\n          CostDecrease: \"\",\r\n          CostSame:  \"\",\r\n          Unidentified: \"YES\",\r\n          InvError: invError  \r\n        }\r\n        const res = await inventoryService.UnidentifiedLog(logState);\r\n        console.log(res);\r\n        alert(\"SUCCESS\");\r\n        setProductsInTable();\r\n      }else {\r\n        alert(\"Some error occured\");\r\n        setProductsInTable();\r\n      }\r\n    }\r\n\r\n  // const reversePOSUpdate = async(index) => {\r\n  //   console.log(index);\r\n  //   console.log(tableData);\r\n  //   console.log(tableData[index]);\r\n  //   let item = tableData[index];\r\n  //   const result = await inventoryService.reversePOSUpdate(inv, num, day, item.itemNo);\r\n  //   if(result.ok == 1){\r\n  //     setProductsInTable();\r\n  //   }else {\r\n  //     alert(\"Some error occured in updation\");\r\n  //   }\r\n\r\n  // }\r\n\r\n  \r\n \r\n\r\n  const renderTableHeader = () => {\r\n  return header.map((key, index) => {\r\n    return (\r\n      <th\r\n        key={index}\r\n        style={{\r\n          position: \"sticky\",\r\n          top: \"70px\",\r\n          background: \"grey\",\r\n        }}\r\n      >\r\n        {key.toUpperCase()}\r\n      </th>\r\n    );\r\n  });\r\n    };\r\n\r\n    const renderTableData = () => {\r\n      // hicksvilleDropdown(HicksData);\r\n  \r\n      if (tableData) {\r\n        console.log(tableData);\r\n  \r\n        // console.log(showPosIndex);\r\n        // console.log(tableData[0]);\r\n        \r\n        let rows = tableData.map((element, index) => {\r\n          //fuzzwuzzSuggestion = getFuzzwuzzSuggestion(element.description);\r\n          // let isEmpty =\r\n          //   element.qty === \"\" ||\r\n          //   element.itemNo === \"\" ||\r\n          //   !element.pieces ||\r\n          //   isNaN(element.unitPrice) ||\r\n          //   element.unitPrice === \"\" ||\r\n          //   isNaN(element.extendedPrice);\r\n          let isEmpty = false;\r\n          // if (isEmpty && element.show) {\r\n          //   let emptyColumn = [...emptyColumnList, index];\r\n          //   emptyColumnList = [...new Set(emptyColumn)];\r\n          // }\r\n          // let isFree = element.qty != 0 && element.extendedPrice === \"0.00\";\r\n          // console.log(element.isUpdated);\r\n          console.log(element);\r\n          let margin = ((element.sellingPrice - element.cost)/ element.cost)*100;\r\n          \r\n  \r\n          return (\r\n            <tr\r\n              key={index}\r\n              className={isEmpty ? styles.red : null}\r\n              // style={element.show ? { opacity: \"1\" } : { opacity: \"0.4\" }}\r\n              style={element.linkingCorrect == \"false\" ? {backgroundColor: \"pink\"} : element.isUpdated === \"true\"  ? {backgroundColor: \"lightGreen\"}\r\n                : element.show ? { opacity: \"1\" } : { opacity: \"0.4\" }}\r\n            >\r\n              <td>{index + 1}</td>\r\n             \r\n              {/* <td>\r\n                <TextField\r\n                  type=\"tel\"\r\n                  value={element.details}\r\n                  id=\"outlined-secondary\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => {\r\n                    handleChange(index, \"details\", e.target.value);\r\n                  }}\r\n                  style={{ width: 100 }}\r\n                />\r\n              </td> */}\r\n              <td className={styles.element}>\r\n                <TextField\r\n                  type=\"tel\"\r\n                  value={showPosIndex === index ? showPosState.barcode : element.barcode}\r\n                  id=\"outlined-secondary\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => {\r\n                    handleChange(index, \"barcode\", e.target.value);\r\n                  }}\r\n                  style={{ width: 150 }}\r\n                />\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  aria-label=\"add to review\"\r\n                  // onClick={() => addForReview(element, index)}\r\n                >\r\n                  <InfoOutlinedIcon\r\n                    style={element.isReviewed  === \"true\" ? {fill: \"red\"} : null}\r\n                  /> \r\n                  {/* <AddShoppingCartIcon\r\n                    style={\r\n                      reviewItems.includes(index)\r\n                        ? { backgroundColor: \"green\" }\r\n                        : null\r\n                    }\r\n                  /> */}\r\n                </IconButton>\r\n                <div className={element.isReviewed  === \"true\" ? styles.tooltipIsReviewed: styles.tooltip} >\r\n                  <p>POS Product- {showPosIndex === index ? showPosState.pos : element.posName }</p>\r\n                  {/* <p>UPC- {showPosIndex === index ? showPosState.barcode : element.barcode}</p> */}\r\n                  <p>Size- {showPosIndex === index ? showPosState.size : element.size}</p>\r\n                  <p>Department - {showPosIndex === index ? showPosState.department : element.department}</p>\r\n                  <p>Margin(%) - {margin.toFixed(2)}</p>\r\n                  <p>Unit Cost- {showPosIndex === index ? showPosState.unitCost : element.cost}</p> \r\n                  <p>Unit Price- {showPosIndex === index ? showPosState.unitPrice : element.sellingPrice}</p>\r\n                  {/* <p>Price- {showPosIndex === index ? showPosState.price : element.price}</p> */}\r\n                  <div >\r\n                  <button onClick={() => {\r\n                          if(notFounds === \"true\"){\r\n                            toggleModal(\"notfounds\");\r\n                          }else{\r\n                            updateItem(invoice.slug, (parseFloat(element.unitPrice) / parseInt(element.pieces)).toFixed(2))\r\n                          }\r\n                        } } \r\n                    disabled={showPosIndex === index ? false : true}\r\n                    style={{backgroundColor: \"green\",\r\n                    border: \"none\",\r\n                    color: \"white\",\r\n                    padding: \"4px 8px\",\r\n                    textAlign: \"center\",\r\n                    textDecoration: \"none\",\r\n                    display: \"inline-block\",\r\n                    fontSize: \"14px\",\r\n                    align: \"left\"}} >\r\n                    Update Item\r\n                  </button>\r\n                  </div> \r\n                  <br />\r\n                  <div>\r\n                  <button onClick={()=> linkManually(index)} \r\n                    // disabled={showPosIndex === index ? false : true}\r\n                    style={{backgroundColor: \"blue\",\r\n                    border: \"none\",\r\n                    color: \"white\",\r\n                    padding: \"4px 8px\",\r\n                    textAlign: \"center\",\r\n                    textDecoration: \"none\",\r\n                    display: \"inline-block\",\r\n                    fontSize: \"14px\",\r\n                    align: \"left\"}} >\r\n                    Link Manually\r\n                  </button>\r\n                  </div>\r\n                  <br />\r\n                  <div>\r\n                  <button onClick={()=> reverseUpdate(index)} \r\n                    // disabled={showPosIndex === index ? false : true}\r\n                    style={{backgroundColor: \"red\",\r\n                    border: \"none\",\r\n                    color: \"white\",\r\n                    padding: \"4px 8px\",\r\n                    textAlign: \"center\",\r\n                    textDecoration: \"none\",\r\n                    display: \"inline-block\",\r\n                    fontSize: \"14px\",\r\n                    align: \"left\"}} >\r\n                    Reverse Update\r\n                  </button>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n              <td>{showPosIndex === index ? showPosState.posSku : element.posSku}</td>\r\n              <td>\r\n                <TextField\r\n                  type=\"tel\"\r\n                  value={element.qty}\r\n                  id=\"outlined-secondary\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => {\r\n                    handleChange(index, \"qty\", e.target.value);\r\n                  }}\r\n                  style={{ width: 100 }}\r\n                />\r\n              </td>\r\n              <td>{element.cp}</td>\r\n              <td>\r\n                <Autocomplete\r\n                  value={element.itemNo}\r\n                  onChange={(event, newValue) => {\r\n                    if (newValue) {\r\n                      handleChange(index, \"itemNo\", newValue);\r\n                    }\r\n                  }}\r\n                  id=\"combo-box\"\r\n                  options={itemNoDropdown}\r\n                  getOptionLabel={(option) => option}\r\n                  style={{ width: 200 }}\r\n                  renderInput={(params) => (\r\n                    <TextField {...params} variant=\"outlined\" />\r\n                  )}\r\n                />\r\n              </td>\r\n              <td>\r\n              {/* {dropdownIndex == index ? fetchingOptions ? <Loading type=\"ThreeDots\" height={40} width={40} /> : null : null} */}\r\n                <Autocomplete\r\n                  value={showPosIndex  === index ? showPosState.item : element.itemNo }\r\n                  loading={true}\r\n                  onInputChange={(event, value) => {\r\n                    console.log(\"ON INPUT CHANGE\");\r\n                    // event.toLowerCase();\r\n                    // value.toLowerCase();\r\n                    // console.log(event.target.value);\r\n                    // console.log(value);\r\n                    // searchDropdown(event, value);\r\n                    // setOptions([]);\r\n                    if(event != null){\r\n                      setTimeout(()=> {\r\n                        hicksvilleDropdownNew(event, value, index);\r\n\r\n                      }, 1500);\r\n                    }\r\n                    // hicksvilleDropdownNew(event, value, index);\r\n                  }}\r\n                  onChange={(event, newValue) => {\r\n                    // console.log(event.target.value);\r\n                    // console.log(newValue);\r\n                    if (newValue) {\r\n                      let newState = { ...showPosState };\r\n                      console.log(newValue);\r\n                      // newState.item = newValue.name;\r\n                      newState.item = element.itemNo\r\n                      newState.description = newValue.name;\r\n                      newState.barcode = newValue.upc;\r\n                      newState.pos = newValue.name;\r\n                      newState.posSku = newValue.sku;\r\n                      newState.size = newValue.size;\r\n                      newState.department = newValue.department;\r\n                      newState.unitCost = newValue.cost;\r\n                      newState.unitPrice = newValue.price;\r\n                      // setShowPosState(newState);\r\n                      dispatch({type: \"SET_POS_STATE\", data: newState})\r\n                      setShowPosIndex(index);\r\n                      setUnitCost(newValue.cost);\r\n                      // setStateUpdated(\"\");\r\n                      if(isEmpty){\r\n                        // setNotFounds(\"true\");\r\n                        dispatch({type: \"NOT_FOUNDS\", data: \"true\"})\r\n\r\n                        setRedState(\"false\");\r\n                      }\r\n                      //setDisabled(false);\r\n                      //updateOnHoverDetails(index);\r\n                      //setShowPosIndex(index);\r\n                      // console.log(newValue);\r\n                      console.log(newState);\r\n                      //console.log(showPosState);\r\n                      \r\n                    }\r\n                  }}\r\n                  id=\"combo-box\"\r\n                  // options={element.fuzzSuggestion}\r\n                  options={options}\r\n                  // getOptionLabel={option => option.label}\r\n                  getOptionLabel={(option) => option.label ?? element.itemNo}\r\n                  // getOptionLabel={(option) => dropdownLoader ? <Spinner /> : option.label}\r\n                  style={{ width: 400 }}\r\n                  renderInput={(params) => (\r\n                    <TextField {...params} variant=\"outlined\" />\r\n                  )}\r\n                />\r\n              </td>\r\n              \r\n              <td>{element.description}</td>\r\n              {/* <td>{element.pieces}</td> */}\r\n              <td>\r\n                <TextField\r\n                  type=\"tel\"\r\n                  value={element.pieces}\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => {\r\n                    handleChange(index, \"pieces\", e.target.value);\r\n                  }}\r\n                  style={{ width: 100 }}\r\n                />\r\n                <button onClick={() => {updateUnits(index)}} style={{\r\n                  backgroundColor: \"#008CBA\",\r\n                  border: \"none\",\r\n                  color: \"white\",\r\n                  padding: \"5px 16px\",\r\n                  textAlign: \"center\",\r\n                  textDecoration: \"none\",\r\n                  display: \"inline-block\",\r\n                  fontSize: \"10px\",\r\n                  margin: \"4px 2px\",\r\n                  cursor: \"pointer\",\r\n                }}>Update Units</button> \r\n              </td>\r\n              <td>\r\n                <TextField\r\n                  type=\"tel\"\r\n                  value={element.unitPrice}\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => {\r\n                    handleChange(index, \"unitPrice\", e.target.value);\r\n                  }}\r\n                  style={\r\n                    element.priceIncrease === 1\r\n                      ? { backgroundColor: \"#1a8cff\", width: 100 }\r\n                      : element.priceIncrease === -1\r\n                      ? { backgroundColor: \"#ffb31a\", width: 100 }\r\n                      : { width: 100 }\r\n                    // showPosIndex === index ? costInc===\"true\" ? { backgroundColor: \"#1a8cff\", width: 100 } : costDec===\"true\" ? { backgroundColor: \"#ffb31a\", width: 100 } : {width: 100}\r\n                    //   : element.priceIncrease === 1 \r\n                    //       ? { backgroundColor: \"#1a8cff\", width: 100 }\r\n                    //       : element.priceIncrease === -1 \r\n                    //       ? { backgroundColor: \"#ffb31a\", width: 100 }\r\n                    //       : { width: 100 }\r\n                  }\r\n                />\r\n              </td>\r\n              <td>{element.extendedPrice}</td>\r\n              \r\n              <td>\r\n                <TextField\r\n                  type=\"tel\"\r\n                  value={element.sp}\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => {\r\n                    handleChange(index, \"sp\", e.target.value);\r\n                  }}\r\n                  style={{ width: 100 }}\r\n                />\r\n              </td>\r\n              <td>{element.markup}</td>\r\n              {/* <td>\r\n                <Checkbox\r\n                  checked={!element.show}\r\n                  onChange={(e) => handleChange(index, \"show\", e.target.value)}\r\n                  inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                />\r\n              </td> */}\r\n\r\n                <td className={styles.element}>\r\n                <IconButton onClick={() => {\r\n                  toggleModal(\"details\");\r\n                  setDetailsIndex(index);\r\n                  }}>\r\n                    <AddCircleIcon />\r\n                  </IconButton>\r\n                  <div className={styles.tooltip}>\r\n                    <p>Details- {element.details}</p>\r\n                  </div>\r\n                  \r\n              </td>\r\n\r\n\r\n              <td>\r\n            {/* <Button\r\n              text={element.show ? \"Delete\" : \"Undo\"}\r\n              color=\"btn btn-info\"\r\n              type=\"submit\"\r\n              onClick={() => deleteRow(index)}\r\n            /> */}\r\n          </td>\r\n              <td>\r\n              <Button \r\n                  text=\"Update POS\"\r\n                  color=\"btn btn-info\"\r\n                  type=\"submit\"\r\n                  onClick={() => pushSingleItemToInventory(index)}\r\n                  style={{ width: 120 }}\r\n                />\r\n                    \r\n              </td>\r\n              {/* <td>\r\n              <Button \r\n                  text=\"Reverse POS\"\r\n                  type=\"submit\"\r\n                  onClick={() => reversePOSUpdate(index)}\r\n                  style={{ width: 120, backgroundColor: \"red\", color: \"white\" }}\r\n                />\r\n                    \r\n              </td> */}\r\n              <td className={styles.element}>\r\n                <IconButton onClick={() => linkingCorrect(index)}>\r\n                  <Cancel/>\r\n                </IconButton>\r\n              </td>\r\n              <td>{index + 1}</td>\r\n              {/* <td>\r\n                <Button\r\n                  text={element.show ? \"Delete\" : \"Undo\"}\r\n                  color=\"btn btn-info\"\r\n                  type=\"submit\"\r\n                  onClick={() => deleteRow(index)}\r\n                />\r\n              </td> */}\r\n            </tr>\r\n          );\r\n        });\r\n        return (\r\n          <div style={{ marginTop: \"35px\" }}>\r\n            <table className=\"table table-hover table-responsive-sm\">\r\n              <tbody>\r\n                <tr>{renderTableHeader()}</tr>\r\n                {rows}\r\n                <tr>\r\n                  <td>\r\n                    {/* <Button\r\n                      text=\"Add cell\"\r\n                      color=\"btn btn-info\"\r\n                      onClick={addRow}\r\n                    /> */}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <div className={styles.divRow}>\r\n              {/* <Button\r\n                text=\"Update Inventory\"\r\n                color=\"btn btn-info\"\r\n                type=\"submit\"\r\n                onClick={pushInventoryDetails}\r\n              /> */}\r\n              {/* <Button\r\n                text=\"Save Invoice Data\"\r\n                color=\"btn btn-info\"\r\n                type=\"submit\"\r\n                onClick={toggleModal}\r\n              /> */}\r\n              {/* <Button\r\n                text=\"Re upload\"\r\n                color=\"btn btn-info\"\r\n                type=\"submit\"\r\n                onClick={() => window.location.reload()}\r\n              /> */}\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n  };\r\n\r\n  const updateItem = async () => {\r\n    console.log(invoice);\r\n    const data = {\r\n  \r\n      invoiceName: invoice.slug,\r\n      itemName: itemName,\r\n      value: {\r\n        isReviewed: \"true\",\r\n        Item: itemName,\r\n        Quantity: unitsInCase,\r\n        Description: posProduct.Description,\r\n        Price: caseCost,\r\n        POS: posProduct.POS,\r\n        Barcode: posProduct.Barcode,\r\n        PosSKU: posProduct.PosSKU,\r\n        Size: posProduct.Size,\r\n        Department: posProduct.Department,\r\n        SellerCost: newUnitCost,\r\n        SellingPrice: newUnitPrice,\r\n      }\r\n    }\r\n    console.log(data)\r\n\r\n    const result = await inventoryService.UpdateProductFields(data);\r\n    console.log(result);\r\n\r\n\r\n  }\r\n\r\n  const getItems = async () => {\r\n    // const data = {\r\n    //   invoice: invoice.slug,\r\n    // }\r\n    const data = invoice;\r\n    console.log(data);\r\n    const res = await inventoryService.getItemForHandwrittenInvoice(data);\r\n    console.log(res);\r\n    return res;\r\n  }\r\n\r\n  const toggleModal = () => {\r\n    console.log(posProduct);\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  const handleChange = (key, val) => {\r\n    setPosProduct({\r\n      ...posProduct,\r\n      [key]: val,\r\n    });\r\n  };\r\n\r\n  const addProduct = () => {\r\n    setShowModal(!showModal);\r\n    console.log(posProduct);\r\n    const data = {\r\n      InvoiceName: invoice.slug,\r\n      ItemName: posProduct.itemName,\r\n      POS: posProduct.pos, \r\n      Barcode: posProduct.barcode, \r\n      PosSKU: posProduct.posSku, \r\n      Size: posProduct.size, \r\n      Department: posProduct.department,\r\n      SellerCost: posProduct.unitCost,\r\n      SellingPrice: posProduct.unitPrice,\r\n      NewUnitCost: posProduct.newUnitCost,\r\n      NewUnitPrice: posProduct.newUnitPrice\r\n    };\r\n    \r\n    inventoryService\r\n      .handwrittenLogs(data)\r\n      .then((res) => {\r\n        if (!res) {\r\n          throw new Error(\"Product not created\")\r\n        }\r\n        console.log(res);\r\n        alert(\"Successfully updated fields\");\r\n      })\r\n      .then()\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Some error occuured in creating product\");\r\n      })\r\n      .finally();\r\n  };\r\n\r\n  const hicksvilleDropdownNew = async (event, value, index) => {\r\n    console.log(event);\r\n    console.log(value);\r\n    console.log(value.length);\r\n    setOptions([]);\r\n\r\n    if(!isNaN(value) && value.length>0 ){\r\n      console.log(\"number\");\r\n      const res = await inventoryService.getHicksvilleData(value.toUpperCase());\r\n      const data = res;\r\n      console.log(data);\r\n\r\n\r\n      let productsString = \"\";\r\n      for(let i=0;i<data.length;i++){\r\n        productsString = productsString + data[i].name + '$$$';\r\n      } \r\n      let result = productsString.split(\"$$$\");\r\n    \r\n      let newData = [];\r\n      for (let i = 0; i < result.length; i++) {\r\n        let s = result[i].split(\"@@@\");\r\n        let obj =\r\n          {\r\n            sku: s[1] === \"nan\" ? null : s[1],\r\n            upc: s[0] === \"nan\" ? null : s[0],\r\n            altupc1: s[14] === \"nan\" ? null : s[14],\r\n            altupc2: s[15] === \"nan\" ? null : s[15],\r\n            name: s[2] === \"nan\" ? null : s[2],\r\n            vintage: s[8] === \"nan\" ? null : s[8],\r\n            totalQty: s[13] === \"nan\" ? null : s[13],\r\n            cost: s[4] === \"nan\" ? null : s[4],\r\n            pricea: s[10] === \"nan\" ? null : s[10],\r\n            priceb: s[11] === \"nan\" ? null : s[11],\r\n            pricec: s[12] === \"nan\" ? null : s[12],\r\n            department: s[9] === \"nan\" ? null : s[9],\r\n            salePrice: s[5] === \"nan\" ? null : s[5],\r\n            size: s[6] === \"nan\" ? null : s[6],\r\n            pack: s[7] === \"nan\" ? null : s[7],\r\n            price: s[3] === \"nan\" ? null : s[3],\r\n          }\r\n        newData.push(obj);\r\n      }\r\n      const filter = newData.map((element) => {\r\n        let obj = { ...element };\r\n        obj.label = `${element.name}--${element.price}--${element.upc}--${element.size}--${element.cost}--${element.sku}`;\r\n        //console.log(obj);\r\n        return obj; \r\n      });\r\n      setOptions(filter);\r\n\r\n    }\r\n\r\n    if(isNaN(value) && value != null && value.length>=4){\r\n      console.log(\"string\");\r\n      // setDropdownLoader(true);\r\n      // setFetchingOptions(true);\r\n      const res = await inventoryService.getHicksvilleData(value.toUpperCase());\r\n      const data = res;\r\n      console.log(data);\r\n\r\n\r\n      let productsString = \"\";\r\n      for(let i=0;i<data.length;i++){\r\n        productsString = productsString + data[i].name + '$$$';\r\n      } \r\n      let result = productsString.split(\"$$$\");\r\n    \r\n      let newData = [];\r\n      for (let i = 0; i < result.length; i++) {\r\n        let s = result[i].split(\"@@@\");\r\n        let obj =\r\n          {\r\n            sku: s[1] === \"nan\" ? null : s[1],\r\n            upc: s[0] === \"nan\" ? null : s[0],\r\n            altupc1: s[14] === \"nan\" ? null : s[14],\r\n            altupc2: s[15] === \"nan\" ? null : s[15],\r\n            name: s[2] === \"nan\" ? null : s[2],\r\n            vintage: s[8] === \"nan\" ? null : s[8],\r\n            totalQty: s[13] === \"nan\" ? null : s[13],\r\n            cost: s[4] === \"nan\" ? null : s[4],\r\n            pricea: s[10] === \"nan\" ? null : s[10],\r\n            priceb: s[11] === \"nan\" ? null : s[11],\r\n            pricec: s[12] === \"nan\" ? null : s[12],\r\n            department: s[9] === \"nan\" ? null : s[9],\r\n            salePrice: s[5] === \"nan\" ? null : s[5],\r\n            size: s[6] === \"nan\" ? null : s[6],\r\n            pack: s[7] === \"nan\" ? null : s[7],\r\n            price: s[3] === \"nan\" ? null : s[3],\r\n          }\r\n        newData.push(obj);\r\n      }\r\n      const filter = newData.map((element) => {\r\n        let obj = { ...element };\r\n        if(element.itemNo != \"undefined\"){\r\n        obj.label = `${element.name}--${element.price}--${element.upc}--${element.size}--${element.cost}--${element.sku}`;\r\n        }\r\n        //console.log(obj);\r\n        return obj; \r\n      });\r\n      setOptions(filter);\r\n    }\r\n  }\r\n\r\n  const setProductsInTable = () => {\r\n    // setLoader(true);\r\n    dispatch({type: \"LOADER\"});\r\n    async function invoiceData() {\r\n      const products = await tesseractService.GetProductDetails(\r\n        invoice.slug\r\n        // inv\r\n      );\r\n      console.log(products);\r\n      //console.log(props.selectedInvoice);\r\n      return products;\r\n    }\r\n      // invoiceData()\r\n      getItems()  \r\n      .then((products) => {\r\n          /**post processing the table data after returning from filter */\r\n          // function convertToUpperCase(obj) {\r\n          //   let newObj = {};\r\n          //   for (let key in obj) {\r\n          //     newObj[key.toUpperCase()] = obj[key];\r\n          //   }\r\n          //   return newObj;\r\n          // }\r\n          // products = convertToUpperCase(products);\r\n          console.log(products);\r\n          // scanInvoiceData.InvoiceData = ocrData;\r\n        //   setOcrProducts(ocrData);\r\n          \r\n        //   console.log(scanInvoiceData);\r\n          // scanInvoiceData.InvoiceData = ocrData;\r\n          //console.log(resScnInvDta);\r\n          //console.log(\"OCERDATa\", ocrData);\r\n          //console.log(products);\r\n          //console.log(scanInvoiceData);\r\n          let table = products.map((row) => {\r\n            /**For invoices which dont have item no, set description as item no */\r\n            if (row.itemNo === undefined) {\r\n              // row.itemNo = row.description.trim().toUpperCase();\r\n              // row.itemNo = row.Description.trim().toUpperCase();\r\n              row.itemNo = row.Description.trim();\r\n            }\r\n            // row.itemNo = row.itemNo.toString().toUpperCase();\r\n            // row.itemNo = row.Item.toString().toUpperCase();\r\n            row.itemNo = row.Item.toString();\r\n\r\n            row.description = row.Description;\r\n              // products[row.itemNo] !== undefined\r\n              //   ? products[row.itemNo].Description\r\n              //   : row.description;\r\n            row.pieces = row.Quantity; \r\n              // products[row.Item] !== undefined\r\n              //   ? products[row.Item].Quantity\r\n              //   : 0;\r\n            row.sku = row.sku\r\n              // products[row.Item] !== undefined\r\n              //   ? products[row.Item].sku\r\n              //   : \"\";\r\n            row.barcode = row.Barcode;\r\n              // products[row.Item] !== undefined\r\n              //   ? products[row.Item].Barcode\r\n              //   : \"\";\r\n            row.posName = row.POS\r\n              // products[row.Item] !== undefined\r\n              //   ? products[row.Item].POS\r\n              //   : \"\";\r\n            row.markup = 0;\r\n            row.show = true;\r\n            row.posSku = row.PosSKU\r\n              // products[row.Item] !== undefined\r\n              //   ? products[row.Item].PosSKU\r\n              //   : \"\";\r\n            row.isReviewed = row.isReviewed \r\n              // products[row.Item] !== undefined ? products[row.Item].isReviewed : \"\" ;\r\n            row.size = row.Size\r\n              // products[row.Item] !== undefined ? products[row.Item].Size : \"\";\r\n            row.department = row.Department \r\n              // products[row.Item] !== undefined ? products[row.Item].Department : \"\";\r\n            row.cost = row.SellerCost \r\n              // products[row.Item] !== undefined ? products[row.Item].SellerCost : \"\";\r\n            row.sellingPrice = row.SellingPrice \r\n              // products[row.Item] !== undefined ? products[row.Item].SellingPrice : \"\";\r\n            row.price = row.Price \r\n              // products[row.Item] !== undefined ? products[row.Item].Price : \"\";\r\n            row.details = row.Details \r\n              // products[row.Item] !== undefined ? products[row.Item].Details : \"\";\r\n            row.linkingCorrect = row.linkingCorrect; \r\n              // products[row.Item] !== undefined ? products[row.Item].LinkingCorrect : \"\";\r\n            // row.margin = products[row.Item] !== undefined ? ((products[row.Item].SellingPrice - products[row.Item].SellerCost)/ products[row.Item].SellerCost)*100 : \"\";\r\n            row.margin = row.Item !== undefined ? ((row.SellingPrice - row.SellerCost)/ row.SellerCost)*100 : \"\";\r\n            //console.log(\"department-\" + row.department + \"  cost-\" + row.cost + \"  price\" + row.sellingPrice);\r\n            let sp = 0;\r\n            let cp = 0;\r\n            // const barcode = products.Barcode\r\n            // if (parseInt(row.pieces)) {\r\n            //   sp = (parseFloat(row.unitPrice) / parseInt(row.pieces)).toFixed(\r\n            //     2\r\n            //   );\r\n            //   cp = sp;\r\n            // }\r\n            row.cp = \"\";\r\n            row.sp = \"\";\r\n            if (row.Item !== undefined) {\r\n              if (sp > row.SellerCost) {\r\n                row[\"priceIncrease\"] = 1;\r\n              } else if (sp < +row.SellerCost) {\r\n                row[\"priceIncrease\"] = -1;\r\n              } else if (sp == +row.SellerCost) {\r\n                row[\"priceIncrease\"] = 0;\r\n              }\r\n            } else {\r\n              row[\"priceIncrease\"] = 0;\r\n            }\r\n            // if (products[row.Item] !== undefined) {\r\n            //   if (sp > +products[row.Item].SellerCost) {\r\n            //     row[\"priceIncrease\"] = 1;\r\n            //   } else if (sp < +products[row.Item].SellerCost) {\r\n            //     row[\"priceIncrease\"] = -1;\r\n            //   } else if (sp == +products[row.Item].SellerCost) {\r\n            //     row[\"priceIncrease\"] = 0;\r\n            //   }\r\n            // } else {\r\n            //   row[\"priceIncrease\"] = 0;\r\n            // }\r\n            row.qty = \"\";\r\n            row.extendedPrice = \"\";\r\n            /**filter out the rows for which qty shipped & extendedPrice is zero */\r\n            if (row.qty == \"0\" && row.extendedPrice === \"0.00\") {\r\n              return null;\r\n            }\r\n            /**Calulate qty for which qty is not read/scanned by textract */\r\n            // if (!row.qty) {\r\n            //   row.qty = (\r\n            //     parseFloat(row.extendedPrice) / parseFloat(row.unitPrice)\r\n            //   ).toFixed(0);\r\n            // }\r\n          return { ...row, sp, cp };\r\n          });\r\n          // setLoader(false);\r\n          dispatch({type: \"LOADER\"});\r\n\r\n          setTableData(table.filter((data) => data !== null));\r\n          setItemNoDropdown(Object.keys(products));\r\n          setProductDetails(products);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"error on mapping ocrdata\", err)\r\n          // setLoader(false);\r\n          dispatch({type: \"LOADER\"});\r\n        });\r\n    \r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    const curDate = new Date();\r\n    console.log(curDate);\r\n    let date = curDate.getFullYear()+ \"-\" + (curDate.getMonth()+1) +\"-\"+ curDate.getDate();\r\n    console.log(date);\r\n    setTodayDate(date);\r\n\r\n    firebase.auth().onAuthStateChanged(function(user) {\r\n      if (user) {\r\n        // setUserEmail(user.email);\r\n        setUserEmail(user.email);\r\n        console.log('This is the user: ', user)\r\n        console.log('This is the user: ', user.email);\r\n      } else {\r\n        // No user is signed in.\r\n        console.log('There is no logged in user');\r\n      }\r\n    });\r\n    \r\n\r\n  },[]);\r\n    \r\n  return (\r\n\r\n      <div className=\"container-fluid\">\r\n          <Paper className={classes.root}>\r\n              <Grid style={{ display: \"flex\" }}>\r\n                  {/* <ul>\r\n                  <li> */}\r\n                  <Autocomplete\r\n                      value={invoice}\r\n                      onChange={(event, newValue) => {\r\n                          console.log(\"new value\", newValue)\r\n                          if (newValue) {\r\n                            console.log(newValue);\r\n                          // setInvoice(newValue);\r\n                          // setTimeout(()=> {}, 1000);\r\n                          invoice = newValue;\r\n                          console.log(invoice);\r\n                          setProductsInTable();\r\n                          }\r\n                          // getInvoices(newValue);\r\n                      }}\r\n                      id=\"combo-box\"\r\n                      options={dropdownOptions}\r\n                      getOptionLabel={(option) => option.value}\r\n                      style={{ width: 200 }}\r\n                      autoHighlight\r\n                      renderInput={(params) => (\r\n                          <TextField {...params} label={dropdownLabel} variant=\"outlined\" />\r\n                      )}\r\n                  />\r\n                {/* </li> */}\r\n                <br />\r\n\r\n                {/* <li> */}\r\n                <TextField\r\n                      label=\"Item Name\"\r\n                      variant=\"outlined\"\r\n                      value={posProduct.Item}\r\n                      onChange={(event) => {\r\n                        handleChange(\"Item\", event.target.value);\r\n                        setItemName(event.target.value);\r\n                        }\r\n                      }\r\n                  />\r\n                {/* </li> */}\r\n                <br />\r\n              {/* <li> */}\r\n              <Autocomplete\r\n                  value={posProduct.POS}\r\n                  loading={true}\r\n                  onInputChange={(event, value) => {\r\n                    console.log(\"ON INPUT CHANGE\");\r\n                    // event.toLowerCase();\r\n                    // value.toLowerCase();\r\n                    // console.log(event.target.value);\r\n                    // console.log(value);\r\n                    // searchDropdown(event, value);\r\n                    // setOptions([]);\r\n                    if(event != null){\r\n                      setTimeout(()=> {\r\n                        hicksvilleDropdownNew(event, value);\r\n\r\n                      }, 1500);\r\n                    }\r\n                    // hicksvilleDropdownNew(event, value, index);\r\n                  }}\r\n                  onChange={(event, newValue) => {\r\n                    // console.log(event.target.value);\r\n                    // console.log(newValue);\r\n                    if (newValue) {\r\n                      let newState = { ...posProduct };\r\n                      console.log(newValue);\r\n                      newState.Item = itemName;\r\n                      newState.isReviewed = \"true\";\r\n                      // newState.item = element.itemNo\r\n                      newState.Description = newValue.name;\r\n                      newState.Barcode = newValue.upc;\r\n                      newState.POS = newValue.name;\r\n                      newState.PosSKU = newValue.sku;\r\n                      newState.Size = newValue.size;\r\n                      newState.Department = newValue.department;\r\n                      newState.SellerCost = newValue.cost;\r\n                      newState.SellingPrice = newValue.price;\r\n                      // setShowPosState(newState);\r\n                      // setShowPosIndex(index);\r\n                      // setUnitCost(newValue.cost);\r\n                      // setStateUpdated(\"\");\r\n\r\n                      setPosProduct(newState);\r\n                      singleItemData = [];\r\n\r\n\r\n\r\n                      //setDisabled(false);\r\n                      //updateOnHoverDetails(index);\r\n                      //setShowPosIndex(index);\r\n                      // console.log(newValue);\r\n                      console.log(newState);\r\n                      //console.log(showPosState);\r\n                      // toggleModal();\r\n                      \r\n                    }\r\n                  }}\r\n                  id=\"combo-box\"\r\n                  // options={element.fuzzSuggestion}\r\n                  options={options}\r\n                  // getOptionLabel={option => option.label}\r\n                  getOptionLabel={(option) => option.label ?? posProduct.item}\r\n                  // getOptionLabel={(option) => dropdownLoader ? <Spinner /> : option.label}\r\n                  style={{ width: 400 }}\r\n                  renderInput={(params) => (\r\n                    <TextField {...params} label=\"POS Product\" variant=\"outlined\" />\r\n                  )}\r\n                />\r\n                <button  style={{backgroundColor: \"green\",\r\n                      height: \"50px\",\r\n                      border: \"none\",\r\n                      color: \"white\",\r\n                      padding: \"4px 8px\",\r\n                      textAlign: \"center\",\r\n                      textDecoration: \"none\",\r\n                      display: \"inline-block\",\r\n                      fontSize: \"14px\",\r\n                      align: \"left\",\r\n                      marginLeft: 20}}\r\n                      // onClick={setProductsInTable}\r\n                      onClick={toggleModal}\r\n                      >\r\n                          Add New Product\r\n                </button>\r\n                {/* </li >\r\n                </ul> */}\r\n                  </Grid>\r\n          </Paper>\r\n          <p>Invoice-- {invoice}</p>\r\n          \r\n\r\n          <div>{renderTableData()}</div>\r\n\r\n\r\n\r\n          <CModal show={showModal} onClose={toggleModal}>\r\n      <CModalHeader closeButton>{modalLabel}</CModalHeader>\r\n      <CModalBody>\r\n        <CContainer fluid>\r\n          <CRow>\r\n            <CCol sm=\"12\">\r\n              <CRow>\r\n                <CCol sm=\"6\">\r\n                  <CFormGroup>\r\n                    <CLabel htmlFor=\"type\">Barcode</CLabel>\r\n                    <CInput \r\n                      disabled\r\n                      type=\"text\"\r\n                      name=\"type\"\r\n                      value={posProduct.Barcode}\r\n                      onChange={(event) =>\r\n                        handleChange(\"Barcode\", event.target.value)\r\n                      }\r\n                    />\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol sm=\"6\">\r\n                  <CFormGroup>\r\n                    <CLabel htmlFor=\"short_description\">POS SKU</CLabel>\r\n                    <CInput\r\n                      disabled\r\n                      type=\"text\"\r\n                      name=\"short_description\"\r\n                      value={posProduct.PosSKU}\r\n                      onChange={(event) =>\r\n                        handleChange(\"PosSKU\", event.target.value)\r\n                      }\r\n                    />\r\n                  </CFormGroup>\r\n                </CCol>\r\n              </CRow>\r\n              <CFormGroup>\r\n                <CLabel htmlFor=\"regular_price\">POS Name</CLabel>\r\n                <CInput\r\n                  disabled\r\n                  type=\"text\"\r\n                  name=\"regular_price\"\r\n                  value={posProduct.POS}\r\n                  onChange={(event) =>\r\n                    handleChange(\"POS\", event.target.value)\r\n                  }\r\n                />\r\n              </CFormGroup>\r\n              <CFormGroup>\r\n                <CLabel htmlFor=\"size\">POS Size</CLabel>\r\n                <CInput\r\n                  disabled\r\n                  type=\"text\"\r\n                  name=\"size\"\r\n                  value={posProduct.Size}\r\n                  onChange={(event) =>\r\n                    handleChange(\"Size\", event.target.value)\r\n                  }\r\n                />\r\n              </CFormGroup>\r\n              <CFormGroup>\r\n                <CLabel htmlFor=\"department\">Department</CLabel>\r\n                <CInput\r\n                  disabled\r\n                  type=\"text\"\r\n                  name=\"department\"\r\n                  value={posProduct.Department}\r\n                  onChange={(event) =>\r\n                    handleChange(\"Department\", event.target.value)\r\n                  }\r\n                />\r\n              </CFormGroup>\r\n              <CFormGroup>\r\n                <CLabel htmlFor=\"unitsInCase\">Units In Case</CLabel>\r\n                <CInput\r\n                  type=\"text\"\r\n                  name=\"unitsInCase\"\r\n                  value={unitsInCase}\r\n                  onChange={(event) =>\r\n                    setUnitsInCase(event.target.value)\r\n                  }\r\n                />\r\n              </CFormGroup>\r\n              <CFormGroup>\r\n                <CLabel htmlFor=\"caseCost\">Case Cost</CLabel>\r\n                <CInput\r\n                  type=\"text\"\r\n                  name=\"caseCost\"\r\n                  value={caseCost}\r\n                  onChange={(event) =>\r\n                    setCaseCost(event.target.value)\r\n                  }\r\n                />\r\n              </CFormGroup>\r\n              <CFormGroup>\r\n                <CLabel htmlFor=\"unitPrice\">POS Unit Price</CLabel>\r\n                <CInput\r\n                  disabled\r\n                  type=\"text\"\r\n                  name=\"unitPrice\"\r\n                  value={posProduct.SellingPrice}\r\n                  onChange={(event) =>\r\n                    handleChange(\"SellingPrice\", event.target.value)\r\n                  }\r\n                />\r\n              </CFormGroup>\r\n              <CFormGroup>\r\n                <CLabel htmlFor=\"unitCost\">POS Unit Cost</CLabel>\r\n                <CInput\r\n                  disabled\r\n                  type=\"text\"\r\n                  name=\"unitCost\"\r\n                  value={posProduct.SellerCost}\r\n                  onChange={(event) =>\r\n                    handleChange(\"SellerCost\", event.target.value)\r\n                  }\r\n                />\r\n              </CFormGroup>\r\n              <CFormGroup>\r\n                <CLabel htmlFor=\"newUnitCost\">New POS Unit Cost</CLabel>\r\n                <CInput\r\n                  type=\"text\"\r\n                  name=\"newUnitCost\"\r\n                  value={newUnitCost}\r\n                  onChange={(event) =>\r\n                    setNewUnitCost(event.target.value)\r\n                  }\r\n                />\r\n              </CFormGroup>\r\n              <CFormGroup>\r\n                <CLabel htmlFor=\"newUnitPrice\">New POS Unit Price</CLabel>\r\n                <CInput\r\n                  type=\"text\"\r\n                  name=\"newUnitPrice\"\r\n                  value={newUnitPrice}\r\n                  onChange={(event) =>\r\n                    setNewUnitPrice(event.target.value)\r\n                  }\r\n                />\r\n              </CFormGroup>\r\n            </CCol>\r\n          </CRow>\r\n        </CContainer>\r\n      </CModalBody>\r\n      <CModalFooter>\r\n        {/* <CButton color=\"primary\" onClick={() => addProduct()}> */}\r\n        <CButton color=\"primary\" onClick={() => updateItem()}>\r\n          Add\r\n        </CButton>{\" \"}\r\n        <CButton color=\"secondary\" onClick={toggleModal}>\r\n          Cancel\r\n        </CButton>\r\n      </CModalFooter>\r\n    </CModal>\r\n      </div>    \r\n  )\r\n}\r\n\r\nexport default HandwrittenInvoice;","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\components\\SaveInvoiceData\\SaveInvoiceData.js",["237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { dropdownOptions } from \"../../utils/invoiceList\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TesseractService } from \"../../services/TesseractService\";\r\n\r\nimport { InventoryService } from \"../../services/InventoryService\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport { Api } from \"../../services/Api\";\r\nimport HicksData from \"../DisplayData/Hicksville.json\";\r\nimport { CContainer, CModalHeader, CCol, CFormGroup, CInput, CButton, CLabel, CModal, CModalBody, CModalFooter, CRow } from \"@coreui/react\";\r\nimport Button from \"../../UI/Button\";\r\nimport styles from \"../DisplayData/DisplayData.module.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport UpdateInventory from \"../Update/UpdateInventory\";\r\nimport Spinner from \"../../UI/Spinner/Spinner\";\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport  CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport Cancel from \"@material-ui/icons/Cancel\";\r\n// import CircularProgress from '@material/circular-progress';\r\n// import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n// import Loading from 'react-loader-spinner';\r\n\r\nimport { useSelector} from \"react-redux\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n        root: {\r\n        width: \"100%\",\r\n        // paddingTop: 50,\r\n        // height: \"125px\"\r\n        },\r\n        container: {\r\n            maxHeight: \"80vh\",\r\n            marginTop: 10,\r\n          },\r\n          table: {\r\n            \"& thead th\": {\r\n              fontWeight: \"600\",\r\n              fontSize: 20,\r\n              backgroundColor: \"grey\",\r\n            },\r\n            \"& tbody td\": {\r\n              fontWeight: \"300\",\r\n            },\r\n            \"& tbody tr:hover\": {\r\n              backgroundColor: \"#fffbf2\",\r\n              cursor: \"pointer\",\r\n            },\r\n          },\r\n    });\r\nlet emptyColumnList = [];\r\n\r\nconst SaveInvoiceData = () => {\r\n\r\n    const tesseractService = new TesseractService();\r\n    const classes = useStyles();\r\n    const [date, setDate] = useState(\"\");\r\n    const [invoice, setInvoice] = useState({});\r\n    const [invoiceNo, setInvoiceNo] = useState(\"\");\r\n    const numOfCollections = dropdownOptions.length;\r\n    const dropdownLabel = \"Select Invoice(\"+   numOfCollections   + \")\";\r\n    // const [inv, setInv] = useState(\"\");\r\n    const inv = useSelector(state => state.openInvoice.inv);\r\n    // const [ num, setNum] = useState(\"\");\r\n    const num = useSelector(state => state.openInvoice.num);\r\n    // const [day, setDay] = useState(\"\");\r\n    const day = useSelector(state => state.openInvoice.day);\r\n    // const [apiLoader, setApiLoader] = useState(false);\r\n\r\n    const apiLoader = useSelector(state => state.loaders.apiLoader)\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n\r\n    //Following for display data functionalities.\r\n    const [hicksvilleData, setHicksvilleData] = useState([]);\r\n    let saveInvoiceFlag  = 1;\r\n    const api = new Api();\r\n    const [tableData, setTableData] = useState([]);\r\n    const [emptyColumn, setEmptyColumn] = useState([]);\r\n    const [productDetails, setProductDetails] = useState([]);\r\n    const [pushToInventory, setPushToInventory] = useState(false);\r\n    const [inventoryData, setInventoryData] = useState([]);\r\n    const [itemNoDropdown, setItemNoDropdown] = useState([]);\r\n    \r\n    // const [loader, setLoader] = useState(false);\r\n    const loader = useSelector(state => state.loaders.loader);\r\n\r\n    const [reviewItems, setReviewItems] = useState([]);\r\n    const [showPosIndex, setShowPosIndex] = useState(-1);\r\n    const inventoryService = new InventoryService();\r\n    const [showModal, setShowModal] = useState(false);\r\n    // const [stateUpdated, setStateUpdated] = useState(\"false\");\r\n    const [costInc, setCostInc] = useState(\"false\");\r\n    const [costDec, setCostDec] = useState(\"false\");\r\n    const [unitCost, setUnitCost] = useState(\"\");\r\n    const [isUpdated, setIsUpdated] = useState(\"false\");\r\n    const [updateIndex, setUpdateIndex] = useState(-1);\r\n    let posProducts = []\r\n    let wooComProducts = [];\r\n    let singleItemData = [];\r\n    let itemNo = \"\";\r\n    // const [posProducts, setPosProducts] = useState([]);\r\n\r\n    // const [notFounds, setNotFounds] = useState(\"false\");\r\n    const notFounds = useSelector(state => state.redItems.notFounds);\r\n\r\n    // const [unitsInCase, setUnitsInCase] = useState(\"\");\r\n    const unitsInCase = useSelector(state => state.redItems.unitsInCase);\r\n\r\n    // const [price, setPrice] = useState(\"\");\r\n    const price = useSelector(state => state.redItems.price);\r\n\r\n    const [redState, setRedState] = useState(\"true\");\r\n    let updateSku = \"\";\r\n    const [searchVal, setSearchVal] = useState(\"\");\r\n    const [options, setOptions] = useState([]);\r\n    const [detailsModal, setDetailsModal] = useState(false);\r\n    const [invoiceOptions, setInvoiceOptions] = useState([]);\r\n    const [details, setDetails] = useState(\"\");\r\n    const [detailsIndex, setDetailsIndex] = useState(-1);\r\n\r\n    // const [userEmail, setUserEmail] = useState(\"\");\r\n    const userEmail = useSelector(state => state.userDetails.userEmail);\r\n    \r\n    // const [todayDate, setTodayDate] = useState(\"\");\r\n    const todayDate = useSelector(state => state.userDetails.todayDate);\r\n\r\n    \r\n    // const [openInvoice, setOpenInvoice] = useState(false);\r\n    const openInvoice = useSelector(state => state.openInvoice.openInvoice);\r\n\r\n    const[dropdownLoader, setDropdownLoader] = useState(false);\r\n    const [fetchingOptions, setFetchingOptions] = useState(false);\r\n    const [dropdownIndex, setDropwdownIndex] = useState(-1);\r\n\r\n    const invoiceHeader = [\r\n      \"Sr.No.\",\r\n      \"Invoice\",\r\n      \"Invoice No.\",\r\n      \"Invoice Date\",\r\n      \"Open Invoice\"\r\n    ]\r\n\r\n    \r\n    const header = [\r\n        \"Serial No.\",\r\n        \"Barcode\",\r\n        \"POS SKU\",\r\n        \"Qty Shipped\",,\r\n        \"Unit Cost\",\r\n        \"ITEM NO\",\r\n        \"Link Product\",\r\n        \r\n        \"DESCRIPTION\",\r\n        \"Units in  Case\",\r\n        \"Case cost\",\r\n        \"Extended Price\",\r\n       \r\n        \"Unit Price\",\r\n        \"Mark up (%)\",\r\n        \"Add Details\",\r\n        \"Tick to Delete\",\r\n        \"Update POS\",\r\n        \"Reverse POS Update\",\r\n        \"NO LINKING\",\r\n        \"Serial No.(2)\"\r\n    ];\r\n\r\n    const itemNoDescription = [\r\n      \"advance-foods\",\r\n      \"family-five\"\r\n    ];\r\n\r\n    const showPosState = useSelector(state => state.showPosState);\r\n    // const [showPosState, setShowPosState] = useState({\r\n    //     item: \"\",\r\n    //     quantity: \"\",\r\n    //     description: \"\",\r\n    //     price: \"\",\r\n    //     pos: \"\",\r\n    //     barcode: \"\",\r\n    //     posSku: \"\",\r\n    //     invoice: \"\",\r\n    //     size: \"\",\r\n    //     department: \"\",\r\n    //     unitCost: \"\",\r\n    //     unitPrice: \"\",\r\n    // });\r\n\r\n  //***************  INDIVIDUAL ITEM UPDATE FUNCTIONALITY STARTS*******************************************.\r\n\r\n    //Function to fetch wooCom Prpducts.\r\n    async function getProducts() {\r\n      console.log(\"IN WOOCOM PRODUCTS\");\r\n      const items = await Promise.all(\r\n        singleItemData.map(async (row) => {\r\n          console.log(row.barcode);\r\n          try {\r\n            const res = await inventoryService.GetProductDetails(row.barcode);\r\n            console.log(res);\r\n            const {\r\n              id,\r\n              name,\r\n              regular_price,\r\n              price,\r\n              sku,\r\n              slug,\r\n              stock_quantity,\r\n              sale_price,\r\n            } = res[0];\r\n            return {\r\n              id,\r\n              name,\r\n              regular_price,\r\n              price,\r\n              sku,\r\n              slug,\r\n              stock_quantity,\r\n              sale_price,\r\n              itemNo: row.itemNo,\r\n            };\r\n          } catch (error) {\r\n            // tempNotFoundProducts.push(row);\r\n\r\n            // Commented on 13th Dec 2021.\r\n            // console.log(\"Couldn't fetch product from wordpress.\", row.itemNo);\r\n            return null;\r\n          }\r\n        })\r\n      );\r\n      // setLoader(false);\r\n      dispatch({type: \"LOADER\"});\r\n      console.log(items);\r\n      wooComProducts = items;\r\n      // setWooComProducts(items.filter((ele) => ele !== null));\r\n      // setNotFoundProducts(tempNotFoundProducts);\r\n    }\r\n\r\n    async function getPosProductsLinkManually(index) {\r\n\r\n      console.log(\"tabledata in getPosProductsLinkManually\",tableData);\r\n\r\n      // dispatch({type: \"LOADER\"});\r\n      const res = await inventoryService.GetPOSProductDetails(tableData[index].barcode);\r\n\r\n      console.log(\"res is: \", res);\r\n\r\n      if(!Array.isArray(res)){\r\n        alert(\"API not working\");\r\n        return;\r\n      }\r\n\r\n      // SET ITEMNAME...\r\n      let codeOrSku = \"\";\r\n      console.log(\"res[0].ITEMNAME.indexOf(\"-\")\" ,res[0].ITEMNAME.indexOf(\"-\"));\r\n      let itemName = res[0].ITEMNAME;\r\n\r\n      if(res[0].ITEMNAME.indexOf(\"-\") < 0){\r\n        let itemNoPresent;\r\n        for(let i = 0; i<itemNoDescription.length; i++){\r\n          if(itemNoDescription[i] === invoice.slug){\r\n            itemNoPresent = false;\r\n            break;\r\n          }else {\r\n            itemNoPresent = true;\r\n            break;\r\n          }\r\n        }\r\n\r\n        console.log(\"itemNoPresent\",itemNoPresent);\r\n        if(itemNoPresent){\r\n          codeOrSku = tableData[index].itemNo;\r\n        }else{\r\n          codeOrSku = \"SKU\" + \" \" + tableData[index].posSku; \r\n        }\r\n        itemName = res[0].ITEMNAME + \" \" + \"-\" + \" \" + codeOrSku;\r\n\r\n      // Do the API Call to update on syprum system.\r\n      const update = await inventoryService.UpdatePOSProducts(\r\n        JSON.stringify({\r\n          UPC: tableData[index].barcode,\r\n          ITEMNAME: itemName,\r\n          DESCRIPTION: \"\",\r\n          PRICE: res[0].PRICE,\r\n          COST: res[0].COST,\r\n          QTY: res[0].TOTALQTY,\r\n          SIZE: \"\",\r\n          PACK: \"\",\r\n          REPLACEQTY: 1,\r\n          DEPARTMENT: res[0].DEPNAME,\r\n          CATEGORY: \"\",\r\n          SUBCATEGORY: \"\",\r\n          ISFOODSTAMP: 1,\r\n          ISWEIGHTED: 0,\r\n          ISTAXABLE: 1,\r\n          VENDORNAME: invoice.slug,\r\n          VENDORCODE: tableData[index].itemNo,\r\n          VENDORCOST: \"\",\r\n          ISNEWITEM: 0,\r\n          BUYASCASE: 1,\r\n          CASEUNITS: tableData[index].pieces,\r\n          CASECOST: (tableData[index].price / tableData[index].qty),\r\n          COMPANYNAME: invoice.slug,\r\n          PRODUCTCODE: tableData[index].itemNo,\r\n          MODELNUM: userEmail.slice(0,4) + \" \" + new Date().toLocaleDateString(),\r\n          VINTAGE: \"ICMS\",\r\n        })\r\n      );\r\n\r\n      console.log(\"Helloooooooooooooooooooooooooo update api call\", update);\r\n      \r\n      console.log(\"update api call\", update[0].COST);\r\n      console.log(\"update api call\", update[0].PRICE);\r\n      console.log(\"update api call\", update[0].ITEMNAME);\r\n      console.log(\"update api call\", update[0].VENDORCODE);\r\n      console.log(\"update api call\", invoice.slug);\r\n      let data1 = {\r\n        cost: update[0].COST,\r\n        price: update[0].PRICE,\r\n        item: update[0].VENDORCODE,\r\n        itemName:update[0].ITEMNAME,\r\n        invoice: invoice.slug\r\n      }\r\n      \r\n      // console.log(\"I am posProducts.ITEMNAME from updatedb after Pos\",posProducts[0].ITEMNAME)\r\n\r\n      await inventoryService.UpdateDBafterPosUpdate(data1);\r\n      }\r\n\r\n      // const update = await inventoryService.UpdatePOSProducts(\r\n      //   JSON.stringify({\r\n      //     UPC,\r\n      //     ITEMNAME: itemName,\r\n      //     DESCRIPTION: \"\",\r\n      //     PRICE: res.PRICE,\r\n      //     COST: res.COST,\r\n      //     QTY: res.TOTALQTY,\r\n      //     SIZE: \"\",\r\n      //     PACK: \"\",\r\n      //     REPLACEQTY: 1,\r\n      //     DEPARTMENT: res.DEPNAME,\r\n      //     CATEGORY: \"\",\r\n      //     SUBCATEGORY: \"\",\r\n      //     ISFOODSTAMP: 1,\r\n      //     ISWEIGHTED: 0,\r\n      //     ISTAXABLE: 1,\r\n      //     VENDORNAME: invoice.slug,\r\n      //     VENDORCODE: itemNo,\r\n      //     VENDORCOST: \"\",\r\n      //     ISNEWITEM: 0,\r\n      //     BUYASCASE,\r\n      //     CASEUNITS,\r\n      //     CASECOST,\r\n      //     COMPANYNAME: invoice.slug,\r\n      //     PRODUCTCODE: itemNo,\r\n      //     MODELNUM: userEmail.slice(0,4) + \" \" + new Date().toLocaleDateString(),\r\n      //     VINTAGE: \"ICMS\",\r\n      //   })\r\n      // );\r\n\r\n      // if(tableData[index].posSku === res.SKU) {\r\n      //     console.log(\"SKU is same\");\r\n      //     dispatch({type: \"LOADER\"});\r\n      //   }\r\n      \r\n\r\n    }\r\n\r\n    //function to fetch POS products.\r\n    async function getPosProducts() {\r\n      console.log(\"IN POS PRODUCTS\");\r\n      // setLoader(true);\r\n      dispatch({type: \"LOADER\"});\r\n      let hasErrorOccured = false;\r\n      const items = await Promise.all(\r\n        singleItemData\r\n          .map(async (row) => {\r\n            console.log(row.barcode);\r\n            try {\r\n              const res = await inventoryService.GetPOSProductDetails(\r\n                row.barcode\r\n              );\r\n              if(!Array.isArray(res)){\r\n                alert(\"API not working\");\r\n                return;\r\n              }\r\n              console.log(\"fetched pos data\", res);\r\n              const { SKU, UPC, ITEMNAME, TOTALQTY, DEPNAME } = res[0];\r\n              console.log(SKU);\r\n              console.log(updateSku);\r\n              if(SKU == updateSku){\r\n                console.log(SKU);\r\n                console.log(updateSku);\r\n                return {\r\n                  ...row,\r\n                  COST: row.cp,\r\n                  PRICE: row.sp,\r\n                  SKU,\r\n                  UPC,\r\n                  ITEMNAME,\r\n                  TOTALQTY:\r\n                    parseInt(row.qty) * parseInt(row.pieces) + parseInt(TOTALQTY),\r\n                  itemNo: row.itemNo,\r\n                  isNew: false,\r\n                  BUYASCASE: 1,\r\n                  CASEUNITS: row.pieces.toString(),\r\n                  CASECOST: row.unitPrice.toString(),\r\n                  DEPNAME,\r\n                };\r\n              } else {\r\n                alert(\"SKU mismatch!!\");\r\n              }\r\n\r\n              \r\n              \r\n            } catch (error) {\r\n              hasErrorOccured = true;\r\n              return {\r\n                ...row,\r\n                COST: row.cp,\r\n                PRICE: row.sp,\r\n                SKU: row.posSku,\r\n                UPC: row.barcode,\r\n                ITEMNAME: row.description,\r\n                TOTALQTY: parseInt(row.qty) * parseInt(row.pieces),\r\n                itemNo: row.itemNo,\r\n                isNew: true,\r\n                BUYASCASE: 1,\r\n                CASEUNITS: row.pieces.toString(),\r\n                CASECOST: row.unitPrice.toString(),\r\n                DEPNAME: \"\",\r\n              };\r\n            }\r\n          })\r\n      );\r\n      if (hasErrorOccured) {\r\n        alert(\"Couldn't fetch some data from POS\");\r\n      }\r\n      // setLoader(false);\r\n      dispatch({type: \"LOADER\"});\r\n      console.log(items);\r\n      posProducts = items;\r\n      console.log(\"posProducts array is: \",posProducts);\r\n      // setPosProducts(items.filter((ele) => ele !== null));\r\n    }\r\n\r\n    //PUSH TO WOOCOM.\r\n    const pushToWoocom = async (products) => {\r\n      // setLoader(true);\r\n      dispatch({type: \"LOADER\"});\r\n      const responses = await Promise.all(\r\n        products.map(async (product) => {\r\n          try {\r\n            const res = await inventoryService.UpdateProductDetails(product.id, {\r\n              regular_price: product.regular_price,\r\n              stock_quantity: product.stock_quantity,\r\n            });\r\n            const { id, name, regular_price, stock_quantity } = res;\r\n            return {\r\n              id,\r\n              name,\r\n              regular_price,\r\n              stock_quantity,\r\n              itemNo: product.itemNo,\r\n            };\r\n          } catch (error) {\r\n            console.log(error);\r\n            alert(\"Couldn't update product on website.\");\r\n            return null;\r\n          }\r\n        })\r\n      );\r\n      // setLoader(false);\r\n      dispatch({type: \"LOADER\"});\r\n    };\r\n\r\n    //PUSH TO POS.\r\n    const pushToPOS = async (products) => {\r\n      // setLoader(true);\r\n      dispatch({type: \"LOADER\"});\r\n      console.log(\"products values are: \",products);\r\n\r\n\r\n      const responses = await Promise.all(\r\n        products.map(async (product) => {\r\n          \r\n          try {\r\n            const {\r\n              COST,\r\n              PRICE,\r\n              UPC,\r\n              TOTALQTY,\r\n              isNew,\r\n              ITEMNAME,\r\n              BUYASCASE,\r\n              CASEUNITS,\r\n              CASECOST,\r\n              SKU,\r\n              DEPNAME,\r\n              itemNo\r\n            } = product;\r\n\r\n            // SET ITEMNAME... \r\n            let codeOrSku = \"\";\r\n            console.log(product.itemNo)\r\n            console.log(ITEMNAME.indexOf(\"-\"));\r\n            let itemName = ITEMNAME;\r\n\r\n            if(ITEMNAME.indexOf(\"-\") < 0){\r\n              let itemNoPresent;\r\n              for(let i = 0; i<itemNoDescription.length; i++){\r\n                console.log(invoice.slug)\r\n                if(itemNoDescription[i] === invoice.slug){\r\n                  itemNoPresent = false;\r\n                  break;\r\n                }else {\r\n                  itemNoPresent = true;\r\n                  break;\r\n                }\r\n              }\r\n              console.log(itemNoPresent);\r\n              if(itemNoPresent){\r\n                codeOrSku = product.itemNo;\r\n              }else{\r\n                codeOrSku = \"SKU\" + \" \" + product.posSku \r\n              }\r\n              itemName = ITEMNAME + \" \" + \"-\" + \" \" + codeOrSku;\r\n            }\r\n\r\n            const res = await inventoryService.UpdatePOSProducts(\r\n              JSON.stringify({\r\n                UPC,\r\n                ITEMNAME: itemName,\r\n                DESCRIPTION: \"\",\r\n                PRICE,\r\n                COST,\r\n                QTY: TOTALQTY,\r\n                SIZE: \"\",\r\n                PACK: \"\",\r\n                REPLACEQTY: 1,\r\n                DEPARTMENT: DEPNAME,\r\n                CATEGORY: \"\",\r\n                SUBCATEGORY: \"\",\r\n                ISFOODSTAMP: 1,\r\n                ISWEIGHTED: 0,\r\n                ISTAXABLE: 1,\r\n                VENDORNAME: invoice.slug,\r\n                VENDORCODE: itemNo,\r\n                VENDORCOST: \"\",\r\n                ISNEWITEM: isNew ? 1 : 0,\r\n                BUYASCASE,\r\n                CASEUNITS,\r\n                CASECOST,\r\n                COMPANYNAME: invoice.slug,\r\n                PRODUCTCODE: itemNo,\r\n                MODELNUM: userEmail.slice(0,4) + \" \" + new Date().toLocaleDateString(),\r\n                VINTAGE: \"ICMS\",\r\n              })\r\n            );\r\n            console.log(\"updated pos data\", res);\r\n            const data = {\r\n              UPC,\r\n              SKU,\r\n              Cost: COST,\r\n              ItemName: ITEMNAME,\r\n              Price: PRICE,\r\n              TotalQty: TOTALQTY,\r\n            };\r\n            //not needed as of now, parikshit.\r\n            if (isNew) {\r\n              const response = await inventoryService.CreateDBProduct(data);\r\n              console.log(\"Created new product\", response);\r\n            } else {\r\n              const response = await inventoryService.UpdateDBProduct({\r\n                count: parseInt(product.qty) * parseInt(product.pieces),\r\n                UPC,\r\n              });\r\n              console.log(\"updated existing product\", response);\r\n            }\r\n  \r\n            console.log(\"res from POS\", res);\r\n            return true;\r\n          } catch (error) {\r\n            console.log(error);\r\n            return null;\r\n          }\r\n        })\r\n      );\r\n      // setLoader(false);\r\n      dispatch({type: \"LOADER\"});\r\n    };\r\n\r\n    const pushInventoryDetails2 = async () => {\r\n      console.log(posProducts);\r\n      // setLoader(true);\r\n      let data = singleItemData.map((element) => {\r\n        return {\r\n          item: element.itemNo,\r\n          qty: parseInt(element.qty) * parseInt(element.pieces),\r\n          cp: element.unitPrice,\r\n          markup: element.markup,\r\n          sp: element.sp,\r\n          description: element.description,\r\n        };\r\n      });\r\n  \r\n      var duplicates = {};\r\n      for (var i = 0; i < data.length; i++) {\r\n        if (duplicates.hasOwnProperty(data[i].item)) {\r\n          duplicates[data[i].item].push(i);\r\n        } else if (data.lastIndexOf(data[i].item) !== i) {\r\n          duplicates[data[i].item] = [i];\r\n        }\r\n      }\r\n  \r\n      let tempData = Object.values(duplicates).filter((ele) => ele.length > 1);\r\n      if (tempData.length > 0) {\r\n        tempData.forEach((index) => {\r\n          let temp = 0;\r\n          index.forEach((val) => {\r\n            if (data[val]) {\r\n              // console.log(\"data[val]\", data[val]);\r\n              temp += data[val].qty;\r\n              if (temp - data[val].qty !== 0) {\r\n                data[val] = null;\r\n              }\r\n            }\r\n          });\r\n          data[index[0]].qty = temp;\r\n        });\r\n      }\r\n      data = data.filter((ele) => ele !== null);\r\n  \r\n      /**\r\n       * add the fileds of  data from the woocom & ocr\r\n      */\r\n     console.log(wooComProducts.length);\r\n      if(wooComProducts[0] != null){\r\n        let updatedWoocomProducts = data\r\n          .map((product, index) => {\r\n            /**find index of the item in fetched woocom product list */\r\n            const wooIndex = wooComProducts.findIndex(\r\n              (wooProduct) => product.item === wooProduct.itemNo\r\n            );\r\n            if (wooIndex !== -1) {\r\n              /**get the qty & other fileds of the woocom product */\r\n              let { id, stock_quantity } = wooComProducts[wooIndex];\r\n              stock_quantity += product.qty;\r\n              const regular_price = product.sp;\r\n              return { id, regular_price, stock_quantity, itemNo: product.item };\r\n            }\r\n            return null;\r\n          })\r\n          .filter((item) => item !== null);\r\n\r\n        console.log(updatedWoocomProducts); \r\n        await pushToWoocom(updatedWoocomProducts);\r\n        }\r\n      await pushToPOS(posProducts);\r\n  \r\n      // setLoader(false);\r\n      dispatch({type: \"LOADER\"});\r\n      // if (itemsNotPushed.length === 0) {\r\n      window.alert(\"Inventory updated successfully\");\r\n      // setRedirect(true);\r\n      // } else {\r\n      //   window.alert(\"Inventory not updated\");\r\n      // }\r\n    };\r\n\r\n    function toConsoleState() {\r\n      console.log(wooComProducts);\r\n      console.log(posProducts);\r\n      console.log(singleItemData);\r\n    }\r\n\r\n  const pushSingleItemToInventory = async (index) =>{\r\n\r\n    // setApiLoader(true);\r\n    dispatch({type: \"API_LOADER\"});\r\n    // console.log(index);\t\r\n    \r\n    // Setting State\r\n    setShowPosIndex(-1);\r\n    \r\n    // tableData also a state\r\n    console.log(tableData);\r\n    const product = [];\r\n    const notFoundItems = emptyColumn.map((i) => tableData[i]);\r\n    const tempTable = [];\r\n    product.push(tableData[index]);\r\n    console.log(product);\r\n    product.isUpdated = \"true\";\r\n    itemNo = product.itemNo;\r\n    \r\n    product.forEach((element, index) => {\r\n      if (\r\n        !emptyColumn.includes(index) &&\r\n        element.show === true &&\r\n        element[\"isForReview\"] != true\r\n      ) {\r\n        let rowData = { index: index + 1, ...element };\r\n        tempTable.push(rowData);\r\n      }\r\n    });\r\n    // console.log(\"notFoundItems\", notFoundItems);\r\n    console.log(tempTable);\r\n\r\n    if (emptyColumn.length !== 0) {\r\n      /** API to push  to not found list */\r\n      // setLoader(true);\r\n      dispatch({type: \"LOADER\"});\r\n      const responses = await Promise.all(\r\n        notFoundItems.map(async (product) => {\r\n          try {\r\n            const data = {\r\n              Item: product.itemNo,\r\n              Description: product.description,\r\n              Quantity: product.qty,\r\n              Price: product.unitPrice,\r\n              sku: product.sku,\r\n              Barcode: product.barcode,\r\n              PosSKU: product.posSku,\r\n              InvoiceName: invoice.slug,\r\n            };\r\n            await inventoryService.CreateNotFoundItems(data);\r\n            return true;\r\n          } catch (error) {\r\n            console.log(\r\n              \"Couldn't create not found product\",\r\n              product.description,\r\n              { error }\r\n            );\r\n            alert(\"Couldn't create product on website.\");\r\n            return null;\r\n          }\r\n        })\r\n      );\r\n      // setLoader(false);\r\n      dispatch({type: \"LOADER\"});\r\n    }\r\n\r\n    const priceIncreasedProducts = tempTable.filter(\r\n      (product) => product.priceIncrease !== 0\r\n    );\r\n    // setLoader(true);\r\n    dispatch({type: \"LOADER\"});\r\n    const res = await Promise.all(\r\n      priceIncreasedProducts.map(async (product) => {\r\n        try {\r\n          const data = {\r\n            invoiceName: invoice.slug,\r\n            itemName: product.itemNo,\r\n            value: { Price: product.unitPrice },\r\n          };\r\n          console.log(data)\r\n          await inventoryService.UpdateProductFields(data);\r\n          \r\n          \r\n        } catch (error) {\r\n          console.log(`couldn't update price for product ${product.itemNo}`);\r\n        }\r\n      })\r\n    );\r\n    // setLoader(false);\r\n    dispatch({type: \"LOADER\"});\r\n    // console.log(tempTable);\r\n    tempTable[0].isUpdated = \"true\";\r\n    singleItemData = tempTable;\r\n    // setPushToInventory(true);\r\n    console.log(singleItemData);\r\n    \r\n    updateSku = singleItemData[0].posSku;\r\n\r\n\r\n    await getProducts();\r\n    await getPosProducts();\r\n    console.log(posProducts);\r\n    if(posProducts[0] != undefined ){\r\n      await pushInventoryDetails2();\r\n      toConsoleState();\r\n      setIsUpdated(\"true\");\r\n      setUpdateIndex(index);\r\n      console.log(singleItemData);\r\n      console.log(singleItemData.itemNo);\r\n      await inventoryService.UpdateInvoiceData(inv, num, day, singleItemData[0].itemNo); \r\n\r\n      //Update unit cost n price in db, after update POS.\r\n      let data1 = {\r\n        cost: singleItemData[0].cp,\r\n        price: singleItemData[0].sp,\r\n        item: singleItemData[0].itemNo,\r\n        itemName:posProducts[0].ITEMNAME,\r\n        invoice: invoice.slug\r\n      }\r\n      await getPosProducts();\r\n      console.log(\"I am data from updatedb after Pos\",data1)\r\n      console.log(\"I am posProducts.ITEMNAME from updatedb after Pos\",posProducts[0].ITEMNAME)\r\n\r\n      await inventoryService.UpdateDBafterPosUpdate(data1);\r\n      \r\n      //Log Generate.\r\n      console.log(\"PRODUCTT\");\r\n      console.log(singleItemData);\r\n      const log = {\r\n        InvoiceName: invoice.slug,\r\n        InvoiceDate: day,\r\n        ItemNo: singleItemData[0].itemNo,\r\n        InvoiceDescription: singleItemData[0].description,\r\n        PosDescription: singleItemData[0].posName,\r\n        PosUnitCost: singleItemData[0].cost,\r\n        PosUnitPrice: singleItemData[0].sellingPrice,\r\n        OldMarkup: singleItemData[0].margin.toFixed(2).toString(),\r\n        InvUnitCost: singleItemData[0].cp,\r\n        InvUnitPrice: singleItemData[0].sp,\r\n        NewMarkup:( ((singleItemData[0].sp- singleItemData[0].cp)/ singleItemData[0].cp)*100).toFixed(2).toString(),\r\n        UpdateDate: todayDate,\r\n        Person: userEmail,\r\n        TimeStamp: new Date().toTimeString().split(\" \")[0], \r\n        InvCaseCost: singleItemData[0].unitPrice,\r\n        InvUnitsInCase: singleItemData[0].pieces,\r\n        SKU: singleItemData[0].posSku\r\n      }\r\n      console.log(log);\r\n      const logUpdate = await inventoryService.posLogs(log);\r\n      console.log(logUpdate)\r\n      setProductsInTable();\r\n\r\n    } else {\r\n      alert(\"POS not updated!!\");\r\n      setProductsInTable();\r\n    }\r\n    // setApiLoader(false);\r\n    dispatch({type: \"API_LOADER\"});\r\n\r\n    \r\n    \r\n  }\r\n  //***************************INDIVIDUAL ITEM UPDATE FUNCTIONALITY ENDS*****************************************.\r\n\r\n  const updateUnits = async (index) => {\r\n    const item = tableData[index];\r\n    console.log(item);\r\n    const data = {\r\n      invoiceName: inv,\r\n      itemName: item.itemNo,\r\n      value: {\r\n        Quantity: item.pieces\r\n      }\r\n    }\r\n    inventoryService\r\n    .UpdateProductFields(data)\r\n    .then((res) => {\r\n      if (!res) {\r\n        throw new Error(\"Product not updated\")\r\n      }\r\n      console.log(res);\r\n      alert(\"Successfully updated fields\");\r\n      // setStateUpdated(true);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      alert(\"Some error occuured in creating product\");\r\n    })\r\n    .finally(setProductsInTable());\r\n    // console.log(res);\r\n  }\r\n \r\n  const saveDetails = async () => {\r\n    console.log(detailsIndex);\r\n    console.log(details);\r\n    const item = tableData[detailsIndex];\r\n    console.log(item);\r\n    const data = {\r\n      invoice: invoice.slug,\r\n      itemNo: item.itemNo,\r\n      details: details\r\n    }\r\n    const res = await inventoryService.saveDetails(data);\r\n    console.log(res);\r\n    if(res === \"s\"){\r\n      alert(\"Details added successfully\");\r\n      setDetails(\"\");\r\n      setDetailsIndex(-1);\r\n      toggleModal(\"details\");\r\n      setProductsInTable();\r\n    }else {\r\n      alert(\"Some error Occured.\");\r\n      setDetailsIndex(-1);\r\n      setDetails(\"\");\r\n      toggleModal(\"details\");\r\n    }\r\n\r\n  }\r\n\r\n  const getInvoices = async () => {\r\n    // setApiLoader(true);\r\n    dispatch({type: \"API_LOADER\"})\r\n    // setOpenInvoice(false);\r\n    dispatch({type: \"OPEN_INVOICE\", data: false})\r\n    console.log(invoice);\r\n    const res = await inventoryService.getSavedInvoices(invoice);\r\n    console.log(res);\r\n    // let array = [];\r\n    // res.map(item => {\r\n    //   array.push(item.SavedInvoiceNo);\r\n    // })\r\n    console.log(res);\r\n    setInvoiceOptions(res.reverse());\r\n    \r\n    // setApiLoader(false);\r\n    dispatch({type: \"API_LOADER\"})\r\n\r\n  }\r\n\r\n    const reverseUpdate = async(index) => {\r\n      console.log(index);\r\n      console.log(tableData);\r\n      console.log(tableData[index]);\r\n      let item = tableData[index];\r\n      let data = {\r\n        invoice: invoice.slug,\r\n        itemNo: item.itemNo,\r\n      }\r\n      const result = await inventoryService.reverseUpdate(data);\r\n      console.log(result);\r\n      if(result.ok == 1){\r\n        setProductsInTable();\r\n      }else {\r\n        alert(\"Some error occured in updation\");\r\n      }\r\n    }\r\n    \r\n\r\n    const reversePOSUpdate = async(index) => {\r\n      console.log(index);\r\n      console.log(tableData);\r\n      console.log(tableData[index]);\r\n      let item = tableData[index];\r\n      const result = await inventoryService.reversePOSUpdate(inv, num, day, item.itemNo);\r\n      if(result.ok == 1){\r\n        setProductsInTable();\r\n      }else {\r\n        alert(\"Some error occured in updation\");\r\n      }\r\n\r\n    }\r\n\r\n    const linkingCorrect = async (index) => {\r\n      console.log(index);\r\n      console.log(tableData);\r\n      console.log(tableData[index]);\r\n      let item = tableData[index];\r\n      console.log(item)\r\n      let data = {\r\n        invoice: inv,\r\n        itemNo: item.itemNo,\r\n      }\r\n      console.log(data);\r\n      const res = await inventoryService.linkingCorrect(data);\r\n      console.log(res);\r\n      if(res.statusText == \"OK\") {\r\n        \r\n        const costChange = item.cp - item.cost;\r\n        const invError = item.cp >= 3*item.cost ? \"YES\" : \"\";\r\n        \r\n        let logState = {\r\n          InvoiceDescription: item.description,\r\n          PosDescription: item.posName,\r\n          SKU: item.posSku,\r\n          Barcode: item.barcode,\r\n          InvoiceName: inv,\r\n          ItemCode: item.itemNo,\r\n          LinkingDate: todayDate,\r\n          PersonName: userEmail,\r\n          Size: item.size,\r\n          PosUnitCost: item.cost,\r\n          PosUnitPrice: item.sellingPrice,\r\n          InvoiceNo: num,\r\n          InvoiceDate: day,\r\n          Department: item.department,\r\n          InvUnitCost: item.cp,\r\n          CostIncrease: \"\",\r\n          CostDecrease: \"\",\r\n          CostSame:  \"\",\r\n          Unidentified: \"YES\",\r\n          InvError: invError  \r\n        }\r\n        const res = await inventoryService.UnidentifiedLog(logState);\r\n        console.log(res);\r\n        alert(\"SUCCESS\");\r\n        setProductsInTable();\r\n      }else {\r\n        alert(\"Some error occured\");\r\n        setProductsInTable();\r\n      }\r\n    }\r\n\r\n    // const linkManuallyNew = async(index) => {\r\n    //   console.log(index);\r\n      \r\n    //   console.log(\"tabledata in linkManually\",tableData);\r\n    //   console.log(tableData[index]);\r\n\r\n    //   let item = tableData[index];\r\n    //   console.log(\"item in link manually\", item);\r\n\r\n    //   await getPosProductsLinkManually(index);\r\n\r\n    // }\r\n\r\n    const linkManually = async(index) => {\r\n      console.log(index);\r\n      console.log(\"tabledata in linkManually\",tableData);\r\n      console.log(tableData[index]);\r\n      let item = tableData[index];\r\n      console.log(item)\r\n\r\n      let data = {\r\n        invoice: inv,\r\n        itemNo: item.itemNo,\r\n      }\r\n\r\n      const result = await inventoryService.linkManually(data);\r\n      console.log(result);\r\n\r\n      //Update unit cost from excel.\r\n      // const skuData = {sku: item.posSku};\r\n      // const res = await inventoryService.fetchProductFromPosList(skuData);\r\n      // console.log(res); \r\n\r\n\r\n\r\n      //Log Generate.\r\n      const costChange = item.cp - item.cost;\r\n      const invError = item.cp >= 3*item.cost ? \"YES\" : \"\";\r\n      console.log(invError);\r\n      let logState = {\r\n        InvoiceDescription: item.description,\r\n        PosDescription: item.posName,\r\n        SKU: item.posSku,\r\n        Barcode: item.barcode,\r\n        InvoiceName: inv,\r\n        ItemCode: item.itemNo,\r\n        LinkingDate: todayDate,\r\n        PersonName: userEmail,\r\n        Size: item.size,\r\n        PosUnitCost: item.cost,\r\n        PosUnitPrice: item.sellingPrice,\r\n        InvoiceNo: num,\r\n        InvoiceDate: day,\r\n        Department: item.department,\r\n        InvUnitCost: item.cp,\r\n        CostIncrease: invError == \"YES\" ? \"\" : costChange > 0 ? \"YES\" : \"\",\r\n        CostDecrease: invError == \"YES\" ? \"\" : costChange < 0 ? \"YES\" : \"\",\r\n        CostSame: invError == \"YES\" ? \"\" : costChange == 0 ? \"YES\" : \"\",\r\n        InvError: invError\r\n      }\r\n      console.log(logState);\r\n      const logResult = await inventoryService.linkManuallyLog(logState);\r\n      console.log(logResult);\r\n      \r\n      \r\n      \r\n      \r\n      if(result.statusText == \"OK\"){\r\n        setProductsInTable();\r\n        // setProductsInTableNew(inv, num, day);\r\n      }else {\r\n        alert(\"Some error occured in updation\");\r\n        setProductsInTable();\r\n        // setProductsInTableNew(inv, num, day);\r\n      }\r\n\r\n      await getPosProductsLinkManually(index);\r\n\r\n    }\r\n\r\n    const fetchSavedData = async(invoice = inv, no = num, date = day) => {\r\n        const data =  await tesseractService.GetSavedInvoiceData(invoice, no, date);\r\n        console.log(data);\r\n        if(data.length === 0) {\r\n          alert(\"Invoice doesnt Exist!!\");\r\n        }else return data[0].InvoiceData;\r\n        // console.log(data);\r\n        // console.log(data[0].InvoiceData);\r\n        \r\n    };\r\n\r\n    const setProductsInTable = () => {\r\n      // setLoader(true);\r\n      dispatch({type: \"LOADER\"});\r\n      async function invoiceData() {\r\n        const products = await tesseractService.GetProductDetails(\r\n          // invoice.slug\r\n          inv\r\n        );\r\n        //console.log(props.selectedInvoice);\r\n        return products;\r\n      }\r\n\r\n      fetchSavedData().then((ocrData) => {\r\n        invoiceData()\r\n          .then((products) => {\r\n            /**post processing the table data after returning from filter */\r\n            function convertToUpperCase(obj) {\r\n              let newObj = {};\r\n              for (let key in obj) {\r\n                newObj[key.toUpperCase()] = obj[key];\r\n              }\r\n              return newObj;\r\n            }\r\n            products = convertToUpperCase(products);\r\n            console.log(products);\r\n            // scanInvoiceData.InvoiceData = ocrData;\r\n          //   setOcrProducts(ocrData);\r\n            \r\n          //   console.log(scanInvoiceData);\r\n            // scanInvoiceData.InvoiceData = ocrData;\r\n            //console.log(resScnInvDta);\r\n            console.log(\"OCERDATa\", ocrData);\r\n            //console.log(products);\r\n            //console.log(scanInvoiceData);\r\n            let table = ocrData.map((row) => {\r\n              /**For invoices which dont have item no, set description as item no */\r\n              // row.itemNoPresent = row.itemNo === undefined ? false : true; \r\n              \r\n              if (row.itemNo === undefined) {\r\n                row.itemNo = row.description.trim().toUpperCase();\r\n              }\r\n              row.itemNo = row.itemNo.toString().toUpperCase();\r\n  \r\n              row.description = row.description;\r\n                // products[row.itemNo] !== undefined\r\n                //   ? products[row.itemNo].Description\r\n                //   : row.description;\r\n              row.pieces = \r\n                products[row.itemNo] !== undefined\r\n                  ? products[row.itemNo].Quantity\r\n                  : 0;\r\n              row.sku =\r\n                products[row.itemNo] !== undefined\r\n                  ? products[row.itemNo].sku\r\n                  : \"\";\r\n              row.barcode =\r\n                products[row.itemNo] !== undefined\r\n                  ? products[row.itemNo].Barcode\r\n                  : \"\";\r\n              row.posName =\r\n                products[row.itemNo] !== undefined\r\n                  ? products[row.itemNo].POS\r\n                  : \"\";\r\n              row.markup = 0;\r\n              row.show = true;\r\n              row.posSku =\r\n                products[row.itemNo] !== undefined\r\n                  ? products[row.itemNo].PosSKU\r\n                  : \"\";\r\n              row.isReviewed = \r\n                products[row.itemNo] !== undefined ? products[row.itemNo].isReviewed : \"\" ;\r\n              row.size = \r\n                products[row.itemNo] !== undefined ? products[row.itemNo].Size : \"\";\r\n              row.department = \r\n                products[row.itemNo] !== undefined ? products[row.itemNo].Department : \"\";\r\n              row.cost = \r\n                products[row.itemNo] !== undefined ? products[row.itemNo].SellerCost : \"\";\r\n              row.sellingPrice = \r\n                products[row.itemNo] !== undefined ? products[row.itemNo].SellingPrice : \"\";\r\n              row.price = \r\n                products[row.itemNo] !== undefined ? products[row.itemNo].Price : \"\";\r\n              row.details = \r\n                products[row.itemNo] !== undefined ? products[row.itemNo].Details : \"\";\r\n              row.linkingCorrect = \r\n                products[row.itemNo] !== undefined ? products[row.itemNo].LinkingCorrect : \"\";\r\n              row.margin = products[row.itemNo] !== undefined ? ((products[row.itemNo].SellingPrice - products[row.itemNo].SellerCost)/ products[row.itemNo].SellerCost)*100 : \"\";\r\n              //console.log(\"department-\" + row.department + \"  cost-\" + row.cost + \"  price\" + row.sellingPrice);\r\n              let sp = 0;\r\n              let cp = 0;\r\n              // const barcode = products.Barcode\r\n              if (parseInt(row.pieces)) {\r\n                sp = (parseFloat(row.unitPrice) / parseInt(row.pieces)).toFixed(\r\n                  2\r\n                );\r\n                cp = sp;\r\n              }\r\n              if (products[row.itemNo] !== undefined) {\r\n                if (sp > +products[row.itemNo].SellerCost) {\r\n                  row[\"priceIncrease\"] = 1;\r\n                } else if (sp < +products[row.itemNo].SellerCost) {\r\n                  row[\"priceIncrease\"] = -1;\r\n                } else if (sp == +products[row.itemNo].SellerCost) {\r\n                  row[\"priceIncrease\"] = 0;\r\n                }\r\n              } else {\r\n                row[\"priceIncrease\"] = 0;\r\n              }\r\n  \r\n              /**filter out the rows for which qty shipped & extendedPrice is zero */\r\n              if (row.qty == \"0\" && row.extendedPrice === \"0.00\") {\r\n                return null;\r\n              }\r\n              /**Calulate qty for which qty is not read/scanned by textract */\r\n              if (!row.qty) {\r\n                row.qty = (\r\n                  parseFloat(row.extendedPrice) / parseFloat(row.unitPrice)\r\n                ).toFixed(0);\r\n              }\r\n            return { ...row, sp, cp };\r\n            });\r\n            // setLoader(false);\r\n            dispatch({type: \"LOADER\"});\r\n\r\n            setTableData(table.filter((data) => data !== null));\r\n            setItemNoDropdown(Object.keys(products));\r\n            setProductDetails(products);\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"error on mapping ocrdata\", err)\r\n            // setLoader(false);\r\n            dispatch({type: \"LOADER\"});\r\n          });\r\n      });\r\n    }\r\n\r\n    const toggleModal = (x) => {\r\n      if(x == \"notfounds\"){\r\n        setShowModal(!showModal);\r\n      }else {\r\n        setDetailsModal(!detailsModal);\r\n      }\r\n        // setDate(\"\");\r\n        // setInvNo(\"\");\r\n      };\r\n\r\n    const hicksvilleDropdown = async (data) => {\r\n          // const res = await inventoryService.getHicksvilleData(value);\r\n          // const data = res[0].List;\r\n          console.log(data);\r\n  \r\n  \r\n          let productsString = \"\";\r\n          for(let i=0;i<data.length;i++){\r\n            productsString = productsString + data[i].name + '$$$';\r\n          } \r\n          let result = productsString.split(\"$$$\");\r\n        \r\n          let newData = [];\r\n          for (let i = 0; i < result.length; i++) {\r\n            let s = result[i].split(\"@@@\");\r\n            let obj =\r\n              {\r\n                // sku: s[0] === \"nan\" ? null : s[0],\r\n                // upc: s[1] === \"nan\" ? null : s[1],\r\n                // altupc1: s[2] === \"nan\" ? null : s[2],\r\n                // altupc2: s[3] === \"nan\" ? null : s[3],\r\n                // name: s[4] === \"nan\" ? null : s[4],\r\n                // vintage: s[5] === \"nan\" ? null : s[5],\r\n                // totalQty: s[6] === \"nan\" ? null : s[6],\r\n                // cost: s[7] === \"nan\" ? null : s[7],\r\n                // pricea: s[8] === \"nan\" ? null : s[8],\r\n                // priceb: s[9] === \"nan\" ? null : s[9],\r\n                // pricec: s[10] === \"nan\" ? null : s[10],\r\n                // department: s[11] === \"nan\" ? null : s[11],\r\n                // salePrice: s[12] === \"nan\" ? null : s[12],\r\n                // size: s[13] === \"nan\" ? null : s[13],\r\n                // pack: s[14] === \"nan\" ? null : s[14],\r\n                // price: s[15] === \"nan\" ? null : s[15],\r\n                sku: s[1] === \"nan\" ? null : s[1],\r\n                upc: s[0] === \"nan\" ? null : s[0],\r\n                altupc1: s[14] === \"nan\" ? null : s[14],\r\n                altupc2: s[15] === \"nan\" ? null : s[15],\r\n                name: s[2] === \"nan\" ? null : s[2],\r\n                vintage: s[8] === \"nan\" ? null : s[8],\r\n                totalQty: s[13] === \"nan\" ? null : s[13],\r\n                cost: s[4] === \"nan\" ? null : s[4],\r\n                pricea: s[10] === \"nan\" ? null : s[10],\r\n                priceb: s[11] === \"nan\" ? null : s[11],\r\n                pricec: s[12] === \"nan\" ? null : s[12],\r\n                department: s[9] === \"nan\" ? null : s[9],\r\n                salePrice: s[5] === \"nan\" ? null : s[5],\r\n                size: s[6] === \"nan\" ? null : s[6],\r\n                pack: s[7] === \"nan\" ? null : s[7],\r\n                price: s[3] === \"nan\" ? null : s[3],\r\n              }\r\n            newData.push(obj);\r\n          }\r\n          const filter = newData.map((element) => {\r\n            let obj = { ...element };\r\n            obj.label = `${element.name}--${element.price}--${element.upc}--${element.size}--${element.cost}--${element.sku}`;\r\n            //console.log(obj);\r\n            return obj; \r\n          });\r\n          setHicksvilleData(filter);\r\n        \r\n      }\r\n    \r\n    const hicksvilleDropdownNew = async (event, value, index) => {\r\n      console.log(event);\r\n      console.log(value);\r\n      console.log(value.length);\r\n      console.log(tableData[index].itemNo);\r\n      setDropwdownIndex(index);\r\n      setOptions([]);\r\n\r\n      if(!isNaN(value) && value.length>0 && value != tableData[index].itemNo){\r\n        console.log(\"number\");\r\n        // setDropdownLoader(true);\r\n        setFetchingOptions(true);\r\n        const res = await inventoryService.getHicksvilleData(value.toUpperCase());\r\n        const data = res;\r\n        console.log(data);\r\n\r\n\r\n        let productsString = \"\";\r\n        for(let i=0;i<data.length;i++){\r\n          productsString = productsString + data[i].name + '$$$';\r\n        } \r\n        let result = productsString.split(\"$$$\");\r\n      \r\n        let newData = [];\r\n        for (let i = 0; i < result.length; i++) {\r\n          let s = result[i].split(\"@@@\");\r\n          let obj =\r\n            {\r\n              // sku: s[0] === \"nan\" ? null : s[0],\r\n              // upc: s[1] === \"nan\" ? null : s[1],\r\n              // altupc1: s[2] === \"nan\" ? null : s[2],\r\n              // altupc2: s[3] === \"nan\" ? null : s[3],\r\n              // name: s[4] === \"nan\" ? null : s[4],\r\n              // vintage: s[5] === \"nan\" ? null : s[5],\r\n              // totalQty: s[6] === \"nan\" ? null : s[6],\r\n              // cost: s[7] === \"nan\" ? null : s[7],\r\n              // pricea: s[8] === \"nan\" ? null : s[8],\r\n              // priceb: s[9] === \"nan\" ? null : s[9],\r\n              // pricec: s[10] === \"nan\" ? null : s[10],\r\n              // department: s[11] === \"nan\" ? null : s[11],\r\n              // salePrice: s[12] === \"nan\" ? null : s[12],\r\n              // size: s[13] === \"nan\" ? null : s[13],\r\n              // pack: s[14] === \"nan\" ? null : s[14],\r\n              // price: s[15] === \"nan\" ? null : s[15],\r\n              sku: s[1] === \"nan\" ? null : s[1],\r\n              upc: s[0] === \"nan\" ? null : s[0],\r\n              altupc1: s[14] === \"nan\" ? null : s[14],\r\n              altupc2: s[15] === \"nan\" ? null : s[15],\r\n              name: s[2] === \"nan\" ? null : s[2],\r\n              vintage: s[8] === \"nan\" ? null : s[8],\r\n              totalQty: s[13] === \"nan\" ? null : s[13],\r\n              cost: s[4] === \"nan\" ? null : s[4],\r\n              pricea: s[10] === \"nan\" ? null : s[10],\r\n              priceb: s[11] === \"nan\" ? null : s[11],\r\n              pricec: s[12] === \"nan\" ? null : s[12],\r\n              department: s[9] === \"nan\" ? null : s[9],\r\n              salePrice: s[5] === \"nan\" ? null : s[5],\r\n              size: s[6] === \"nan\" ? null : s[6],\r\n              pack: s[7] === \"nan\" ? null : s[7],\r\n              price: s[3] === \"nan\" ? null : s[3],\r\n            }\r\n          newData.push(obj);\r\n        }\r\n        const filter = newData.map((element) => {\r\n          let obj = { ...element };\r\n          obj.label = `${element.name}--${element.price}--${element.upc}--${element.size}--${element.cost}--${element.sku}`;\r\n          //console.log(obj);\r\n          return obj; \r\n        });\r\n        setHicksvilleData(filter);\r\n        setOptions(filter);\r\n\r\n      }\r\n\r\n      if(isNaN(value) && value != null && value.length>=4 && value != tableData[index].itemNo){\r\n        console.log(\"string\");\r\n        // setDropdownLoader(true);\r\n        setFetchingOptions(true);\r\n        const res = await inventoryService.getHicksvilleData(value.toUpperCase());\r\n        const data = res;\r\n        console.log(data);\r\n\r\n\r\n        let productsString = \"\";\r\n        for(let i=0;i<data.length;i++){\r\n          productsString = productsString + data[i].name + '$$$';\r\n        } \r\n        let result = productsString.split(\"$$$\");\r\n      \r\n        let newData = [];\r\n        for (let i = 0; i < result.length; i++) {\r\n          let s = result[i].split(\"@@@\");\r\n          let obj =\r\n            {\r\n              // sku: s[0] === \"nan\" ? null : s[0],\r\n              // upc: s[1] === \"nan\" ? null : s[1],\r\n              // altupc1: s[2] === \"nan\" ? null : s[2],\r\n              // altupc2: s[3] === \"nan\" ? null : s[3],\r\n              // name: s[4] === \"nan\" ? null : s[4],\r\n              // vintage: s[5] === \"nan\" ? null : s[5],\r\n              // totalQty: s[6] === \"nan\" ? null : s[6],\r\n              // cost: s[7] === \"nan\" ? null : s[7],\r\n              // pricea: s[8] === \"nan\" ? null : s[8],\r\n              // priceb: s[9] === \"nan\" ? null : s[9],\r\n              // pricec: s[10] === \"nan\" ? null : s[10],\r\n              // department: s[11] === \"nan\" ? null : s[11],\r\n              // salePrice: s[12] === \"nan\" ? null : s[12],\r\n              // size: s[13] === \"nan\" ? null : s[13],\r\n              // pack: s[14] === \"nan\" ? null : s[14],\r\n              // price: s[15] === \"nan\" ? null : s[15],\r\n              sku: s[1] === \"nan\" ? null : s[1],\r\n              upc: s[0] === \"nan\" ? null : s[0],\r\n              altupc1: s[14] === \"nan\" ? null : s[14],\r\n              altupc2: s[15] === \"nan\" ? null : s[15],\r\n              name: s[2] === \"nan\" ? null : s[2],\r\n              vintage: s[8] === \"nan\" ? null : s[8],\r\n              totalQty: s[13] === \"nan\" ? null : s[13],\r\n              cost: s[4] === \"nan\" ? null : s[4],\r\n              pricea: s[10] === \"nan\" ? null : s[10],\r\n              priceb: s[11] === \"nan\" ? null : s[11],\r\n              pricec: s[12] === \"nan\" ? null : s[12],\r\n              department: s[9] === \"nan\" ? null : s[9],\r\n              salePrice: s[5] === \"nan\" ? null : s[5],\r\n              size: s[6] === \"nan\" ? null : s[6],\r\n              pack: s[7] === \"nan\" ? null : s[7],\r\n              price: s[3] === \"nan\" ? null : s[3],\r\n            }\r\n          newData.push(obj);\r\n        }\r\n        const filter = newData.map((element) => {\r\n          let obj = { ...element };\r\n          if(element.itemNo != \"undefined\"){\r\n          obj.label = `${element.name}--${element.price}--${element.upc}--${element.size}--${element.cost}--${element.sku}`;\r\n          }\r\n          //console.log(obj);\r\n          return obj; \r\n        });\r\n        setHicksvilleData(filter);\r\n        setOptions(filter);\r\n      }\r\n      setFetchingOptions(false);\r\n    }\r\n\r\n    const searchDropdown = (target, value) =>  {\r\n      console.log(target);\r\n      console.log(value);\r\n      const options  = hicksvilleData.filter((item) => {\r\n        if(item.name){\r\n          let name = item.name;\r\n          name = name.toLowerCase();\r\n          value = value.toLowerCase();\r\n          // console.log(name)\r\n          return name.search(value) != -1;\r\n        }\r\n      })\r\n      console.log(options);\r\n      setOptions(options);\r\n      setFetchingOptions(false);\r\n\r\n    }\r\n\r\n    const updateItemOld = (ocrCost) => {\r\n        //console.log(showPosState);\r\n        const data = {\r\n          invoiceName: invoice.slug,\r\n          itemName: showPosState.item,\r\n          value: { \r\n            POS: showPosState.pos, \r\n            Barcode: showPosState.barcode, \r\n            PosSKU: showPosState.posSku, \r\n            isReviewed: \"true\",\r\n            Size: showPosState.size, \r\n            Department: showPosState.department,\r\n            //SellerCost: showPosState.unitCost,\r\n            SellingPrice: showPosState.unitPrice\r\n          },\r\n        };\r\n    \r\n        inventoryService\r\n        .UpdateProductFields(data)\r\n        .then((res) => {\r\n          if (!res) {\r\n            throw new Error(\"Product not created\")\r\n          }\r\n          console.log(res);\r\n          alert(\"Successfully updated fields\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          alert(\"Some error occuured in creating product\");\r\n        })\r\n        .finally(() => { \r\n          // setLoader(false)\r\n          dispatch({type: \"LOADER\"});\r\n          \r\n          // setStateUpdated(\"true\");\r\n          //  console.log(ocrCost);\r\n          //  console.log(unitCost);\r\n           if(ocrCost>unitCost){\r\n             setCostInc(\"true\");\r\n             setCostDec(\"\");\r\n           }\r\n           if(ocrCost<unitCost){\r\n             setCostDec(\"true\");\r\n             setCostInc(\"\");\r\n           }\r\n        });\r\n    \r\n    }\r\n\r\n    const updateItem = (props, ocrCost) => {\r\n      let data;\r\n      //console.log(showPosState);\r\n      if(notFounds === \"true\"){\r\n        // console.log(props.selectedInvoice);\r\n        console.log(\"notfoundstrue\");\r\n        data = {\r\n          invoiceName: inv,\r\n          itemName: showPosState.item,\r\n          value: { \r\n            POS: showPosState.pos, \r\n            Barcode: showPosState.barcode, \r\n            PosSKU: showPosState.posSku, \r\n            isReviewed: \"true\",\r\n            Description: showPosState.description,\r\n            Size: showPosState.size, \r\n            Department: showPosState.department,\r\n            SellerCost: showPosState.unitCost,\r\n            SellingPrice: showPosState.unitPrice,\r\n            Quantity: unitsInCase,\r\n            Price: price,\r\n            LinkingCorrect: \"true\"\r\n          },\r\n        };\r\n  \r\n        toggleModal(\"notfounds\");\r\n      \r\n      }else{\r\n        data = {\r\n          invoiceName: inv,\r\n          itemName: showPosState.item,\r\n          value: { \r\n            POS: showPosState.pos, \r\n            Barcode: showPosState.barcode, \r\n            PosSKU: showPosState.posSku, \r\n            isReviewed: \"true\",\r\n            Size: showPosState.size, \r\n            Department: showPosState.department,\r\n            SellerCost: showPosState.unitCost,\r\n            SellingPrice: showPosState.unitPrice,\r\n            LinkingCorrect: \"true\"\r\n          },\r\n        };\r\n      }\r\n  \r\n      console.log(data)\r\n      inventoryService\r\n      .UpdateProductFields(data)\r\n      .then((res) => {\r\n        if (!res) {\r\n          throw new Error(\"Product not created\")\r\n        }\r\n        console.log(res);\r\n        alert(\"Successfully updated fields\");\r\n        // setStateUpdated(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Some error occuured in creating product\");\r\n      })\r\n      .finally(async () => { \r\n                      // setLoader(false);\r\n                      // dispatch({type: \"LOADER\"});\r\n                    //  setStateUpdated(\"true\");\r\n                    //  console.log(ocrCost);\r\n                    //  console.log(unitCost);\r\n                    if(ocrCost>unitCost){\r\n                      setCostInc(\"true\");\r\n                      setCostDec(\"\");\r\n                    }\r\n                    if(ocrCost<unitCost){\r\n                      setCostDec(\"true\");\r\n                      setCostInc(\"\");\r\n                    }\r\n                    if(notFounds === \"true\"){\r\n                      // setNotFounds(\"false\");\r\n                      dispatch({type: \"NOT_FOUNDS\", data: \"false\"})\r\n                      // setUnitsInCase(\"\");\r\n                      dispatch({type: \"UNITS_IN_CASE\", data: \"\"})\r\n                      // setPrice(\"\");\r\n                      dispatch({type: \"PRICE\", data: \"\"})\r\n\r\n                    }\r\n                    console.log(userEmail);\r\n                    console.log(tableData[showPosIndex]);\r\n                    const description = tableData[showPosIndex].description;\r\n                    \r\n                    //Cost chnage and invoice error handling logic.\r\n                    const costChange = tableData[showPosIndex].cp - data.value.SellerCost;\r\n                    console.log(costChange);\r\n                    let a = \"\", b = \"\", c = \"\";\r\n                    const invError = tableData[showPosIndex].cp >= 3*tableData[showPosIndex].cost ? \"YES\" : \"\";\r\n                    a = invError == \"YES\" ? \"\" : costChange > 0 ? \"YES\" : \"\";\r\n                    b = invError == \"YES\" ? \"\" : costChange < 0 ? \"YES\" : \"\"; \r\n                    c = invError == \"YES\" ? \"\" : costChange == 0 ? \"YES\" : \"\";\r\n\r\n                    console.log(costChange);\r\n                    console.log(description);\r\n                    console.log(todayDate);\r\n                    console.log(day);\r\n                    console.log(num);\r\n                    const logState = data;\r\n                    delete logState.value.isReviewed;\r\n                    logState.Description = description;\r\n                    logState.PersonName = userEmail;\r\n                    logState.LinkingDate = todayDate;\r\n                    logState.InvoiceDate = day;\r\n                    logState.InvoiceNo = num;\r\n                    logState.CostIncrease = a;                     \r\n                    logState.CostDecrease = b; \r\n                    logState.CostSame = c;\r\n                    logState.InvoiceUnitCost = tableData[showPosIndex].cp;\r\n                    logState.InvError = invError;                   \r\n                    console.log(logState);\r\n                    \r\n\r\n                    const res = await inventoryService.generateLog(logState);\r\n                    console.log(res);\r\n                    setProductsInTable(); \r\n              });\r\n      \r\n  \r\n    }\r\n\r\n    const addRow = () => {\r\n        let tempTableData = [...tableData];\r\n        tempTableData.push({\r\n          qty: 0,\r\n          itemNo: \"\",\r\n          description: \"\",\r\n          pieces: 0,\r\n          unitPrice: 0.0,\r\n          extendedPrice: \"\",\r\n          markup: 0,\r\n          sp: 0,\r\n          show: true,\r\n          showPOS: \"\"\r\n        });\r\n        emptyColumnList.push(tempTableData.length - 1);\r\n        setEmptyColumn(emptyColumnList);\r\n        setTableData(tempTableData);\r\n    };\r\n    const deleteRow = (index) => {\r\n        let tempTableData = [...tableData];\r\n        // console.log(emptyColumnList.length, \"before\");\r\n        if (tableData[index][\"show\"]) {\r\n          if (window.confirm(\"Delete the item?\")) {\r\n            tempTableData[index][\"show\"] = false;\r\n            const i = emptyColumnList.indexOf(index);\r\n            if (i > -1) {\r\n              emptyColumnList.splice(i, 1);\r\n            }\r\n          }\r\n        } else {\r\n          tempTableData[index][\"show\"] = true;\r\n          if (\r\n            tempTableData[index][\"qty\"] !== \"\" &&\r\n            tempTableData[index][\"itemNo\"] !== \"\" &&\r\n            tempTableData[index][\"unitPrice\"] !== \"\"\r\n          ) {\r\n            const i = emptyColumnList.indexOf(index);\r\n            if (i > -1) {\r\n              emptyColumnList.splice(i, 1);\r\n            }\r\n          } else {\r\n            emptyColumnList.push(index);\r\n          }\r\n        }\r\n        setTableData(tempTableData);\r\n        setEmptyColumn(emptyColumnList);\r\n    };\r\n\r\n    const renderInvoiceHeader = () => {\r\n      return invoiceHeader.map((key, index) => {\r\n        return (\r\n          <th\r\n            key={index}\r\n            style={{\r\n              position: \"sticky\",\r\n              top: \"70px\",\r\n              background: \"grey\",\r\n            }}\r\n          >\r\n            {key.toUpperCase()}\r\n          </th>\r\n        );\r\n      });\r\n   };\r\n\r\n   const setProductsInTableNew = (index) => {\r\n    console.log(index);\r\n    // setOpenInvoice(true);\r\n    dispatch({type: \"OPEN_INVOICE\", data: true})\r\n    console.log(invoiceOptions[index]);\r\n    let invoice = invoiceOptions[index].InvoiceName;\r\n    // setInv(invoice);\r\n    dispatch({type: \"SET_INV\", data: invoice})\r\n    let date =  invoiceOptions[index].SavedDate;\r\n    // setDay(date);\r\n    dispatch({type: \"SET_DAY\", data: date})\r\n    let no = invoiceOptions[index].SavedInvoiceNo;\r\n    // setNum(no);\r\n    dispatch({type: \"SET_NUM\", data: no})\r\n    // setLoader(true);\r\n    dispatch({type: \"LOADER\"});\r\n    async function invoiceData() {\r\n      const products = await tesseractService.GetProductDetails(\r\n        invoice\r\n      );\r\n      //console.log(props.selectedInvoice);\r\n      return products;\r\n    }\r\n\r\n    fetchSavedData(invoice, no, date).then((ocrData) => {\r\n      invoiceData()\r\n        .then((products) => {\r\n          /**post processing the table data after returning from filter */\r\n          function convertToUpperCase(obj) {\r\n            let newObj = {};\r\n            for (let key in obj) {\r\n              newObj[key.toUpperCase()] = obj[key];\r\n            }\r\n            return newObj;\r\n          }\r\n          products = convertToUpperCase(products);\r\n          console.log(products);\r\n          // scanInvoiceData.InvoiceData = ocrData;\r\n        //   setOcrProducts(ocrData);\r\n          \r\n        //   console.log(scanInvoiceData);\r\n          // scanInvoiceData.InvoiceData = ocrData;\r\n          //console.log(resScnInvDta);\r\n          console.log(\"OCERDATa\", ocrData);\r\n          //console.log(products);\r\n          //console.log(scanInvoiceData);\r\n          let table = ocrData.map((row) => {\r\n            /**For invoices which dont have item no, set description as item no */\r\n            row.itemNoPresent = row.itemNo === undefined ? false : true; \r\n            if (row.itemNo === undefined) {\r\n              row.itemNo = row.description.trim().toUpperCase();\r\n            }\r\n            row.itemNo = row.itemNo.toString().toUpperCase();\r\n\r\n            row.description = row.description;\r\n              // products[row.itemNo] !== undefined\r\n              //   ? products[row.itemNo].Description\r\n              //   : row.description;\r\n            row.pieces =\r\n              products[row.itemNo] !== undefined\r\n                ? products[row.itemNo].Quantity\r\n                : 0;\r\n            row.sku =\r\n              products[row.itemNo] !== undefined\r\n                ? products[row.itemNo].sku\r\n                : \"\";\r\n            row.barcode =\r\n              products[row.itemNo] !== undefined\r\n                ? products[row.itemNo].Barcode\r\n                : \"\";\r\n            row.posName =\r\n              products[row.itemNo] !== undefined\r\n                ? products[row.itemNo].POS\r\n                : \"\";\r\n            row.markup = 0;\r\n            row.show = true;\r\n            row.posSku =\r\n              products[row.itemNo] !== undefined\r\n                ? products[row.itemNo].PosSKU\r\n                : \"\";\r\n            row.isReviewed = \r\n              products[row.itemNo] !== undefined ? products[row.itemNo].isReviewed : \"\" ;\r\n            row.size = \r\n              products[row.itemNo] !== undefined ? products[row.itemNo].Size : \"\";\r\n            row.department = \r\n              products[row.itemNo] !== undefined ? products[row.itemNo].Department : \"\";\r\n            row.cost = \r\n              products[row.itemNo] !== undefined ? products[row.itemNo].SellerCost : \"\";\r\n            row.sellingPrice = \r\n              products[row.itemNo] !== undefined ? products[row.itemNo].SellingPrice : \"\";\r\n            row.price = \r\n              products[row.itemNo] !== undefined ? products[row.itemNo].Price : \"\";\r\n            row.details = \r\n              products[row.itemNo] !== undefined ? products[row.itemNo].Details : \"\";\r\n            row.linkingCorrect = \r\n              products[row.itemNo] !== undefined ? products[row.itemNo].LinkingCorrect : \"\";\r\n            row.margin = products[row.itemNo] !== undefined ? ((products[row.itemNo].SellingPrice - products[row.itemNo].SellerCost)/ products[row.itemNo].SellerCost)*100 : \"\";\r\n            //console.log(\"department-\" + row.department + \"  cost-\" + row.cost + \"  price\" + row.sellingPrice);\r\n            let sp = 0;\r\n            let cp = 0;\r\n            // const barcode = products.Barcode\r\n            if (parseInt(row.pieces)) {\r\n              sp = (parseFloat(row.unitPrice) / parseInt(row.pieces)).toFixed(\r\n                2\r\n              );\r\n              cp = sp;\r\n            }\r\n            if (products[row.itemNo] !== undefined) {\r\n              if (sp > +products[row.itemNo].SellerCost) {\r\n                row[\"priceIncrease\"] = 1;\r\n              } else if (sp < +products[row.itemNo].SellerCost) {\r\n                row[\"priceIncrease\"] = -1;\r\n              } else if (sp == +products[row.itemNo].SellerCost) {\r\n                row[\"priceIncrease\"] = 0;\r\n              }\r\n            } else {\r\n              row[\"priceIncrease\"] = 0;\r\n            }\r\n\r\n            /**filter out the rows for which qty shipped & extendedPrice is zero */\r\n            if (row.qty == \"0\" && row.extendedPrice === \"0.00\") {\r\n              return null;\r\n            }\r\n            /**Calulate qty for which qty is not read/scanned by textract */\r\n            if (!row.qty) {\r\n              row.qty = (\r\n                parseFloat(row.extendedPrice) / parseFloat(row.unitPrice)\r\n              ).toFixed(0);\r\n            }\r\n          return { ...row, sp, cp };\r\n          });\r\n          // setLoader(false);\r\n          dispatch({type: \"LOADER\"});\r\n\r\n          setTableData(table.filter((data) => data !== null));\r\n          setItemNoDropdown(Object.keys(products));\r\n          setProductDetails(products);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"error on mapping ocrdata\", err)\r\n          // setLoader(false);\r\n          dispatch({type: \"LOADER\"});\r\n        });\r\n    });\r\n  }\r\n\r\n   const renderInvoiceTable = () => {   \r\n    const invoiceList = invoiceOptions.map((element, index) => {\r\n      return (\r\n        <tr key={index}>\r\n          <td>{index+1}</td>\r\n          <td>{element.InvoiceName}</td>\r\n          <td>{element.SavedInvoiceNo}</td>\r\n          <td>{element.SavedDate}</td>\r\n          <td>\r\n            <button \r\n              style={{\r\n                backgroundColor: \"#4CAF50\",\r\n                border: \"none\",\r\n                color: \"white\",\r\n                padding: \"15px 32px\",\r\n                textAlign: \"center\",\r\n                textDecoration: \"none\",\r\n                display: \"inline-block\",\r\n                fontSize: \"12px\",\r\n                margin: \"4px 2px\",\r\n                cursor: \"pointer\"\r\n              }}\r\n              onClick={() => {\r\n                setProductsInTableNew(index)\r\n              }}\r\n            >Show Invoice\r\n            </button>\r\n          </td>\r\n        </tr>\r\n        );\r\n      })\r\n    return (\r\n      <div style={{ marginTop: \"35px\" }}>\r\n        <table className=\"table table-hover table-responsive-sm\">\r\n          <tbody>\r\n            <tr>{renderInvoiceHeader()}</tr>\r\n            {invoiceList}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );     \r\n  }\r\n\r\n    const renderTableHeader = () => {\r\n        return header.map((key, index) => {\r\n          return (\r\n            <th\r\n              key={index}\r\n              style={{\r\n                position: \"sticky\",\r\n                top: \"70px\",\r\n                background: \"grey\",\r\n              }}\r\n            >\r\n              {key.toUpperCase()}\r\n            </th>\r\n          );\r\n        });\r\n    };\r\n\r\n    const renderTableData = () => {\r\n        // hicksvilleDropdown(HicksData);\r\n    \r\n        if (tableData) {\r\n          console.log(tableData);\r\n    \r\n          // console.log(showPosIndex);\r\n          // console.log(tableData[0]);\r\n          \r\n          let rows = tableData.map((element, index) => {\r\n            //fuzzwuzzSuggestion = getFuzzwuzzSuggestion(element.description);\r\n            let isEmpty =\r\n              element.qty === \"\" ||\r\n              element.itemNo === \"\" ||\r\n              !element.pieces ||\r\n              isNaN(element.unitPrice) ||\r\n              element.unitPrice === \"\" ||\r\n              isNaN(element.extendedPrice);\r\n            if (isEmpty && element.show) {\r\n              let emptyColumn = [...emptyColumnList, index];\r\n              emptyColumnList = [...new Set(emptyColumn)];\r\n            }\r\n            let isFree = element.qty != 0 && element.extendedPrice === \"0.00\";\r\n            // console.log(element.isUpdated);\r\n            // console.log(element);\r\n            let margin = ((element.sellingPrice - element.cost)/ element.cost)*100;\r\n            \r\n    \r\n            return (\r\n              <tr\r\n                key={index}\r\n                className={isEmpty ? styles.red : isFree ? styles.free : null}\r\n                // style={element.show ? { opacity: \"1\" } : { opacity: \"0.4\" }}\r\n                style={element.linkingCorrect == \"false\" ? {backgroundColor: \"pink\"} : element.isUpdated === \"true\"  ? {backgroundColor: \"lightGreen\"}\r\n                  : element.show ? { opacity: \"1\" } : { opacity: \"0.4\" }}\r\n              >\r\n                <td> {index + 1} </td>\r\n               \r\n                {/* <td>\r\n                  <TextField\r\n                    type=\"tel\"\r\n                    value={element.details}\r\n                    id=\"outlined-secondary\"\r\n                    variant=\"outlined\"\r\n                    onChange={(e) => {\r\n                      handleChange(index, \"details\", e.target.value);\r\n                    }}\r\n                    style={{ width: 100 }}\r\n                  />\r\n                </td> */}\r\n                <td className={styles.element}>\r\n                  <TextField\r\n                    type=\"tel\"\r\n                    value={showPosIndex === index ? showPosState.barcode : element.barcode}\r\n                    id=\"outlined-secondary\"\r\n                    variant=\"outlined\"\r\n                    onChange={(e) => {\r\n                      handleChange(index, \"barcode\", e.target.value);\r\n                    }}\r\n                    style={{ width: 150 }}\r\n                  />\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    aria-label=\"add to review\"\r\n                    // onClick={() => addForReview(element, index)}\r\n                  >\r\n                    <InfoOutlinedIcon\r\n                      style={element.isReviewed  === \"true\" ? {fill: \"red\"} : null}\r\n                    /> \r\n                    {/* <AddShoppingCartIcon\r\n                      style={\r\n                        reviewItems.includes(index)\r\n                          ? { backgroundColor: \"green\" }\r\n                          : null\r\n                      }\r\n                    /> */}\r\n                  </IconButton>\r\n                  <div className={element.isReviewed  === \"true\" ? styles.tooltipIsReviewed: styles.tooltip} >\r\n                    <p>POS Product- {showPosIndex === index ? showPosState.pos : element.posName }</p>\r\n                    {/* <p>UPC- {showPosIndex === index ? showPosState.barcode : element.barcode}</p> */}\r\n                    <p>Size- {showPosIndex === index ? showPosState.size : element.size}</p>\r\n                    <p>Department - {showPosIndex === index ? showPosState.department : element.department}</p>\r\n                    <p>Margin(%) - {margin.toFixed(2)}</p>\r\n                    <p>Unit Cost- {showPosIndex === index ? showPosState.unitCost : element.cost}</p> \r\n                    <p>Unit Price- {showPosIndex === index ? showPosState.unitPrice : element.sellingPrice}</p>\r\n                    {/* <p>Price- {showPosIndex === index ? showPosState.price : element.price}</p> */}\r\n                    <div >\r\n                    <button onClick={() => {\r\n                            if(notFounds === \"true\"){\r\n                              toggleModal(\"notfounds\");\r\n                            }else{\r\n                              updateItem(invoice.slug, (parseFloat(element.unitPrice) / parseInt(element.pieces)).toFixed(2))\r\n                            }\r\n                          } } \r\n                      disabled={showPosIndex === index ? false : true}\r\n                      style={{backgroundColor: \"green\",\r\n                      border: \"none\",\r\n                      color: \"white\",\r\n                      padding: \"4px 8px\",\r\n                      textAlign: \"center\",\r\n                      textDecoration: \"none\",\r\n                      display: \"inline-block\",\r\n                      fontSize: \"14px\",\r\n                      align: \"left\"}} >\r\n                      Update Item\r\n                    </button>\r\n                    </div> \r\n                    <br />\r\n                    <div>\r\n                    <button onClick={()=> linkManually(index)} \r\n                      // disabled={showPosIndex === index ? false : true}\r\n                      style={{backgroundColor: \"blue\",\r\n                      border: \"none\",\r\n                      color: \"white\",\r\n                      padding: \"4px 8px\",\r\n                      textAlign: \"center\",\r\n                      textDecoration: \"none\",\r\n                      display: \"inline-block\",\r\n                      fontSize: \"14px\",\r\n                      align: \"left\"}} >\r\n                      Link Manually\r\n                    </button>\r\n                    </div>\r\n                    <br />\r\n                    <div>\r\n                    <button onClick={()=> reverseUpdate(index)} \r\n                      // disabled={showPosIndex === index ? false : true}\r\n                      style={{backgroundColor: \"red\",\r\n                      border: \"none\",\r\n                      color: \"white\",\r\n                      padding: \"4px 8px\",\r\n                      textAlign: \"center\",\r\n                      textDecoration: \"none\",\r\n                      display: \"inline-block\",\r\n                      fontSize: \"14px\",\r\n                      align: \"left\"}} >\r\n                      Reverse Update\r\n                    </button>\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n                <td>{showPosIndex === index ? showPosState.posSku : element.posSku}</td>\r\n                <td>\r\n                  <TextField\r\n                    type=\"tel\"\r\n                    value={element.qty}\r\n                    id=\"outlined-secondary\"\r\n                    variant=\"outlined\"\r\n                    onChange={(e) => {\r\n                      handleChange(index, \"qty\", e.target.value);\r\n                    }}\r\n                    style={{ width: 100 }}\r\n                  />\r\n                </td>\r\n                <td>{element.cp}</td>\r\n                <td>\r\n                  <Autocomplete\r\n                    value={element.itemNo}\r\n                    onChange={(event, newValue) => {\r\n                      if (newValue) {\r\n                        handleChange(index, \"itemNo\", newValue);\r\n                      }\r\n                    }}\r\n                    id=\"combo-box\"\r\n                    options={itemNoDropdown}\r\n                    getOptionLabel={(option) => option}\r\n                    style={{ width: 200 }}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} variant=\"outlined\" />\r\n                    )}\r\n                  />\r\n                </td>\r\n                <td>\r\n                {/* {dropdownIndex == index ? fetchingOptions ? <Loading type=\"ThreeDots\" height={40} width={40} /> : null : null} */}\r\n                  <Autocomplete\r\n                    value={showPosIndex  === index ? showPosState.item : element.itemNo }\r\n                    loading={true}\r\n                    onInputChange={(event, value) => {\r\n                      console.log(\"ON INPUT CHANGE\");\r\n                      // event.toLowerCase();\r\n                      // value.toLowerCase();\r\n                      // console.log(event.target.value);\r\n                      // console.log(value);\r\n                      // searchDropdown(event, value);\r\n                      // setOptions([]);\r\n                      if(event != null){\r\n                        setTimeout(()=> {\r\n                          hicksvilleDropdownNew(event, value, index);\r\n\r\n                        }, 1500);\r\n                      }\r\n                      // hicksvilleDropdownNew(event, value, index);\r\n                    }}\r\n                    onChange={(event, newValue) => {\r\n                      // console.log(event.target.value);\r\n                      // console.log(newValue);\r\n                      if (newValue) {\r\n                        let newState = { ...showPosState };\r\n                        console.log(newValue);\r\n                        // newState.item = newValue.name;\r\n                        newState.item = element.itemNo\r\n                        newState.description = newValue.name;\r\n                        newState.barcode = newValue.upc;\r\n                        newState.pos = newValue.name;\r\n                        newState.posSku = newValue.sku;\r\n                        newState.size = newValue.size;\r\n                        newState.department = newValue.department;\r\n                        newState.unitCost = newValue.cost;\r\n                        newState.unitPrice = newValue.price;\r\n                        // setShowPosState(newState);\r\n                        dispatch({type: \"SET_POS_STATE\", data: newState})\r\n                        setShowPosIndex(index);\r\n                        setUnitCost(newValue.cost);\r\n                        // setStateUpdated(\"\");\r\n                        if(isEmpty){\r\n                          // setNotFounds(\"true\");\r\n                          dispatch({type: \"NOT_FOUNDS\", data: \"true\"})\r\n\r\n                          setRedState(\"false\");\r\n                        }\r\n                        //setDisabled(false);\r\n                        //updateOnHoverDetails(index);\r\n                        //setShowPosIndex(index);\r\n                        // console.log(newValue);\r\n                        console.log(newState);\r\n                        //console.log(showPosState);\r\n                        \r\n                      }\r\n                    }}\r\n                    id=\"combo-box\"\r\n                    // options={element.fuzzSuggestion}\r\n                    options={options}\r\n                    // getOptionLabel={option => option.label}\r\n                    getOptionLabel={(option) => option.label ?? element.itemNo}\r\n                    // getOptionLabel={(option) => dropdownLoader ? <Spinner /> : option.label}\r\n                    style={{ width: 400 }}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} variant=\"outlined\" />\r\n                    )}\r\n                  />\r\n                </td>\r\n                \r\n                <td>{element.description}</td>\r\n                {/* <td>{element.pieces}</td> */}\r\n                <td>\r\n                  <TextField\r\n                    type=\"tel\"\r\n                    value={element.pieces}\r\n                    variant=\"outlined\"\r\n                    onChange={(e) => {\r\n                      handleChange(index, \"pieces\", e.target.value);\r\n                    }}\r\n                    style={{ width: 100 }}\r\n                  />\r\n                  <button onClick={() => {updateUnits(index)}} style={{\r\n                    backgroundColor: \"#008CBA\",\r\n                    border: \"none\",\r\n                    color: \"white\",\r\n                    padding: \"5px 16px\",\r\n                    textAlign: \"center\",\r\n                    textDecoration: \"none\",\r\n                    display: \"inline-block\",\r\n                    fontSize: \"10px\",\r\n                    margin: \"4px 2px\",\r\n                    cursor: \"pointer\",\r\n                  }}>Update Units</button> \r\n                </td>\r\n                <td>\r\n                  <TextField\r\n                    type=\"tel\"\r\n                    value={element.unitPrice}\r\n                    variant=\"outlined\"\r\n                    onChange={(e) => {\r\n                      handleChange(index, \"unitPrice\", e.target.value);\r\n                    }}\r\n                    style={\r\n                      element.priceIncrease === 1\r\n                        ? { backgroundColor: \"#1a8cff\", width: 100 }\r\n                        : element.priceIncrease === -1\r\n                        ? { backgroundColor: \"#ffb31a\", width: 100 }\r\n                        : { width: 100 }\r\n                      // showPosIndex === index ? costInc===\"true\" ? { backgroundColor: \"#1a8cff\", width: 100 } : costDec===\"true\" ? { backgroundColor: \"#ffb31a\", width: 100 } : {width: 100}\r\n                      //   : element.priceIncrease === 1 \r\n                      //       ? { backgroundColor: \"#1a8cff\", width: 100 }\r\n                      //       : element.priceIncrease === -1 \r\n                      //       ? { backgroundColor: \"#ffb31a\", width: 100 }\r\n                      //       : { width: 100 }\r\n                    }\r\n                  />\r\n                </td>\r\n                <td>{element.extendedPrice}</td>\r\n                \r\n                <td>\r\n                  <TextField\r\n                    type=\"tel\"\r\n                    value={element.sp}\r\n                    variant=\"outlined\"\r\n                    onChange={(e) => {\r\n                      handleChange(index, \"sp\", e.target.value);\r\n                    }}\r\n                    style={{ width: 100 }}\r\n                  />\r\n                </td>\r\n                <td>{element.markup}</td>\r\n                {/* <td>\r\n                  <Checkbox\r\n                    checked={!element.show}\r\n                    onChange={(e) => handleChange(index, \"show\", e.target.value)}\r\n                    inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                  />\r\n                </td> */}\r\n\r\n                  <td className={styles.element}>\r\n                  <IconButton onClick={() => {\r\n                    toggleModal(\"details\");\r\n                    setDetailsIndex(index);\r\n                    }}>\r\n                      <AddCircleIcon />\r\n                    </IconButton>\r\n                    <div className={styles.tooltip}>\r\n                      <p>Details- {element.details}</p>\r\n                    </div>\r\n                    \r\n                </td>\r\n\r\n\r\n                <td>\r\n              <Button\r\n                text={element.show ? \"Delete\" : \"Undo\"}\r\n                color=\"btn btn-info\"\r\n                type=\"submit\"\r\n                onClick={() => deleteRow(index)}\r\n              />\r\n            </td>\r\n                <td>\r\n                <Button \r\n                    text=\"Update POS\"\r\n                    color=\"btn btn-info\"\r\n                    type=\"submit\"\r\n                    onClick={() => pushSingleItemToInventory(index)}\r\n                    style={{ width: 120 }}\r\n                  />\r\n                      \r\n                </td>\r\n                <td>\r\n                <Button \r\n                    text=\"Reverse POS\"\r\n                    type=\"submit\"\r\n                    onClick={() => reversePOSUpdate(index)}\r\n                    style={{ width: 120, backgroundColor: \"red\", color: \"white\" }}\r\n                  />\r\n                      \r\n                </td>\r\n                <td className={styles.element}>\r\n                  <IconButton onClick={() => linkingCorrect(index)}>\r\n                    <Cancel/>\r\n                  </IconButton>\r\n                </td>\r\n                <td>{index + 1}</td>\r\n                {/* <td>\r\n                  <Button\r\n                    text={element.show ? \"Delete\" : \"Undo\"}\r\n                    color=\"btn btn-info\"\r\n                    type=\"submit\"\r\n                    onClick={() => deleteRow(index)}\r\n                  />\r\n                </td> */}\r\n              </tr>\r\n            );\r\n          });\r\n          return (\r\n            <div style={{ marginTop: \"35px\" }}>\r\n              <table className=\"table table-hover table-responsive-sm\">\r\n                <tbody>\r\n                  <tr>{renderTableHeader()}</tr>\r\n                  {rows}\r\n                  <tr>\r\n                    <td>\r\n                      <Button\r\n                        text=\"Add cell\"\r\n                        color=\"btn btn-info\"\r\n                        onClick={addRow}\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div className={styles.divRow}>\r\n                <Button\r\n                  text=\"Update Inventory\"\r\n                  color=\"btn btn-info\"\r\n                  type=\"submit\"\r\n                  onClick={pushInventoryDetails}\r\n                />\r\n                {/* <Button\r\n                  text=\"Save Invoice Data\"\r\n                  color=\"btn btn-info\"\r\n                  type=\"submit\"\r\n                  onClick={toggleModal}\r\n                /> */}\r\n                <Button\r\n                  text=\"Re upload\"\r\n                  color=\"btn btn-info\"\r\n                  type=\"submit\"\r\n                  onClick={() => window.location.reload()}\r\n                />\r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n    };\r\n\r\n    const pushInventoryDetails = async () => {\r\n        const notFoundItems = emptyColumn.map((i) => tableData[i]);\r\n        const tempTable = [];\r\n        tableData.forEach((element, index) => {\r\n          if (\r\n            !emptyColumn.includes(index) &&\r\n            element.show === true &&\r\n            element[\"isForReview\"] != true\r\n          ) {\r\n            let rowData = { index: index + 1, ...element };\r\n            tempTable.push(rowData);\r\n          }\r\n        });\r\n        // console.log(\"notFoundItems\", notFoundItems);\r\n        // console.log(\"final table data\", tempTable);\r\n    \r\n        if (emptyColumn.length !== 0) {\r\n          /**api to push  to not found list*/\r\n          // setLoader(true);\r\n          dispatch({type: \"LOADER\"});\r\n          const responses = await Promise.all(\r\n            notFoundItems.map(async (product) => {\r\n              try {\r\n                const data = {\r\n                  Item: product.itemNo,\r\n                  Description: product.description,\r\n                  Quantity: product.qty,\r\n                  Price: product.unitPrice,\r\n                  sku: product.sku,\r\n                  Barcode: product.barcode,\r\n                  PosSKU: product.posSku,\r\n                  InvoiceName: invoice.slug,\r\n                };\r\n                await inventoryService.CreateNotFoundItems(data);\r\n                return true;\r\n              } catch (error) {\r\n                console.log(\r\n                  \"Couldn't create not found product\",\r\n                  product.description,\r\n                  { error }\r\n                );\r\n                alert(\"Couldn't create product on website.\");\r\n                return null;\r\n              }\r\n            })\r\n          );\r\n          // setLoader(false);\r\n          dispatch({type: \"LOADER\"});\r\n        }\r\n        const priceIncreasedProducts = tempTable.filter(\r\n          (product) => product.priceIncrease !== 0\r\n        );\r\n        // setLoader(true);\r\n        dispatch({type: \"LOADER\"});\r\n        const res = await Promise.all(\r\n          priceIncreasedProducts.map(async (product) => {\r\n            try {\r\n              const data = {\r\n                invoiceName: invoice,\r\n                itemName: product.itemNo,\r\n                value: { Price: product.unitPrice },\r\n              };\r\n              await inventoryService.UpdateProductFields(data);\r\n            } catch (error) {\r\n              console.log(`couldn't update price for product ${product.itemNo}`);\r\n            }\r\n          })\r\n        );\r\n        console.log(priceIncreasedProducts.length);\r\n        // setLoader(false);\r\n        dispatch({type: \"LOADER\"});\r\n\r\n        setInventoryData(mergeDuplicates(tempTable));\r\n        setPushToInventory(true);\r\n    };\r\n\r\n    const handleChange = async (row, key, value) => {\r\n        let tempTableData = [...tableData];\r\n        tempTableData[row][key] = value;\r\n        const { itemNo } = tempTableData[row];\r\n        if (\r\n          tempTableData[row][\"qty\"] !== \"\" &&\r\n          tempTableData[row][\"itemNo\"] !== \"\" &&\r\n          tempTableData[row][\"unitPrice\"] !== \"\"\r\n        ) {\r\n          const index = emptyColumnList.indexOf(row);\r\n          if (index > -1) {\r\n            emptyColumnList.splice(index, 1);\r\n          }\r\n        } else {\r\n          emptyColumnList.push(row);\r\n        }\r\n        setEmptyColumn(emptyColumnList);\r\n        if (key === \"itemNo\") {\r\n          tempTableData[row][\"description\"] = productDetails[value].Description;\r\n          tempTableData[row][\"pieces\"] = productDetails[value].Quantity;\r\n          tempTableData[row][\"sku\"] = productDetails[value].sku;\r\n          /**auto populate barcode & other pos fields*/\r\n          tempTableData[row][\"barcode\"] = productDetails[value].Barcode;\r\n          tempTableData[row][\"posName\"] = productDetails[value].POS;\r\n          tempTableData[row][\"posSku\"] = productDetails[value].PosSKU;\r\n        }\r\n    \r\n        if (key === \"unitPrice\" || key === \"sp\" || key === \"itemNo\") {\r\n          let cp = parseFloat(tempTableData[row][\"cp\"]);\r\n          let sp = parseFloat(tempTableData[row][\"sp\"]);\r\n          let markup = ((sp - cp) / cp) * 100;\r\n          let cost =\r\n            parseFloat(tempTableData[row][\"unitPrice\"]) /\r\n            tempTableData[row][\"pieces\"];\r\n          // let sp = cp + (cp * markup) / 100;\r\n          // if (tempTableData[row][\"pieces\"]) {\r\n          //   sp = sp / tempTableData[row][\"pieces\"];\r\n          // }\r\n          tempTableData[row][\"markup\"] = isNaN(markup) ? 0 : markup.toFixed(2);\r\n          tempTableData[row][\"cp\"] = isNaN(cost) ? 0 : cost.toFixed(2);\r\n        }\r\n    \r\n        if (key === \"qty\" || key === \"unitPrice\") {\r\n          const extendedPrice =\r\n            parseFloat(tempTableData[row][\"qty\"]) *\r\n            parseFloat(tempTableData[row][\"unitPrice\"]);\r\n          const cp = tempTableData[row][\"unitPrice\"] / tempTableData[row][\"pieces\"];\r\n          if (!isNaN(extendedPrice)) {\r\n            tempTableData[row][\"extendedPrice\"] = extendedPrice.toFixed(2);\r\n          }\r\n          if (!isNaN(cp)) {\r\n            tempTableData[row][\"cp\"] = cp.toFixed(2);\r\n          }\r\n        }\r\n        if (itemNo) {\r\n          if (+tempTableData[row][\"unitPrice\"] > +productDetails[itemNo].Price) {\r\n            tempTableData[row][\"priceIncrease\"] = 1;\r\n          } else if (\r\n            +tempTableData[row][\"unitPrice\"] < +productDetails[itemNo].Price\r\n          ) {\r\n            tempTableData[row][\"priceIncrease\"] = -1;\r\n          } else if (\r\n            +tempTableData[row][\"unitPrice\"] == +productDetails[itemNo].Price\r\n          ) {\r\n            tempTableData[row][\"priceIncrease\"] = 0;\r\n          }\r\n        }\r\n    \r\n        if (key === \"barcode\") {\r\n          tempTableData[row][\"barcode\"] = value;\r\n        }\r\n        setTableData(tempTableData);\r\n    };\r\n\r\n    const mergeDuplicates = (a) => {\r\n        let arr = [...a];\r\n        let map = new Map();\r\n        for (let i = 0; i < arr.length; i++) {\r\n          if (!map.has(arr[i].itemNo)) map.set(arr[i].itemNo, arr[i]);\r\n          else {\r\n            let obj = { ...map.get(arr[i].itemNo) };\r\n            obj[\"qty\"] = (\r\n              parseFloat(obj[\"qty\"]) + parseFloat(arr[i].qty)\r\n            ).toString();\r\n            map.set(arr[i].itemNo, obj);\r\n          }\r\n        }\r\n        let newArr = [];\r\n        for (let x of map.values()) newArr.push(x);\r\n        return newArr;\r\n    };\r\n\r\n    useEffect(() => {\r\n      // hicksvilleDropdown();\r\n      // hicksvilleDropdown();\r\n      const curDate = new Date();\r\n      console.log(curDate);\r\n      let date = curDate.getFullYear()+ \"-\" + (curDate.getMonth()+1) +\"-\"+ curDate.getDate();\r\n      console.log(date);\r\n      // setTodayDate(date);\r\n      dispatch({type: \"TODAY_DATE\", data: date});\r\n      // hicksvilleDropdown(HicksData);\r\n      firebase.auth().onAuthStateChanged(function(user) {\r\n        if (user) {\r\n          // setUserEmail(user.email);\r\n          dispatch({type: \"EMAIL\", data: user.email})\r\n            console.log('This is the user: ', user)\r\n            console.log('This is the user: ', user.email);\r\n        } else {\r\n            // No user is signed in.\r\n            console.log('There is no logged in user');\r\n        }\r\n    });\r\n    \r\n\r\n\r\n        /**Fetch the data from the aws textract for the image */\r\n        // async function fetchOCRData() {\r\n        //   // return chetak();\r\n    \r\n        //   setLoader(true);\r\n        //   const ocrData = [];\r\n\r\n\r\n\r\n        //   let newData = [];\r\n        //   ocrData.forEach((data) => (newData = [...newData, ...data]));\r\n        //   return newData;\r\n        // }\r\n    \r\n        // async function invoiceData() {\r\n        //   const products = await tesseractService.GetProductDetails(\r\n        //     invoice\r\n        //   );\r\n        //   //console.log(props.selectedInvoice);\r\n        //   return products;\r\n        // }\r\n\r\n        // fetchOCRData().then((ocrData) => {\r\n        //   invoiceData()\r\n        //     .then((products) => {\r\n        //       /**post processing the table data after returning from filter */\r\n        //       function convertToUpperCase(obj) {\r\n        //         let newObj = {};\r\n        //         for (let key in obj) {\r\n        //           newObj[key.toUpperCase()] = obj[key];\r\n        //         }\r\n        //         return newObj;\r\n        //       }\r\n        //       products = convertToUpperCase(products);\r\n        //       console.log(products);\r\n        //       // scanInvoiceData.InvoiceData = ocrData;\r\n        //     //   setOcrProducts(ocrData);\r\n              \r\n        //     //   console.log(scanInvoiceData);\r\n        //       // scanInvoiceData.InvoiceData = ocrData;\r\n        //       //console.log(resScnInvDta);\r\n        //       //console.log(\"OCERDATa\", ocrData);\r\n        //       //console.log(products);\r\n        //       //console.log(scanInvoiceData);\r\n        //       let table = ocrData.map((row) => {\r\n        //         /**For invoices which dont have item no, set description as item no */\r\n        //         if (row.itemNo === undefined) {\r\n        //           row.itemNo = row.description.trim().toUpperCase();\r\n        //         }\r\n        //         row.itemNo = row.itemNo.toString().toUpperCase();\r\n    \r\n        //         row.description =\r\n        //           products[row.itemNo] !== undefined\r\n        //             ? products[row.itemNo].Description\r\n        //             : row.description;\r\n        //         row.pieces =\r\n        //           products[row.itemNo] !== undefined\r\n        //             ? products[row.itemNo].Quantity\r\n        //             : 0;\r\n        //         row.sku =\r\n        //           products[row.itemNo] !== undefined\r\n        //             ? products[row.itemNo].sku\r\n        //             : \"\";\r\n        //         row.barcode =\r\n        //           products[row.itemNo] !== undefined\r\n        //             ? products[row.itemNo].Barcode\r\n        //             : \"\";\r\n        //         row.posName =\r\n        //           products[row.itemNo] !== undefined\r\n        //             ? products[row.itemNo].POS\r\n        //             : \"\";\r\n        //         row.markup = 0;\r\n        //         row.show = true;\r\n        //         row.posSku =\r\n        //           products[row.itemNo] !== undefined\r\n        //             ? products[row.itemNo].PosSKU\r\n        //             : \"\";\r\n        //         row.isReviewed = \r\n        //           products[row.itemNo] !== undefined ? products[row.itemNo].isReviewed : \"\" ;\r\n        //         row.size = \r\n        //           products[row.itemNo] !== undefined ? products[row.itemNo].Size : \"\";\r\n        //         row.department = \r\n        //           products[row.itemNo] !== undefined ? products[row.itemNo].Department : \"\";\r\n        //         row.cost = \r\n        //           products[row.itemNo] !== undefined ? products[row.itemNo].SellerCost : \"\";\r\n        //         row.sellingPrice = \r\n        //           products[row.itemNo] !== undefined ? products[row.itemNo].SellingPrice : \"\";\r\n        //         //console.log(\"department-\" + row.department + \"  cost-\" + row.cost + \"  price\" + row.sellingPrice);\r\n        //         let sp = 0;\r\n        //         let cp = 0;\r\n        //         // const barcode = products.Barcode\r\n        //         if (parseInt(row.pieces)) {\r\n        //           sp = (parseFloat(row.unitPrice) / parseInt(row.pieces)).toFixed(\r\n        //             2\r\n        //           );\r\n        //           cp = sp;\r\n        //         }\r\n        //         if (products[row.itemNo] !== undefined) {\r\n        //           if (+row.unitPrice > +products[row.itemNo].Price) {\r\n        //             row[\"priceIncrease\"] = 1;\r\n        //           } else if (+row.unitPrice < +products[row.itemNo].Price) {\r\n        //             row[\"priceIncrease\"] = -1;\r\n        //           } else if (+row.unitPrice == +products[row.itemNo].Price) {\r\n        //             row[\"priceIncrease\"] = 0;\r\n        //           }\r\n        //         } else {\r\n        //           row[\"priceIncrease\"] = 0;\r\n        //         }\r\n    \r\n        //         /**filter out the rows for which qty shipped & extendedPrice is zero */\r\n        //         if (row.qty == \"0\" && row.extendedPrice === \"0.00\") {\r\n        //           return null;\r\n        //         }\r\n        //         /**Calulate qty for which qty is not read/scanned by textract */\r\n        //         if (!row.qty) {\r\n        //           row.qty = (\r\n        //             parseFloat(row.extendedPrice) / parseFloat(row.unitPrice)\r\n        //           ).toFixed(0);\r\n        //         }\r\n        //       return { ...row, sp, cp };\r\n        //       });\r\n        //       setLoader(false);\r\n        //       setTableData(table.filter((data) => data !== null));\r\n        //       setItemNoDropdown(Object.keys(products));\r\n        //       setProductDetails(products);\r\n        //     })\r\n        //     .catch((err) => {\r\n        //       console.log(\"error on mapping ocrdata\", err)\r\n        //       setLoader(false);\r\n        //     });\r\n        // });\r\n    }, []);\r\n\r\n    console.log(apiLoader);\r\n    console.log(showPosState);\r\n    console.log(inv, num, day);\r\n    console.log(notFounds, unitsInCase, price);\r\n    if (loader) {\r\n      return <Spinner />;\r\n    }\r\n    if(apiLoader){\r\n      return (\r\n      <div style={{marginTop: \"100px\", marginLeft: \"700px\"}}>\r\n        <CircularProgress />\r\n      </div>\r\n      );       \r\n    }\r\n    return(\r\n\r\n        <div className=\"container-fluid\">\r\n          <br />\r\n            <Paper className={classes.root}>\r\n                <Grid style={{ display: \"flex\" }}>\r\n                \r\n                  <Autocomplete\r\n                      value={invoice}\r\n                      onChange={(event, newValue) => {\r\n                          // console.log(\"new value\", newValue)\r\n                          if (newValue) {\r\n                          setInvoice(newValue);\r\n                          }\r\n                          // getInvoices(newValue);\r\n                      }}\r\n                      id=\"combo-box\"\r\n                      options={dropdownOptions}\r\n                      getOptionLabel={(option) => option.value}\r\n                      style={{ width: 250 }}\r\n                      autoHighlight\r\n                      renderInput={(params) => (\r\n                          <TextField {...params} label={dropdownLabel} variant=\"outlined\" />\r\n                      )}\r\n                  />\r\n                    {/* <Autocomplete\r\n                        value={invoiceNo}\r\n                        onChange={(event, newValue) => {\r\n                            // console.log(\"new value\", newValue)\r\n                            if (newValue) {\r\n                            setInvoiceNo(newValue);\r\n                            }\r\n                        }}\r\n                        id=\"combo-box\"\r\n                        options={invoiceOptions}\r\n                        getOptionLabel={(option) => option.value}\r\n                        style={{ width: 200 }}\r\n                        autoHighlight\r\n                        renderInput={(params) => (\r\n                            <TextField {...params} label=\"Invoice No.\" variant=\"outlined\" />\r\n                        )}\r\n                    /> */}\r\n                    \r\n                    {/* <TextField\r\n                        label=\"Invoice No.\"\r\n                        variant=\"outlined\"\r\n                        value={invoiceNo}\r\n                        style={{ marginLeft: 20 }}\r\n                        onChange={(e) => setInvoiceNo(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        id=\"date\"\r\n                        label=\"Date\"\r\n                        type=\"date\"\r\n                        value={date}\r\n                        style={{ marginLeft: 20 }}          \r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        onChange={(event) => setDate(event.target.value)}          \r\n                    /> */}\r\n                  <button  style={{backgroundColor: \"green\",\r\n                      height: \"50px\",\r\n                      border: \"none\",\r\n                      color: \"white\",\r\n                      padding: \"4px 8px\",\r\n                      textAlign: \"center\",\r\n                      textDecoration: \"none\",\r\n                      display: \"inline-block\",\r\n                      fontSize: \"14px\",\r\n                      align: \"left\",\r\n                      marginLeft: 20}}\r\n                      // onClick={setProductsInTable}\r\n                      onClick={getInvoices}\r\n                      >\r\n                          Fetch Invoice Data\r\n                  </button>\r\n\r\n                  <div style={{marginLeft: \"20px\"}}>\r\n                  <table>\r\n                  <tbody>\r\n                      <tr style={{height: \"21px\"}}> \r\n                      <td style={{display: \"flex\",\r\n                          width: \"20px\",\r\n                          height: \"20px\",\r\n                          backgroundColor: \"rgb(238,129,237)\",\r\n                          borderRadius: \"50%\",\r\n                          }}></td>\r\n                          {/* <td style={{width: \"0.25px\", height: \"0.25px\", margin: \"0px 0px 0px 0px\"}}></td> */}\r\n                      <td style={{height: \"21px\"}}><p >Product has been linked(on hovering).</p></td>\r\n                      </tr>\r\n                      <tr style={{height: \"21px\"}}> \r\n                      <td style={{display: \"flex\",\r\n                          width: \"20px\",\r\n                          height: \"20px\",\r\n                          backgroundColor: \"rgb(144,238,143)\",\r\n                          borderRadius: \"50%\",\r\n                          }}></td>\r\n                          {/* <td style={{width: \"0.25px\", height: \"0.25px\", margin: \"0px 0px 0px 0px\"}}></td> */}\r\n                      <td style={{height: \"21px\"}}><p >Product has been updated on POS.</p></td>\r\n                      </tr>\r\n                      <tr style={{height: \"21px\"}}> \r\n                      <td style={{display: \"flex\",\r\n                          width: \"20px\",\r\n                          height: \"20px\",\r\n                          backgroundColor: \"rgb(231, 230, 162)\",\r\n                          borderRadius: \"50%\",\r\n                          // border: \"1px solid\"\r\n                          }}></td>\r\n                          {/* <td style={{width: \"0.25px\", height: \"0.25px\", margin: \"0px 0px 0px 0px\"}}></td> */}\r\n                      <td style={{height: \"21px\"}}><p >Product has not been linked(on hovering).</p></td>\r\n                      </tr>\r\n                      </tbody>\r\n              </table>\r\n              </div>\r\n              <div style={{marginLeft: \"20px\"}}>\r\n              <table>\r\n              <tbody>\r\n                  <tr style={{height: \"21px\"}}> \r\n                  <td style={{display: \"flex\",\r\n                      width: \"20px\",\r\n                      height: \"20px\",\r\n                      backgroundColor: \"rgb(210,180,140)\",\r\n                      borderRadius: \"50%\",\r\n                      }}></td>\r\n                      {/* <td style={{width: \"0.25px\", height: \"0.25px\", margin: \"0px 0px 0px 0px\"}}></td> */}\r\n                  <td style={{height: \"21px\"}}><p >Product is free.</p></td>\r\n                  </tr>\r\n                  <tr style={{height: \"21px\"}}> \r\n                  <td style={{display: \"flex\",\r\n                      width: \"20px\",\r\n                      height: \"20px\",\r\n                      backgroundColor: \"rgb(24,140,255)\",\r\n                      borderRadius: \"50%\",\r\n                      }}></td>\r\n                      {/* <td style={{width: \"0.25px\", height: \"0.25px\", margin: \"0px 0px 0px 0px\"}}></td> */}\r\n                  <td style={{height: \"21px\"}}><p >Invoice Unit Cost is greater </p></td>\r\n                  </tr>\r\n                  <tr style={{height: \"21px\"}}> \r\n                  <td style={{display: \"flex\",\r\n                      width: \"20px\",\r\n                      height: \"20px\",\r\n                      backgroundColor: \"rgb(255,179,26)\",\r\n                      borderRadius: \"50%\",\r\n                      }}></td>\r\n                      {/* <td style={{width: \"0.25px\", height: \"0.25px\", margin: \"0px 0px 0px 0px\"}}></td> */}\r\n                  <td style={{height: \"21px\"}}><p >Invoice Unit Cost is lesser.</p></td>\r\n                  </tr>\r\n                  </tbody>\r\n          </table>\r\n          </div>\r\n\r\n          <div style={{marginLeft: \"20px\"}}>\r\n              <table>\r\n              <tbody>\r\n                  <tr style={{height: \"21px\"}}> \r\n                  <td style={{display: \"flex\",\r\n                      width: \"20px\",\r\n                      height: \"20px\",\r\n                      backgroundColor: \"pink\",\r\n                      borderRadius: \"50%\",\r\n                      }}></td>\r\n                      {/* <td style={{width: \"0.25px\", height: \"0.25px\", margin: \"0px 0px 0px 0px\"}}></td> */}\r\n                  <td style={{height: \"21px\"}}><p >Product unidentified in POS.</p></td>\r\n                  </tr>\r\n                  </tbody>\r\n          </table>\r\n          </div>\r\n        </Grid>\r\n\r\n            </Paper>\r\n\r\n            {openInvoice ? (<div><div><p>Invoice No.-- {num}</p></div><div><p>Invoice Date -- {day}</p></div></div>) : null}\r\n\r\n        \r\n            {pushToInventory ? (\r\n            <UpdateInventory\r\n                newInventoryData={inventoryData}\r\n                header={header}\r\n                goBack={setPushToInventory}\r\n                invoice={invoice}\r\n            />\r\n            ) : ( openInvoice ? renderTableData() : renderInvoiceTable() \r\n            )}\r\n            <CModal show={showModal} onClose={() => toggleModal(\"notfounds\")}>\r\n        <CModalHeader closeButton>Add Red Products</CModalHeader>\r\n        <CModalBody>\r\n          <CContainer fluid>\r\n            <CRow>\r\n              <CCol sm=\"6\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"invoiceNo\">Units In Case</CLabel>\r\n                  <CInput\r\n                    type=\"text\"\r\n                    name=\"unitsInCase\"\r\n                    value={unitsInCase}\r\n                    onChange={(event) => {\r\n                      // setUnitsInCase(event.target.value)\r\n                      dispatch({type: \"UNITS_IN_CASE\", data: event.target.value})\r\n                    }}\r\n                    />\r\n                  <CLabel htmlFor=\"date\">Case Cost</CLabel>\r\n                  <CInput\r\n                    type=\"text\"\r\n                    name=\"price\"\r\n                    value={price}\r\n                    onChange={(event) => {\r\n                      // setPrice(event.target.value)\r\n                      dispatch({type: \"PRICE\", data: event.target.value})\r\n                    }}\r\n                    />\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CRow>\r\n          </CContainer>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"primary\" onClick={updateItem}>\r\n            ADD\r\n          </CButton>{\" \"}\r\n          <CButton color=\"secondary\" onClick={() => toggleModal(\"notfounds\")}>\r\n            Cancel\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n\r\n            <CModal show={detailsModal} onClose={() => toggleModal(\"details\")}>\r\n        <CModalHeader closeButton>Add Details</CModalHeader>\r\n        <CModalBody>\r\n          <CContainer fluid>\r\n            <CRow>\r\n              <CCol sm=\"6\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"invoiceNo\">Add Details</CLabel>\r\n                  <TextareaAutosize\r\n                    aria-label=\"empty textarea\"\r\n                    placeholder=\"add details\"\r\n                    // minRows={4}\r\n                    // maxRows={10}\r\n                    style={{ width: 400, height: 100 }}\r\n                    onChange={(event) => setDetails(event.target.value)}\r\n                  />\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CRow>\r\n          </CContainer>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"primary\" onClick={saveDetails}>\r\n            ADD\r\n          </CButton>{\" \"}\r\n          <CButton color=\"secondary\" onClick={() => toggleModal(\"details\")}>\r\n            Cancel\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default SaveInvoiceData;","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\firebase.js",[],"C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\UI\\Button.js",[],"C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\UI\\LoginPage.js",[],"C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\services\\LoginService.js",[],"C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\services\\InventoryService.js",["311"],"import { POSAxios, WordpressAxios } from \"./axios\";\r\nimport Axios from \"./axios\";\r\nconst appendURL = process.env.NODE_ENV === \"production\" ? \"/server\" : \"\";\r\n\r\nexport class InventoryService {\r\n  async GetProductDetails(productSKU) {\r\n    const response = await WordpressAxios.get(`/products/`, {\r\n      params: { sku: productSKU },\r\n    });\r\n    return response.data;\r\n  }\r\n\r\n  async UpdateProductDetails(productId, data) {\r\n    const res = await WordpressAxios.put(`/products/${productId}`, data);\r\n    return res.data;\r\n  }\r\n  async getAllProducts() {\r\n    const res = await WordpressAxios.get(\"products\");\r\n    return res.data;\r\n  }\r\n  async createProduct(data) {\r\n    const res = await WordpressAxios.post(\"products\", data);\r\n    return res.data;\r\n  }\r\n\r\n  async GetPOSProductDetails(upc, itemName = \"\") {\r\n    const response = await Axios.get(appendURL + \"/api/getPOSProduct\", {\r\n      params: { upc, itemName },\r\n    });\r\n    return response.data;\r\n  }\r\n  async UpdatePOSProducts(data) {\r\n    console.log(data);\r\n    const res = await Axios.post(\r\n      appendURL + \"/api/pos/Product/ManageItem\",\r\n      data\r\n    );\r\n    return res.data;\r\n  }\r\n  async SyncInventory() {\r\n    const res = await Axios.get(appendURL + \"/api/sync\");\r\n    console.log(res.data);\r\n    return res.data;\r\n  }\r\n  async UpdateProductFields(data) {\r\n    /**\r\n     ***** data format\r\n     * data = {invoiceName: \"chetak\", itemName:\"CAS 123\", value:{\"Description\": \"jnckwc\", \"Price\": \"44\"}}\r\n     */\r\n    //  console.log(data);\r\n    const res = await Axios.put(\r\n      appendURL + \"/api/invoice/product/update\",\r\n      data\r\n    );\r\n    return res.data;\r\n  }\r\n\r\n  async CreateNotFoundItems(data) {\r\n    /**\r\n     * data format\r\n     * {Item:String,Description:String,Quantity:String,Price:String,sku:String,Barcode:String,PosSKU:String,InvoiceName:String}\r\n     */\r\n    const res = await Axios.post(appendURL + \"/api/invoice/notfound\", data);\r\n    return res.data;\r\n  }\r\n\r\n  async CreateScanInvoiceData(data){\r\n    //console.log(\"IN INVENTORY SERVICE\");\r\n    //console.log(data);\r\n    const res = await Axios.post(appendURL + \"/api/invoice/scaninvoicedata\", data);\r\n    return res.data;\r\n  }\r\n  async UpdateInvoiceData(invoiceName, invoiceNo, date, itemNo) {\r\n    console.log(invoiceName);\r\n    console.log(invoiceNo);\r\n    console.log(itemNo);\r\n    console.log(date);\r\n    const res = await Axios.post(appendURL + \"/api/invoice/updateinvoicedata\", {params:{ invoiceName: invoiceName, invoiceNo: invoiceNo,date: date, itemNo: itemNo}});\r\n    return res.data;\r\n  }\r\n\r\n  async UpdateDBafterPosUpdate(data){\r\n    console.log(data);\r\n    const res = await Axios.post(appendURL + \"/api/invoice/updatedbafterposupdate\", data);\r\n    console.log(res);\r\n  }\r\n\r\n  async saveDetails(data) {\r\n    console.log(data);\r\n    const res = await Axios.post(appendURL + \"/api/invoice/savedetails\", data);\r\n    return res.data;\r\n\r\n  }\r\n\r\n  async reversePOSUpdate(invoiceName, invoiceNo, date, itemNo) {\r\n    console.log(invoiceName);\r\n    console.log(invoiceNo);\r\n    console.log(itemNo);\r\n    console.log(date);\r\n    const res = await Axios.post(appendURL + \"/api/invoice/reverseposupdate\", {params:{ invoiceName: invoiceName, invoiceNo: invoiceNo,date: date, itemNo: itemNo}});\r\n    return res.data;\r\n  }\r\n  \r\n  async linkingCorrect(data) {\r\n    console.log(data);\r\n    const res = await Axios.post(appendURL+ \"/api/invoice/linkingcorrect\", data);\r\n    return res;\r\n  }\r\n\r\n\r\n  async linkManually(data) {\r\n    console.log(data);\r\n\r\n    const res = await Axios.post(appendURL + \"/api/invoice/linkmanually\", data);\r\n    return res;\r\n  }\r\n\r\n  async getHicksvilleData(value) {\r\n    console.log(\"in inventory for hicks data\");\r\n    const res = await Axios.get(appendURL + \"/api/invoice/gethicksvilledata\", {params: {input: value}});\r\n    return res.data;\r\n  }\r\n\r\n  async getSavedInvoices (data) {\r\n    console.log(\"in inventory for saved invoices\");\r\n    console.log(data);\r\n    const res = await Axios.get(appendURL + \"/api/invoice/getsavedinvoices\", {params: data} );\r\n    return res.data;\r\n\r\n  }\r\n\r\n  async UpdateDBProduct(data) {\r\n    console.log(data);\r\n    const res = await Axios.put(appendURL + \"/api/invoice/pos/update\", data);\r\n    return res.data;\r\n  }\r\n  async CreateDBProduct(data) {\r\n    const res = await Axios.post(appendURL + \"/api/invoice/pos/create\", data);\r\n    return res.data;\r\n  }\r\n\r\n  async getInitialSyncedData(dateObj) {\r\n    console.log(\"In inventory service\");\r\n    console.log(dateObj);\r\n    const res = await Axios.get(appendURL + \"/api/invoice/pos\",dateObj);\r\n    console.log(res);\r\n    return res.data;\r\n  }\r\n\r\n  async generateLog(data) {\r\n    console.log(data);\r\n    const res = await Axios.post(appendURL + \"/api/invoice/generatelog\", data);\r\n    return res;\r\n\r\n  }\r\n\r\n  async linkManuallyLog(data) {\r\n    console.log(data);\r\n    const res = await Axios.post(appendURL+ \"/api/invoice/linkmanuallylog\", data);\r\n    return res;\r\n  }\r\n\r\n  async reverseUpdate(data) {\r\n    console.log(data);\r\n\r\n    const res = await Axios.post(appendURL + \"/api/invoice/reverseupdate\", data);\r\n    return res.data;\r\n  }\r\n\r\n  async UnidentifiedLog(data) {\r\n    console.log(data);\r\n    const res = await Axios.post(appendURL + \"/api/invoice/unidentifiedlog\", data);\r\n    return res;\r\n  }\r\n\r\n  async handwrittenLogs(data) {\r\n    console.log(data);\r\n    const res = await Axios.post(appendURL + \"/api/invoice/handwrittenlogs\", data);\r\n    return res;\r\n  }\r\n\r\n  async fetchProductFromPosList(data) {\r\n    console.log(data);\r\n    const res = await Axios.get(appendURL + \"/api/invoice/fetchproductfromposlist\", data);\r\n    return res.data;\r\n  }\r\n\r\n  async posLogs(data) {\r\n    console.log(data);\r\n    const res = await Axios.post(appendURL + \"/api/invoice/poslogs\", data)\r\n    return res.data;\r\n  }\r\n\r\n  async getItemForHandwrittenInvoice(data) {\r\n    console.log(data);\r\n    const res = await Axios.get(appendURL + \"/api/invoice/getitemhandwritten\", {params: data});\r\n    return res.data;\r\n  }\r\n}\r\n","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\services\\TesseractService.js",[],"C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\services\\Api.js",[],"C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\components\\DisplayData\\DisplayData.js",["312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { TesseractService } from \"../../services/TesseractService\";\r\nimport Button from \"../../UI/Button\";\r\nimport { chooseFilter } from \"../../utils/filterData\";\r\nimport UpdateInventory from \"../Update/UpdateInventory\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport styles from \"./DisplayData.module.css\";\r\nimport Spinner from \"../../UI/Spinner/Spinner\";\r\nimport { chetak } from \"../../utils/invoice-filters/chetak\";\r\nimport firebase from \"../../firebase\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\r\nimport { InventoryService } from \"../../services/InventoryService\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n \r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport { Api } from \"../../services/Api\";\r\nimport HicksData from \"./Hicksville.json\";\r\nimport { CContainer, CModalHeader, CCol, CFormGroup, CInput, CButton, CLabel, CModal, CModalBody, CModalFooter, CRow } from \"@coreui/react\";\r\nimport { lightBlue } from \"@material-ui/core/colors\";\r\n\r\nlet emptyColumnList = [];\r\nconst DisplayData = (props) => {\r\n  const api = new Api();\r\n  const [tableData, setTableData] = useState([]);\r\n  const [emptyColumn, setEmptyColumn] = useState([]);\r\n  const [productDetails, setProductDetails] = useState([]);\r\n  const [pushToInventory, setPushToInventory] = useState(false);\r\n  const [inventoryData, setInventoryData] = useState([]);\r\n  const [itemNoDropdown, setItemNoDropdown] = useState([]);\r\n  const [loader, setLoader] = useState(true);\r\n  const [reviewItems, setReviewItems] = useState([]);\r\n  const tesseractService = new TesseractService();\r\n\r\n  const header = [\r\n    \"Serial No.\",\r\n    \"Barcode\",\r\n    \"POS SKU\",\r\n    \"Qty Shipped\",\r\n    \"ITEM NO\",\r\n    \"Link Product\",\r\n    \r\n    \"DESCRIPTION\",\r\n    \"Units in  Case\",\r\n    \"Case cost\",\r\n    \"Extended Price\",\r\n    \"Unit Cost \",\r\n    \"Unit Price\",\r\n    \"Mark up (%)\",\r\n    \"Tick to delete\",\r\n    \"Update POS\",\r\n    \"Serial No.(2)\"\r\n  ];\r\n\r\n  //added by Parikshit.\r\n  const inventoryService = new InventoryService();\r\n  let hicksvilleData = [];\r\n  let saveInvoiceFlag  = 1;\r\n  const [showPosIndex, setShowPosIndex] = useState(-1);\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [invoiceNo, setInvoiceNo] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [ocrProducts, setOcrProducts] = useState([]); \r\n  const [invDate, setInvDate] = useState(\"\");\r\n  const [invNo, setInvNo] = useState(\"\");\r\n  const [invPage, setInvPage] = useState(\"\");\r\n  const [stateUpdated, setStateUpdated] = useState(\"false\");\r\n  const [costInc, setCostInc] = useState(\"false\");\r\n  const [costDec, setCostDec] = useState(\"false\");\r\n  const [unitCost, setUnitCost] = useState(\"\");\r\n  const [isUpdated, setIsUpdated] = useState(\"false\");\r\n  const [updateIndex, setUpdateIndex] = useState(-1);\r\n  const [notFounds, setNotFounds] = useState(\"false\");\r\n  const [unitsInCase, setUnitsInCase] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [redState, setRedState] = useState(\"false\");\r\n  const selectedInvoice = props.selectedInvoice;\r\n  let showModal1 = false; \r\n  let posProducts = []\r\n  let wooComProducts = [];\r\n  let singleItemData = [];\r\n\r\n  \r\n  const scanInvoiceData = \r\n    {\r\n      InvoiceName: props.selectedInvoice,\r\n      InvoiceDate: \"\",\r\n      InvoiceNumber: \"\",\r\n      InvoicePage: \"\",\r\n      InvoiceData: [],\r\n      SavedDate: \"\",\r\n      SavedInvoiceNo: \"\"\r\n    }\r\n    \r\n  \r\n  const [showPosState, setShowPosState] = useState({\r\n    item: \"\",\r\n    quantity: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    pos: \"\",\r\n    barcode: \"\",\r\n    posSku: \"\",\r\n    invoice: \"\",\r\n    size: \"\",\r\n    department: \"\",\r\n    unitCost: \"\",\r\n    unitPrice: \"\",\r\n  });\r\n  let modalBody;\r\n\r\n  // added by parikshit.\r\n  const saveInvoiceData = async () => {\r\n    toggleModal();\r\n    // console.log(invDate);\r\n    // console.log(invNo);\r\n    // console.log(invPage);\r\n    // console.log(ocrProducts);\r\n    ocrProducts.map((product) => { product.isUpdated = \"false\"});\r\n    console.log(ocrProducts);\r\n   \r\n      scanInvoiceData.InvoiceName = props.selectedInvoice;\r\n      scanInvoiceData.InvoiceDate = invDate;\r\n      scanInvoiceData.InvoiceNumber = invNo;\r\n      scanInvoiceData.InvoicePage = invPage;\r\n      scanInvoiceData.InvoiceData = ocrProducts;\r\n\r\n    \r\n    // setScanInvoiceData(data);\r\n    // console.log(scanInvoiceData);\r\n    scanInvoiceData.SavedDate = date;\r\n    scanInvoiceData.SavedInvoiceNo = invoiceNo;\r\n    // console.log(scanInvoiceData);\r\n    const resScnInvDta =  await inventoryService.CreateScanInvoiceData(scanInvoiceData);\r\n    console.log(resScnInvDta);\r\n    if(resScnInvDta === \"exist\") {\r\n      alert(\"Invoice with same no. and date already exists, change either of the 2 values\");\r\n      toggleModal();\r\n    }else {\r\n      alert(\"Invoice Saved Successfully\");\r\n\r\n    }\r\n  };\r\n\r\n  const sendInvoiceData = async () => {\r\n    // console.log(scanInvoiceData);\r\n    scanInvoiceData.SavedDate = date;\r\n    scanInvoiceData.SavedInvoiceNo = invoiceNo;\r\n    // console.log(scanInvoiceData)\r\n    alert(\"CHECK!!!!\");\r\n    const resScnInvDta =  await inventoryService.CreateScanInvoiceData(scanInvoiceData);\r\n    // console.log(resScnInvDta);\r\n  }\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n    // setDate(\"\");\r\n    // setInvNo(\"\");\r\n  };\r\n\r\n  const hicksvilleDropdown = (data) => {\r\n    let productsString = \"\";\r\n    for(let i=0;i<data.length;i++){\r\n      productsString = productsString + data[i].name + '$$$';\r\n    } \r\n    let result = productsString.split(\"$$$\");\r\n  \r\n    let newData = [];\r\n    for (let i = 0; i < result.length; i++) {\r\n      let s = result[i].split(\"@@@\");\r\n      let obj =\r\n        {\r\n          sku: s[1] === \"nan\" ? null : s[1],\r\n          upc: s[0] === \"nan\" ? null : s[0],\r\n          altupc1: s[14] === \"nan\" ? null : s[14],\r\n          altupc2: s[15] === \"nan\" ? null : s[15],\r\n          name: s[2] === \"nan\" ? null : s[2],\r\n          vintage: s[8] === \"nan\" ? null : s[8],\r\n          totalQty: s[13] === \"nan\" ? null : s[13],\r\n          cost: s[4] === \"nan\" ? null : s[4],\r\n          pricea: s[10] === \"nan\" ? null : s[10],\r\n          priceb: s[11] === \"nan\" ? null : s[11],\r\n          pricec: s[12] === \"nan\" ? null : s[12],\r\n          department: s[9] === \"nan\" ? null : s[9],\r\n          salePrice: s[5] === \"nan\" ? null : s[5],\r\n          size: s[6] === \"nan\" ? null : s[6],\r\n          pack: s[7] === \"nan\" ? null : s[7],\r\n          price: s[3] === \"nan\" ? null : s[3],\r\n        }\r\n      newData.push(obj);\r\n    }\r\n    const filter = newData.map((element) => {\r\n      let obj = { ...element };\r\n      obj.label = `${element.name}- ${element.price}- ${element.upc} - ${element.size}- ${element.cost}`;\r\n      //console.log(obj);\r\n      return obj;\r\n      \r\n    });\r\n    hicksvilleData = filter;\r\n      // console.log(hicksvilleData);\r\n  }\r\n\r\n\r\n  const updateItem = (ocrCost) => {\r\n    //console.log(showPosState);\r\n    const data = {\r\n      invoiceName: props.selectedInvoice,\r\n      itemName: showPosState.item,\r\n      value: { \r\n        POS: showPosState.pos, \r\n        Barcode: showPosState.barcode, \r\n        PosSKU: showPosState.posSku, \r\n        isReviewed: \"true\",\r\n        Size: showPosState.size, \r\n        Department: showPosState.department,\r\n        //SellerCost: showPosState.unitCost,\r\n        SellingPrice: showPosState.unitPrice\r\n      },\r\n    };\r\n\r\n    inventoryService\r\n    .UpdateProductFields(data)\r\n    .then((res) => {\r\n      if (!res) {\r\n        throw new Error(\"Product not created\")\r\n      }\r\n      console.log(res);\r\n      alert(\"Successfully updated fields\");\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      alert(\"Some error occuured in creating product\");\r\n    })\r\n    .finally(() => { \r\n      setLoader(false)\r\n      setStateUpdated(\"true\");\r\n      //  console.log(ocrCost);\r\n      //  console.log(unitCost);\r\n       if(ocrCost>unitCost){\r\n         setCostInc(\"true\");\r\n         setCostDec(\"\");\r\n       }\r\n       if(ocrCost<unitCost){\r\n         setCostDec(\"true\");\r\n         setCostInc(\"\");\r\n       }\r\n    });\r\n\r\n}\r\n\r\n//***************  INDIVIDUAL ITEM UPDATE FUNCTIONALITY STARTS*******************************************.\r\n\r\n    //Function to fetch wooCom Prpducts.\r\n    async function getProducts() {\r\n      console.log(\"IN WOOCOM PRODUCTS\");\r\n      const items = await Promise.all(\r\n        singleItemData.map(async (row) => {\r\n          console.log(row.barcode);\r\n          try {\r\n            const res = await inventoryService.GetProductDetails(row.barcode);\r\n            console.log(res);\r\n            const {\r\n              id,\r\n              name,\r\n              regular_price,\r\n              price,\r\n              sku,\r\n              slug,\r\n              stock_quantity,\r\n              sale_price,\r\n            } = res[0];\r\n            return {\r\n              id,\r\n              name,\r\n              regular_price,\r\n              price,\r\n              sku,\r\n              slug,\r\n              stock_quantity,\r\n              sale_price,\r\n              itemNo: row.itemNo,\r\n            };\r\n          } catch (error) {\r\n            // tempNotFoundProducts.push(row);\r\n            console.log(\"Couldn't fetch product from woodpress.\", row.itemNo);\r\n            return null;\r\n          }\r\n        })\r\n      );\r\n      setLoader(false);\r\n      console.log(items);\r\n      wooComProducts = items;\r\n      // setWooComProducts(items.filter((ele) => ele !== null));\r\n      // setNotFoundProducts(tempNotFoundProducts);\r\n    }\r\n\r\n    //function to fetch POS products.\r\n    async function getPosProducts() {\r\n      console.log(\"IN POS PRODUCTS\");\r\n      setLoader(true);\r\n      let hasErrorOccured = false;\r\n      const items = await Promise.all(\r\n        singleItemData\r\n          .map(async (row) => {\r\n            console.log(row.barcode);\r\n            try {\r\n              const res = await inventoryService.GetPOSProductDetails(\r\n                row.barcode\r\n              );\r\n              console.log(\"fetched pos data\", res);\r\n              const { SKU, UPC, ITEMNAME, TOTALQTY, DEPNAME } = res[0];\r\n              return {\r\n                ...row,\r\n                COST: row.cp,\r\n                PRICE: row.sp,\r\n                SKU,\r\n                UPC,\r\n                ITEMNAME,\r\n                TOTALQTY:\r\n                  parseInt(row.qty) * parseInt(row.pieces) + parseInt(TOTALQTY),\r\n                itemNo: row.itemNo,\r\n                isNew: false,\r\n                BUYASCASE: 1,\r\n                CASEUNITS: row.pieces.toString(),\r\n                CASECOST: row.unitPrice.toString(),\r\n                DEPNAME,\r\n              };\r\n            } catch (error) {\r\n              hasErrorOccured = true;\r\n              return {\r\n                ...row,\r\n                COST: row.cp,\r\n                PRICE: row.sp,\r\n                SKU: row.posSku,\r\n                UPC: row.barcode,\r\n                ITEMNAME: row.description,\r\n                TOTALQTY: parseInt(row.qty) * parseInt(row.pieces),\r\n                itemNo: row.itemNo,\r\n                isNew: true,\r\n                BUYASCASE: 1,\r\n                CASEUNITS: row.pieces.toString(),\r\n                CASECOST: row.unitPrice.toString(),\r\n                DEPNAME: \"\",\r\n              };\r\n            }\r\n          })\r\n      );\r\n      if (hasErrorOccured) {\r\n        alert(\"Couldn't fetch some data from POS\");\r\n      }\r\n      setLoader(false);\r\n      console.log(items);\r\n      posProducts = items;\r\n      console.log(posProducts);\r\n      // setPosProducts(items.filter((ele) => ele !== null));\r\n    }\r\n\r\n    //PUSH TO WOOCOM.\r\n    const pushToWoocom = async (products) => {\r\n      setLoader(true);\r\n      const responses = await Promise.all(\r\n        products.map(async (product) => {\r\n          try {\r\n            const res = await inventoryService.UpdateProductDetails(product.id, {\r\n              regular_price: product.regular_price,\r\n              stock_quantity: product.stock_quantity,\r\n            });\r\n            const { id, name, regular_price, stock_quantity } = res;\r\n            return {\r\n              id,\r\n              name,\r\n              regular_price,\r\n              stock_quantity,\r\n              itemNo: product.itemNo,\r\n            };\r\n          } catch (error) {\r\n            console.log(error);\r\n            alert(\"Couldn't update product on website.\");\r\n            return null;\r\n          }\r\n        })\r\n      );\r\n      setLoader(false);\r\n    };\r\n\r\n     //PUSH TO POS.\r\n     const pushToPOS = async (products) => {\r\n      setLoader(true);\r\n      console.log(products);\r\n      const responses = await Promise.all(\r\n        products.map(async (product) => {\r\n          try {\r\n            const {\r\n              COST,\r\n              PRICE,\r\n              UPC,\r\n              TOTALQTY,\r\n              isNew,\r\n              ITEMNAME,\r\n              BUYASCASE,\r\n              CASEUNITS,\r\n              CASECOST,\r\n              SKU,\r\n              DEPNAME,\r\n              itemNo\r\n            } = product;\r\n            const res = await inventoryService.UpdatePOSProducts(\r\n              JSON.stringify({\r\n                UPC,\r\n                ITEMNAME,\r\n                DESCRIPTION: \"\",\r\n                PRICE,\r\n                COST,\r\n                QTY: TOTALQTY,\r\n                SIZE: \"\",\r\n                PACK: \"\",\r\n                REPLACEQTY: 1,\r\n                DEPARTMENT: DEPNAME,\r\n                CATEGORY: \"\",\r\n                SUBCATEGORY: \"\",\r\n                ISFOODSTAMP: 1,\r\n                ISWEIGHTED: 0,\r\n                ISTAXABLE: 1,\r\n                VENDORNAME: props.selectedInvoice,\r\n                VENDORCODE: itemNo,\r\n                VENDORCOST: \"\",\r\n                ISNEWITEM: isNew ? 1 : 0,\r\n                BUYASCASE,\r\n                CASEUNITS,\r\n                CASECOST,\r\n                COMPANYNAME: props.selectedInvoice,\r\n                PRODUCTCODE: itemNo,\r\n              })\r\n            );\r\n            console.log(\"updated pos data\", res);\r\n            const data = {\r\n              UPC,\r\n              SKU,\r\n              Cost: COST,\r\n              ItemName: ITEMNAME,\r\n              Price: PRICE,\r\n              TotalQty: TOTALQTY,\r\n            };\r\n            if (isNew) {\r\n              const response = await inventoryService.CreateDBProduct(data);\r\n              console.log(\"Created new product\", response);\r\n            } else {\r\n              const response = await inventoryService.UpdateDBProduct({\r\n                count: parseInt(product.qty) * parseInt(product.pieces),\r\n                UPC,\r\n              });\r\n              console.log(\"updated existing product\", response);\r\n            }\r\n  \r\n            console.log(\"res from POS\", res);\r\n            return true;\r\n          } catch (error) {\r\n            console.log(error);\r\n            return null;\r\n          }\r\n        })\r\n      );\r\n      setLoader(false);\r\n    };\r\n\r\n    const pushInventoryDetails2 = async () => {\r\n      console.log(posProducts);\r\n      setLoader(true);\r\n      let data = singleItemData.map((element) => {\r\n        return {\r\n          item: element.itemNo,\r\n          qty: parseInt(element.qty) * parseInt(element.pieces),\r\n          cp: element.unitPrice,\r\n          markup: element.markup,\r\n          sp: element.sp,\r\n          description: element.description,\r\n        };\r\n      });\r\n  \r\n      var duplicates = {};\r\n      for (var i = 0; i < data.length; i++) {\r\n        if (duplicates.hasOwnProperty(data[i].item)) {\r\n          duplicates[data[i].item].push(i);\r\n        } else if (data.lastIndexOf(data[i].item) !== i) {\r\n          duplicates[data[i].item] = [i];\r\n        }\r\n      }\r\n  \r\n      let tempData = Object.values(duplicates).filter((ele) => ele.length > 1);\r\n      if (tempData.length > 0) {\r\n        tempData.forEach((index) => {\r\n          let temp = 0;\r\n          index.forEach((val) => {\r\n            if (data[val]) {\r\n              // console.log(\"data[val]\", data[val]);\r\n              temp += data[val].qty;\r\n              if (temp - data[val].qty !== 0) {\r\n                data[val] = null;\r\n              }\r\n            }\r\n          });\r\n          data[index[0]].qty = temp;\r\n        });\r\n      }\r\n      data = data.filter((ele) => ele !== null);\r\n  \r\n      /**\r\n       * add the fileds of  data from the woocom & ocr\r\n      */\r\n     console.log(wooComProducts.length);\r\n      if(wooComProducts[0] != null){\r\n        let updatedWoocomProducts = data\r\n          .map((product, index) => {\r\n            /**find index of the item in fetched woocom product list */\r\n            const wooIndex = wooComProducts.findIndex(\r\n              (wooProduct) => product.item === wooProduct.itemNo\r\n            );\r\n            if (wooIndex !== -1) {\r\n              /**get the qty & other fileds of the woocom product */\r\n              let { id, stock_quantity } = wooComProducts[wooIndex];\r\n              stock_quantity += product.qty;\r\n              const regular_price = product.sp;\r\n              return { id, regular_price, stock_quantity, itemNo: product.item };\r\n            }\r\n            return null;\r\n          })\r\n          .filter((item) => item !== null);\r\n\r\n        console.log(updatedWoocomProducts); \r\n        await pushToWoocom(updatedWoocomProducts);\r\n        }\r\n      await pushToPOS(posProducts);\r\n  \r\n      // setLoader(false);\r\n      // if (itemsNotPushed.length === 0) {\r\n      window.alert(\"Inventory updated successfully\");\r\n      // setRedirect(true);\r\n      // } else {\r\n      //   window.alert(\"Inventory not updated\");\r\n      // }\r\n    };\r\n\r\n    function toConsoleState() {\r\n      console.log(wooComProducts);\r\n      console.log(posProducts);\r\n      console.log(singleItemData);\r\n    }\r\n\r\n  const pushSingleItemToInventory = async (index) =>{\r\n    \r\n    \r\n    console.log(tableData);\r\n    const product = [];\r\n    const notFoundItems = emptyColumn.map((i) => tableData[i]);\r\n    const tempTable = [];\r\n    product.push(tableData[index]);\r\n    console.log(product);\r\n    \r\n    product.forEach((element, index) => {\r\n      if (\r\n        !emptyColumn.includes(index) &&\r\n        element.show === true &&\r\n        element[\"isForReview\"] != true\r\n      ) {\r\n        let rowData = { index: index + 1, ...element };\r\n        tempTable.push(rowData);\r\n      }\r\n    });\r\n    // console.log(\"notFoundItems\", notFoundItems);\r\n    console.log(tempTable);\r\n\r\n    if (emptyColumn.length !== 0) {\r\n      /**api to push  to not found list*/\r\n      setLoader(true);\r\n      const responses = await Promise.all(\r\n        notFoundItems.map(async (product) => {\r\n          try {\r\n            const data = {\r\n              Item: product.itemNo,\r\n              Description: product.description,\r\n              Quantity: product.qty,\r\n              Price: product.unitPrice,\r\n              sku: product.sku,\r\n              Barcode: product.barcode,\r\n              PosSKU: product.posSku,\r\n              InvoiceName: props.selectedInvoice,\r\n            };\r\n            await inventoryService.CreateNotFoundItems(data);\r\n            return true;\r\n          } catch (error) {\r\n            console.log(\r\n              \"Couldn't create not found product\",\r\n              product.description,\r\n              { error }\r\n            );\r\n            alert(\"Couldn't create product on website.\");\r\n            return null;\r\n          }\r\n        })\r\n      );\r\n      setLoader(false);\r\n    }\r\n    const priceIncreasedProducts = tempTable.filter(\r\n      (product) => product.priceIncrease !== 0\r\n    );\r\n    setLoader(true);\r\n    const res = await Promise.all(\r\n      priceIncreasedProducts.map(async (product) => {\r\n        try {\r\n          const data = {\r\n            invoiceName: props.selectedInvoice,\r\n            itemName: product.itemNo,\r\n            value: { Price: product.unitPrice},\r\n          };\r\n          console.log(data)\r\n          await inventoryService.UpdateProductFields(data);\r\n        } catch (error) {\r\n          console.log(`couldn't update price for product ${product.itemNo}`);\r\n        }\r\n      })\r\n    );\r\n    setLoader(false);\r\n    console.log(tempTable);\r\n    singleItemData = tempTable;\r\n    // setPushToInventory(true);\r\n    console.log(singleItemData);\r\n\r\n    await getProducts();\r\n    await getPosProducts();\r\n    await pushInventoryDetails2();\r\n    toConsoleState();\r\n    setIsUpdated(\"true\");\r\n    setUpdateIndex(index);\r\n    \r\n  }\r\n//***************************INDIVIDUAL ITEM UPDATE FUNCTIONALITY ENDS*****************************************.\r\n\r\n  const addRow = () => {\r\n    let tempTableData = [...tableData];\r\n    tempTableData.push({\r\n      qty: 0,\r\n      itemNo: \"\",\r\n      description: \"\",\r\n      pieces: 0,\r\n      unitPrice: 0.0,\r\n      extendedPrice: \"\",\r\n      markup: 0,\r\n      sp: 0,\r\n      show: true,\r\n      showPOS: \"\"\r\n    });\r\n    emptyColumnList.push(tempTableData.length - 1);\r\n    setEmptyColumn(emptyColumnList);\r\n    setTableData(tempTableData);\r\n  };\r\n  const deleteRow = (index) => {\r\n    let tempTableData = [...tableData];\r\n    // console.log(emptyColumnList.length, \"before\");\r\n    if (tableData[index][\"show\"]) {\r\n      if (1) {\r\n        tempTableData[index][\"show\"] = false;\r\n        const i = emptyColumnList.indexOf(index);\r\n        if (i > -1) {\r\n          emptyColumnList.splice(i, 1);\r\n        }\r\n      }\r\n    } else {\r\n      tempTableData[index][\"show\"] = true;\r\n      if (\r\n        tempTableData[index][\"qty\"] !== \"\" &&\r\n        tempTableData[index][\"itemNo\"] !== \"\" &&\r\n        tempTableData[index][\"unitPrice\"] !== \"\"\r\n      ) {\r\n        const i = emptyColumnList.indexOf(index);\r\n        if (i > -1) {\r\n          emptyColumnList.splice(i, 1);\r\n        }\r\n      } else {\r\n        emptyColumnList.push(index);\r\n      }\r\n    }\r\n    setTableData(tempTableData);\r\n    setEmptyColumn(emptyColumnList);\r\n  };\r\n  const renderTableHeader = () => {\r\n    return header.map((key, index) => {\r\n      return (\r\n          <th\r\n            key={index}\r\n            style={{\r\n              position: \"sticky\",\r\n              top: \"70px\",\r\n              background: \"grey\",\r\n            }}\r\n          >\r\n            {key.toUpperCase()}\r\n        </th>\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderTableData = () => {\r\n    hicksvilleDropdown(HicksData);\r\n    // console.log(stateUpdated);\r\n\r\n    if (tableData) {\r\n      console.log(tableData);\r\n\r\n      // console.log(showPosIndex);\r\n      \r\n      let rows = tableData.map((element, index) => {\r\n        //fuzzwuzzSuggestion = getFuzzwuzzSuggestion(element.description);\r\n        let isEmpty =\r\n          element.qty === \"\" ||\r\n          element.itemNo === \"\" ||\r\n          !element.pieces ||\r\n          isNaN(element.unitPrice) ||\r\n          element.unitPrice === \"\" ||\r\n          isNaN(element.extendedPrice);\r\n        if (isEmpty && element.show) {\r\n          let emptyColumn = [...emptyColumnList, index];\r\n          emptyColumnList = [...new Set(emptyColumn)];\r\n        }\r\n        let isFree = element.qty != 0 && element.extendedPrice === \"0.00\";\r\n\r\n        return (\r\n          <tr\r\n            key={index}\r\n            className={isEmpty ? styles.red : isFree ? styles.free : null}\r\n            style={isUpdated === \"true\" ? updateIndex === index ? {backgroundColor: \"lightBlue\"} : {}\r\n                  : element.show ? { opacity: \"1\" } : { opacity: \"0.4\" }}\r\n            \r\n          >\r\n            <td>{index + 1}</td>\r\n            <td className={styles.element}>\r\n              <TextField\r\n                type=\"tel\"\r\n                value={showPosIndex === index ? showPosState.barcode : element.barcode}\r\n                id=\"outlined-secondary\"\r\n                variant=\"outlined\"\r\n                onChange={(e) => {\r\n                  handleChange(index, \"barcode\", e.target.value);\r\n                }}\r\n                style={{ width: 150 }}\r\n              />\r\n              {/* <IconButton\r\n                color=\"primary\"\r\n                aria-label=\"add to review\"\r\n                // onClick={() => addForReview(element, index)}\r\n              >\r\n                <InfoOutlinedIcon\r\n                  style={\r\n                    reviewItems.includes(index)\r\n                      ? { backgroundColor: \"green\" }\r\n                      : null\r\n                  }\r\n                /> \r\n              </IconButton>\r\n              <div className={element.isReviewed  === \"true\" || (showPosIndex === index && stateUpdated === \"true\") ? styles.tooltipIsReviewed: styles.tooltip} >\r\n                <p>POS Product- {showPosIndex === index ? showPosState.pos : element.posName }</p>\r\n                <p>UPC- {showPosIndex === index ? showPosState.barcode : element.barcode}</p>\r\n                <p>Size- {showPosIndex === index ? showPosState.size : element.size}</p>\r\n                <p>Department - {showPosIndex === index ? showPosState.department : element.department}</p>\r\n                <p>Unit Cost- {showPosIndex === index ? showPosState.unitCost : element.cost}</p> \r\n                <p>Unit Price- {showPosIndex === index ? showPosState.unitPrice : element.sellingPrice}</p>\r\n                <div >\r\n                <button onClick={ () => {\r\n                            if(notFounds === \"true\"){\r\n                              toggleModal();\r\n                            }else{\r\n                              updateItem(props, (parseFloat(element.unitPrice) / parseInt(element.pieces)).toFixed(2))\r\n                            }\r\n                          }\r\n                        } \r\n                  disabled={showPosIndex === index ? false : true}\r\n                  style={{backgroundColor: \"green\",\r\n                  border: \"none\",\r\n                  color: \"white\",\r\n                  padding: \"4px 8px\",\r\n                  textAlign: \"center\",\r\n                  textDecoration: \"none\",\r\n                  display: \"inline-block\",\r\n                  fontSize: \"14px\",\r\n                  align: \"left\"}} >\r\n                  Update Item\r\n                </button>\r\n                </div> \r\n              </div> */}\r\n            </td>\r\n            <td>{showPosIndex === index ? showPosState.posSku : element.posSku}</td>\r\n            <td>\r\n              <TextField\r\n                type=\"tel\"\r\n                value={element.qty}\r\n                id=\"outlined-secondary\"\r\n                variant=\"outlined\"\r\n                onChange={(e) => {\r\n                  handleChange(index, \"qty\", e.target.value);\r\n                }}\r\n                style={{ width: 100 }}\r\n              />\r\n            </td>\r\n            <td>\r\n              <Autocomplete\r\n                value={element.itemNo}\r\n                onChange={(event, newValue) => {\r\n                  if (newValue) {\r\n                    handleChange(index, \"itemNo\", newValue);\r\n                  }\r\n                }}\r\n                id=\"combo-box\"\r\n                options={itemNoDropdown}\r\n                getOptionLabel={(option) => option}\r\n                style={{ width: 200 }}\r\n                renderInput={(params) => (\r\n                  <TextField {...params} variant=\"outlined\" />\r\n                )}\r\n              />\r\n            </td>\r\n            <td>\r\n              <Autocomplete\r\n                value={showPosIndex  === index ? showPosState.item : element.itemNo }\r\n                onChange={(event, newValue) => {\r\n                  if (newValue) {\r\n                    let newState = { ...showPosState };\r\n                    console.log(newValue);\r\n                    // newState.item = newValue.name;\r\n                    newState.item = element.itemNo\r\n                    newState.description = element.description;\r\n                    newState.barcode = newValue.upc;\r\n                    newState.pos = newValue.name;\r\n                    newState.posSku = newValue.sku;\r\n                    newState.size = newValue.size;\r\n                    newState.department = newValue.department;\r\n                    newState.unitCost = newValue.cost;\r\n                    newState.unitPrice = newValue.price;\r\n                    setShowPosState(newState);\r\n                    setShowPosIndex(index);\r\n                    setUnitCost(newValue.cost);\r\n                    if(isEmpty){\r\n                      setNotFounds(\"true\");\r\n                    }\r\n                    //setDisabled(false);\r\n                    //updateOnHoverDetails(index);\r\n                    //setShowPosIndex(index);\r\n                    // console.log(newValue);\r\n                    // console.log(newState);\r\n                    //console.log(showPosState);\r\n                    \r\n                  }\r\n                }}\r\n                id=\"combo-box\"\r\n                disabled\r\n                // options={element.fuzzSuggestion}\r\n                options={hicksvilleData}\r\n                getOptionLabel={(option) => option.label ?? element.itemNo}\r\n                style={{ width: 400 }}\r\n                renderInput={(params) => (\r\n                  <TextField {...params} variant=\"outlined\" />\r\n                )}\r\n              />\r\n            </td>\r\n            \r\n            <td>{element.description}</td>\r\n            {/* <td>{element.pieces}</td> */}\r\n            <td>\r\n              <TextField\r\n                type=\"tel\"\r\n                value={element.pieces}\r\n                variant=\"outlined\"\r\n                onChange={(e) => {\r\n                  handleChange(index, \"pieces\", e.target.value);\r\n                }}\r\n                style={{ width: 100 }}\r\n              />\r\n            </td>\r\n            <td>\r\n              <TextField\r\n                type=\"tel\"\r\n                value={element.unitPrice}\r\n                variant=\"outlined\"\r\n                onChange={(e) => {\r\n                  handleChange(index, \"unitPrice\", e.target.value);\r\n                }}\r\n                style={ \r\n                  // element.priceIncrease === 1 \r\n                  //   ? { backgroundColor: \"#1a8cff\", width: 100 }\r\n                  //   : element.priceIncrease === -1 \r\n                  //   ? { backgroundColor: \"#ffb31a\", width: 100 }\r\n                  //   : { width: 100 }\r\n                  showPosIndex === index ? costInc===\"true\" ? { backgroundColor: \"#1a8cff\", width: 100 } : costDec===\"true\" ? { backgroundColor: \"#ffb31a\", width: 100 } : {width: 100}\r\n                  : element.priceIncrease === 1 \r\n                      ? { backgroundColor: \"#1a8cff\", width: 100 }\r\n                      : element.priceIncrease === -1 \r\n                      ? { backgroundColor: \"#ffb31a\", width: 100 }\r\n                      : { width: 100 }\r\n                }\r\n              />\r\n            </td>\r\n            <td>{element.extendedPrice}</td>\r\n            {/* <td>{element.cp}</td> */}\r\n            <td>\r\n              <TextField\r\n                type=\"tel\"\r\n                value={element.cp}\r\n                variant=\"outlined\"\r\n                onChange={(e) => {\r\n                  handleChange(index, \"cp\", e.target.value);\r\n                }}\r\n                style={{ width: 100 }}\r\n              />\r\n            </td>\r\n            <td>\r\n              <TextField\r\n                type=\"tel\"\r\n                value={element.sp}\r\n                variant=\"outlined\"\r\n                onChange={(e) => {\r\n                  handleChange(index, \"sp\", e.target.value);\r\n                }}\r\n                style={{ width: 100 }}\r\n              />\r\n            </td>\r\n            <td>{element.markup}</td>\r\n            {/* <td>\r\n              <Checkbox\r\n                checked={!element.show}\r\n                onChange={(e) => handleChange(index, \"show\", e.target.value)}\r\n                inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n              />\r\n            </td> */}\r\n             <td>\r\n              <Button\r\n                text={element.show ? \"Delete\" : \"Undo\"}\r\n                color=\"btn btn-info\"\r\n                type=\"submit\"\r\n                onClick={() => deleteRow(index)}\r\n              />\r\n            </td>\r\n            <td>\r\n            <Button \r\n                text=\"Update POS\"\r\n                color=\"btn btn-info\"\r\n                type=\"submit\"\r\n                onClick={() => pushSingleItemToInventory(index)}\r\n                style={{ width: 120 }}\r\n              />\r\n                  \r\n            </td>\r\n            <td>{index + 1}</td>\r\n            {/* <td>\r\n              <Button\r\n                text={element.show ? \"Delete\" : \"Undo\"}\r\n                color=\"btn btn-info\"\r\n                type=\"submit\"\r\n                onClick={() => deleteRow(index)}\r\n              />\r\n            </td> */}\r\n          </tr>\r\n        );\r\n      });\r\n      return (\r\n        <div style={{ marginTop: \"70px\" }}>\r\n          <div className={styles.divRow} style={{ marginTop: \"80px\" }}>\r\n            <Button\r\n              text=\"Save Invoice Data\"\r\n              color=\"btn btn-info\"\r\n              type=\"submit\"\r\n              onClick={toggleModal}\r\n            />\r\n            <Button\r\n              text=\"Re upload\"\r\n              color=\"btn btn-info\"\r\n              type=\"submit\"\r\n              onClick={() => window.location.reload()}\r\n            />\r\n          </div>\r\n          <table className=\"table table-hover table-responsive-sm\">\r\n            <tbody>\r\n              <tr>{renderTableHeader()}</tr>\r\n              {rows}\r\n              <tr>\r\n                <td>\r\n                  <Button\r\n                    text=\"Add cell\"\r\n                    color=\"btn btn-info\"\r\n                    onClick={addRow}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <div className={styles.divRow}>\r\n            <Button\r\n              text=\"Update Inventory\"\r\n              color=\"btn btn-info\"\r\n              type=\"submit\"\r\n              onClick={pushInventoryDetails}\r\n            />\r\n            <Button\r\n              text=\"Save Invoice Data\"\r\n              color=\"btn btn-info\"\r\n              type=\"submit\"\r\n              onClick={toggleModal}\r\n            />\r\n            <Button\r\n              text=\"Re upload\"\r\n              color=\"btn btn-info\"\r\n              type=\"submit\"\r\n              onClick={() => window.location.reload()}\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const pushInventoryDetails = async () => {\r\n    console.log(tableData)\r\n    const notFoundItems = emptyColumn.map((i) => tableData[i]);\r\n    const tempTable = [];\r\n    \r\n    tableData.forEach((element, index) => {\r\n      if (\r\n        !emptyColumn.includes(index) &&\r\n        element.show === true &&\r\n        element[\"isForReview\"] != true\r\n      ) {\r\n        let rowData = { index: index + 1, ...element };\r\n        tempTable.push(rowData);\r\n      }\r\n    });\r\n    console.log(\"notFoundItems\", notFoundItems);\r\n    // console.log(\"final table data\", tempTable);\r\n\r\n    if (emptyColumn.length !== 0) {\r\n      /**api to push  to not found list*/\r\n      setLoader(true);\r\n      const responses = await Promise.all(\r\n        notFoundItems.map(async (product) => {\r\n          try {\r\n            const data = {\r\n              Item: product.itemNo,\r\n              Description: product.description,\r\n              Quantity: product.qty,\r\n              Price: product.unitPrice,\r\n              sku: product.sku,\r\n              Barcode: product.barcode,\r\n              PosSKU: product.posSku,\r\n              InvoiceName: props.selectedInvoice,\r\n            };\r\n            await inventoryService.CreateNotFoundItems(data);\r\n            return true;\r\n          } catch (error) {\r\n            console.log(\r\n              \"Couldn't create not found product\",\r\n              product.description,\r\n              { error }\r\n            );\r\n            alert(\"Couldn't create product on website.\");\r\n            return null;\r\n          }\r\n        })\r\n      );\r\n      setLoader(false);\r\n    }\r\n    const priceIncreasedProducts = tempTable.filter(\r\n      (product) => product.priceIncrease !== 0\r\n    );\r\n    setLoader(true);\r\n    const res = await Promise.all(\r\n      priceIncreasedProducts.map(async (product) => {\r\n        try {\r\n          const data = {\r\n            invoiceName: props.selectedInvoice,\r\n            itemName: product.itemNo,\r\n            value: { Price: product.unitPrice },\r\n          };\r\n          console.log(data)\r\n          await inventoryService.UpdateProductFields(data);\r\n        } catch (error) {\r\n          console.log(`couldn't update price for product ${product.itemNo}`);\r\n        }\r\n      })\r\n    );\r\n    setLoader(false);\r\n    setInventoryData(mergeDuplicates(tempTable));\r\n    setPushToInventory(true);\r\n    \r\n  };\r\n  \r\n  \r\n  \r\n  \r\n  const addForReview = async (item, index) => {\r\n    const data = {\r\n      barcode: item.barcode,\r\n      posName: item.posName,\r\n      itemNo: item.itemNo,\r\n      description: item.description,\r\n      invoiceName: props.selectedInvoice,\r\n      posSku: item.posSku,\r\n    };\r\n    const tempReviewItems = [...reviewItems];\r\n    tempReviewItems.push(index);\r\n    setReviewItems(tempReviewItems);\r\n    try {\r\n      // console.log(item.itemNo)\r\n      firebase.database().ref(\"/review\").child(`${item.itemNo.replace('/',\"SlasH\")}`).set(data);\r\n      let tempTableData = [...tableData];\r\n      tempTableData[index][\"isForReview\"] = true;\r\n      setTableData(tempTableData);\r\n      return true;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleChange = async (row, key, value) => {\r\n    console.log(row);\r\n    console.log(key);\r\n    console.log(value);\r\n    console.log(emptyColumn);\r\n    let tempTableData = [...tableData];\r\n    tempTableData[row][key] = value;\r\n    const { itemNo } = tempTableData[row];\r\n    console.log(tempTableData[row]);\r\n    if (\r\n      tempTableData[row][\"qty\"] !== \"\" &&\r\n      tempTableData[row][\"itemNo\"] !== \"\" &&\r\n      tempTableData[row][\"unitPrice\"] !== \"\"\r\n    ) {\r\n      const index = emptyColumnList.indexOf(row);\r\n      console.log(index);\r\n      if (index > -1) {\r\n        emptyColumnList.splice(index, 1);\r\n      }\r\n    } else {\r\n      emptyColumnList.push(row);\r\n    }\r\n    setEmptyColumn(emptyColumnList);\r\n    if (key === \"itemNo\") {\r\n      tempTableData[row][\"description\"] = productDetails[value].Description;\r\n      tempTableData[row][\"pieces\"] = productDetails[value].Quantity;\r\n      tempTableData[row][\"sku\"] = productDetails[value].sku;\r\n      /**auto populate barcode & other pos fields*/\r\n      tempTableData[row][\"barcode\"] = productDetails[value].Barcode;\r\n      tempTableData[row][\"posName\"] = productDetails[value].POS;\r\n      tempTableData[row][\"posSku\"] = productDetails[value].PosSKU;\r\n    }\r\n\r\n    if (key === \"unitPrice\" || key === \"sp\" || key === \"itemNo\" || key === \"pieces\") {\r\n      let cp = parseFloat(tempTableData[row][\"cp\"]);\r\n      let sp = parseFloat(tempTableData[row][\"sp\"]);\r\n      let markup = ((sp - cp) / cp) * 100;\r\n      let cost =\r\n        parseFloat(tempTableData[row][\"unitPrice\"]) /\r\n        tempTableData[row][\"pieces\"];\r\n      // let sp = cp + (cp * markup) / 100;\r\n      // if (tempTableData[row][\"pieces\"]) {\r\n      //   sp = sp / tempTableData[row][\"pieces\"];\r\n      // }\r\n      tempTableData[row][\"markup\"] = isNaN(markup) ? 0 : markup.toFixed(2);\r\n      tempTableData[row][\"cp\"] = isNaN(cost) ? 0 : cost.toFixed(2);\r\n      console.log(\"PIECES\");\r\n      tempTableData[row][\"pieces\"] = value;\r\n    }\r\n\r\n    if (key === \"qty\" || key === \"unitPrice\") {\r\n      const extendedPrice =\r\n        parseFloat(tempTableData[row][\"qty\"]) *\r\n        parseFloat(tempTableData[row][\"unitPrice\"]);\r\n      const cp = tempTableData[row][\"unitPrice\"] / tempTableData[row][\"pieces\"];\r\n      if (!isNaN(extendedPrice)) {\r\n        tempTableData[row][\"extendedPrice\"] = extendedPrice.toFixed(2);\r\n      }\r\n      if (!isNaN(cp)) {\r\n        tempTableData[row][\"cp\"] = cp.toFixed(2);\r\n      }\r\n    }\r\n    if (itemNo) {\r\n      if (+tempTableData[row][\"unitPrice\"] > +productDetails[itemNo].Price) {\r\n        tempTableData[row][\"priceIncrease\"] = 1;\r\n      } else if (\r\n        +tempTableData[row][\"unitPrice\"] < +productDetails[itemNo].Price\r\n      ) {\r\n        tempTableData[row][\"priceIncrease\"] = -1;\r\n      } else if (\r\n        +tempTableData[row][\"unitPrice\"] == +productDetails[itemNo].Price\r\n      ) {\r\n        tempTableData[row][\"priceIncrease\"] = 0;\r\n      }\r\n    }\r\n\r\n    if (key === \"barcode\") {\r\n      tempTableData[row][\"barcode\"] = value;\r\n    }\r\n    setTableData(tempTableData);\r\n  };\r\n\r\n  const setMarkup = (value) => {\r\n    let tempTableData = [...tableData];\r\n\r\n    for (let index = 0; index < tempTableData.length; index++) {\r\n      handleChange(index, \"markup\", value);\r\n    }\r\n  };\r\n\r\n  const mergeDuplicates = (a) => {\r\n    let arr = [...a];\r\n    let map = new Map();\r\n    for (let i = 0; i < arr.length; i++) {\r\n      if (!map.has(arr[i].itemNo)) map.set(arr[i].itemNo, arr[i]);\r\n      else {\r\n        let obj = { ...map.get(arr[i].itemNo) };\r\n        obj[\"qty\"] = (\r\n          parseFloat(obj[\"qty\"]) + parseFloat(arr[i].qty)\r\n        ).toString();\r\n        map.set(arr[i].itemNo, obj);\r\n      }\r\n    }\r\n    let newArr = [];\r\n    for (let x of map.values()) newArr.push(x);\r\n    return newArr;\r\n  };\r\n\r\n  useEffect(() => {\r\n    \r\n\r\n\r\n    /**Fetch the data from the aws textract for the image */\r\n    async function fetchOCRData() {\r\n      // return chetak();\r\n\r\n      setLoader(true);\r\n      const ocrData = await Promise.all(\r\n        props.filename.map(async (file) => {\r\n          try {\r\n            //console.log(\"FILENAME\" + props.filename);\r\n            const res = await tesseractService.GetOCRData(file);\r\n            console.log(\"ocrData from TSRCTsrvc goes to chooseFilter\");\r\n            \r\n            console.log(\"OCR\");\r\n            console.log(res.body);\r\n            \r\n              // scanInvoiceData.InvoiceDate = res.body[1][\"2\"][\"1\"];\r\n              // scanInvoiceData.InvoiceNumber = res.body[1][\"2\"][\"2\"];\r\n              // scanInvoiceData.InvoicePage = res.body[1][\"2\"][\"3\"];\r\n              // setInvDate(res.body[1][\"2\"][\"1\"]);\r\n              // setInvNo(res.body[1][\"2\"][\"2\"]);\r\n              // setInvPage(res.body[1][\"2\"][\"3\"]);\r\n              // setScanInvoiceData({InvoiceDate: invDate, InvoiceNumber: invNo, InvoicePage: invPage});\r\n            \r\n            // console.log(scanInvoiceData);\r\n            \r\n            //console.log(invDate);\r\n            //console.log(invNo);\r\n            //console.log(invPage);\r\n            // console.log(scanInvoiceData);\r\n            return chooseFilter(props.selectedInvoice, res.body);\r\n          } catch (error) {\r\n            console.log(\"error fetching descripton\", error);\r\n            // throw new Error(error);\r\n          }\r\n        })\r\n      );\r\n      let newData = [];\r\n      ocrData.forEach((data) => (newData = [...newData, ...data]));\r\n      return newData;\r\n    }\r\n\r\n    async function invoiceData() {\r\n      const products = await tesseractService.GetProductDetails(\r\n        props.selectedInvoice\r\n      );\r\n      //console.log(props.selectedInvoice);\r\n      return products;\r\n    }\r\n    fetchOCRData().then((ocrData) => {\r\n      console.log(ocrData);\r\n      invoiceData()\r\n        .then((products) => {\r\n          console.log(\"OCR DAATA\");\r\n          console.log(ocrData);\r\n          /**post processing the table data after returning from filter */\r\n          function convertToUpperCase(obj) {\r\n            let newObj = {};\r\n            for (let key in obj) {\r\n              newObj[key.toUpperCase()] = obj[key];\r\n            }\r\n            return newObj;\r\n          }\r\n          products = convertToUpperCase(products);\r\n          console.log(products);\r\n          // scanInvoiceData.InvoiceData = ocrData;\r\n          setOcrProducts(ocrData);\r\n          \r\n          console.log(\"OCR Data\");\r\n          console.log(ocrData);\r\n          \r\n          // scanInvoiceData.InvoiceData = ocrData;\r\n          //console.log(resScnInvDta);\r\n          //console.log(\"OCERDATa\", ocrData);\r\n          //console.log(products);\r\n          //console.log(scanInvoiceData);\r\n          let table = ocrData.map((row) => {\r\n            /**For invoices which dont have item no, set description as item no */\r\n            if (row.itemNo === undefined) {\r\n              row.itemNo = row.description.trim().toUpperCase();\r\n            }\r\n            row.itemNo = row.itemNo.toString().toUpperCase();\r\n\r\n            row.description = row.description;\r\n              // products[row.itemNo] !== undefined\r\n              //   ? products[row.itemNo].Description\r\n              //   : row.description;\r\n            row.pieces =\r\n              products[row.itemNo] !== undefined\r\n                ? products[row.itemNo].Quantity\r\n                : 0;\r\n            row.sku =\r\n              products[row.itemNo] !== undefined\r\n                ? products[row.itemNo].sku\r\n                : \"\";\r\n            row.barcode =\r\n              products[row.itemNo] !== undefined\r\n                ? products[row.itemNo].Barcode\r\n                : \"\";\r\n            row.posName =\r\n              products[row.itemNo] !== undefined\r\n                ? products[row.itemNo].POS\r\n                : \"\";\r\n            row.markup = 0;\r\n            row.show = true;\r\n            row.posSku =\r\n              products[row.itemNo] !== undefined\r\n                ? products[row.itemNo].PosSKU\r\n                : \"\";\r\n            row.isReviewed = \r\n              products[row.itemNo] !== undefined ? products[row.itemNo].isReviewed : \"\" ;\r\n            row.size = \r\n              products[row.itemNo] !== undefined ? products[row.itemNo].Size : \"\";\r\n            row.department = \r\n              products[row.itemNo] !== undefined ? products[row.itemNo].Department : \"\";\r\n            row.cost = \r\n              products[row.itemNo] !== undefined ? products[row.itemNo].SellerCost : \"\";\r\n            row.sellingPrice = \r\n              products[row.itemNo] !== undefined ? products[row.itemNo].SellingPrice : \"\";\r\n            //console.log(\"department-\" + row.department + \"  cost-\" + row.cost + \"  price\" + row.sellingPrice);\r\n            let sp = 0;\r\n            let cp = 0;\r\n            // const barcode = products.Barcode\r\n            if (parseInt(row.pieces)) {\r\n              sp = (parseFloat(row.unitPrice) / parseInt(row.pieces)).toFixed(\r\n                2\r\n              );\r\n              cp = sp;\r\n            }\r\n            if (products[row.itemNo] !== undefined) {\r\n              // console.log(sp);\r\n              // console.log(products[row.itemNo].SellerCost);\r\n              // if (+row.unitPrice > +products[row.itemNo].SellerCost) {\r\n              //   row[\"priceIncrease\"] = 1;\r\n              // } else if (+row.unitPrice < +products[row.itemNo].SellerCost) {\r\n              //   row[\"priceIncrease\"] = -1;\r\n              // } else if (+row.unitPrice == +products[row.itemNo].SellerCost) {\r\n              //   row[\"priceIncrease\"] = 0;\r\n              // }\r\n              if (sp> +products[row.itemNo].SellerCost) {\r\n                row[\"priceIncrease\"] = 1;\r\n              } else if (+sp < +products[row.itemNo].SellerCost) {\r\n                row[\"priceIncrease\"] = -1;\r\n              } else if (+sp == +products[row.itemNo].SellerCost) {\r\n                row[\"priceIncrease\"] = 0;\r\n              }\r\n            } else {\r\n              row[\"priceIncrease\"] = 0;\r\n            }\r\n\r\n            /**filter out the rows for which qty shipped & extendedPrice is zero */\r\n            if (row.qty == \"0\" && row.extendedPrice === \"0.00\") {\r\n              return null;\r\n            }\r\n            /**Calulate qty for which qty is not read/scanned by textract */\r\n            if (!row.qty) {\r\n              row.qty = (\r\n                parseFloat(row.extendedPrice) / parseFloat(row.unitPrice)\r\n              ).toFixed(0);\r\n            }\r\n          return { ...row, sp, cp };\r\n          });\r\n          setLoader(false);\r\n          setTableData(table.filter((data) => data !== null));\r\n          setItemNoDropdown(Object.keys(products));\r\n          setProductDetails(products);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"error on mapping ocrdata\", err)\r\n          setLoader(false);\r\n        });\r\n    });\r\n  }, []);\r\n\r\n  if (loader) {\r\n    return <Spinner />;\r\n  }\r\n  return (\r\n   \r\n\r\n      \r\n    \r\n    <div className=\"container-fluid\">\r\n    \r\n      {pushToInventory ? (\r\n        <UpdateInventory\r\n          newInventoryData={inventoryData}\r\n          header={header}\r\n          goBack={setPushToInventory}\r\n          invoice={props.selectedInvoice}\r\n        />\r\n      ) : (\r\n        renderTableData()\r\n      )}\r\n\r\n      <CModal show={showModal} onClose={toggleModal}>\r\n        <CModalHeader closeButton>Save Invoice Data</CModalHeader>\r\n        <CModalBody>\r\n          <CContainer fluid>\r\n            <CRow>\r\n              <CCol sm=\"6\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"invoiceNo\">Invoice No.</CLabel>\r\n                  <CInput\r\n                    type=\"text\"\r\n                    name=\"invoiceNo\"\r\n                    value={invoiceNo}\r\n                    onChange={(event) => setInvoiceNo(event.target.value)}\r\n                    />\r\n                  <CLabel htmlFor=\"date\">Date</CLabel>\r\n                  <CInput\r\n                    type=\"date\"\r\n                    name=\"date\"\r\n                    value={date}\r\n                    onChange={(event) => setDate(event.target.value)}\r\n                    />\r\n                  \r\n                </CFormGroup>\r\n              </CCol>\r\n            </CRow>\r\n          </CContainer>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"primary\" onClick={saveInvoiceData}>\r\n            Save Invoice\r\n          </CButton>{\" \"}\r\n          <CButton color=\"secondary\" onClick={toggleModal}>\r\n            Cancel\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n\r\n      {/* <CModal show={showModal} onClose={toggleModal}>\r\n        <CModalHeader closeButton>Add Red Products</CModalHeader>\r\n        <CModalBody>\r\n          <CContainer fluid>\r\n            <CRow>\r\n              <CCol sm=\"6\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"invoiceNo\">Units In Case</CLabel>\r\n                  <CInput\r\n                    type=\"text\"\r\n                    name=\"unitsInCase\"\r\n                    value={unitsInCase}\r\n                    onChange={(event) => setUnitsInCase(event.target.value)}\r\n                    />\r\n                  <CLabel htmlFor=\"date\">Price</CLabel>\r\n                  <CInput\r\n                    type=\"text\"\r\n                    name=\"price\"\r\n                    value={price}\r\n                    onChange={(event) => setPrice(event.target.value)}\r\n                    />\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CRow>\r\n          </CContainer>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"primary\" onClick={updateItem}>\r\n            ADD\r\n          </CButton>{\" \"}\r\n          <CButton color=\"secondary\" onClick={toggleModal}>\r\n            Cancel\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal> */}\r\n      \r\n      \r\n      \r\n      \r\n    );\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.userId,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(DisplayData);\r\n","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\utils\\invoiceList.js",[],"C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\components\\Update\\UpdateInventory.js",["356","357","358","359"],"import React, { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { InventoryService } from \"../../services/InventoryService\";\r\nimport Button from \"../../UI/Button\";\r\nimport Spinner from \"../../UI/Spinner/Spinner\";\r\n\r\nconst UpdateInventory = (props) => {\r\n  // const header = props.header;\r\n  const [newInventoryData, setNewInventoryData] = useState(\r\n    props.newInventoryData\r\n  );\r\n  const [posProducts, setPosProducts] = useState([]);\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [loader, setLoader] = useState(true);\r\n  const [wooComProducts, setWooComProducts] = useState([]);\r\n  const inventoryService = new InventoryService();\r\n  const header = [\r\n    \"Serial No.\",\r\n    \"Barcode\",\r\n    \"POS SKU\",\r\n    \"Qty Shipped\",\r\n    \"ITEM NO\",\r\n    \"DESCRIPTION\",\r\n    \"Units in  Case\",\r\n    \"Case cost\",\r\n    \"Extended Price\",\r\n    \"Unit Cost \",\r\n    \"Unit Price\",\r\n    \"Mark up (%)\"\r\n  ];\r\n\r\n  const renderTableHeader = () => {\r\n    return header.map((key, index) => {\r\n      return (\r\n        <th\r\n          key={index}\r\n          style={{\r\n            position: \"sticky\",\r\n            top: \"70px\",\r\n            background: \"grey\",\r\n          }}\r\n        >\r\n          {key.toUpperCase()}\r\n        </th>\r\n      );\r\n    });\r\n  };\r\n  const renderTableData = () => {\r\n    let rows = newInventoryData.map((element, index) => {\r\n      return (\r\n        <tr\r\n          key={index}\r\n        >\r\n          <td>{index + 1}</td>\r\n          <td>{element.barcode}</td>\r\n          <td>{element.posSku}</td>\r\n          <td>{element.qty}</td>\r\n          <td>{element.itemNo}</td>\r\n          <td>{element.description}</td>\r\n          <td>{element.pieces}</td>\r\n          <td>{element.unitPrice}</td>\r\n          <td>{element.extendedPrice}</td>\r\n          <td>{element.cp}</td>\r\n          <td>{element.sp}</td>\r\n          <td>{element.markup}</td>\r\n        </tr>\r\n      );\r\n    });\r\n    return (\r\n      <div style={{ marginTop: \"70px\" }}>\r\n        <table className=\"table table-hover table-responsive-sm\">\r\n          <tbody>\r\n            <tr>{renderTableHeader()}</tr>\r\n            {rows}\r\n          </tbody>\r\n        </table>\r\n        <div className=\"d-flex justify-content-start\">\r\n          <Button\r\n            text=\"Back\"\r\n            color=\"btn btn-info\"\r\n            type=\"submit\"\r\n            onClick={() => props.goBack(false)}\r\n          />\r\n        </div>\r\n        <div className=\"d-flex justify-content-center\">\r\n          <Button\r\n            text=\"Submit\"\r\n            color=\"btn btn-info\"\r\n            type=\"submit\"\r\n            onClick={pushInventoryDetails}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const pushInventoryDetails = async () => {\r\n    setLoader(true);\r\n    let data = newInventoryData.map((element) => {\r\n      return {\r\n        item: element.itemNo,\r\n        qty: parseInt(element.qty) * parseInt(element.pieces),\r\n        cp: element.unitPrice,\r\n        markup: element.markup,\r\n        sp: element.sp,\r\n        description: element.description,\r\n      };\r\n    });\r\n\r\n    var duplicates = {};\r\n    for (var i = 0; i < data.length; i++) {\r\n      if (duplicates.hasOwnProperty(data[i].item)) {\r\n        duplicates[data[i].item].push(i);\r\n      } else if (data.lastIndexOf(data[i].item) !== i) {\r\n        duplicates[data[i].item] = [i];\r\n      }\r\n    }\r\n\r\n    let tempData = Object.values(duplicates).filter((ele) => ele.length > 1);\r\n    if (tempData.length > 0) {\r\n      tempData.forEach((index) => {\r\n        let temp = 0;\r\n        index.forEach((val) => {\r\n          if (data[val]) {\r\n            // console.log(\"data[val]\", data[val]);\r\n            temp += data[val].qty;\r\n            if (temp - data[val].qty !== 0) {\r\n              data[val] = null;\r\n            }\r\n          }\r\n        });\r\n        data[index[0]].qty = temp;\r\n      });\r\n    }\r\n    data = data.filter((ele) => ele !== null);\r\n\r\n    /**\r\n     * add the fileds of  data from the woocom & ocr\r\n     */\r\n    let updatedWoocomProducts = data\r\n      .map((product, index) => {\r\n        /**find index of the item in fetched woocom product list */\r\n        const wooIndex = wooComProducts.findIndex(\r\n          (wooProduct) => product.item === wooProduct.itemNo\r\n        );\r\n        if (wooIndex !== -1) {\r\n          /**get the qty & other fileds of the woocom product */\r\n          let { id, stock_quantity } = wooComProducts[wooIndex];\r\n          stock_quantity += product.qty;\r\n          const regular_price = product.sp;\r\n          return { id, regular_price, stock_quantity, itemNo: product.item };\r\n        }\r\n        return null;\r\n      })\r\n      .filter((item) => item !== null);\r\n\r\n    await pushToWoocom(updatedWoocomProducts);\r\n    await pushToPOS(posProducts);\r\n\r\n    setLoader(false);\r\n    // if (itemsNotPushed.length === 0) {\r\n    window.alert(\"Inventory updated successfully\");\r\n    setRedirect(true);\r\n    // } else {\r\n    //   window.alert(\"Inventory not updated\");\r\n    // }\r\n  };\r\n\r\n  const pushToWoocom = async (products) => {\r\n    setLoader(true);\r\n    const responses = await Promise.all(\r\n      products.map(async (product) => {\r\n        try {\r\n          const res = await inventoryService.UpdateProductDetails(product.id, {\r\n            regular_price: product.regular_price,\r\n            stock_quantity: product.stock_quantity,\r\n          });\r\n          const { id, name, regular_price, stock_quantity } = res;\r\n          return {\r\n            id,\r\n            name,\r\n            regular_price,\r\n            stock_quantity,\r\n            itemNo: product.itemNo,\r\n          };\r\n        } catch (error) {\r\n          console.log(error);\r\n          alert(\"Couldn't update product on website.\");\r\n          return null;\r\n        }\r\n      })\r\n    );\r\n    setLoader(false);\r\n  };\r\n\r\n  const pushToPOS = async (products) => {\r\n    setLoader(true);\r\n    console.log(products);\r\n    const responses = await Promise.all(\r\n      products.map(async (product) => {\r\n        try {\r\n          const {\r\n            COST,\r\n            PRICE,\r\n            UPC,\r\n            TOTALQTY,\r\n            isNew,\r\n            ITEMNAME,\r\n            BUYASCASE,\r\n            CASEUNITS,\r\n            CASECOST,\r\n            SKU,\r\n            DEPNAME,\r\n            itemNo\r\n          } = product;\r\n          const res = await inventoryService.UpdatePOSProducts(\r\n            JSON.stringify({\r\n              UPC,\r\n              ITEMNAME,\r\n              DESCRIPTION: \"\",\r\n              PRICE,\r\n              COST,\r\n              QTY: TOTALQTY,\r\n              SIZE: \"\",\r\n              PACK: \"\",\r\n              REPLACEQTY: 1,\r\n              DEPARTMENT: DEPNAME,\r\n              CATEGORY: \"\",\r\n              SUBCATEGORY: \"\",\r\n              ISFOODSTAMP: 1,\r\n              ISWEIGHTED: 0,\r\n              ISTAXABLE: 1,\r\n              VENDORNAME: props.invoice,\r\n              VENDORCODE: itemNo,\r\n              VENDORCOST: \"\",\r\n              ISNEWITEM: isNew ? 1 : 0,\r\n              BUYASCASE,\r\n              CASEUNITS,\r\n              CASECOST,\r\n              COMPANYNAME: props.invoice,\r\n              PRODUCTCODE: itemNo,\r\n            })\r\n          );\r\n          console.log(\"updated pos data\", res);\r\n          const data = {\r\n            UPC,\r\n            SKU,\r\n            Cost: COST,\r\n            ItemName: ITEMNAME,\r\n            Price: PRICE,\r\n            TotalQty: TOTALQTY,\r\n          };\r\n          if (isNew) {\r\n            const response = await inventoryService.CreateDBProduct(data);\r\n            console.log(\"Created new product\", response);\r\n          } else {\r\n            const response = await inventoryService.UpdateDBProduct({\r\n              count: parseInt(product.qty) * parseInt(product.pieces),\r\n              UPC,\r\n            });\r\n            console.log(\"updated existing product\", response);\r\n          }\r\n\r\n          console.log(\"res from POS\", res);\r\n          return true;\r\n        } catch (error) {\r\n          console.log(error);\r\n          return null;\r\n        }\r\n      })\r\n    );\r\n    setLoader(false);\r\n  };\r\n  useEffect(() => {\r\n    async function getProducts() {\r\n      const items = await Promise.all(\r\n        newInventoryData.map(async (row) => {\r\n          try {\r\n            const res = await inventoryService.GetProductDetails(row.barcode);\r\n            const {\r\n              id,\r\n              name,\r\n              regular_price,\r\n              price,\r\n              sku,\r\n              slug,\r\n              stock_quantity,\r\n              sale_price,\r\n            } = res[0];\r\n            return {\r\n              id,\r\n              name,\r\n              regular_price,\r\n              price,\r\n              sku,\r\n              slug,\r\n              stock_quantity,\r\n              sale_price,\r\n              itemNo: row.itemNo,\r\n            };\r\n          } catch (error) {\r\n            // tempNotFoundProducts.push(row);\r\n            console.log(\"Couldn't fetch product from woodpress.\", row.itemNo);\r\n            return null;\r\n          }\r\n        })\r\n      );\r\n      setLoader(false);\r\n      setWooComProducts(items.filter((ele) => ele !== null));\r\n      // setNotFoundProducts(tempNotFoundProducts);\r\n    }\r\n\r\n    async function getPosProducts() {\r\n      setLoader(true);\r\n      let hasErrorOccured = false;\r\n      const items = await Promise.all(\r\n        newInventoryData\r\n          .filter((row) => !row.isForReview)\r\n          .map(async (row) => {\r\n            try {\r\n              const res = await inventoryService.GetPOSProductDetails(\r\n                row.barcode\r\n              );\r\n              console.log(\"fetched pos data\", res);\r\n              const { SKU, UPC, ITEMNAME, TOTALQTY, DEPNAME } = res[0];\r\n              return {\r\n                ...row,\r\n                COST: row.cp,\r\n                PRICE: row.sp,\r\n                SKU,\r\n                UPC,\r\n                ITEMNAME,\r\n                TOTALQTY:\r\n                  parseInt(row.qty) * parseInt(row.pieces) + parseInt(TOTALQTY),\r\n                itemNo: row.itemNo,\r\n                isNew: false,\r\n                BUYASCASE: 1,\r\n                CASEUNITS: row.pieces.toString(),\r\n                CASECOST: row.unitPrice.toString(),\r\n                DEPNAME,\r\n              };\r\n            } catch (error) {\r\n              hasErrorOccured = true;\r\n              return {\r\n                ...row,\r\n                COST: row.cp,\r\n                PRICE: row.sp,\r\n                SKU: row.posSku,\r\n                UPC: row.barcode,\r\n                ITEMNAME: row.description,\r\n                TOTALQTY: parseInt(row.qty) * parseInt(row.pieces),\r\n                itemNo: row.itemNo,\r\n                isNew: true,\r\n                BUYASCASE: 1,\r\n                CASEUNITS: row.pieces.toString(),\r\n                CASECOST: row.unitPrice.toString(),\r\n                DEPNAME: \"\",\r\n              };\r\n            }\r\n          })\r\n      );\r\n      if (hasErrorOccured) {\r\n        alert(\"Couldn't fetch some data from POS\");\r\n      }\r\n      setLoader(false);\r\n      setPosProducts(items.filter((ele) => ele !== null));\r\n    }\r\n    getProducts();\r\n    getPosProducts();\r\n  }, []);\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  if (loader) {\r\n    return <Spinner />;\r\n  }\r\n  return <div>{renderTableData()}</div>;\r\n};\r\n\r\nexport default UpdateInventory;\r\n","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\components\\Navigation\\Toolbar\\Toolbar.js",["360"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport styles from './Toolbar.module.css'\r\nclass Toolbar extends Component {\r\n    render() {\r\n        // console.log(\"isAuthenticated\", this.props.isAuthenticated)\r\n        return (\r\n            <header className = {styles.Toolbar}>\r\n                <nav className = {styles.DesktopOnly}>\r\n                    <NavigationItems isAuth = {this.props.isAuthenticated}/>\r\n                </nav>\r\n            \r\n\r\n                \r\n                \r\n\r\n            </header>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.userId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Toolbar);","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\services\\axios.js",[],"C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\utils\\filterData.js",[],"C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\utils\\invoice-filters\\chetak.js",["361","362"],"const data = [\r\n  {\r\n    1: \"ORDER DT \",\r\n    2: \"CUST \",\r\n    3: \"NO. \",\r\n    4: \"P.O. NO. \",\r\n    5: \"SHIP VIA \",\r\n    6: \"DATE SHIPPED \",\r\n    7: \"TERMS \",\r\n  },\r\n  {\r\n    1: \"10/08/2020 \",\r\n    2: \"NY246 \",\r\n    3: \"\",\r\n    4: \"\",\r\n    5: \"PK#934671 Driver \",\r\n    6: \"10/09/2020 \",\r\n    7: \"Bill to Bill/Net 30 \",\r\n  },\r\n  {\r\n    1: \"QTY. ORDERED \",\r\n    2: \"QTY. SHIPPED \",\r\n    3: \"ITEM \",\r\n    4: \"NO. \",\r\n    5: \"DESCRIPTION \",\r\n    6: \"UNIT PRICE \",\r\n    7: \"EXTENDED PRICE \",\r\n  },\r\n  {\r\n    1: \"1 0 * \",\r\n    2: \"CAS \",\r\n    3: \"61 \",\r\n    4: \"Deep Sna \",\r\n    5: \"Sev Thin 12 OZ (12) \",\r\n    6: \"30.09 \",\r\n    7: \"0.00 \",\r\n  },\r\n  {\r\n    1: \"1 0 * \",\r\n    2: \"CAS \",\r\n    3: \"DTB14 \",\r\n    4: \"Deep Sna \",\r\n    5: \"Total Bhel FP 14oz (12) \",\r\n    6: \"32.51 \",\r\n    7: \"0.00 \",\r\n  },\r\n  {\r\n    1: \"1 1 \",\r\n    2: \"CAS \",\r\n    3: \"S18 \",\r\n    4: \"Deep Spi \",\r\n    5: \"Cor-Cumin Pwd 14oz (20) \",\r\n    6: \"44.19 \",\r\n    7: \"44.19 \",\r\n  },\r\n  {\r\n    1: \"1 1 \",\r\n    2: \"CAS \",\r\n    3: \"S14 \",\r\n    4: \"Deep Spi \",\r\n    5: \"Corianderpdr14oz (20) \",\r\n    6: \"30.99 \",\r\n    7: \"30.99 \",\r\n  },\r\n  {\r\n    1: \"1 0 * \",\r\n    2: \"CAS \",\r\n    3: \"S16 \",\r\n    4: \"Deep Spi \",\r\n    5: \"Cumin Pwd 14oz (20) \",\r\n    6: \"52.99 \",\r\n    7: \"0.00 \",\r\n  },\r\n  {\r\n    1: \"1 1 \",\r\n    2: \"CAS \",\r\n    3: \"S15 \",\r\n    4: \"Deep Spi \",\r\n    5: \"Cumin Seeds 14oz (20) \",\r\n    6: \"49.79 \",\r\n    7: \"49.79 \",\r\n  },\r\n  {\r\n    1: \"1 1 \",\r\n    2: \"CAS \",\r\n    3: \"S81 \",\r\n    4: \"Deep Spi \",\r\n    5: \"Dill Seeds 7 OZ (20) \",\r\n    6: \"19.89 \",\r\n    7: \"19.89 \",\r\n  },\r\n  {\r\n    1: \"1 1 \",\r\n    2: \"CAS \",\r\n    3: \"S25 \",\r\n    4: \"Deep Spi \",\r\n    5: \"Garam Masala 14 OZ (20) \",\r\n    6: \"66.20 \",\r\n    7: \"66.20 \",\r\n  },\r\n  {\r\n    1: \"1 1 \",\r\n    2: \"CAS \",\r\n    3: \"S167 \",\r\n    4: \"Deep Spi \",\r\n    5: \"KSHMIRIChiliPD14oz (20) \",\r\n    6: \"55.18 \",\r\n    7: \"55.18 \",\r\n  },\r\n  {\r\n    1: \"1 0 * \",\r\n    2: \"CAS \",\r\n    3: \"S73 \",\r\n    4: \"Deep Spi \",\r\n    5: \"Methi Bhardo 7 OZ (20) \",\r\n    6: \"24.29 \",\r\n    7: \"0.00 \",\r\n  },\r\n  {\r\n    1: \"1 1 \",\r\n    2: \"CAS \",\r\n    3: \"S32 \",\r\n    4: \"Deep Spi \",\r\n    5: \"Red Chili Crush7oz (20) \",\r\n    6: \"27.69 \",\r\n    7: \"27.69 \",\r\n  },\r\n  {\r\n    1: \"1 0 * \",\r\n    2: \"CAS \",\r\n    3: \"S30 \",\r\n    4: \"Deep Spi \",\r\n    5: \"Red Chili X Hot7oz (20) \",\r\n    6: \"19.89 \",\r\n    7: \"0.00 \",\r\n  },\r\n  {\r\n    1: \"1 0 * \",\r\n    2: \"CAS \",\r\n    3: \"S78 \",\r\n    4: \"Deep Spi \",\r\n    5: \"Sesame Sds Wshd7oz (20) \",\r\n    6: \"22.09 \",\r\n    7: \"0.00 \",\r\n  },\r\n  {\r\n    1: \"1 0 * \",\r\n    2: \"CAS \",\r\n    3: \"S80 \",\r\n    4: \"Deep Spi \",\r\n    5: \"SesameSeedsNatr. 70(20) \",\r\n    6: \"19.89 \",\r\n    7: \"0.00 \",\r\n  },\r\n  {\r\n    1: \"1 1 \",\r\n    2: \"CAS \",\r\n    3: \"S64 \",\r\n    4: \"Deep Spi \",\r\n    5: \"Whole Chilli 3.5oz (30) \",\r\n    6: \"24.98 \",\r\n    7: \"24.98 \",\r\n  },\r\n  {\r\n    1: \"1 0 * \",\r\n    2: \"BAG \",\r\n    3: \"CW1 \",\r\n    4: \"Generic \",\r\n    5: \"DrywholeCoconut22L(1) \",\r\n    6: \"75.02 \",\r\n    7: \"0.00 \",\r\n  },\r\n  {\r\n    1: \"1 0 * \",\r\n    2: \"CAS \",\r\n    3: \"T53 \",\r\n    4: \"Horlicks \",\r\n    5: \"Horlicks Plain17. (24) \",\r\n    6: \"105.81 \",\r\n    7: \"0.00 \",\r\n  },\r\n  {\r\n    1: \"1 0 * \",\r\n    2: \"CAS \",\r\n    3: \"T53L \",\r\n    4: \"Horlicks \",\r\n    5: \"Horlicks Plain2.: (12) \",\r\n    6: \"99.26 \",\r\n    7: \"0.00 \",\r\n  },\r\n  {\r\n    1: \"1 0 * \",\r\n    2: \"CAS \",\r\n    3: \"T66 \",\r\n    4: \"Horlicks \",\r\n    5: \"HorlicksChoco.17.5 (24) \",\r\n    6: \"113.78 \",\r\n    7: \"0.00 \",\r\n  },\r\n  {\r\n    1: \"1 0 * \",\r\n    2: \"CAS \",\r\n    3: \"55M \",\r\n    4: \"Mirch Ma \",\r\n    5: \"AgraDalMooth 12oz (15) \",\r\n    6: \"25.31 \",\r\n    7: \"0.00 \",\r\n  },\r\n  {\r\n    1: \"1 0 * \",\r\n    2: \"CAS \",\r\n    3: \"54M \",\r\n    4: \"Mirch Ma \",\r\n    5: \"Aloo Bhujia 12 oz. (15) \",\r\n    6: \"25.31 \",\r\n    7: \"0.00 \",\r\n  },\r\n  {\r\n    1: \"1 0 * \",\r\n    2: \"CAS \",\r\n    3: \"20M \",\r\n    4: \"Mirch Ma \",\r\n    5: \"Bhadran Moong 12oz (15) \",\r\n    6: \"25.31 \",\r\n    7: \"0.00 \",\r\n  },\r\n  {\r\n    1: \"1 0 * \",\r\n    2: \"CAS \",\r\n    3: \"31M \",\r\n    4: \"Mirch Ma \",\r\n    5: \"Bombay Bh-Puril2oz (15) \",\r\n    6: \"25.31 \",\r\n    7: \"0.00 \",\r\n  },\r\n  {\r\n    1: \"1 0 * \",\r\n    2: \"CAS \",\r\n    3: \"13M \",\r\n    4: \"Mirch Ma \",\r\n    5: \"Boondi- - MM 12oz (15) \",\r\n    6: \"25.31 \",\r\n    7: \"0.00 \",\r\n  },\r\n  {\r\n    1: \"1 0 * \",\r\n    2: \"CAS \",\r\n    3: \"29M \",\r\n    4: \"Mirch Ma \",\r\n    5: \"Channa-MN 12oz(15) \",\r\n    6: \"26.36 \",\r\n    7: \"0.00 \",\r\n  },\r\n  {\r\n    1: \"1 1 \",\r\n    2: \"CAS \",\r\n    3: \"28M \",\r\n    4: \"Mirch Ma \",\r\n    5: \"Channadal-MM 12oz (15) \",\r\n    6: \"25.31 \",\r\n    7: \"25.31 \",\r\n  },\r\n  {\r\n    1: \"1 1 \",\r\n    2: \"CAS \",\r\n    3: \"12M \",\r\n    4: \"Mirch Ma \",\r\n    5: \"Chevda Mix-MM - 12oz (15) \",\r\n    6: \"25.31 \",\r\n    7: \"25.31 \",\r\n  },\r\n  {\r\n    1: \"1 0 * \",\r\n    2: \"CAS \",\r\n    3: \"26M \",\r\n    4: \"Mirch Ma \",\r\n    5: \"Chuckry-Stcksmm12o - (15) \",\r\n    6: \"25.31 \",\r\n    7: \"0.00 \",\r\n  },\r\n  {\r\n    1: \"1 0 * \",\r\n    2: \"CAS \",\r\n    3: \"27M \",\r\n    4: \"Mirch Ma \",\r\n    5: \"Corn Chvda-MM 12oz (15) \",\r\n    6: \"25.31 \",\r\n    7: \"0.00 \",\r\n  },\r\n  {\r\n    1: \"1 0 * \",\r\n    2: \"CAS \",\r\n    3: \"19M \",\r\n    4: \"Mirch Ma \",\r\n    5: \"Dal Muth 12oz (15) \",\r\n    6: \"25.31 \",\r\n    7: \"0.00 \",\r\n  },\r\n  {\r\n    1: \"1 0 * \",\r\n    2: \"CAS \",\r\n    3: \"15M \",\r\n    4: \"Mirch Ma \",\r\n    5: \"Ganthiya-MM 12oz (15) \",\r\n    6: \"25.31 \",\r\n    7: \"0.00 \",\r\n  },\r\n  {\r\n    1: \"1 0 * \",\r\n    2: \"CAS \",\r\n    3: \"21M \",\r\n    4: \"Mirch Ma \",\r\n    5: \"GreenVatana- - MM12oz (15) \",\r\n    6: \"26.36 \",\r\n    7: \"0.00 \",\r\n  },\r\n  {\r\n    1: \"2 0 * \",\r\n    2: \"CAS \",\r\n    3: \"59M \",\r\n    4: \"Mirch Ma \",\r\n    5: \"Khatta Mitha 12oz (15) \",\r\n    6: \"25.31 \",\r\n    7: \"0.00 \",\r\n  },\r\n  {\r\n    1: \"1 0 * \",\r\n    2: \"CAS \",\r\n    3: \"32M \",\r\n    4: \"Mirch Ma \",\r\n    5: \"Madras Mix 12oz (15) \",\r\n    6: \"26.36 \",\r\n    7: \"0.00 \",\r\n  },\r\n  {\r\n    1: \"1 1 \",\r\n    2: \"CAS \",\r\n    3: \"73M \",\r\n    4: \"Mirch Ma \",\r\n    5: \"Methi Puri 12oz (15) \",\r\n    6: \"25.32 \",\r\n    7: \"25.32 \",\r\n  },\r\n  {\r\n    1: \"1 1 \",\r\n    2: \"CAS \",\r\n    3: \"22M \",\r\n    4: \"Mirch Ma \",\r\n    5: \"Moong Dal-MM - 12oz (15) \",\r\n    6: \"25.31 \",\r\n    7: \"25.31 \",\r\n  },\r\n  {\r\n    1: \"2 2 \",\r\n    2: \"CAS \",\r\n    3: \"78M \",\r\n    4: \"Mirch Ma \",\r\n    5: \"Nylon Thin Sev24oz (12) \",\r\n    6: \"29.10 \",\r\n    7: \"58.20 \",\r\n  },\r\n  {\r\n    1: \"1 0 * \",\r\n    2: \"CAS \",\r\n    3: \"14M \",\r\n    4: \"Mirch Ma \",\r\n    5: \"Papadi - MM 12oz (15) \",\r\n    6: \"25.31 \",\r\n    7: \"0.00 \",\r\n  },\r\n  {\r\n    1: \"1 0 * \",\r\n    2: \"CAS \",\r\n    3: \"57M \",\r\n    4: \"Mirch Ma \",\r\n    5: \"Peanut Bhujia 12oz (15) \",\r\n    6: \"26.36 \",\r\n    7: \"0.00 \",\r\n  },\r\n  {\r\n    1: \"\",\r\n    2: \"* \",\r\n    3: \"Price \",\r\n    4: \"increase \",\r\n    5: \"till May 2020 * \",\r\n    6: \"\",\r\n    7: \"\",\r\n  },\r\n];\r\n\r\nexport const chetak = () => {\r\n \r\n  let filteredData = data.map((line) => Object.values(line).join(\"\").trim());\r\n\r\n  let tableData = filteredData.map((row, index) => {\r\n    // console.log(\"Data received in row\", row)\r\n    row = row.replaceAll(\"* \", \"\")\r\n    const extendedPrice = row.split(\" \").splice(-1)[0];\r\n    const unitPrice = row.split(\" \").splice(-2)[0];\r\n    // var pcs = row.split(\" \").splice(-3)[0];\r\n    // var qtyOredered = row.split(\" \").splice(0)[0];\r\n    const qty = row.split(\" \").splice(1)[0];\r\n    const description = row.split(\" \").splice(4).slice(0, -2).join(\" \");\r\n    const itemNo = row.split(\" \").splice(2).slice(0, 2).join(\" \");\r\n    const pieces = 0\r\n    const markup = 0\r\n    if (isNaN(extendedPrice) || isNaN(unitPrice)) {\r\n      return null;\r\n    }\r\n    if (extendedPrice == \"0.00\" && qty == \"0\") {\r\n      return null;\r\n    }\r\n    return {\r\n      qty,\r\n      itemNo,\r\n      description,\r\n      pieces,\r\n      unitPrice,\r\n      extendedPrice,\r\n      markup,\r\n    };\r\n  });\r\n  return tableData.filter((data) => data !== null);\r\n};","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\components\\Navigation\\NavigationItems\\NavigationItems.js",["363"],"import React, { useEffect, useState } from 'react'\r\n\r\nimport styles from './NavigationItems.module.css'\r\nimport NavigationItem from './NavigationItem/NavigationItem'\r\nimport CwIcon from \"../../../Images/CwIcon.png\"\r\n\r\nconst NavigationItems = (props) => {\r\n    const [user, setUser] = useState(props.isAuth)\r\n    useEffect(() => {\r\n        setUser(props.isAuth)\r\n        // console.log(\"User\", user)\r\n    }, [user])\r\n    return (\r\n      <ul className={styles.NavigationItems}>\r\n        <img className={styles.logo} src={CwIcon} alt=\"\" />\r\n        {props.isAuth ? (\r\n          <>\r\n            <NavigationItem link=\"/logout\">Logout</NavigationItem>\r\n            {/* <NavigationItem link=\"/pos\">Show Pos</NavigationItem> */}\r\n            <NavigationItem link=\"/handwritten\">Hand Written Invoices</NavigationItem>\r\n            <NavigationItem link=\"/invoicedata\">Invoice Data</NavigationItem>\r\n            {/* <NavigationItem link=\"/inventory\">Inventory</NavigationItem> */}\r\n            <NavigationItem link=\"/invoice\">Scan Invoice</NavigationItem>\r\n            \r\n          </>\r\n        ) : null}\r\n      </ul>\r\n    );\r\n};\r\n\r\nexport default NavigationItems;","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\utils\\optionData.js",["364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763","764","765","766"],"export const optionData={\r\n  \"aahubarah-usa\":{\r\n    regex:/^[A-Z0-9]+ [0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\r\n    header:[\"itemNo\",\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*\\+\\-]/gi\r\n  },\r\n  \"ny-zara-food\":{\r\n    regex:/^[0-9]+ [A-Z0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\r\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*]/gi\r\n  },\r\n  \"vibrant-enterprise\":{\r\n    regex:/^[0-9]+ [A-Z]+ .+ [0-9\\.]+ [0-9\\.]+$/,\r\n    header:[\"qty\",\"um\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*]/gi\r\n  },\r\n  \"karison-foods\":{\r\n    regex:/^[0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\r\n    header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*\\-]/gi\r\n  },// use empty column\r\n  \"gurme-guru\":{\r\n    regex:/^.+ [0-9\\.]+ [0-9\\.]+$/,\r\n    header:[\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*]/gi\r\n  },// use empty column\r\n  \"katzman-berry-corp\":{\r\n    regex:/^[0-9\\.]+ .+ [A-Z]+$/,\r\n    header:[\"qty\",\"description\",\"origin\"],\r\n    body:[1,[0,/ [A-Z]+$/],1],\r\n    notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*]/gi\r\n  },\r\n  \"mels-ice-cream\":{\r\n    regex:/^.+ [A-Z0-9]+ [0-9]+ [0-9\\.]+$/,\r\n    header:[\"description\",\"itemNo\",\"ct\",\"cost\"],\r\n    body:[[0,/ [A-Z0-9]+ [0-9]+ [0-9\\.]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*]/gi\r\n  },\r\n  \"bedessee\":{\r\n    regex:/^[A-Z0-9]+ .+ [0-9\\.]+ [0-9]+ [0-9\\.]+ [0-9\\.]+ [0-9\\.]+$/,\r\n    header:[\"itemNo\",\"description\",\"unit\",\"case\",\"unitPrice\",\"casePrice\",\"extendedPrice\"],\r\n    body:[1,[0,/ [0-9\\.]+ [0-9]+ [0-9\\.]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*]/gi\r\n  },\r\n  \"shakti-group-usa\":{\r\n    regex:/^[0-9].+ [A-Z0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"qty\",\"lotNo\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,1,3,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\r\n  },\r\n  \"spicy-sense\":{\r\n    regex:/^[0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,3,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:();\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"on-time-distribution\":{\r\n    regex:/^[0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,3,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"pexco-inc\":{\r\n    regex:/^[0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,3,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:();\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"krishna-aahar\":{\r\n    regex:/^.+ [0-9\\.]+ [0-9\\.]+$/,\r\n    header:[\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[3,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*]/gi\r\n  },// use empty column\r\n  \"jaan-distributors\":{\r\n    regex:/^.+ [0-9\\.]+ [0-9\\.]+$/,\r\n    header:[\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*\\-]/gi\r\n  },\r\n  \"goyal-group\":{\r\n    regex:/^.+ [0-9\\.]+ [0-9\\.]+$/,\r\n    header:[\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[2,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*]/gi\r\n  },// use empty column\r\n  \"new-reliance-traders\":{\r\n    regex:/^[A-Z0-9-]+ .+ [0-9\\.]+ [A-Z]+ [0-9\\.]+$/,\r\n    header:[\"itemNo\",\"description\",\"unitPrice\",\"unit\",\"extendedPrice\"],\r\n    body:[1,[0,/ [0-9\\.]+ [A-Z]+ [0-9\\.]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*\\/]/gi\r\n  },// use empty column\r\n  \"usa-halal-foods\":{\r\n    regex:/^[A-Z]+ .+ [0-9]+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\r\n    header:[\"itemNo\",\"description\",\"cases\",\"lb\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,[0,/ [0-9]+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*]/gi\r\n  },\r\n  \"turkana-food\":{\r\n    regex:/^[0-9]+ [A-Z]+ [A-Z]+ .+ [0-9]+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\r\n    header:[\"itemNo\",\"class\",\"brand\",\"description\",\"barcode\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,1,1,[0,/ [0-9]+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\r\n  },\r\n  \"temin-distribution\":{\r\n    regex:/^.+ [0-9\\.]+ [0-9\\.]+ [0-9\\.]+$/,\r\n    header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[[0,/ [0-9\\.]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\r\n  },\r\n  \"surati\":{\r\n    regex:/^[0-9\\.]+ .+ [0-9\\.]+ [A-Z]+ [0-9\\. ]+$/,\r\n    header:[\"qty\",\"description\",\"unitPrice\",\"unit\",\"discount\"],\r\n    body:[1,[0,/ [0-9\\.]+ [A-Z]+ [0-9\\. ]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\r\n  },\r\n  \"shata-traders\":{\r\n    regex:/^.+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\r\n    header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[[0,/ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\r\n  },// use empty column\r\n  \"vadilal\":{\r\n    regex:/^[0-9]+ [0-9]+ .+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"sno\",\"itemNo\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,1,[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\r\n  },\r\n  \"rollin-dairy\":{\r\n    regex:/^[0-9]+ [0-9\\.]+ .+ [0-9]+ [0-9\\.]+$/, \r\n    header:[\"itemNo\",\"del\",\"description\",\"cs\",\"extendedPrice\"],\r\n    body:[1,1,[0,/ [0-9]+ [0-9\\.]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*\\-]/gi\r\n  },\r\n  \"putul-distributors\":{\r\n    regex:/^[0-9]+ [A-Z 0-9]+ .+ [0-9\\.B]+ [0-9\\.]+ [0-9\\.]+$/, \r\n    header:[\"qty\",\"itemNo\",\"description\",\"rate\",\"UnitPrice\",\"extendedPrice\"],\r\n    body:[1,3,[0,/ [0-9\\.B]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"referred-beverage\":{\r\n    regex:/^[0-9]+ [0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/, \r\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"pams-creations\":{\r\n    regex:/^[0-9]+ .+ [0-9]+ [0-9]+$/, \r\n    header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,[0,/ [0-9]+ [0-9]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*\\-]/gi\r\n  },\r\n  \"pgl-trade\":{\r\n    regex:/^[A-Z0-9]+ .+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\r\n    header:[\"sku\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,[0,/ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"nirav-indian-groceries\":{\r\n    regex:/^.+ [0-9\\.]+ [A-Z]+ [0-9\\.]+ [0-9\\.]+$/,\r\n    header:[\"description\",\"qty\",\"measure\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[[0,/ [0-9\\.]+ [A-Z]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"new-york-wholesale\":{\r\n    regex:/^.+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\r\n    header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[[0,/ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"mr-pickle\":{\r\n    regex:/^[0-9]+ [A-Z]+ .+ [0-9\\.]+ [0-9\\.]+$/,\r\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"leblon-foods\":{\r\n    regex:/^[0-9]+ [0-9]+ .+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\r\n    header:[\"itemNo\",\"upCode\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,1,[0,/ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"krishna-food-corp\":{\r\n    regex:/^[A-Za-z ]+ .+ [0-9\\.]+ [0-9\\.]+$/,\r\n    header:[\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[2,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },//use empty column\r\n  \"km-distribution-usa\":{\r\n    regex:/^[0-9]+ [A-Z-0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\r\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"jcw-import-and-export\":{\r\n    regex:/^[0-9]+ [A-Z0-9-]+ .+ [0-9\\.]+ [0-9\\.T]+$/,\r\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,1,[0,/ [0-9\\.]+ [0-9\\.T]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"family-five\":{\r\n    regex:/^.+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\r\n    header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[[0,/ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"empire-food-importers\":{\r\n    regex:/^.+ [0-9]+ [0-9\\.]+$/,\r\n    header:[\"description\",\"qty\",\"unitPrice\"],\r\n    body:[[0,/ [0-9]+ [0-9\\.]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"american-pure-honey\":{\r\n    regex:/^[A-Z0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\r\n    header:[\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*\\-]/gi\r\n  },//use empty column\r\n  \"galil\":{\r\n    regex:/^[0-9-]+ [0-9]+ [A-Z]+ [0-9\\./]+ [A-Z]+ .+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\r\n    header:[\"itemNo\",\"qty\",\"extra\",\"pack\",\"description\",\"unit\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,1,1,2,[0,/ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"hellenic\":{\r\n    regex:/^.+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"hill-top-farms\":{\r\n    regex:/^.+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"house-of-spices\":{\r\n    regex:/^[0-9]+ [0-9A-Z]+ .+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"sno\",\"itemNo\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,1,[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"indian-food-and-spices\":{\r\n    regex:/^[0-9.]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"i-sifol\":{\r\n    regex:/^[0-9]+\\.[0-9]+ [A-Z0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"ritesource-corp\":{\r\n    regex:/^.+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"koryeo\":{\r\n    regex:/^[A-Z0-9]+ [0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"itemNo\",\"qty\",\"description\",\"unitPrice\",\"lb\",\"extendedPrice\"],\r\n    body:[1,1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"krinos-foods\":{\r\n    regex:/^[0-9A-Z]+ [0-9]+ .+ [0-9]+\\.[0-9]+ [A-Z]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"itemNo\",\"qty\",\"description\",\"unitPrice\",\"per\",\"extendedPrice\"],\r\n    body:[1,1,[0,/ [0-9]+\\.[0-9]+ [A-Z]+ [0-9]+\\.[0-9]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"loumidis-foods\":{\r\n    regex:/^[0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+ [A-Z]+ [A-Z0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"qtyOrdered\",\"qty\",\"tax\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,1,1,1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:();\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"maharaja-food-importers\":{\r\n    regex:/^[A-Z0-9]+ .+ [0-9.]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"itemNo\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,[0,/ [0-9.]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:();\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"nassau-candy\":{\r\n    regex:/^[0-9]+ [A-Z]+ [0-9]+ [0-9]+ .+ [0-9]+\\.[0-9]+ [A-Z]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"qtyOrdered\",\"unit\",\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"Unit\",\"extendedPrice\"],\r\n    body:[1,1,1,1,[0,/ [0-9]+\\.[0-9]+ [A-Z]+ [0-9]+\\.[0-9]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:();\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"nupur-trading\":{\r\n    regex:/^[0-9]+ [A-Z0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+ [A-Z0-9()]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"sno\",\"itemNo\",\"description\",\"unitPrice\",\"qty\",\"extra\",\"extendedPrice\"],\r\n    body:[1,1,[0,/ [0-9]+\\.[0-9]+ [0-9]+ [A-Z0-9()]+ [0-9]+\\.[0-9]+$/],1,1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"optima-foods\":{\r\n    regex:/^[A-Z0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+ [A-Z]+ [0-9/.]+ [A-Za-z]+ .+ [A-Z]+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"itemNo\",\"qtyOrdered\",\"qty\",\"uom\",\"packSize\",\"description\",\"brand\",\"unit\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,1,1,1,2,[0,/ [A-Z]+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:();/\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"gaint-farm\":{\r\n    regex:/^.+ [0-9]+ [0-9]+$/,\r\n    header:[\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[[0,/ [0-9]+ [0-9]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\/\\*\\+\\-]/gi\r\n  },//use empty column\r\n  \"farmers-choice-dairy\":{\r\n    regex:/^.+ [0-9]+ [0-9\\.]+$/,\r\n    header:[\"description\",\"pack\",\"extendedPrice\"],\r\n    body:[[0,/ [0-9]+ [0-9\\.]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\/\\*\\+\\-]/gi\r\n  },\r\n  \"duty-free-produce\":{\r\n    regex:/^[0-9]+ .+ [0-9]+ [0-9]+$/,\r\n    header:[\"sno\",\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,1,[0,/ [0-9]+ [0-9]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\/\\*\\+\\-]/gi\r\n  },\r\n  \"crestwood-farms\":{\r\n    regex:/^.+ [0-9]+ [0-9]+ [0-9\\.]+$/,\r\n    header:[\"description\",\"case\",\"qty\",\"extendedPrice\"],\r\n    body:[[0,/ [0-9]+ [0-9]+ [0-9\\.]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\/\\*\\+\\-]/gi\r\n  },\r\n  \"cream-o-land\":{\r\n    regex:/^[0-9]+ .+ [0-9]+\\/ [0-9]+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\r\n    header:[\"itemNo\",\"description\",\"case\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,[0,/ [0-9]+\\/ [0-9]+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],2,1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*\\+\\-]/gi\r\n  },\r\n  \"big-apple-distributors\":{\r\n    regex:/^.+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\r\n    header:[\"itemNo\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[2,[0,/ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*\\+\\-]/gi\r\n  },\r\n  \"advance-foods\":{\r\n    regex:/^[0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\r\n  },\r\n  \"chetak\":{\r\n    regex:/^[0-9]+ [A-Z]+ [A-Z0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,2,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\r\n  },//use empty column\r\n  \"singh-and-singh\":{\r\n    regex:/^[0-9]+ [A-Z]+ [A-Z0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,[0,/[A-Z]+( )?-( )? .+/],[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\r\n  },\r\n  \"sea-mark\":{\r\n    regex:/^[0-9]+ [0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"qty\",\"itemNo\",\"description\",\"extra\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\r\n  },\r\n  \"best-foods\":{\r\n    regex:/^[0-9]+ .+ [A-Z]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"itemNo\",\"description\",\"unit\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,[0,/ [A-Z]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\r\n  },//use empty column\r\n  \"joy-gourment-foods\":{\r\n    regex:/^.+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\r\n  },//use empty column\r\n  \"katzam-foods\":{\r\n    regex:/^[0-9]{2}\\/[0-9]{2}\\/[0-9]{2} [0-9]+ [0-9]+ .+ [A-Z]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"date\",\"ticket\",\"qty\",\"description\",\"origin\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,1,1,[0,/ [A-Z]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\r\n  },\r\n  \"baroody\":{\r\n    regex:/^.+ [0-9]+(\\.|\\,)[0-9]+ [0-9]+(\\.|\\,)[0-9]+$/,\r\n    header:[\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[[0,/ [0-9]+(\\.|\\,)[0-9]+ [0-9]+(\\.|\\,)[0-9]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?\\*]/gi\r\n  },//replace , by . and use empty column\r\n  \"east-end\":{\r\n    regex:/^[A-Z0-9]+ .+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"itemNo\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\r\n  },\r\n  \"indian-spice-trading\":{\r\n    regex:/^.+ [0-9]+\\.[0-9]+ (.+ |.*)[0-9]+\\.[0-9]+$/,\r\n    header:[\"description\",\"unitPrice\",\"detail\",\"extendedPrice\"],\r\n    body:[[0,/ [0-9]+\\.[0-9]+ (.+ |.*)[0-9]+\\.[0-9]+$/],1,[0,/ [0-9]+\\.[0-9]+$/],1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\r\n  },//use empty column\r\n  \"grocer-mill\":{\r\n    regex:/^.+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\r\n  },//use empty column\r\n  \"meenaxi-enterprise\":{\r\n    regex:/^.+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\r\n  },//use empty column\r\n  \"rajbhog-food\":{\r\n    regex:/^[0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+ [A-Z0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"qtyOrdered\",\"qty\",\"itemNo\",\"description\",\"detail\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,1,1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\r\n  },\r\n  \"moda-food\":{\r\n    regex:/^.+ [0-9]+ [0-9]+\\.[0-9]+ [0-9].+$/,\r\n    header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9].+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:();'<>?,\\*]/gi\r\n  },\r\n  \"us-gourmet-food\":{\r\n    regex:/^.+ [A-Z]+: [0-9]+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"description\",\"itemNo\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[[0,/ [A-Z]+: [0-9]+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=;'<>?,\\*]/gi\r\n  },\r\n  \"delight-food\":{\r\n    regex:/^.+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\r\n  },//use empty column\r\n  \"jalaram-produce\":{\r\n    regex:/^.+ [0-9]+ [a-zA-Z]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"description\",\"qty\",\"detail\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[[0,/ [0-9]+ [a-zA-Z]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\r\n  },\r\n  \"vijay-food\":{\r\n    regex:/^[0-9]+ .+ [A-Z0-9]+ [0-9]+\\.[0-9]+ [0-9]+$/,\r\n    header:[\"qty\",\"description\",\"itemNo\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,[0,/ [A-Z0-9]+ [0-9]+\\.[0-9]+ [0-9]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\r\n  },\r\n  \"radhey-food\":{\r\n    regex:/^[0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\r\n  },\r\n  \"vintage-food\":{\r\n    regex:/^[0-9]+ [a-z]+ [0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"qty\",\"unit\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,1,1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\r\n  },\r\n  \"delight-distribution\":{\r\n    regex:/^.+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\r\n  },\r\n  \"dsa-snacks\":{\r\n    regex:/^.+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\r\n  },\r\n  \"dawn-food\":{\r\n    regex:/^[0-9]+ [0-9]+ .+ [A-Z]+ [A-Z]+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"qtyOrdered\",\"qty\",\"description\",\"tax\",\"detail\",\"material\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,1,[0,/ [A-Z]+ [A-Z]+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\r\n  },\r\n  // \"aliments\":{\r\n  //   regex:/^.+ [0-9]+ [0-9]+\\.[0-9]+ [a-z]+ [0-9]+\\.[0-9]+$/,\r\n  //   header:[\"description\",\"qty\",\"unitPrice\",\"extra\",\"extendedPrice\"],\r\n  //   body:[[0,/ [0-9]+ [0-9]+\\.[0-9]+ [a-z]+ [0-9]+\\.[0-9]+$/],1,1,1,1],\r\n  //   notAllowed:/[`~!@#\\$%^&=:;/'<>?,\\*]/gi\r\n  // },\r\n  \"aliments\":{\r\n    regex:/^[A-Z0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"itemNo\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;/'<>?,\\*]/gi\r\n  },// use emptyColumn true\r\n  \"bartlett-dairy\":{\r\n    regex:/^[0-9]+ .+ [0-9]+ [0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"itemNo\",\"description\",\"case\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,[0,/ [0-9]+ [0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;/'<>?,\\*]/gi\r\n  },\r\n  // \"amtrade\":{\r\n  //   regex:/^[0-9]+ [A-Z]+ [A-Z0-9]+ [A-Z ]+ .+ [A-Z0-9a-z]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n  //   header:[\"qty\",\"ctn\",\"extra\",\"type\",\"description\",\"size\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[1,1,1,2,[0,/ [A-Z0-9a-z]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\r\n  //   notAllowed:/[`~!@#\\$%^&=:;/'<>?,\\*]/gi\r\n  // },\r\n  \"amtrade\":{\r\n    regex:/^[0-9]+ [A-Z0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\r\n  },\r\n  \"dara-food\":{\r\n    regex:/^[0-9]+ .+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"itemNo\",\"description\",\"qty\",\"each\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\r\n  },\r\n  \"baraka-cold\":{\r\n    regex:/^.+ [0-9].+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[[0,/ [0-9].+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\r\n  },\r\n  \"restwood-farms\":{\r\n    regex:/^.+ [0-9]+ [0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"description\",\"case\",\"qty\",\"extendedPrice\"],\r\n    body:[[0,/ [0-9]+ [0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:/;'<>?,\\*]/gi\r\n  },\r\n  \"babco-foods\":{\r\n    regex:/^[0-9]+\\.[0-9]+ [A-Z0-9(\\.)?]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;'<>?,\\*]/gi\r\n  },\r\n  \"adelman-foods\":{\r\n    regex:/^[0-9]+ .+ [0-9A-Za-z]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"qty\",\"description\",\"packing\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,[0,/ [0-9A-Za-z]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;/'<>?,\\*]/gi\r\n  },\r\n  \"anns-eco-store\":{\r\n    regex:/^[A-Z]+ [A-Z0-9]+ .+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"itemNo\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[2,[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"anmol-distributors\":{\r\n    regex:/^[0-9.]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"bakemark\":{\r\n    regex:/^[A-Z0-9]+ [0-9]+\\.[0-9]+ [A-Z]+ [A-Z]+ .+ [0-9]+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"slot\",\"qty\",\"unit\",\"brand\",\"description\",\"size\",\"itemNo\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,1,1,1,[0,/ [0-9]+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:/;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"vidyas\":{\r\n    regex:/^[0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"unique-importer\":{\r\n    regex:/^[0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"two-brother-wholesale\":{\r\n    regex:/^[0-9.]+ [0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"symco-distributor\":{\r\n    regex:/^[0-9]+ [A-Z.]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"spicy-world\":{\r\n    regex:/^[0-9]+\\.[0-9]+ [A-Z0-9]+ .+ [A-Z]+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"qty\",\"itemNo\",\"description\",\"unit\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,1,[0,/ [A-Z]+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],2,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"solid-trade\":{\r\n    regex:/^[A-Z0-9-]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\r\n     notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },//use empty column\r\n  \"slaughter-house\":{\r\n    regex:/^[0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+\\.[0-9]+$/,\r\n    header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+\\.[0-9]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"shreeji-jay\":{\r\n    regex:/^.+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"shine-foods\":{\r\n    regex:/^.+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"sankaj\":{\r\n    regex:/^[0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"ron-foods\":{\r\n    regex:/^.+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"priya-foods\":{\r\n    regex:/^[A-Z]+ [A-Z]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[2,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },//use empty column\r\n  \"ranemusic\":{\r\n    regex:/^[0-9]+ [A-Z]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"raja-foods\":{\r\n    regex:/^[0-9]+ .+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"mpn\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n  \"produce-n-more\":{\r\n    regex:/^[0-9]+ [0-9]+ .+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,1,[0,/ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  },\r\n\r\n  //\r\n  // \"pure-ghee\":{\r\n  //   regex:/^[0-9-]+ .+ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/,\r\n  //   header:[\"itemNo\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[1,[0,/ [0-9]+ [0-9]+\\.[0-9]+ [0-9]+\\.[0-9]+$/],1,1,1],\r\n  //   notAllowed:/[`~!@#\\$%^&=:;\"\"'<>*?,\\*]/gi\r\n  // },\r\n  // \"arya-international\":{\r\n  //   regex:/^[A-Z-0-9]+ .+$/,\r\n  //   header:[\"qty\",\"description\"],\r\n  //   body:[1,[0,/$/]],\r\n  //   notAllowed:/[`~!@#\\$%^&=:();\"\"'<>*?,\\*]/gi\r\n  // },\r\n  // \"katzman-produce\":{\r\n  //   regex:/^[0-9\\.]+ .+ [A-Z]+$/,\r\n  //   header:[\"qty\",\"description\",\"origin\"],\r\n  //   body:[1,[0,/ [A-Z]+$/],1],\r\n  //   notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*]/gi\r\n  // },\r\n  \"soko-packaging\":{\r\n    regex:/^[0-9]+ [0-9A-Z]+ .+ [0-9\\.]+ [0-9\\.]+$/,\r\n    header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n    body:[1,1,[0,/[0-9\\.]+ [0-9\\.]+$/],1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*]/gi\r\n  },\r\n  // \"dava-west-indian\":{\r\n  //   regex:/^[A-Za-z A-Za-z A-Za-z]+ .+ [0-9]+ [0-9\\.]+ [0-9 x 0-9 a-zA-Z]+ [0-9\\.]+$/,\r\n  //   header:[\"itemNo\",\"description\",\"qty\",\"unitPrice\",\"size\",\"extendedPrice\"],\r\n  //   body:[3,[0,/ [0-9]+ [A-Z A-Z 0-9\\.]+ [0-9 x 0-9 a-zA-Z]+ [0-9\\.]+$/],1,1,4,1],\r\n  //   notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*]/gi\r\n  // },\r\n  // \"uyt-imports-nyc\":{\r\n  //   regex:/^[0-9]+ [A-Z-0-9]+ .+ [0-9]+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"sno\",\"sku\",\"particular\",\"pack\",\"pcs\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[1,1,[0,/[0-9]+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1,1],\r\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\r\n  // },\r\n  // \"hja-sales-corp\":{\r\n  //   regex:/^[0-9]+ [0-9]+ [0-9 0-9A-Z\\.]+ .+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"itemNo\",\"qty\",\"pack\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[1,1,2,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\r\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\r\n  // },\r\n  // \"raja-food-vegetables\":{\r\n  //   regex:/^[0-9]+ .+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"mpn\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[1,[0,/ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\r\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\r\n  // },\r\n  // \"himalaya-international\":{\r\n  //   regex:/^[A-Za-z A-Za-z 0-9]+ .+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"itemNo\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[3,[0,/ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\r\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\r\n  // },\r\n  // \"hellenic-treasures\":{\r\n  //   regex:/^[0-9/0-9/0-9]+ .+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"date\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[1,[0,/ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\r\n  //   notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*]/gi\r\n  // },\r\n  // \"k&s-wholesale\":{\r\n  //   regex:/^[0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\r\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\r\n  // },\r\n  // \"los-olivos-ltd\":{\r\n  //   regex:/^[0-9-A-Z0-9]+ .+ [0-9]+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"item\",\"description\",\"qty\",\"unit\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[1,[0,/ [0-9]+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1,1],\r\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\r\n  // },\r\n  // \"sirob-imports-inc\":{\r\n  //   regex:/^[0-9\\.]+ [0-9\\.]+ [0-9\\.]+ [A-Z-A-Z-0-9]+ .+ [0-9\\.]+ [A-Z]+ [0-9\\.]+$/,\r\n  //   header:[\"qtyOrdered\",\"qty\",\"bio\",\"itemNo\",\"description\",\"unitPrice\",\"unit\",\"extendedPrice\"],\r\n  //   body:[1,1,1,1,[0,/ [0-9\\.]+ [A-Z]+ [0-9\\.]+$/],1,1,1],\r\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\r\n  // },\r\n  \"az-metro-distribution\":{\r\n    regex:/^[0-9]+ [0-9]+ .+ [0-9]+ [0-9\\.]+ [0-9\\.]+ [0-9\\.]+ [0-9\\.]+ [0-9\\.]+$/,\r\n    header:[\"cases\",\"code\",\"description\",\"upc\",\"unitPrice\",\"discount\",\"deposit\",\"tax\",\"extendedPrice\"],\r\n    body:[1,1,[0,/ [0-9]+ [0-9\\.]+ [0-9\\.]+ [0-9\\.]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1,1,1,1],\r\n    notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\r\n  },\r\n  // \"trading-corp\":{\r\n  //   regex:/^[A-Z0-9-A-Z0-9a-z]+ .+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"item\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[1,[0,/ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\r\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\r\n  // },\r\n  // \"nassau\":{\r\n  //   regex:/^[0-9]+ [A-Z]+ [0-9]+ [0-9]+ .+ [0-9\\.]+ [A-Z]+ [0-9\\.]+$/,\r\n  //   header:[\"qtyOrdered\",\"unit\",\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"priceUnit\",\"extendedPrice\"],\r\n  //   body:[1,1,1,1,[0,/ [0-9\\.]+ [A-Z]+ [0-9\\.]+$/],1,1,1],\r\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\r\n  // },\r\n  // \"lucky-Traders\":{\r\n  //   regex:/^[0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"qtY\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\r\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\r\n  // },\r\n  // \"tropicana\":{\r\n  //   regex:/^.+ [0-9]+ [0-9. /a-z]+$/,\r\n  //   header:[\"description\",\"qty\",\"unitPrice\"],\r\n  //   body:[[0,/[0-9]+ [0-9. /a-z]+$/],1,1],\r\n  //   notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*]/gi\r\n  // },\r\n  // \"karison-food-Snacks\":{\r\n  //   regex:/^.+ [0-9\\.]+ [0-9\\.]+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"name\",\"unitPrice\",\"oz\",\"case\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[[0,/[0-9\\.]+ [0-9\\.]+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1,1,1],\r\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\r\n  // },\r\n  // \"m-sy-marketing\":{\r\n  //   regex:/^[A-Z A-Z 0-9a-z]+ .+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"activity\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[3,[0,/ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\r\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\r\n  // },\r\n  // \"concept-food-US\":{\r\n  //   regex:/^.+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[[0,/[0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\r\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\r\n  // },\r\n  // \"good-luck-int\":{\r\n  //   regex:/^[0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"cases\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\r\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\r\n  // },\r\n  // \"preferred-beverage-dist\":{\r\n  //   regex:/^[0-9]+ [0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[1,1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\r\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\r\n  // },\r\n  // \"grace-lafe\":{\r\n  //   regex:/^[0-9]+ [0-9]+ .+ [0-9\\.]+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"upc\",\"itemNo\",\"description\",\"unitPrice\",\"discount\",\"extendedPrice\"],\r\n  //   body:[1,1,[0,/ [0-9\\.]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\r\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\r\n  // },\r\n  // \"tuscan\":{\r\n  //   regex:/^[0-9 A-Z A-Z A-Z A-Z-0-9]+ .+ [0-9]+ [0-9\\. A-Za-z]+ [0-9\\.]+$/,\r\n  //   header:[\"itemNo\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[7,[0,/ [0-9]+ [0-9\\. A-Za-z]+ [0-9\\.]+$/],1,2,1],\r\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\r\n  // },// not complete\r\n  // \"meenaxi-Enterprise\":{\r\n  //   regex:/^[0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\r\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\r\n  // },\r\n  // \"sa-distribution\":{\r\n  //   regex:/^[0-9]+ [A-Z A-Z A-Z A-Z 0-9 A-Z]+ .+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[1,6,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\r\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\r\n  // },\r\n  // \"triboro-wholesale\":{\r\n  //   regex:/^.+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[[0,/[0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\r\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\r\n  // },\r\n  // \"kadakia-international-group\":{\r\n  //   regex:/^.+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[[0,/[0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\r\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\r\n  // },\r\n  // \"samar-trading-corp\":{\r\n  //   regex:/^[0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\r\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\r\n  // },\r\n  // \"apna-bazar\":{\r\n  //   regex:/^[A-Z-A-Z]+ .+ [0-9]+ [0-9\\.]+ [0-9\\.T]+$/,\r\n  //   header:[\"itemNo\",\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[1,[0,/ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\r\n  //   notAllowed:/[`~!@#\\$%^&=:;()'<>?,\\*]/gi\r\n  // },//not complete\r\n  // \"aroma-flavor\":{\r\n  //   regex:/^.+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[[0,/[0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\r\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\r\n  // },\r\n  // \"northeast-banana\":{\r\n  //   regex:/^[0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\r\n  //   notAllowed:/[`~!@#\\$%^&=:;()'/<>?,\\*]/gi\r\n  // },\r\n  // \"karison-food-snacks2\":{\r\n  //   regex:/^[0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\r\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\r\n  // },\r\n  // \"lezza-food\":{\r\n  //   regex:/^.+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[[0,/[0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\r\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\r\n  // },\r\n  // \"hamd-distribution\":{\r\n  //   regex:/^.+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[[0,/[0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\r\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\r\n  // },\r\n  // \"baawarchi\":{\r\n  //   regex:/^.+ [A-Z0-9]+ [0-9\\.]+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"description\",\"itemNo\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[[0,/[A-Z0-9]+ [0-9\\.]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1,1],\r\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\r\n  // },\r\n  // \"mfried-store-fixture-inc\":{\r\n  //   regex:/^[0-9]+ [A-Z0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[1,1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\r\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\r\n  // },\r\n  // \"gurme\":{\r\n  //   regex:/^[0-9]+ [A-Z0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[1,1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\r\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\r\n  // },\r\n  // \"crown-of-east\":{\r\n  //   regex:/^.+ [A-Z]+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"description\",\"um\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[[0,/[A-Z]+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1,1],\r\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\r\n  // },\r\n  // \"jcw-importandexport\":{\r\n  //   regex:/^[0-9]+ [0-9A-Z-]+ .+ [0-9\\.]+ [0-9\\.T]+$/,\r\n  //   header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[1,1,[0,/ [0-9\\.]+ [0-9\\.T]+$/],1,1],\r\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\r\n  // },\r\n  // \"guru-nanak\":{\r\n  //   regex:/^[0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\r\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\r\n  // },\r\n  // \"valente-yeast-inc\":{\r\n  //   regex:/^[0-9]+ [0-9]+ [0-9]+ [A-Z]+ [A-Z]+ .+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"mfgId\",\"qtyOrdered\",\"qty\",\"um\",\"brand\",\"Description\",\"itemNo\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[1,1,1,1,1,[0,/ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\r\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\r\n  // },\r\n  // \"online-mr-inc\":{\r\n  //   regex:/^[0-9]+ [0-9A-Z A-Z]+ .+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[1,2,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\r\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\r\n  // },\r\n  // \"business-international\":{\r\n  //   regex:/^[0-9]+ [0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"qty\",\"itemNo\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[1,1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\r\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\r\n  // },\r\n  // \"bhavani-fruit-vegetables\":{\r\n  //   regex:/^[0-9]+ .+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"qty\",\"description\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[1,[0,/ [0-9\\.]+ [0-9\\.]+$/],1,1],\r\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\r\n  // },\r\n  // \"best-cakes-distribution\":{\r\n  //   regex:/^.+ [0-9]+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[[0,/ [0-9]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1],\r\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\r\n  // },\r\n  // \"musco-food-corporation\":{\r\n  //   regex:/^[0-9]+ [A-Z A-Z]+ .+ [0-9/A-Z]+ [0-9\\.]+ [0-9\\.]+ [A-Z]+ [0-9\\.]+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"id\",\"brand\",\"description\",\"pack\",\"qtyOrdered\",\"qty\",\"um\",\"unitPrice\",\"casePrice\",\"extendedPrice\"],\r\n  //   body:[1,2,[0,/ [0-9/A-Z]+ [0-9\\.]+ [0-9\\.]+ [A-Z]+ [0-9\\.]+ [0-9\\.]+ [0-9\\.]+$/],1,1,1,1,1,1,1],\r\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\r\n  // },\r\n  // \"nirav-india-groceries\":{\r\n  //   regex:/^.+ [0-9\\. A-Z]+ [0-9\\.]+ [0-9\\.]+$/,\r\n  //   header:[\"description\",\"qty\",\"unitPrice\",\"extendedPrice\"],\r\n  //   body:[[0,/[0-9\\. A-Z]+ [0-9\\.]+ [0-9\\.]+$/],2,1,1],\r\n  //   notAllowed:/[`~!@#\\%$^&=:;()'<>?,\\*]/gi\r\n  // },\r\n}","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\utils\\filter.js",["767","768"],"export const applyFilter=(arr,options)=>{\r\n  console.log(\"IN APPLY FILTER data\");\r\n  console.log(\"af_arr : \",arr);\r\n  console.log(\"af_options : \",options);\r\n  let result=[];\r\n  for(let i=0;i<arr.length;i++){\r\n    let data=arr[i];\r\n    console.log(\"DATA\");\r\n    console.log(\"af_data\",data);\r\n\r\n    for(var prop in data){\r\n      console.log(\"PROP\");\r\n      console.log(\"af_index : \",prop);\r\n      console.log(\"af_object : \",Object.prototype.hasOwnProperty.call(data,prop));\r\n\r\n      if (Object.prototype.hasOwnProperty.call(data,prop)){\r\n        let str=convertRowToString(data[prop]);\r\n        console.log(\"STR\");\r\n        console.log(\"af_str : \",str);\r\n        str=str.replace(options.notAllowed, '');\r\n        str=str.replace(/ +(?= )/g,'');\r\n        str=str.trimStart();\r\n        str=str.trimEnd();\r\n        console.log(\"af_final str : \",str);\r\n        console.log(\"af_check_by_regex\",(options.regex).test(str));\r\n\r\n        if((options.regex).test(str)){\r\n          let obj={};\r\n\r\n          for(let j=0;j<options.header.length;j++){\r\n            console.log(\"af_index_options.header.length : \",j);\r\n            let x=\"\";\r\n\r\n            if(Array.isArray(options.body[j])){\r\n              let index=str.search(options.body[j][1]);\r\n              console.log(\"af_index_options.body[j][1]  : \",index);\r\n              x=str.substr(0,index);       // ***\r\n              str=str.substr(x.length);    // ***\r\n              console.log(\"af_x : \",x,\" af_str : \",str);\r\n            }else{\r\n              let y=str.split(\" \");\r\n              console.log(\"af_y : \",y);\r\n              str=\"\";\r\n              for(let k=0;k<options.body[j];k++)x+=y[k]+\" \";\r\n              console.log(\"af_x_array : \",x);\r\n              for(let k=options.body[j];k<y.length;k++)str+=y[k]+\" \";\r\n              console.log(\"af_str_array : \",str);\r\n            }\r\n            x=x.trimStart();\r\n            x=x.trimEnd();\r\n            str=str.trimStart();\r\n            str=str.trimEnd();\r\n            console.log(x);\r\n            console.log(str);\r\n            obj[options.header[j]]=x.toUpperCase();\r\n            console.log(\"af_x.toUpperCase()\",x.toUpperCase());\r\n            console.log(\"obj[options.header[j]] : \",obj[options.header[j]]);\r\n          }\r\n          console.log(obj);\r\n          result.push(obj);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  console.log(\"IN APPLY FILTER\");\r\n  console.log(\"af_result\",result);\r\n  console.log(result);\r\n  return result;\r\n}\r\nconst convertRowToString=(obj)=>{\r\n  let str=\"\";\r\n  for (var prop in obj) {\r\n    if (Object.prototype.hasOwnProperty.call(obj,prop)){\r\n      str+=obj[prop]+\" \";\r\n    }\r\n  }\r\n  //remove multiple instances of multiple space with single space\r\n  str=str.replace(/ +(?= )/g,'');\r\n  str=str.trimStart();\r\n  str=str.trimEnd();\r\n  return str;\r\n}\r\nexport const emptyColumn=(arr)=>{\r\n  console.log(\"IN EMPTY CLOUMN\");\r\n  console.log(\"ec_arr\",arr);\r\n  let data=[];\r\n  for(let i=0;i<arr.length;i++){\r\n    let obj={};\r\n    let table=arr[i];\r\n    console.log(\"TABLE\");\r\n    console.log(\"ec_table : \",table);\r\n    for(var prop in table){\r\n      console.log(\"PROP\");\r\n      console.log(prop);\r\n      if (Object.prototype.hasOwnProperty.call(table,prop)){\r\n        let str=table[prop][1];\r\n        console.log(\"ec_str : \",str);\r\n        console.log(str);\r\n        str=str.replace(/[`~!@#\\$%^&=:;'<>?,\\*]/gi, '');\r\n        str=str.replace(/ +(?= )/g,'');\r\n        str=str.trimStart();\r\n        str=str.trimEnd();\r\n        let b=str.split(\" \");\r\n        console.log(\"B\");\r\n        console.log(\"ec_b : \",b);\r\n        str=\"\";\r\n        for(let j=1;j<b.length;j++)str+=b[j];\r\n        \r\n        let o=Object.assign({},table[prop]);\r\n        console.log(\"O\");\r\n        console.log(\"ec_o : \",o);\r\n        o[1]=str;\r\n        console.log(\"STR\");\r\n        console.log(\"ec_str2 : \",str);\r\n        obj[prop]=o;\r\n        console.log(\"OBJ\");\r\n        console.log(\"ec_OBJ : \",obj);\r\n      }\r\n    }\r\n    console.log(\"EMPTY COLUMN\" + obj);\r\n    console.log(\"EMPTY COLUMN\" + data);\r\n    data.push(obj);\r\n  }\r\n  return data;\r\n}","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\utils\\invoice-filters\\krishna-foods.js",["769","770"],"/**krishna foods\r\n * 1: {1: \"Quantity \", 2: \"Item Code \", 3: \"Description \", 4: \"U/M \", 5: \"Price Each \", 6: \"Amount \"}\r\n2: {1: \"10 \", 2: \"Gur Rewari \", 3: \"Gur Rewari 400 gms 20 / ctn \", 4: \"\", 5: \"52.00 \", 6: \"520.00 \"}\r\n3: {1: \"3 \", 2: \"Sugar Rewari \", 3: \"Sugar rewari 400 gms 20 / ctn \", 4: \"\", 5: \"52.00 \", 6: \"156.00 \"}\r\n4: {1: \"6 \", 2: \"Gur Gajj \", 3: \"Dry Fruit Gur Gajjak 400 gms 20 / ctn \", 4: \"\", 5: \"70.00 \", 6: \"420.00 \"}\r\n5: {1: \"4 \", 2: \"Gurr Khasta Gajjak \", 3: \"Gur Khasta Gajjak 400 gms / 20 ctn \", 4: \"\", 5: \"70.00 \", 6: \"280.00 \"}\r\n6: {1: \"1 \", 2: \"seasme ladoo \", 3: \"Seasme ladoo Bikaji, 240 gm / 20 ctn \", 4: \"\", 5: \"50.00 \", 6: \"50.00 \"}\r\n7: {1: \"\", 2: \"Peanut Ladoo \", 3: \"Peanut Ladoo Bikaji 240 gms / 20 ctn \", 4: \"\", 5: \"50.00 \", 6: \"50.00 \"}\r\n8: {1: \"X \", 2: \"Rajgeron ladoo \", 3: \"Rajgeron Ladoo Bikaji 150 gm 20 / ctn \", 4: \"\", 5: \"50.00 \", 6: \"50.00 \"}\r\n9: {1: \"\", 2: \"Pea ChiKi \", 3: \"Peanut Chikki 400 gms / 20 ctn \", 4: \"\", 5: \"55.00 \", 6: \"110.00 \"}\r\n10: {1: \"\", 2: \"Se Chikki \", 3: \"Saesme Chikki 400 Gms / 20 Ctn \", 4: \"\", 5: \"65.00 \", 6: \"65.00 \"}\r\n11: {1: \"\", 2: \"Ass Chiki \", 3: \"Assorted Chikki 400 gms 20 / ctn \", 4: \"\", 5: \"65.00 \", 6: \"130.00 \"}\r\n12: {1: \"3 \", 2: \"Gobhi Parantha 4 \", 3: \"Gobhi Parantha (4 Pcs X 12 Pks ) Bikaji \", 4: \"\", 5: \"21.00 \", 6: \"63.00 \"}\r\n13: {1: \"\", 2: \"Methi Parantha 6 \", 3: \"Methi Parantha (6 Pcs X 12 Pks ) Bikaji \", 4: \"\", 5: \"19.80 \", 6: \"59.40 \"}\r\n14: {1: \"\", 2: \"Home Style Paran \", 3: \"Home Style Parantha ( 6 Pcs X 12 Pks ) Bikaji \", 4: \"\", 5: \"19.20 \", 6: \"57.60 \"}\r\n__proto__: Object\r\n1: {1: {…}, 2: {…}}\r\n2: {1: {…}, 2: {…}}\r\n3: {1: {…}, 2: {…}}\r\nlength: 4\r\n__proto__: Array(0)\r\nstatusCode: 200\r\n__proto__: Object\r\n\r\n */\r\nexport const krishnaFoods = (data) => {\r\n    let filteredData = data.filter((line) => line[6] !== \"\" && !isNaN(line[6]));\r\n        // .filter((line) => line./* text. */ includes(\"(\"))\r\n        // .map((line) => line./* text. */ trim());\r\n\r\n    let tableData = filteredData.map((row, index) => {\r\n        let qty = row[1].trim()\r\n        const itemNo = row[2].trim()\r\n        const description = row[3].trim()\r\n        const unitPrice = row[5].trim()\r\n        const extendedPrice = row[6].trim()\r\n        const pieces = 0;\r\n        const markup = 0;\r\n        if(isNaN(extendedPrice) || isNaN(unitPrice)){\r\n          return null\r\n        }\r\n        if (extendedPrice == \"0.00\" && qty == \"0\") {\r\n            return null;\r\n        }\r\n        if(isNaN(qty) || !qty) {\r\n          // itemNo = [qty, itemNo].join(\" \")\r\n          qty = (parseFloat(extendedPrice)/ parseFloat(unitPrice)).toFixed(0)\r\n           \r\n        }\r\n        return {\r\n          qty,\r\n          itemNo,\r\n          description,\r\n          pieces,\r\n          unitPrice,\r\n          extendedPrice,\r\n          markup,\r\n        };\r\n    });\r\n    console.table(filteredData)\r\n    return tableData.filter((data) => data !== null);\r\n    \r\n};","C:\\Users\\Lenovo\\vs_projects\\project\\inventory-management\\client\\src\\components\\Navigation\\NavigationItems\\NavigationItem\\NavigationItem.js",[],{"ruleId":"771","replacedBy":"772"},{"ruleId":"773","replacedBy":"774"},{"ruleId":"775","severity":1,"message":"776","line":12,"column":7,"nodeType":"777","messageId":"778","endLine":12,"endColumn":10},{"ruleId":"775","severity":1,"message":"779","line":1,"column":8,"nodeType":"777","messageId":"778","endLine":1,"endColumn":13},{"ruleId":"775","severity":1,"message":"780","line":46,"column":15,"nodeType":"777","messageId":"778","endLine":46,"endColumn":23},{"ruleId":"775","severity":1,"message":"781","line":33,"column":10,"nodeType":"777","messageId":"778","endLine":33,"endColumn":17},{"ruleId":"775","severity":1,"message":"782","line":34,"column":10,"nodeType":"777","messageId":"778","endLine":34,"endColumn":16},{"ruleId":"783","severity":1,"message":"784","line":84,"column":6,"nodeType":"785","endLine":84,"endColumn":8,"suggestions":"786"},{"ruleId":"775","severity":1,"message":"787","line":17,"column":3,"nodeType":"777","messageId":"778","endLine":17,"endColumn":12},{"ruleId":"775","severity":1,"message":"788","line":18,"column":3,"nodeType":"777","messageId":"778","endLine":18,"endColumn":18},{"ruleId":"775","severity":1,"message":"789","line":19,"column":3,"nodeType":"777","messageId":"778","endLine":19,"endColumn":16},{"ruleId":"775","severity":1,"message":"790","line":20,"column":3,"nodeType":"777","messageId":"778","endLine":20,"endColumn":16},{"ruleId":"775","severity":1,"message":"791","line":26,"column":10,"nodeType":"777","messageId":"778","endLine":26,"endColumn":14},{"ruleId":"775","severity":1,"message":"792","line":32,"column":10,"nodeType":"777","messageId":"778","endLine":32,"endColumn":23},{"ruleId":"775","severity":1,"message":"793","line":32,"column":25,"nodeType":"777","messageId":"778","endLine":32,"endColumn":41},{"ruleId":"775","severity":1,"message":"781","line":34,"column":10,"nodeType":"777","messageId":"778","endLine":34,"endColumn":17},{"ruleId":"775","severity":1,"message":"782","line":35,"column":10,"nodeType":"777","messageId":"778","endLine":35,"endColumn":16},{"ruleId":"794","severity":1,"message":"795","line":115,"column":23,"nodeType":"796","messageId":"797","endLine":115,"endColumn":25},{"ruleId":"775","severity":1,"message":"798","line":1,"column":10,"nodeType":"777","messageId":"778","endLine":1,"endColumn":14},{"ruleId":"775","severity":1,"message":"799","line":1,"column":22,"nodeType":"777","messageId":"778","endLine":1,"endColumn":32},{"ruleId":"775","severity":1,"message":"800","line":75,"column":9,"nodeType":"777","messageId":"778","endLine":75,"endColumn":25},{"ruleId":"775","severity":1,"message":"801","line":100,"column":11,"nodeType":"777","messageId":"778","endLine":100,"endColumn":18},{"ruleId":"783","severity":1,"message":"802","line":218,"column":6,"nodeType":"785","endLine":218,"endColumn":8,"suggestions":"803"},{"ruleId":"775","severity":1,"message":"804","line":5,"column":10,"nodeType":"777","messageId":"778","endLine":5,"endColumn":13},{"ruleId":"775","severity":1,"message":"787","line":21,"column":3,"nodeType":"777","messageId":"778","endLine":21,"endColumn":12},{"ruleId":"775","severity":1,"message":"788","line":22,"column":3,"nodeType":"777","messageId":"778","endLine":22,"endColumn":18},{"ruleId":"775","severity":1,"message":"789","line":23,"column":3,"nodeType":"777","messageId":"778","endLine":23,"endColumn":16},{"ruleId":"775","severity":1,"message":"790","line":24,"column":3,"nodeType":"777","messageId":"778","endLine":24,"endColumn":16},{"ruleId":"775","severity":1,"message":"805","line":68,"column":12,"nodeType":"777","messageId":"778","endLine":68,"endColumn":26},{"ruleId":"775","severity":1,"message":"806","line":80,"column":24,"nodeType":"777","messageId":"778","endLine":80,"endColumn":37},{"ruleId":"775","severity":1,"message":"807","line":96,"column":12,"nodeType":"777","messageId":"778","endLine":96,"endColumn":24},{"ruleId":"775","severity":1,"message":"808","line":96,"column":26,"nodeType":"777","messageId":"778","endLine":96,"endColumn":41},{"ruleId":"775","severity":1,"message":"809","line":97,"column":12,"nodeType":"777","messageId":"778","endLine":97,"endColumn":19},{"ruleId":"775","severity":1,"message":"810","line":97,"column":21,"nodeType":"777","messageId":"778","endLine":97,"endColumn":31},{"ruleId":"775","severity":1,"message":"811","line":98,"column":12,"nodeType":"777","messageId":"778","endLine":98,"endColumn":24},{"ruleId":"775","severity":1,"message":"812","line":99,"column":12,"nodeType":"777","messageId":"778","endLine":99,"endColumn":20},{"ruleId":"775","severity":1,"message":"813","line":100,"column":12,"nodeType":"777","messageId":"778","endLine":100,"endColumn":20},{"ruleId":"775","severity":1,"message":"814","line":119,"column":11,"nodeType":"777","messageId":"778","endLine":119,"endColumn":20},{"ruleId":"775","severity":1,"message":"815","line":120,"column":11,"nodeType":"777","messageId":"778","endLine":120,"endColumn":17},{"ruleId":"775","severity":1,"message":"816","line":126,"column":9,"nodeType":"777","messageId":"778","endLine":126,"endColumn":15},{"ruleId":"817","severity":1,"message":"818","line":128,"column":20,"nodeType":"785","messageId":"819","endLine":150,"endColumn":4},{"ruleId":"775","severity":1,"message":"820","line":219,"column":41,"nodeType":"777","messageId":"778","endLine":219,"endColumn":49},{"ruleId":"794","severity":1,"message":"795","line":222,"column":20,"nodeType":"796","messageId":"797","endLine":222,"endColumn":22},{"ruleId":"775","severity":1,"message":"821","line":279,"column":9,"nodeType":"777","messageId":"778","endLine":279,"endColumn":21},{"ruleId":"775","severity":1,"message":"822","line":282,"column":11,"nodeType":"777","messageId":"778","endLine":282,"endColumn":20},{"ruleId":"775","severity":1,"message":"822","line":313,"column":11,"nodeType":"777","messageId":"778","endLine":313,"endColumn":20},{"ruleId":"775","severity":1,"message":"823","line":359,"column":17,"nodeType":"777","messageId":"778","endLine":359,"endColumn":21},{"ruleId":"775","severity":1,"message":"824","line":480,"column":11,"nodeType":"777","messageId":"778","endLine":480,"endColumn":20},{"ruleId":"794","severity":1,"message":"825","line":501,"column":23,"nodeType":"796","messageId":"797","endLine":501,"endColumn":25},{"ruleId":"794","severity":1,"message":"795","line":566,"column":16,"nodeType":"796","messageId":"797","endLine":566,"endColumn":18},{"ruleId":"794","severity":1,"message":"795","line":613,"column":28,"nodeType":"796","messageId":"797","endLine":613,"endColumn":30},{"ruleId":"794","severity":1,"message":"795","line":614,"column":28,"nodeType":"796","messageId":"797","endLine":614,"endColumn":30},{"ruleId":"794","severity":1,"message":"795","line":615,"column":24,"nodeType":"796","messageId":"797","endLine":615,"endColumn":26},{"ruleId":"794","severity":1,"message":"795","line":615,"column":51,"nodeType":"796","messageId":"797","endLine":615,"endColumn":53},{"ruleId":"794","severity":1,"message":"795","line":625,"column":24,"nodeType":"796","messageId":"797","endLine":625,"endColumn":26},{"ruleId":"794","severity":1,"message":"795","line":677,"column":25,"nodeType":"796","messageId":"797","endLine":677,"endColumn":27},{"ruleId":"775","severity":1,"message":"826","line":679,"column":15,"nodeType":"777","messageId":"778","endLine":679,"endColumn":25},{"ruleId":"794","severity":1,"message":"795","line":782,"column":45,"nodeType":"796","messageId":"797","endLine":782,"endColumn":47},{"ruleId":"775","severity":1,"message":"827","line":1213,"column":9,"nodeType":"777","messageId":"778","endLine":1213,"endColumn":19},{"ruleId":"794","severity":1,"message":"825","line":1341,"column":27,"nodeType":"796","messageId":"797","endLine":1341,"endColumn":29},{"ruleId":"775","severity":1,"message":"828","line":1354,"column":20,"nodeType":"777","messageId":"778","endLine":1354,"endColumn":31},{"ruleId":"829","severity":1,"message":"830","line":1404,"column":23,"nodeType":"831","messageId":"832","endLine":1404,"endColumn":30},{"ruleId":"829","severity":1,"message":"833","line":1422,"column":30,"nodeType":"831","messageId":"832","endLine":1422,"endColumn":44},{"ruleId":"829","severity":1,"message":"834","line":1436,"column":34,"nodeType":"831","messageId":"832","endLine":1436,"endColumn":52},{"ruleId":"794","severity":1,"message":"795","line":1457,"column":29,"nodeType":"796","messageId":"797","endLine":1457,"endColumn":31},{"ruleId":"794","severity":1,"message":"795","line":1477,"column":25,"nodeType":"796","messageId":"797","endLine":1477,"endColumn":27},{"ruleId":"775","severity":1,"message":"835","line":2,"column":10,"nodeType":"777","messageId":"778","endLine":2,"endColumn":17},{"ruleId":"775","severity":1,"message":"804","line":7,"column":10,"nodeType":"777","messageId":"778","endLine":7,"endColumn":13},{"ruleId":"775","severity":1,"message":"836","line":12,"column":8,"nodeType":"777","messageId":"778","endLine":12,"endColumn":16},{"ruleId":"775","severity":1,"message":"837","line":15,"column":8,"nodeType":"777","messageId":"778","endLine":15,"endColumn":17},{"ruleId":"775","severity":1,"message":"838","line":23,"column":8,"nodeType":"777","messageId":"778","endLine":23,"endColumn":18},{"ruleId":"775","severity":1,"message":"839","line":68,"column":12,"nodeType":"777","messageId":"778","endLine":68,"endColumn":16},{"ruleId":"775","severity":1,"message":"840","line":68,"column":18,"nodeType":"777","messageId":"778","endLine":68,"endColumn":25},{"ruleId":"775","severity":1,"message":"841","line":70,"column":12,"nodeType":"777","messageId":"778","endLine":70,"endColumn":21},{"ruleId":"775","severity":1,"message":"842","line":70,"column":23,"nodeType":"777","messageId":"778","endLine":70,"endColumn":35},{"ruleId":"775","severity":1,"message":"843","line":88,"column":9,"nodeType":"777","messageId":"778","endLine":88,"endColumn":24},{"ruleId":"775","severity":1,"message":"844","line":89,"column":11,"nodeType":"777","messageId":"778","endLine":89,"endColumn":14},{"ruleId":"775","severity":1,"message":"845","line":100,"column":12,"nodeType":"777","messageId":"778","endLine":100,"endColumn":23},{"ruleId":"775","severity":1,"message":"846","line":100,"column":25,"nodeType":"777","messageId":"778","endLine":100,"endColumn":39},{"ruleId":"775","severity":1,"message":"847","line":105,"column":12,"nodeType":"777","messageId":"778","endLine":105,"endColumn":19},{"ruleId":"775","severity":1,"message":"848","line":106,"column":12,"nodeType":"777","messageId":"778","endLine":106,"endColumn":19},{"ruleId":"775","severity":1,"message":"849","line":108,"column":12,"nodeType":"777","messageId":"778","endLine":108,"endColumn":21},{"ruleId":"775","severity":1,"message":"850","line":109,"column":12,"nodeType":"777","messageId":"778","endLine":109,"endColumn":23},{"ruleId":"775","severity":1,"message":"816","line":113,"column":9,"nodeType":"777","messageId":"778","endLine":113,"endColumn":15},{"ruleId":"775","severity":1,"message":"813","line":125,"column":12,"nodeType":"777","messageId":"778","endLine":125,"endColumn":20},{"ruleId":"775","severity":1,"message":"851","line":127,"column":12,"nodeType":"777","messageId":"778","endLine":127,"endColumn":21},{"ruleId":"775","severity":1,"message":"852","line":127,"column":23,"nodeType":"777","messageId":"778","endLine":127,"endColumn":35},{"ruleId":"775","severity":1,"message":"853","line":144,"column":11,"nodeType":"777","messageId":"778","endLine":144,"endColumn":25},{"ruleId":"775","severity":1,"message":"854","line":144,"column":27,"nodeType":"777","messageId":"778","endLine":144,"endColumn":44},{"ruleId":"775","severity":1,"message":"855","line":145,"column":12,"nodeType":"777","messageId":"778","endLine":145,"endColumn":27},{"ruleId":"775","severity":1,"message":"856","line":146,"column":12,"nodeType":"777","messageId":"778","endLine":146,"endColumn":25},{"ruleId":"817","severity":1,"message":"818","line":157,"column":20,"nodeType":"785","messageId":"819","endLine":179,"endColumn":6},{"ruleId":"857","severity":1,"message":"858","line":286,"column":29,"nodeType":"796","messageId":"859","endLine":286,"endColumn":30},{"ruleId":"857","severity":1,"message":"858","line":288,"column":42,"nodeType":"796","messageId":"859","endLine":288,"endColumn":43},{"ruleId":"857","severity":1,"message":"858","line":288,"column":48,"nodeType":"796","messageId":"859","endLine":288,"endColumn":49},{"ruleId":"794","severity":1,"message":"795","line":403,"column":22,"nodeType":"796","messageId":"797","endLine":403,"endColumn":24},{"ruleId":"775","severity":1,"message":"822","line":463,"column":13,"nodeType":"777","messageId":"778","endLine":463,"endColumn":22},{"ruleId":"775","severity":1,"message":"822","line":496,"column":13,"nodeType":"777","messageId":"778","endLine":496,"endColumn":22},{"ruleId":"857","severity":1,"message":"858","line":537,"column":35,"nodeType":"796","messageId":"859","endLine":537,"endColumn":36},{"ruleId":"857","severity":1,"message":"858","line":539,"column":41,"nodeType":"796","messageId":"859","endLine":539,"endColumn":42},{"ruleId":"857","severity":1,"message":"858","line":539,"column":47,"nodeType":"796","messageId":"859","endLine":539,"endColumn":48},{"ruleId":"794","severity":1,"message":"825","line":712,"column":32,"nodeType":"796","messageId":"797","endLine":712,"endColumn":34},{"ruleId":"775","severity":1,"message":"822","line":725,"column":13,"nodeType":"777","messageId":"778","endLine":725,"endColumn":22},{"ruleId":"775","severity":1,"message":"860","line":760,"column":11,"nodeType":"777","messageId":"778","endLine":760,"endColumn":14},{"ruleId":"794","severity":1,"message":"825","line":791,"column":23,"nodeType":"796","messageId":"797","endLine":791,"endColumn":25},{"ruleId":"794","severity":1,"message":"795","line":939,"column":20,"nodeType":"796","messageId":"797","endLine":939,"endColumn":22},{"ruleId":"794","severity":1,"message":"795","line":953,"column":20,"nodeType":"796","messageId":"797","endLine":953,"endColumn":22},{"ruleId":"794","severity":1,"message":"795","line":974,"column":25,"nodeType":"796","messageId":"797","endLine":974,"endColumn":27},{"ruleId":"775","severity":1,"message":"826","line":976,"column":15,"nodeType":"777","messageId":"778","endLine":976,"endColumn":25},{"ruleId":"794","severity":1,"message":"795","line":1066,"column":32,"nodeType":"796","messageId":"797","endLine":1066,"endColumn":34},{"ruleId":"794","severity":1,"message":"795","line":1067,"column":32,"nodeType":"796","messageId":"797","endLine":1067,"endColumn":34},{"ruleId":"794","severity":1,"message":"795","line":1068,"column":28,"nodeType":"796","messageId":"797","endLine":1068,"endColumn":30},{"ruleId":"794","severity":1,"message":"795","line":1068,"column":55,"nodeType":"796","messageId":"797","endLine":1068,"endColumn":57},{"ruleId":"794","severity":1,"message":"795","line":1078,"column":28,"nodeType":"796","messageId":"797","endLine":1078,"endColumn":30},{"ruleId":"829","severity":1,"message":"861","line":1145,"column":33,"nodeType":"831","messageId":"832","endLine":1145,"endColumn":48},{"ruleId":"794","severity":1,"message":"795","line":1203,"column":31,"nodeType":"796","messageId":"797","endLine":1203,"endColumn":33},{"ruleId":"794","severity":1,"message":"795","line":1211,"column":27,"nodeType":"796","messageId":"797","endLine":1211,"endColumn":29},{"ruleId":"794","severity":1,"message":"795","line":1238,"column":12,"nodeType":"796","messageId":"797","endLine":1238,"endColumn":14},{"ruleId":"775","severity":1,"message":"862","line":1247,"column":11,"nodeType":"777","messageId":"778","endLine":1247,"endColumn":29},{"ruleId":"794","severity":1,"message":"825","line":1317,"column":51,"nodeType":"796","messageId":"797","endLine":1317,"endColumn":53},{"ruleId":"794","severity":1,"message":"825","line":1383,"column":68,"nodeType":"796","messageId":"797","endLine":1383,"endColumn":70},{"ruleId":"794","severity":1,"message":"825","line":1440,"column":29,"nodeType":"796","messageId":"797","endLine":1440,"endColumn":31},{"ruleId":"775","severity":1,"message":"863","line":1452,"column":11,"nodeType":"777","messageId":"778","endLine":1452,"endColumn":25},{"ruleId":"864","severity":1,"message":"865","line":1455,"column":53,"nodeType":"866","messageId":"867","endLine":1455,"endColumn":55},{"ruleId":"794","severity":1,"message":"825","line":1461,"column":37,"nodeType":"796","messageId":"797","endLine":1461,"endColumn":39},{"ruleId":"775","severity":1,"message":"868","line":1470,"column":11,"nodeType":"777","messageId":"778","endLine":1470,"endColumn":24},{"ruleId":"794","severity":1,"message":"795","line":1611,"column":34,"nodeType":"796","messageId":"797","endLine":1611,"endColumn":36},{"ruleId":"794","severity":1,"message":"795","line":1612,"column":34,"nodeType":"796","messageId":"797","endLine":1612,"endColumn":36},{"ruleId":"794","severity":1,"message":"795","line":1613,"column":34,"nodeType":"796","messageId":"797","endLine":1613,"endColumn":36},{"ruleId":"794","severity":1,"message":"795","line":1613,"column":61,"nodeType":"796","messageId":"797","endLine":1613,"endColumn":63},{"ruleId":"829","severity":1,"message":"861","line":1762,"column":31,"nodeType":"831","messageId":"832","endLine":1762,"endColumn":46},{"ruleId":"794","severity":1,"message":"795","line":1820,"column":29,"nodeType":"796","messageId":"797","endLine":1820,"endColumn":31},{"ruleId":"794","severity":1,"message":"795","line":1828,"column":25,"nodeType":"796","messageId":"797","endLine":1828,"endColumn":27},{"ruleId":"794","severity":1,"message":"825","line":1936,"column":38,"nodeType":"796","messageId":"797","endLine":1936,"endColumn":40},{"ruleId":"794","severity":1,"message":"795","line":1947,"column":47,"nodeType":"796","messageId":"797","endLine":1947,"endColumn":49},{"ruleId":"794","severity":1,"message":"825","line":2333,"column":36,"nodeType":"796","messageId":"797","endLine":2333,"endColumn":38},{"ruleId":"775","severity":1,"message":"822","line":2346,"column":17,"nodeType":"777","messageId":"778","endLine":2346,"endColumn":26},{"ruleId":"775","severity":1,"message":"860","line":2380,"column":15,"nodeType":"777","messageId":"778","endLine":2380,"endColumn":18},{"ruleId":"794","severity":1,"message":"795","line":2464,"column":46,"nodeType":"796","messageId":"797","endLine":2464,"endColumn":48},{"ruleId":"783","severity":1,"message":"869","line":2649,"column":8,"nodeType":"785","endLine":2649,"endColumn":10,"suggestions":"870"},{"ruleId":"775","severity":1,"message":"871","line":1,"column":10,"nodeType":"777","messageId":"778","endLine":1,"endColumn":18},{"ruleId":"775","severity":1,"message":"872","line":12,"column":10,"nodeType":"777","messageId":"778","endLine":12,"endColumn":16},{"ruleId":"775","severity":1,"message":"873","line":14,"column":8,"nodeType":"777","messageId":"778","endLine":14,"endColumn":18},{"ruleId":"775","severity":1,"message":"874","line":15,"column":8,"nodeType":"777","messageId":"778","endLine":15,"endColumn":27},{"ruleId":"775","severity":1,"message":"836","line":17,"column":8,"nodeType":"777","messageId":"778","endLine":17,"endColumn":16},{"ruleId":"775","severity":1,"message":"875","line":19,"column":8,"nodeType":"777","messageId":"778","endLine":19,"endColumn":24},{"ruleId":"775","severity":1,"message":"876","line":23,"column":10,"nodeType":"777","messageId":"778","endLine":23,"endColumn":19},{"ruleId":"775","severity":1,"message":"844","line":27,"column":9,"nodeType":"777","messageId":"778","endLine":27,"endColumn":12},{"ruleId":"775","severity":1,"message":"843","line":61,"column":7,"nodeType":"777","messageId":"778","endLine":61,"endColumn":22},{"ruleId":"775","severity":1,"message":"877","line":63,"column":10,"nodeType":"777","messageId":"778","endLine":63,"endColumn":18},{"ruleId":"775","severity":1,"message":"878","line":63,"column":20,"nodeType":"777","messageId":"778","endLine":63,"endColumn":31},{"ruleId":"775","severity":1,"message":"879","line":68,"column":19,"nodeType":"777","messageId":"778","endLine":68,"endColumn":29},{"ruleId":"775","severity":1,"message":"880","line":69,"column":17,"nodeType":"777","messageId":"778","endLine":69,"endColumn":25},{"ruleId":"775","severity":1,"message":"881","line":70,"column":19,"nodeType":"777","messageId":"778","endLine":70,"endColumn":29},{"ruleId":"775","severity":1,"message":"882","line":71,"column":10,"nodeType":"777","messageId":"778","endLine":71,"endColumn":22},{"ruleId":"775","severity":1,"message":"883","line":77,"column":10,"nodeType":"777","messageId":"778","endLine":77,"endColumn":19},{"ruleId":"775","severity":1,"message":"884","line":78,"column":10,"nodeType":"777","messageId":"778","endLine":78,"endColumn":21},{"ruleId":"775","severity":1,"message":"885","line":78,"column":23,"nodeType":"777","messageId":"778","endLine":78,"endColumn":37},{"ruleId":"775","severity":1,"message":"886","line":79,"column":10,"nodeType":"777","messageId":"778","endLine":79,"endColumn":15},{"ruleId":"775","severity":1,"message":"887","line":79,"column":17,"nodeType":"777","messageId":"778","endLine":79,"endColumn":25},{"ruleId":"775","severity":1,"message":"813","line":80,"column":10,"nodeType":"777","messageId":"778","endLine":80,"endColumn":18},{"ruleId":"775","severity":1,"message":"888","line":80,"column":20,"nodeType":"777","messageId":"778","endLine":80,"endColumn":31},{"ruleId":"775","severity":1,"message":"889","line":81,"column":9,"nodeType":"777","messageId":"778","endLine":81,"endColumn":24},{"ruleId":"775","severity":1,"message":"890","line":82,"column":7,"nodeType":"777","messageId":"778","endLine":82,"endColumn":17},{"ruleId":"775","severity":1,"message":"891","line":114,"column":7,"nodeType":"777","messageId":"778","endLine":114,"endColumn":16},{"ruleId":"864","severity":1,"message":"892","line":123,"column":31,"nodeType":"866","messageId":"893","endLine":123,"endColumn":33},{"ruleId":"775","severity":1,"message":"894","line":149,"column":9,"nodeType":"777","messageId":"778","endLine":149,"endColumn":24},{"ruleId":"775","severity":1,"message":"895","line":155,"column":11,"nodeType":"777","messageId":"778","endLine":155,"endColumn":23},{"ruleId":"775","severity":1,"message":"896","line":208,"column":9,"nodeType":"777","messageId":"778","endLine":208,"endColumn":19},{"ruleId":"775","severity":1,"message":"822","line":365,"column":13,"nodeType":"777","messageId":"778","endLine":365,"endColumn":22},{"ruleId":"775","severity":1,"message":"822","line":394,"column":13,"nodeType":"777","messageId":"778","endLine":394,"endColumn":22},{"ruleId":"794","severity":1,"message":"825","line":567,"column":32,"nodeType":"796","messageId":"797","endLine":567,"endColumn":34},{"ruleId":"775","severity":1,"message":"822","line":579,"column":13,"nodeType":"777","messageId":"778","endLine":579,"endColumn":22},{"ruleId":"775","severity":1,"message":"860","line":611,"column":11,"nodeType":"777","messageId":"778","endLine":611,"endColumn":14},{"ruleId":"794","severity":1,"message":"825","line":728,"column":34,"nodeType":"796","messageId":"797","endLine":728,"endColumn":36},{"ruleId":"794","severity":1,"message":"825","line":1031,"column":32,"nodeType":"796","messageId":"797","endLine":1031,"endColumn":34},{"ruleId":"775","severity":1,"message":"822","line":1043,"column":13,"nodeType":"777","messageId":"778","endLine":1043,"endColumn":22},{"ruleId":"775","severity":1,"message":"860","line":1075,"column":11,"nodeType":"777","messageId":"778","endLine":1075,"endColumn":14},{"ruleId":"775","severity":1,"message":"897","line":1099,"column":9,"nodeType":"777","messageId":"778","endLine":1099,"endColumn":21},{"ruleId":"794","severity":1,"message":"795","line":1194,"column":42,"nodeType":"796","messageId":"797","endLine":1194,"endColumn":44},{"ruleId":"775","severity":1,"message":"898","line":1206,"column":9,"nodeType":"777","messageId":"778","endLine":1206,"endColumn":18},{"ruleId":"829","severity":1,"message":"861","line":1318,"column":31,"nodeType":"831","messageId":"832","endLine":1318,"endColumn":46},{"ruleId":"794","severity":1,"message":"795","line":1378,"column":30,"nodeType":"796","messageId":"797","endLine":1378,"endColumn":32},{"ruleId":"794","severity":1,"message":"795","line":1386,"column":25,"nodeType":"796","messageId":"797","endLine":1386,"endColumn":27},{"ruleId":"783","severity":1,"message":"899","line":1407,"column":6,"nodeType":"785","endLine":1407,"endColumn":8,"suggestions":"900"},{"ruleId":"775","severity":1,"message":"901","line":9,"column":28,"nodeType":"777","messageId":"778","endLine":9,"endColumn":47},{"ruleId":"775","severity":1,"message":"822","line":171,"column":11,"nodeType":"777","messageId":"778","endLine":171,"endColumn":20},{"ruleId":"775","severity":1,"message":"822","line":199,"column":11,"nodeType":"777","messageId":"778","endLine":199,"endColumn":20},{"ruleId":"783","severity":1,"message":"902","line":370,"column":6,"nodeType":"785","endLine":370,"endColumn":8,"suggestions":"903"},{"ruleId":"775","severity":1,"message":"904","line":3,"column":8,"nodeType":"777","messageId":"778","endLine":3,"endColumn":12},{"ruleId":"794","severity":1,"message":"795","line":410,"column":23,"nodeType":"796","messageId":"797","endLine":410,"endColumn":25},{"ruleId":"794","severity":1,"message":"795","line":410,"column":40,"nodeType":"796","messageId":"797","endLine":410,"endColumn":42},{"ruleId":"783","severity":1,"message":"905","line":12,"column":8,"nodeType":"785","endLine":12,"endColumn":14,"suggestions":"906"},{"ruleId":"907","severity":1,"message":"908","line":3,"column":37,"nodeType":"909","messageId":"910","endLine":3,"endColumn":38,"suggestions":"911"},{"ruleId":"907","severity":1,"message":"908","line":3,"column":46,"nodeType":"909","messageId":"910","endLine":3,"endColumn":47,"suggestions":"912"},{"ruleId":"907","severity":1,"message":"908","line":5,"column":24,"nodeType":"909","messageId":"910","endLine":5,"endColumn":25,"suggestions":"913"},{"ruleId":"907","severity":1,"message":"908","line":5,"column":33,"nodeType":"909","messageId":"910","endLine":5,"endColumn":34,"suggestions":"914"},{"ruleId":"907","severity":1,"message":"915","line":6,"column":23,"nodeType":"909","messageId":"910","endLine":6,"endColumn":24,"suggestions":"916"},{"ruleId":"907","severity":1,"message":"917","line":6,"column":36,"nodeType":"909","messageId":"910","endLine":6,"endColumn":37,"suggestions":"918"},{"ruleId":"907","severity":1,"message":"919","line":6,"column":38,"nodeType":"909","messageId":"910","endLine":6,"endColumn":39,"suggestions":"920"},{"ruleId":"907","severity":1,"message":"921","line":6,"column":40,"nodeType":"909","messageId":"910","endLine":6,"endColumn":41,"suggestions":"922"},{"ruleId":"907","severity":1,"message":"908","line":9,"column":37,"nodeType":"909","messageId":"910","endLine":9,"endColumn":38,"suggestions":"923"},{"ruleId":"907","severity":1,"message":"908","line":9,"column":46,"nodeType":"909","messageId":"910","endLine":9,"endColumn":47,"suggestions":"924"},{"ruleId":"907","severity":1,"message":"908","line":11,"column":24,"nodeType":"909","messageId":"910","endLine":11,"endColumn":25,"suggestions":"925"},{"ruleId":"907","severity":1,"message":"908","line":11,"column":33,"nodeType":"909","messageId":"910","endLine":11,"endColumn":34,"suggestions":"926"},{"ruleId":"907","severity":1,"message":"915","line":12,"column":23,"nodeType":"909","messageId":"910","endLine":12,"endColumn":24,"suggestions":"927"},{"ruleId":"907","severity":1,"message":"917","line":12,"column":38,"nodeType":"909","messageId":"910","endLine":12,"endColumn":39,"suggestions":"928"},{"ruleId":"907","severity":1,"message":"908","line":15,"column":34,"nodeType":"909","messageId":"910","endLine":15,"endColumn":35,"suggestions":"929"},{"ruleId":"907","severity":1,"message":"908","line":15,"column":43,"nodeType":"909","messageId":"910","endLine":15,"endColumn":44,"suggestions":"930"},{"ruleId":"907","severity":1,"message":"908","line":17,"column":24,"nodeType":"909","messageId":"910","endLine":17,"endColumn":25,"suggestions":"931"},{"ruleId":"907","severity":1,"message":"908","line":17,"column":33,"nodeType":"909","messageId":"910","endLine":17,"endColumn":34,"suggestions":"932"},{"ruleId":"907","severity":1,"message":"915","line":18,"column":23,"nodeType":"909","messageId":"910","endLine":18,"endColumn":24,"suggestions":"933"},{"ruleId":"907","severity":1,"message":"917","line":18,"column":38,"nodeType":"909","messageId":"910","endLine":18,"endColumn":39,"suggestions":"934"},{"ruleId":"907","severity":1,"message":"908","line":21,"column":27,"nodeType":"909","messageId":"910","endLine":21,"endColumn":28,"suggestions":"935"},{"ruleId":"907","severity":1,"message":"908","line":21,"column":36,"nodeType":"909","messageId":"910","endLine":21,"endColumn":37,"suggestions":"936"},{"ruleId":"907","severity":1,"message":"908","line":23,"column":22,"nodeType":"909","messageId":"910","endLine":23,"endColumn":23,"suggestions":"937"},{"ruleId":"907","severity":1,"message":"908","line":23,"column":31,"nodeType":"909","messageId":"910","endLine":23,"endColumn":32,"suggestions":"938"},{"ruleId":"907","severity":1,"message":"915","line":24,"column":23,"nodeType":"909","messageId":"910","endLine":24,"endColumn":24,"suggestions":"939"},{"ruleId":"907","severity":1,"message":"917","line":24,"column":38,"nodeType":"909","messageId":"910","endLine":24,"endColumn":39,"suggestions":"940"},{"ruleId":"907","severity":1,"message":"921","line":24,"column":40,"nodeType":"909","messageId":"910","endLine":24,"endColumn":41,"suggestions":"941"},{"ruleId":"907","severity":1,"message":"908","line":27,"column":20,"nodeType":"909","messageId":"910","endLine":27,"endColumn":21,"suggestions":"942"},{"ruleId":"907","severity":1,"message":"908","line":27,"column":29,"nodeType":"909","messageId":"910","endLine":27,"endColumn":30,"suggestions":"943"},{"ruleId":"907","severity":1,"message":"908","line":29,"column":20,"nodeType":"909","messageId":"910","endLine":29,"endColumn":21,"suggestions":"944"},{"ruleId":"907","severity":1,"message":"908","line":29,"column":29,"nodeType":"909","messageId":"910","endLine":29,"endColumn":30,"suggestions":"945"},{"ruleId":"907","severity":1,"message":"915","line":30,"column":23,"nodeType":"909","messageId":"910","endLine":30,"endColumn":24,"suggestions":"946"},{"ruleId":"907","severity":1,"message":"917","line":30,"column":38,"nodeType":"909","messageId":"910","endLine":30,"endColumn":39,"suggestions":"947"},{"ruleId":"907","severity":1,"message":"908","line":33,"column":17,"nodeType":"909","messageId":"910","endLine":33,"endColumn":18,"suggestions":"948"},{"ruleId":"907","severity":1,"message":"915","line":36,"column":23,"nodeType":"909","messageId":"910","endLine":36,"endColumn":24,"suggestions":"949"},{"ruleId":"907","severity":1,"message":"917","line":36,"column":38,"nodeType":"909","messageId":"910","endLine":36,"endColumn":39,"suggestions":"950"},{"ruleId":"907","severity":1,"message":"908","line":39,"column":37,"nodeType":"909","messageId":"910","endLine":39,"endColumn":38,"suggestions":"951"},{"ruleId":"907","severity":1,"message":"908","line":41,"column":37,"nodeType":"909","messageId":"910","endLine":41,"endColumn":38,"suggestions":"952"},{"ruleId":"907","severity":1,"message":"915","line":42,"column":23,"nodeType":"909","messageId":"910","endLine":42,"endColumn":24,"suggestions":"953"},{"ruleId":"907","severity":1,"message":"917","line":42,"column":38,"nodeType":"909","messageId":"910","endLine":42,"endColumn":39,"suggestions":"954"},{"ruleId":"907","severity":1,"message":"908","line":45,"column":30,"nodeType":"909","messageId":"910","endLine":45,"endColumn":31,"suggestions":"955"},{"ruleId":"907","severity":1,"message":"908","line":45,"column":46,"nodeType":"909","messageId":"910","endLine":45,"endColumn":47,"suggestions":"956"},{"ruleId":"907","severity":1,"message":"908","line":45,"column":55,"nodeType":"909","messageId":"910","endLine":45,"endColumn":56,"suggestions":"957"},{"ruleId":"907","severity":1,"message":"908","line":45,"column":64,"nodeType":"909","messageId":"910","endLine":45,"endColumn":65,"suggestions":"958"},{"ruleId":"907","severity":1,"message":"908","line":47,"column":22,"nodeType":"909","messageId":"910","endLine":47,"endColumn":23,"suggestions":"959"},{"ruleId":"907","severity":1,"message":"908","line":47,"column":38,"nodeType":"909","messageId":"910","endLine":47,"endColumn":39,"suggestions":"960"},{"ruleId":"907","severity":1,"message":"908","line":47,"column":47,"nodeType":"909","messageId":"910","endLine":47,"endColumn":48,"suggestions":"961"},{"ruleId":"907","severity":1,"message":"908","line":47,"column":56,"nodeType":"909","messageId":"910","endLine":47,"endColumn":57,"suggestions":"962"},{"ruleId":"907","severity":1,"message":"915","line":48,"column":23,"nodeType":"909","messageId":"910","endLine":48,"endColumn":24,"suggestions":"963"},{"ruleId":"907","severity":1,"message":"917","line":48,"column":38,"nodeType":"909","messageId":"910","endLine":48,"endColumn":39,"suggestions":"964"},{"ruleId":"907","severity":1,"message":"915","line":54,"column":23,"nodeType":"909","messageId":"910","endLine":54,"endColumn":24,"suggestions":"965"},{"ruleId":"907","severity":1,"message":"917","line":54,"column":36,"nodeType":"909","messageId":"910","endLine":54,"endColumn":37,"suggestions":"966"},{"ruleId":"907","severity":1,"message":"915","line":60,"column":23,"nodeType":"909","messageId":"910","endLine":60,"endColumn":24,"suggestions":"967"},{"ruleId":"907","severity":1,"message":"917","line":60,"column":41,"nodeType":"909","messageId":"910","endLine":60,"endColumn":42,"suggestions":"968"},{"ruleId":"907","severity":1,"message":"915","line":66,"column":23,"nodeType":"909","messageId":"910","endLine":66,"endColumn":24,"suggestions":"969"},{"ruleId":"907","severity":1,"message":"917","line":66,"column":39,"nodeType":"909","messageId":"910","endLine":66,"endColumn":40,"suggestions":"970"},{"ruleId":"907","severity":1,"message":"915","line":72,"column":23,"nodeType":"909","messageId":"910","endLine":72,"endColumn":24,"suggestions":"971"},{"ruleId":"907","severity":1,"message":"917","line":72,"column":41,"nodeType":"909","messageId":"910","endLine":72,"endColumn":42,"suggestions":"972"},{"ruleId":"907","severity":1,"message":"908","line":75,"column":20,"nodeType":"909","messageId":"910","endLine":75,"endColumn":21,"suggestions":"973"},{"ruleId":"907","severity":1,"message":"908","line":75,"column":29,"nodeType":"909","messageId":"910","endLine":75,"endColumn":30,"suggestions":"974"},{"ruleId":"907","severity":1,"message":"908","line":77,"column":22,"nodeType":"909","messageId":"910","endLine":77,"endColumn":23,"suggestions":"975"},{"ruleId":"907","severity":1,"message":"908","line":77,"column":31,"nodeType":"909","messageId":"910","endLine":77,"endColumn":32,"suggestions":"976"},{"ruleId":"907","severity":1,"message":"915","line":78,"column":23,"nodeType":"909","messageId":"910","endLine":78,"endColumn":24,"suggestions":"977"},{"ruleId":"907","severity":1,"message":"917","line":78,"column":38,"nodeType":"909","messageId":"910","endLine":78,"endColumn":39,"suggestions":"978"},{"ruleId":"907","severity":1,"message":"908","line":81,"column":20,"nodeType":"909","messageId":"910","endLine":81,"endColumn":21,"suggestions":"979"},{"ruleId":"907","severity":1,"message":"908","line":81,"column":29,"nodeType":"909","messageId":"910","endLine":81,"endColumn":30,"suggestions":"980"},{"ruleId":"907","severity":1,"message":"908","line":83,"column":20,"nodeType":"909","messageId":"910","endLine":83,"endColumn":21,"suggestions":"981"},{"ruleId":"907","severity":1,"message":"908","line":83,"column":29,"nodeType":"909","messageId":"910","endLine":83,"endColumn":30,"suggestions":"982"},{"ruleId":"907","severity":1,"message":"915","line":84,"column":23,"nodeType":"909","messageId":"910","endLine":84,"endColumn":24,"suggestions":"983"},{"ruleId":"907","severity":1,"message":"917","line":84,"column":38,"nodeType":"909","messageId":"910","endLine":84,"endColumn":39,"suggestions":"984"},{"ruleId":"907","severity":1,"message":"921","line":84,"column":40,"nodeType":"909","messageId":"910","endLine":84,"endColumn":41,"suggestions":"985"},{"ruleId":"907","severity":1,"message":"908","line":87,"column":20,"nodeType":"909","messageId":"910","endLine":87,"endColumn":21,"suggestions":"986"},{"ruleId":"907","severity":1,"message":"908","line":87,"column":29,"nodeType":"909","messageId":"910","endLine":87,"endColumn":30,"suggestions":"987"},{"ruleId":"907","severity":1,"message":"908","line":89,"column":22,"nodeType":"909","messageId":"910","endLine":89,"endColumn":23,"suggestions":"988"},{"ruleId":"907","severity":1,"message":"908","line":89,"column":31,"nodeType":"909","messageId":"910","endLine":89,"endColumn":32,"suggestions":"989"},{"ruleId":"907","severity":1,"message":"915","line":90,"column":23,"nodeType":"909","messageId":"910","endLine":90,"endColumn":24,"suggestions":"990"},{"ruleId":"907","severity":1,"message":"917","line":90,"column":38,"nodeType":"909","messageId":"910","endLine":90,"endColumn":39,"suggestions":"991"},{"ruleId":"907","severity":1,"message":"908","line":93,"column":31,"nodeType":"909","messageId":"910","endLine":93,"endColumn":32,"suggestions":"992"},{"ruleId":"907","severity":1,"message":"908","line":93,"column":47,"nodeType":"909","messageId":"910","endLine":93,"endColumn":48,"suggestions":"993"},{"ruleId":"907","severity":1,"message":"908","line":95,"column":22,"nodeType":"909","messageId":"910","endLine":95,"endColumn":23,"suggestions":"994"},{"ruleId":"907","severity":1,"message":"908","line":95,"column":38,"nodeType":"909","messageId":"910","endLine":95,"endColumn":39,"suggestions":"995"},{"ruleId":"907","severity":1,"message":"915","line":96,"column":23,"nodeType":"909","messageId":"910","endLine":96,"endColumn":24,"suggestions":"996"},{"ruleId":"907","severity":1,"message":"917","line":96,"column":38,"nodeType":"909","messageId":"910","endLine":96,"endColumn":39,"suggestions":"997"},{"ruleId":"907","severity":1,"message":"998","line":96,"column":40,"nodeType":"909","messageId":"910","endLine":96,"endColumn":41,"suggestions":"999"},{"ruleId":"907","severity":1,"message":"908","line":99,"column":41,"nodeType":"909","messageId":"910","endLine":99,"endColumn":42,"suggestions":"1000"},{"ruleId":"907","severity":1,"message":"908","line":99,"column":50,"nodeType":"909","messageId":"910","endLine":99,"endColumn":51,"suggestions":"1001"},{"ruleId":"907","severity":1,"message":"908","line":101,"column":36,"nodeType":"909","messageId":"910","endLine":101,"endColumn":37,"suggestions":"1002"},{"ruleId":"907","severity":1,"message":"908","line":101,"column":45,"nodeType":"909","messageId":"910","endLine":101,"endColumn":46,"suggestions":"1003"},{"ruleId":"907","severity":1,"message":"915","line":102,"column":23,"nodeType":"909","messageId":"910","endLine":102,"endColumn":24,"suggestions":"1004"},{"ruleId":"907","severity":1,"message":"917","line":102,"column":38,"nodeType":"909","messageId":"910","endLine":102,"endColumn":39,"suggestions":"1005"},{"ruleId":"907","severity":1,"message":"908","line":105,"column":55,"nodeType":"909","messageId":"910","endLine":105,"endColumn":56,"suggestions":"1006"},{"ruleId":"907","severity":1,"message":"908","line":105,"column":64,"nodeType":"909","messageId":"910","endLine":105,"endColumn":65,"suggestions":"1007"},{"ruleId":"907","severity":1,"message":"908","line":107,"column":40,"nodeType":"909","messageId":"910","endLine":107,"endColumn":41,"suggestions":"1008"},{"ruleId":"907","severity":1,"message":"908","line":107,"column":49,"nodeType":"909","messageId":"910","endLine":107,"endColumn":50,"suggestions":"1009"},{"ruleId":"907","severity":1,"message":"915","line":108,"column":23,"nodeType":"909","messageId":"910","endLine":108,"endColumn":24,"suggestions":"1010"},{"ruleId":"907","severity":1,"message":"917","line":108,"column":36,"nodeType":"909","messageId":"910","endLine":108,"endColumn":37,"suggestions":"1011"},{"ruleId":"907","severity":1,"message":"908","line":111,"column":20,"nodeType":"909","messageId":"910","endLine":111,"endColumn":21,"suggestions":"1012"},{"ruleId":"907","severity":1,"message":"908","line":111,"column":29,"nodeType":"909","messageId":"910","endLine":111,"endColumn":30,"suggestions":"1013"},{"ruleId":"907","severity":1,"message":"908","line":111,"column":38,"nodeType":"909","messageId":"910","endLine":111,"endColumn":39,"suggestions":"1014"},{"ruleId":"907","severity":1,"message":"908","line":113,"column":20,"nodeType":"909","messageId":"910","endLine":113,"endColumn":21,"suggestions":"1015"},{"ruleId":"907","severity":1,"message":"908","line":113,"column":29,"nodeType":"909","messageId":"910","endLine":113,"endColumn":30,"suggestions":"1016"},{"ruleId":"907","severity":1,"message":"908","line":113,"column":38,"nodeType":"909","messageId":"910","endLine":113,"endColumn":39,"suggestions":"1017"},{"ruleId":"907","severity":1,"message":"915","line":114,"column":23,"nodeType":"909","messageId":"910","endLine":114,"endColumn":24,"suggestions":"1018"},{"ruleId":"907","severity":1,"message":"917","line":114,"column":36,"nodeType":"909","messageId":"910","endLine":114,"endColumn":37,"suggestions":"1019"},{"ruleId":"907","severity":1,"message":"908","line":117,"column":17,"nodeType":"909","messageId":"910","endLine":117,"endColumn":18,"suggestions":"1020"},{"ruleId":"907","severity":1,"message":"908","line":117,"column":29,"nodeType":"909","messageId":"910","endLine":117,"endColumn":30,"suggestions":"1021"},{"ruleId":"907","severity":1,"message":"908","line":117,"column":45,"nodeType":"909","messageId":"910","endLine":117,"endColumn":46,"suggestions":"1022"},{"ruleId":"907","severity":1,"message":"908","line":119,"column":22,"nodeType":"909","messageId":"910","endLine":119,"endColumn":23,"suggestions":"1023"},{"ruleId":"907","severity":1,"message":"908","line":119,"column":38,"nodeType":"909","messageId":"910","endLine":119,"endColumn":39,"suggestions":"1024"},{"ruleId":"907","severity":1,"message":"915","line":120,"column":23,"nodeType":"909","messageId":"910","endLine":120,"endColumn":24,"suggestions":"1025"},{"ruleId":"907","severity":1,"message":"917","line":120,"column":36,"nodeType":"909","messageId":"910","endLine":120,"endColumn":37,"suggestions":"1026"},{"ruleId":"907","severity":1,"message":"908","line":123,"column":27,"nodeType":"909","messageId":"910","endLine":123,"endColumn":28,"suggestions":"1027"},{"ruleId":"907","severity":1,"message":"908","line":123,"column":36,"nodeType":"909","messageId":"910","endLine":123,"endColumn":37,"suggestions":"1028"},{"ruleId":"907","severity":1,"message":"908","line":125,"column":27,"nodeType":"909","messageId":"910","endLine":125,"endColumn":28,"suggestions":"1029"},{"ruleId":"907","severity":1,"message":"908","line":125,"column":36,"nodeType":"909","messageId":"910","endLine":125,"endColumn":37,"suggestions":"1030"},{"ruleId":"907","severity":1,"message":"915","line":126,"column":23,"nodeType":"909","messageId":"910","endLine":126,"endColumn":24,"suggestions":"1031"},{"ruleId":"907","severity":1,"message":"917","line":126,"column":36,"nodeType":"909","messageId":"910","endLine":126,"endColumn":37,"suggestions":"1032"},{"ruleId":"907","severity":1,"message":"915","line":132,"column":23,"nodeType":"909","messageId":"910","endLine":132,"endColumn":24,"suggestions":"1033"},{"ruleId":"907","severity":1,"message":"917","line":132,"column":36,"nodeType":"909","messageId":"910","endLine":132,"endColumn":37,"suggestions":"1034"},{"ruleId":"907","severity":1,"message":"908","line":135,"column":24,"nodeType":"909","messageId":"910","endLine":135,"endColumn":25,"suggestions":"1035"},{"ruleId":"907","severity":1,"message":"908","line":135,"column":43,"nodeType":"909","messageId":"910","endLine":135,"endColumn":44,"suggestions":"1036"},{"ruleId":"907","severity":1,"message":"908","line":137,"column":31,"nodeType":"909","messageId":"910","endLine":137,"endColumn":32,"suggestions":"1037"},{"ruleId":"907","severity":1,"message":"915","line":138,"column":23,"nodeType":"909","messageId":"910","endLine":138,"endColumn":24,"suggestions":"1038"},{"ruleId":"907","severity":1,"message":"917","line":138,"column":39,"nodeType":"909","messageId":"910","endLine":138,"endColumn":40,"suggestions":"1039"},{"ruleId":"907","severity":1,"message":"921","line":138,"column":41,"nodeType":"909","messageId":"910","endLine":138,"endColumn":42,"suggestions":"1040"},{"ruleId":"907","severity":1,"message":"908","line":141,"column":38,"nodeType":"909","messageId":"910","endLine":141,"endColumn":39,"suggestions":"1041"},{"ruleId":"907","severity":1,"message":"908","line":141,"column":48,"nodeType":"909","messageId":"910","endLine":141,"endColumn":49,"suggestions":"1042"},{"ruleId":"907","severity":1,"message":"908","line":141,"column":57,"nodeType":"909","messageId":"910","endLine":141,"endColumn":58,"suggestions":"1043"},{"ruleId":"907","severity":1,"message":"908","line":143,"column":24,"nodeType":"909","messageId":"910","endLine":143,"endColumn":25,"suggestions":"1044"},{"ruleId":"907","severity":1,"message":"908","line":143,"column":34,"nodeType":"909","messageId":"910","endLine":143,"endColumn":35,"suggestions":"1045"},{"ruleId":"907","severity":1,"message":"908","line":143,"column":43,"nodeType":"909","messageId":"910","endLine":143,"endColumn":44,"suggestions":"1046"},{"ruleId":"907","severity":1,"message":"915","line":144,"column":23,"nodeType":"909","messageId":"910","endLine":144,"endColumn":24,"suggestions":"1047"},{"ruleId":"907","severity":1,"message":"917","line":144,"column":39,"nodeType":"909","messageId":"910","endLine":144,"endColumn":40,"suggestions":"1048"},{"ruleId":"907","severity":1,"message":"908","line":147,"column":34,"nodeType":"909","messageId":"910","endLine":147,"endColumn":35,"suggestions":"1049"},{"ruleId":"907","severity":1,"message":"908","line":147,"column":43,"nodeType":"909","messageId":"910","endLine":147,"endColumn":44,"suggestions":"1050"},{"ruleId":"907","severity":1,"message":"908","line":149,"column":24,"nodeType":"909","messageId":"910","endLine":149,"endColumn":25,"suggestions":"1051"},{"ruleId":"907","severity":1,"message":"908","line":149,"column":33,"nodeType":"909","messageId":"910","endLine":149,"endColumn":34,"suggestions":"1052"},{"ruleId":"907","severity":1,"message":"915","line":150,"column":23,"nodeType":"909","messageId":"910","endLine":150,"endColumn":24,"suggestions":"1053"},{"ruleId":"907","severity":1,"message":"917","line":150,"column":39,"nodeType":"909","messageId":"910","endLine":150,"endColumn":40,"suggestions":"1054"},{"ruleId":"907","severity":1,"message":"915","line":156,"column":23,"nodeType":"909","messageId":"910","endLine":156,"endColumn":24,"suggestions":"1055"},{"ruleId":"907","severity":1,"message":"917","line":156,"column":39,"nodeType":"909","messageId":"910","endLine":156,"endColumn":40,"suggestions":"1056"},{"ruleId":"907","severity":1,"message":"921","line":156,"column":41,"nodeType":"909","messageId":"910","endLine":156,"endColumn":42,"suggestions":"1057"},{"ruleId":"907","severity":1,"message":"908","line":159,"column":37,"nodeType":"909","messageId":"910","endLine":159,"endColumn":38,"suggestions":"1058"},{"ruleId":"907","severity":1,"message":"908","line":159,"column":46,"nodeType":"909","messageId":"910","endLine":159,"endColumn":47,"suggestions":"1059"},{"ruleId":"907","severity":1,"message":"908","line":161,"column":29,"nodeType":"909","messageId":"910","endLine":161,"endColumn":30,"suggestions":"1060"},{"ruleId":"907","severity":1,"message":"908","line":161,"column":38,"nodeType":"909","messageId":"910","endLine":161,"endColumn":39,"suggestions":"1061"},{"ruleId":"907","severity":1,"message":"915","line":162,"column":23,"nodeType":"909","messageId":"910","endLine":162,"endColumn":24,"suggestions":"1062"},{"ruleId":"907","severity":1,"message":"917","line":162,"column":39,"nodeType":"909","messageId":"910","endLine":162,"endColumn":40,"suggestions":"1063"},{"ruleId":"907","severity":1,"message":"908","line":165,"column":20,"nodeType":"909","messageId":"910","endLine":165,"endColumn":21,"suggestions":"1064"},{"ruleId":"907","severity":1,"message":"908","line":165,"column":36,"nodeType":"909","messageId":"910","endLine":165,"endColumn":37,"suggestions":"1065"},{"ruleId":"907","severity":1,"message":"908","line":165,"column":45,"nodeType":"909","messageId":"910","endLine":165,"endColumn":46,"suggestions":"1066"},{"ruleId":"907","severity":1,"message":"908","line":167,"column":20,"nodeType":"909","messageId":"910","endLine":167,"endColumn":21,"suggestions":"1067"},{"ruleId":"907","severity":1,"message":"908","line":167,"column":36,"nodeType":"909","messageId":"910","endLine":167,"endColumn":37,"suggestions":"1068"},{"ruleId":"907","severity":1,"message":"908","line":167,"column":45,"nodeType":"909","messageId":"910","endLine":167,"endColumn":46,"suggestions":"1069"},{"ruleId":"907","severity":1,"message":"915","line":168,"column":23,"nodeType":"909","messageId":"910","endLine":168,"endColumn":24,"suggestions":"1070"},{"ruleId":"907","severity":1,"message":"917","line":168,"column":39,"nodeType":"909","messageId":"910","endLine":168,"endColumn":40,"suggestions":"1071"},{"ruleId":"907","severity":1,"message":"908","line":171,"column":27,"nodeType":"909","messageId":"910","endLine":171,"endColumn":28,"suggestions":"1072"},{"ruleId":"907","severity":1,"message":"908","line":171,"column":36,"nodeType":"909","messageId":"910","endLine":171,"endColumn":37,"suggestions":"1073"},{"ruleId":"907","severity":1,"message":"908","line":173,"column":27,"nodeType":"909","messageId":"910","endLine":173,"endColumn":28,"suggestions":"1074"},{"ruleId":"907","severity":1,"message":"908","line":173,"column":36,"nodeType":"909","messageId":"910","endLine":173,"endColumn":37,"suggestions":"1075"},{"ruleId":"907","severity":1,"message":"915","line":174,"column":23,"nodeType":"909","messageId":"910","endLine":174,"endColumn":24,"suggestions":"1076"},{"ruleId":"907","severity":1,"message":"917","line":174,"column":39,"nodeType":"909","messageId":"910","endLine":174,"endColumn":40,"suggestions":"1077"},{"ruleId":"907","severity":1,"message":"908","line":177,"column":34,"nodeType":"909","messageId":"910","endLine":177,"endColumn":35,"suggestions":"1078"},{"ruleId":"907","severity":1,"message":"908","line":177,"column":43,"nodeType":"909","messageId":"910","endLine":177,"endColumn":44,"suggestions":"1079"},{"ruleId":"907","severity":1,"message":"908","line":179,"column":24,"nodeType":"909","messageId":"910","endLine":179,"endColumn":25,"suggestions":"1080"},{"ruleId":"907","severity":1,"message":"908","line":179,"column":33,"nodeType":"909","messageId":"910","endLine":179,"endColumn":34,"suggestions":"1081"},{"ruleId":"907","severity":1,"message":"915","line":180,"column":23,"nodeType":"909","messageId":"910","endLine":180,"endColumn":24,"suggestions":"1082"},{"ruleId":"907","severity":1,"message":"917","line":180,"column":39,"nodeType":"909","messageId":"910","endLine":180,"endColumn":40,"suggestions":"1083"},{"ruleId":"907","severity":1,"message":"908","line":183,"column":41,"nodeType":"909","messageId":"910","endLine":183,"endColumn":42,"suggestions":"1084"},{"ruleId":"907","severity":1,"message":"908","line":183,"column":50,"nodeType":"909","messageId":"910","endLine":183,"endColumn":51,"suggestions":"1085"},{"ruleId":"907","severity":1,"message":"908","line":185,"column":31,"nodeType":"909","messageId":"910","endLine":185,"endColumn":32,"suggestions":"1086"},{"ruleId":"907","severity":1,"message":"908","line":185,"column":40,"nodeType":"909","messageId":"910","endLine":185,"endColumn":41,"suggestions":"1087"},{"ruleId":"907","severity":1,"message":"915","line":186,"column":23,"nodeType":"909","messageId":"910","endLine":186,"endColumn":24,"suggestions":"1088"},{"ruleId":"907","severity":1,"message":"917","line":186,"column":39,"nodeType":"909","messageId":"910","endLine":186,"endColumn":40,"suggestions":"1089"},{"ruleId":"907","severity":1,"message":"908","line":189,"column":31,"nodeType":"909","messageId":"910","endLine":189,"endColumn":32,"suggestions":"1090"},{"ruleId":"907","severity":1,"message":"908","line":189,"column":40,"nodeType":"909","messageId":"910","endLine":189,"endColumn":41,"suggestions":"1091"},{"ruleId":"907","severity":1,"message":"908","line":191,"column":22,"nodeType":"909","messageId":"910","endLine":191,"endColumn":23,"suggestions":"1092"},{"ruleId":"907","severity":1,"message":"908","line":191,"column":31,"nodeType":"909","messageId":"910","endLine":191,"endColumn":32,"suggestions":"1093"},{"ruleId":"907","severity":1,"message":"915","line":192,"column":23,"nodeType":"909","messageId":"910","endLine":192,"endColumn":24,"suggestions":"1094"},{"ruleId":"907","severity":1,"message":"917","line":192,"column":39,"nodeType":"909","messageId":"910","endLine":192,"endColumn":40,"suggestions":"1095"},{"ruleId":"907","severity":1,"message":"908","line":195,"column":38,"nodeType":"909","messageId":"910","endLine":195,"endColumn":39,"suggestions":"1096"},{"ruleId":"907","severity":1,"message":"908","line":195,"column":47,"nodeType":"909","messageId":"910","endLine":195,"endColumn":48,"suggestions":"1097"},{"ruleId":"907","severity":1,"message":"908","line":197,"column":24,"nodeType":"909","messageId":"910","endLine":197,"endColumn":25,"suggestions":"1098"},{"ruleId":"907","severity":1,"message":"908","line":197,"column":33,"nodeType":"909","messageId":"910","endLine":197,"endColumn":34,"suggestions":"1099"},{"ruleId":"907","severity":1,"message":"915","line":198,"column":23,"nodeType":"909","messageId":"910","endLine":198,"endColumn":24,"suggestions":"1100"},{"ruleId":"907","severity":1,"message":"917","line":198,"column":39,"nodeType":"909","messageId":"910","endLine":198,"endColumn":40,"suggestions":"1101"},{"ruleId":"907","severity":1,"message":"908","line":201,"column":38,"nodeType":"909","messageId":"910","endLine":201,"endColumn":39,"suggestions":"1102"},{"ruleId":"907","severity":1,"message":"908","line":201,"column":47,"nodeType":"909","messageId":"910","endLine":201,"endColumn":48,"suggestions":"1103"},{"ruleId":"907","severity":1,"message":"908","line":203,"column":24,"nodeType":"909","messageId":"910","endLine":203,"endColumn":25,"suggestions":"1104"},{"ruleId":"907","severity":1,"message":"908","line":203,"column":33,"nodeType":"909","messageId":"910","endLine":203,"endColumn":34,"suggestions":"1105"},{"ruleId":"907","severity":1,"message":"915","line":204,"column":23,"nodeType":"909","messageId":"910","endLine":204,"endColumn":24,"suggestions":"1106"},{"ruleId":"907","severity":1,"message":"917","line":204,"column":39,"nodeType":"909","messageId":"910","endLine":204,"endColumn":40,"suggestions":"1107"},{"ruleId":"907","severity":1,"message":"908","line":207,"column":27,"nodeType":"909","messageId":"910","endLine":207,"endColumn":28,"suggestions":"1108"},{"ruleId":"907","severity":1,"message":"908","line":207,"column":36,"nodeType":"909","messageId":"910","endLine":207,"endColumn":37,"suggestions":"1109"},{"ruleId":"907","severity":1,"message":"908","line":209,"column":27,"nodeType":"909","messageId":"910","endLine":209,"endColumn":28,"suggestions":"1110"},{"ruleId":"907","severity":1,"message":"908","line":209,"column":36,"nodeType":"909","messageId":"910","endLine":209,"endColumn":37,"suggestions":"1111"},{"ruleId":"907","severity":1,"message":"915","line":210,"column":23,"nodeType":"909","messageId":"910","endLine":210,"endColumn":24,"suggestions":"1112"},{"ruleId":"907","severity":1,"message":"917","line":210,"column":39,"nodeType":"909","messageId":"910","endLine":210,"endColumn":40,"suggestions":"1113"},{"ruleId":"907","severity":1,"message":"908","line":213,"column":27,"nodeType":"909","messageId":"910","endLine":213,"endColumn":28,"suggestions":"1114"},{"ruleId":"907","severity":1,"message":"908","line":215,"column":27,"nodeType":"909","messageId":"910","endLine":215,"endColumn":28,"suggestions":"1115"},{"ruleId":"907","severity":1,"message":"915","line":216,"column":23,"nodeType":"909","messageId":"910","endLine":216,"endColumn":24,"suggestions":"1116"},{"ruleId":"907","severity":1,"message":"917","line":216,"column":39,"nodeType":"909","messageId":"910","endLine":216,"endColumn":40,"suggestions":"1117"},{"ruleId":"907","severity":1,"message":"908","line":219,"column":30,"nodeType":"909","messageId":"910","endLine":219,"endColumn":31,"suggestions":"1118"},{"ruleId":"907","severity":1,"message":"908","line":219,"column":39,"nodeType":"909","messageId":"910","endLine":219,"endColumn":40,"suggestions":"1119"},{"ruleId":"907","severity":1,"message":"908","line":221,"column":22,"nodeType":"909","messageId":"910","endLine":221,"endColumn":23,"suggestions":"1120"},{"ruleId":"907","severity":1,"message":"908","line":221,"column":31,"nodeType":"909","messageId":"910","endLine":221,"endColumn":32,"suggestions":"1121"},{"ruleId":"907","severity":1,"message":"915","line":222,"column":23,"nodeType":"909","messageId":"910","endLine":222,"endColumn":24,"suggestions":"1122"},{"ruleId":"907","severity":1,"message":"917","line":222,"column":39,"nodeType":"909","messageId":"910","endLine":222,"endColumn":40,"suggestions":"1123"},{"ruleId":"907","severity":1,"message":"921","line":222,"column":41,"nodeType":"909","messageId":"910","endLine":222,"endColumn":42,"suggestions":"1124"},{"ruleId":"907","severity":1,"message":"908","line":225,"column":39,"nodeType":"909","messageId":"910","endLine":225,"endColumn":40,"suggestions":"1125"},{"ruleId":"907","severity":1,"message":"908","line":225,"column":66,"nodeType":"909","messageId":"910","endLine":225,"endColumn":67,"suggestions":"1126"},{"ruleId":"907","severity":1,"message":"908","line":225,"column":75,"nodeType":"909","messageId":"910","endLine":225,"endColumn":76,"suggestions":"1127"},{"ruleId":"907","severity":1,"message":"908","line":227,"column":35,"nodeType":"909","messageId":"910","endLine":227,"endColumn":36,"suggestions":"1128"},{"ruleId":"907","severity":1,"message":"908","line":227,"column":44,"nodeType":"909","messageId":"910","endLine":227,"endColumn":45,"suggestions":"1129"},{"ruleId":"907","severity":1,"message":"915","line":228,"column":23,"nodeType":"909","messageId":"910","endLine":228,"endColumn":24,"suggestions":"1130"},{"ruleId":"907","severity":1,"message":"917","line":228,"column":39,"nodeType":"909","messageId":"910","endLine":228,"endColumn":40,"suggestions":"1131"},{"ruleId":"907","severity":1,"message":"915","line":234,"column":23,"nodeType":"909","messageId":"910","endLine":234,"endColumn":24,"suggestions":"1132"},{"ruleId":"907","severity":1,"message":"917","line":234,"column":39,"nodeType":"909","messageId":"910","endLine":234,"endColumn":40,"suggestions":"1133"},{"ruleId":"907","severity":1,"message":"915","line":240,"column":23,"nodeType":"909","messageId":"910","endLine":240,"endColumn":24,"suggestions":"1134"},{"ruleId":"907","severity":1,"message":"917","line":240,"column":39,"nodeType":"909","messageId":"910","endLine":240,"endColumn":40,"suggestions":"1135"},{"ruleId":"907","severity":1,"message":"915","line":246,"column":23,"nodeType":"909","messageId":"910","endLine":246,"endColumn":24,"suggestions":"1136"},{"ruleId":"907","severity":1,"message":"917","line":246,"column":39,"nodeType":"909","messageId":"910","endLine":246,"endColumn":40,"suggestions":"1137"},{"ruleId":"907","severity":1,"message":"915","line":252,"column":23,"nodeType":"909","messageId":"910","endLine":252,"endColumn":24,"suggestions":"1138"},{"ruleId":"907","severity":1,"message":"917","line":252,"column":39,"nodeType":"909","messageId":"910","endLine":252,"endColumn":40,"suggestions":"1139"},{"ruleId":"907","severity":1,"message":"915","line":258,"column":23,"nodeType":"909","messageId":"910","endLine":258,"endColumn":24,"suggestions":"1140"},{"ruleId":"907","severity":1,"message":"917","line":258,"column":39,"nodeType":"909","messageId":"910","endLine":258,"endColumn":40,"suggestions":"1141"},{"ruleId":"907","severity":1,"message":"915","line":264,"column":23,"nodeType":"909","messageId":"910","endLine":264,"endColumn":24,"suggestions":"1142"},{"ruleId":"907","severity":1,"message":"917","line":264,"column":39,"nodeType":"909","messageId":"910","endLine":264,"endColumn":40,"suggestions":"1143"},{"ruleId":"907","severity":1,"message":"915","line":270,"column":23,"nodeType":"909","messageId":"910","endLine":270,"endColumn":24,"suggestions":"1144"},{"ruleId":"907","severity":1,"message":"917","line":270,"column":39,"nodeType":"909","messageId":"910","endLine":270,"endColumn":40,"suggestions":"1145"},{"ruleId":"907","severity":1,"message":"915","line":276,"column":23,"nodeType":"909","messageId":"910","endLine":276,"endColumn":24,"suggestions":"1146"},{"ruleId":"907","severity":1,"message":"917","line":276,"column":39,"nodeType":"909","messageId":"910","endLine":276,"endColumn":40,"suggestions":"1147"},{"ruleId":"907","severity":1,"message":"915","line":282,"column":23,"nodeType":"909","messageId":"910","endLine":282,"endColumn":24,"suggestions":"1148"},{"ruleId":"907","severity":1,"message":"917","line":282,"column":41,"nodeType":"909","messageId":"910","endLine":282,"endColumn":42,"suggestions":"1149"},{"ruleId":"907","severity":1,"message":"915","line":288,"column":23,"nodeType":"909","messageId":"910","endLine":288,"endColumn":24,"suggestions":"1150"},{"ruleId":"907","severity":1,"message":"917","line":288,"column":41,"nodeType":"909","messageId":"910","endLine":288,"endColumn":42,"suggestions":"1151"},{"ruleId":"907","severity":1,"message":"915","line":294,"column":23,"nodeType":"909","messageId":"910","endLine":294,"endColumn":24,"suggestions":"1152"},{"ruleId":"907","severity":1,"message":"917","line":294,"column":41,"nodeType":"909","messageId":"910","endLine":294,"endColumn":42,"suggestions":"1153"},{"ruleId":"907","severity":1,"message":"915","line":300,"column":23,"nodeType":"909","messageId":"910","endLine":300,"endColumn":24,"suggestions":"1154"},{"ruleId":"907","severity":1,"message":"917","line":300,"column":39,"nodeType":"909","messageId":"910","endLine":300,"endColumn":40,"suggestions":"1155"},{"ruleId":"907","severity":1,"message":"915","line":306,"column":23,"nodeType":"909","messageId":"910","endLine":306,"endColumn":24,"suggestions":"1156"},{"ruleId":"907","severity":1,"message":"917","line":306,"column":42,"nodeType":"909","messageId":"910","endLine":306,"endColumn":43,"suggestions":"1157"},{"ruleId":"907","severity":1,"message":"915","line":312,"column":23,"nodeType":"909","messageId":"910","endLine":312,"endColumn":24,"suggestions":"1158"},{"ruleId":"907","severity":1,"message":"998","line":312,"column":36,"nodeType":"909","messageId":"910","endLine":312,"endColumn":37,"suggestions":"1159"},{"ruleId":"907","severity":1,"message":"917","line":312,"column":38,"nodeType":"909","messageId":"910","endLine":312,"endColumn":39,"suggestions":"1160"},{"ruleId":"907","severity":1,"message":"919","line":312,"column":40,"nodeType":"909","messageId":"910","endLine":312,"endColumn":41,"suggestions":"1161"},{"ruleId":"907","severity":1,"message":"921","line":312,"column":42,"nodeType":"909","messageId":"910","endLine":312,"endColumn":43,"suggestions":"1162"},{"ruleId":"907","severity":1,"message":"908","line":315,"column":27,"nodeType":"909","messageId":"910","endLine":315,"endColumn":28,"suggestions":"1163"},{"ruleId":"907","severity":1,"message":"908","line":317,"column":27,"nodeType":"909","messageId":"910","endLine":317,"endColumn":28,"suggestions":"1164"},{"ruleId":"907","severity":1,"message":"915","line":318,"column":23,"nodeType":"909","messageId":"910","endLine":318,"endColumn":24,"suggestions":"1165"},{"ruleId":"907","severity":1,"message":"998","line":318,"column":36,"nodeType":"909","messageId":"910","endLine":318,"endColumn":37,"suggestions":"1166"},{"ruleId":"907","severity":1,"message":"917","line":318,"column":38,"nodeType":"909","messageId":"910","endLine":318,"endColumn":39,"suggestions":"1167"},{"ruleId":"907","severity":1,"message":"919","line":318,"column":40,"nodeType":"909","messageId":"910","endLine":318,"endColumn":41,"suggestions":"1168"},{"ruleId":"907","severity":1,"message":"921","line":318,"column":42,"nodeType":"909","messageId":"910","endLine":318,"endColumn":43,"suggestions":"1169"},{"ruleId":"907","severity":1,"message":"915","line":324,"column":23,"nodeType":"909","messageId":"910","endLine":324,"endColumn":24,"suggestions":"1170"},{"ruleId":"907","severity":1,"message":"998","line":324,"column":36,"nodeType":"909","messageId":"910","endLine":324,"endColumn":37,"suggestions":"1171"},{"ruleId":"907","severity":1,"message":"917","line":324,"column":38,"nodeType":"909","messageId":"910","endLine":324,"endColumn":39,"suggestions":"1172"},{"ruleId":"907","severity":1,"message":"919","line":324,"column":40,"nodeType":"909","messageId":"910","endLine":324,"endColumn":41,"suggestions":"1173"},{"ruleId":"907","severity":1,"message":"921","line":324,"column":42,"nodeType":"909","messageId":"910","endLine":324,"endColumn":43,"suggestions":"1174"},{"ruleId":"907","severity":1,"message":"908","line":327,"column":34,"nodeType":"909","messageId":"910","endLine":327,"endColumn":35,"suggestions":"1175"},{"ruleId":"907","severity":1,"message":"908","line":329,"column":34,"nodeType":"909","messageId":"910","endLine":329,"endColumn":35,"suggestions":"1176"},{"ruleId":"907","severity":1,"message":"915","line":330,"column":23,"nodeType":"909","messageId":"910","endLine":330,"endColumn":24,"suggestions":"1177"},{"ruleId":"907","severity":1,"message":"998","line":330,"column":36,"nodeType":"909","messageId":"910","endLine":330,"endColumn":37,"suggestions":"1178"},{"ruleId":"907","severity":1,"message":"917","line":330,"column":38,"nodeType":"909","messageId":"910","endLine":330,"endColumn":39,"suggestions":"1179"},{"ruleId":"907","severity":1,"message":"919","line":330,"column":40,"nodeType":"909","messageId":"910","endLine":330,"endColumn":41,"suggestions":"1180"},{"ruleId":"907","severity":1,"message":"921","line":330,"column":42,"nodeType":"909","messageId":"910","endLine":330,"endColumn":43,"suggestions":"1181"},{"ruleId":"907","severity":1,"message":"908","line":333,"column":50,"nodeType":"909","messageId":"910","endLine":333,"endColumn":51,"suggestions":"1182"},{"ruleId":"907","severity":1,"message":"908","line":333,"column":59,"nodeType":"909","messageId":"910","endLine":333,"endColumn":60,"suggestions":"1183"},{"ruleId":"907","severity":1,"message":"908","line":335,"column":45,"nodeType":"909","messageId":"910","endLine":335,"endColumn":46,"suggestions":"1184"},{"ruleId":"907","severity":1,"message":"908","line":335,"column":54,"nodeType":"909","messageId":"910","endLine":335,"endColumn":55,"suggestions":"1185"},{"ruleId":"907","severity":1,"message":"915","line":336,"column":23,"nodeType":"909","messageId":"910","endLine":336,"endColumn":24,"suggestions":"1186"},{"ruleId":"907","severity":1,"message":"917","line":336,"column":36,"nodeType":"909","messageId":"910","endLine":336,"endColumn":37,"suggestions":"1187"},{"ruleId":"907","severity":1,"message":"919","line":336,"column":38,"nodeType":"909","messageId":"910","endLine":336,"endColumn":39,"suggestions":"1188"},{"ruleId":"907","severity":1,"message":"921","line":336,"column":40,"nodeType":"909","messageId":"910","endLine":336,"endColumn":41,"suggestions":"1189"},{"ruleId":"907","severity":1,"message":"908","line":339,"column":27,"nodeType":"909","messageId":"910","endLine":339,"endColumn":28,"suggestions":"1190"},{"ruleId":"907","severity":1,"message":"908","line":339,"column":36,"nodeType":"909","messageId":"910","endLine":339,"endColumn":37,"suggestions":"1191"},{"ruleId":"907","severity":1,"message":"908","line":341,"column":29,"nodeType":"909","messageId":"910","endLine":341,"endColumn":30,"suggestions":"1192"},{"ruleId":"907","severity":1,"message":"908","line":341,"column":38,"nodeType":"909","messageId":"910","endLine":341,"endColumn":39,"suggestions":"1193"},{"ruleId":"907","severity":1,"message":"915","line":342,"column":23,"nodeType":"909","messageId":"910","endLine":342,"endColumn":24,"suggestions":"1194"},{"ruleId":"907","severity":1,"message":"917","line":342,"column":36,"nodeType":"909","messageId":"910","endLine":342,"endColumn":37,"suggestions":"1195"},{"ruleId":"907","severity":1,"message":"919","line":342,"column":38,"nodeType":"909","messageId":"910","endLine":342,"endColumn":39,"suggestions":"1196"},{"ruleId":"907","severity":1,"message":"921","line":342,"column":40,"nodeType":"909","messageId":"910","endLine":342,"endColumn":41,"suggestions":"1197"},{"ruleId":"907","severity":1,"message":"915","line":348,"column":23,"nodeType":"909","messageId":"910","endLine":348,"endColumn":24,"suggestions":"1198"},{"ruleId":"907","severity":1,"message":"917","line":348,"column":36,"nodeType":"909","messageId":"910","endLine":348,"endColumn":37,"suggestions":"1199"},{"ruleId":"907","severity":1,"message":"915","line":354,"column":23,"nodeType":"909","messageId":"910","endLine":354,"endColumn":24,"suggestions":"1200"},{"ruleId":"907","severity":1,"message":"917","line":354,"column":36,"nodeType":"909","messageId":"910","endLine":354,"endColumn":37,"suggestions":"1201"},{"ruleId":"907","severity":1,"message":"915","line":360,"column":23,"nodeType":"909","messageId":"910","endLine":360,"endColumn":24,"suggestions":"1202"},{"ruleId":"907","severity":1,"message":"917","line":360,"column":36,"nodeType":"909","messageId":"910","endLine":360,"endColumn":37,"suggestions":"1203"},{"ruleId":"907","severity":1,"message":"915","line":366,"column":23,"nodeType":"909","messageId":"910","endLine":366,"endColumn":24,"suggestions":"1204"},{"ruleId":"907","severity":1,"message":"917","line":366,"column":36,"nodeType":"909","messageId":"910","endLine":366,"endColumn":37,"suggestions":"1205"},{"ruleId":"907","severity":1,"message":"915","line":372,"column":23,"nodeType":"909","messageId":"910","endLine":372,"endColumn":24,"suggestions":"1206"},{"ruleId":"907","severity":1,"message":"917","line":372,"column":36,"nodeType":"909","messageId":"910","endLine":372,"endColumn":37,"suggestions":"1207"},{"ruleId":"907","severity":1,"message":"915","line":378,"column":23,"nodeType":"909","messageId":"910","endLine":378,"endColumn":24,"suggestions":"1208"},{"ruleId":"907","severity":1,"message":"917","line":378,"column":36,"nodeType":"909","messageId":"910","endLine":378,"endColumn":37,"suggestions":"1209"},{"ruleId":"907","severity":1,"message":"915","line":384,"column":23,"nodeType":"909","messageId":"910","endLine":384,"endColumn":24,"suggestions":"1210"},{"ruleId":"907","severity":1,"message":"917","line":384,"column":36,"nodeType":"909","messageId":"910","endLine":384,"endColumn":37,"suggestions":"1211"},{"ruleId":"907","severity":1,"message":"1212","line":387,"column":26,"nodeType":"909","messageId":"910","endLine":387,"endColumn":27,"suggestions":"1213"},{"ruleId":"907","severity":1,"message":"1212","line":387,"column":46,"nodeType":"909","messageId":"910","endLine":387,"endColumn":47,"suggestions":"1214"},{"ruleId":"907","severity":1,"message":"1212","line":389,"column":26,"nodeType":"909","messageId":"910","endLine":389,"endColumn":27,"suggestions":"1215"},{"ruleId":"907","severity":1,"message":"1212","line":389,"column":46,"nodeType":"909","messageId":"910","endLine":389,"endColumn":47,"suggestions":"1216"},{"ruleId":"907","severity":1,"message":"915","line":390,"column":23,"nodeType":"909","messageId":"910","endLine":390,"endColumn":24,"suggestions":"1217"},{"ruleId":"907","severity":1,"message":"917","line":390,"column":35,"nodeType":"909","messageId":"910","endLine":390,"endColumn":36,"suggestions":"1218"},{"ruleId":"907","severity":1,"message":"915","line":396,"column":23,"nodeType":"909","messageId":"910","endLine":396,"endColumn":24,"suggestions":"1219"},{"ruleId":"907","severity":1,"message":"917","line":396,"column":36,"nodeType":"909","messageId":"910","endLine":396,"endColumn":37,"suggestions":"1220"},{"ruleId":"907","severity":1,"message":"915","line":402,"column":23,"nodeType":"909","messageId":"910","endLine":402,"endColumn":24,"suggestions":"1221"},{"ruleId":"907","severity":1,"message":"917","line":402,"column":36,"nodeType":"909","messageId":"910","endLine":402,"endColumn":37,"suggestions":"1222"},{"ruleId":"907","severity":1,"message":"915","line":408,"column":23,"nodeType":"909","messageId":"910","endLine":408,"endColumn":24,"suggestions":"1223"},{"ruleId":"907","severity":1,"message":"917","line":408,"column":36,"nodeType":"909","messageId":"910","endLine":408,"endColumn":37,"suggestions":"1224"},{"ruleId":"907","severity":1,"message":"915","line":414,"column":23,"nodeType":"909","messageId":"910","endLine":414,"endColumn":24,"suggestions":"1225"},{"ruleId":"907","severity":1,"message":"917","line":414,"column":36,"nodeType":"909","messageId":"910","endLine":414,"endColumn":37,"suggestions":"1226"},{"ruleId":"907","severity":1,"message":"915","line":420,"column":23,"nodeType":"909","messageId":"910","endLine":420,"endColumn":24,"suggestions":"1227"},{"ruleId":"907","severity":1,"message":"917","line":420,"column":36,"nodeType":"909","messageId":"910","endLine":420,"endColumn":37,"suggestions":"1228"},{"ruleId":"907","severity":1,"message":"915","line":426,"column":23,"nodeType":"909","messageId":"910","endLine":426,"endColumn":24,"suggestions":"1229"},{"ruleId":"907","severity":1,"message":"917","line":426,"column":38,"nodeType":"909","messageId":"910","endLine":426,"endColumn":39,"suggestions":"1230"},{"ruleId":"907","severity":1,"message":"915","line":432,"column":23,"nodeType":"909","messageId":"910","endLine":432,"endColumn":24,"suggestions":"1231"},{"ruleId":"907","severity":1,"message":"917","line":432,"column":35,"nodeType":"909","messageId":"910","endLine":432,"endColumn":36,"suggestions":"1232"},{"ruleId":"907","severity":1,"message":"915","line":438,"column":23,"nodeType":"909","messageId":"910","endLine":438,"endColumn":24,"suggestions":"1233"},{"ruleId":"907","severity":1,"message":"917","line":438,"column":36,"nodeType":"909","messageId":"910","endLine":438,"endColumn":37,"suggestions":"1234"},{"ruleId":"907","severity":1,"message":"915","line":444,"column":23,"nodeType":"909","messageId":"910","endLine":444,"endColumn":24,"suggestions":"1235"},{"ruleId":"907","severity":1,"message":"917","line":444,"column":36,"nodeType":"909","messageId":"910","endLine":444,"endColumn":37,"suggestions":"1236"},{"ruleId":"907","severity":1,"message":"915","line":450,"column":23,"nodeType":"909","messageId":"910","endLine":450,"endColumn":24,"suggestions":"1237"},{"ruleId":"907","severity":1,"message":"917","line":450,"column":36,"nodeType":"909","messageId":"910","endLine":450,"endColumn":37,"suggestions":"1238"},{"ruleId":"907","severity":1,"message":"915","line":456,"column":23,"nodeType":"909","messageId":"910","endLine":456,"endColumn":24,"suggestions":"1239"},{"ruleId":"907","severity":1,"message":"917","line":456,"column":36,"nodeType":"909","messageId":"910","endLine":456,"endColumn":37,"suggestions":"1240"},{"ruleId":"907","severity":1,"message":"915","line":462,"column":23,"nodeType":"909","messageId":"910","endLine":462,"endColumn":24,"suggestions":"1241"},{"ruleId":"907","severity":1,"message":"917","line":462,"column":36,"nodeType":"909","messageId":"910","endLine":462,"endColumn":37,"suggestions":"1242"},{"ruleId":"907","severity":1,"message":"915","line":468,"column":23,"nodeType":"909","messageId":"910","endLine":468,"endColumn":24,"suggestions":"1243"},{"ruleId":"907","severity":1,"message":"917","line":468,"column":36,"nodeType":"909","messageId":"910","endLine":468,"endColumn":37,"suggestions":"1244"},{"ruleId":"907","severity":1,"message":"915","line":474,"column":23,"nodeType":"909","messageId":"910","endLine":474,"endColumn":24,"suggestions":"1245"},{"ruleId":"907","severity":1,"message":"917","line":474,"column":36,"nodeType":"909","messageId":"910","endLine":474,"endColumn":37,"suggestions":"1246"},{"ruleId":"907","severity":1,"message":"915","line":480,"column":23,"nodeType":"909","messageId":"910","endLine":480,"endColumn":24,"suggestions":"1247"},{"ruleId":"907","severity":1,"message":"917","line":480,"column":36,"nodeType":"909","messageId":"910","endLine":480,"endColumn":37,"suggestions":"1248"},{"ruleId":"907","severity":1,"message":"915","line":492,"column":23,"nodeType":"909","messageId":"910","endLine":492,"endColumn":24,"suggestions":"1249"},{"ruleId":"907","severity":1,"message":"917","line":492,"column":37,"nodeType":"909","messageId":"910","endLine":492,"endColumn":38,"suggestions":"1250"},{"ruleId":"907","severity":1,"message":"915","line":498,"column":23,"nodeType":"909","messageId":"910","endLine":498,"endColumn":24,"suggestions":"1251"},{"ruleId":"907","severity":1,"message":"917","line":498,"column":37,"nodeType":"909","messageId":"910","endLine":498,"endColumn":38,"suggestions":"1252"},{"ruleId":"907","severity":1,"message":"915","line":510,"column":23,"nodeType":"909","messageId":"910","endLine":510,"endColumn":24,"suggestions":"1253"},{"ruleId":"907","severity":1,"message":"917","line":510,"column":36,"nodeType":"909","messageId":"910","endLine":510,"endColumn":37,"suggestions":"1254"},{"ruleId":"907","severity":1,"message":"915","line":516,"column":23,"nodeType":"909","messageId":"910","endLine":516,"endColumn":24,"suggestions":"1255"},{"ruleId":"907","severity":1,"message":"917","line":516,"column":36,"nodeType":"909","messageId":"910","endLine":516,"endColumn":37,"suggestions":"1256"},{"ruleId":"907","severity":1,"message":"915","line":522,"column":23,"nodeType":"909","messageId":"910","endLine":522,"endColumn":24,"suggestions":"1257"},{"ruleId":"907","severity":1,"message":"917","line":522,"column":36,"nodeType":"909","messageId":"910","endLine":522,"endColumn":37,"suggestions":"1258"},{"ruleId":"907","severity":1,"message":"915","line":528,"column":23,"nodeType":"909","messageId":"910","endLine":528,"endColumn":24,"suggestions":"1259"},{"ruleId":"907","severity":1,"message":"917","line":528,"column":37,"nodeType":"909","messageId":"910","endLine":528,"endColumn":38,"suggestions":"1260"},{"ruleId":"907","severity":1,"message":"908","line":531,"column":36,"nodeType":"909","messageId":"910","endLine":531,"endColumn":37,"suggestions":"1261"},{"ruleId":"907","severity":1,"message":"915","line":534,"column":23,"nodeType":"909","messageId":"910","endLine":534,"endColumn":24,"suggestions":"1262"},{"ruleId":"907","severity":1,"message":"917","line":534,"column":36,"nodeType":"909","messageId":"910","endLine":534,"endColumn":37,"suggestions":"1263"},{"ruleId":"907","severity":1,"message":"915","line":540,"column":23,"nodeType":"909","messageId":"910","endLine":540,"endColumn":24,"suggestions":"1264"},{"ruleId":"907","severity":1,"message":"917","line":540,"column":37,"nodeType":"909","messageId":"910","endLine":540,"endColumn":38,"suggestions":"1265"},{"ruleId":"907","severity":1,"message":"915","line":546,"column":23,"nodeType":"909","messageId":"910","endLine":546,"endColumn":24,"suggestions":"1266"},{"ruleId":"907","severity":1,"message":"917","line":546,"column":39,"nodeType":"909","messageId":"910","endLine":546,"endColumn":40,"suggestions":"1267"},{"ruleId":"907","severity":1,"message":"915","line":552,"column":23,"nodeType":"909","messageId":"910","endLine":552,"endColumn":24,"suggestions":"1268"},{"ruleId":"907","severity":1,"message":"917","line":552,"column":39,"nodeType":"909","messageId":"910","endLine":552,"endColumn":40,"suggestions":"1269"},{"ruleId":"907","severity":1,"message":"915","line":558,"column":23,"nodeType":"909","messageId":"910","endLine":558,"endColumn":24,"suggestions":"1270"},{"ruleId":"907","severity":1,"message":"917","line":558,"column":40,"nodeType":"909","messageId":"910","endLine":558,"endColumn":41,"suggestions":"1271"},{"ruleId":"907","severity":1,"message":"915","line":564,"column":23,"nodeType":"909","messageId":"910","endLine":564,"endColumn":24,"suggestions":"1272"},{"ruleId":"907","severity":1,"message":"917","line":564,"column":39,"nodeType":"909","messageId":"910","endLine":564,"endColumn":40,"suggestions":"1273"},{"ruleId":"907","severity":1,"message":"915","line":570,"column":23,"nodeType":"909","messageId":"910","endLine":570,"endColumn":24,"suggestions":"1274"},{"ruleId":"907","severity":1,"message":"917","line":570,"column":39,"nodeType":"909","messageId":"910","endLine":570,"endColumn":40,"suggestions":"1275"},{"ruleId":"907","severity":1,"message":"915","line":576,"column":23,"nodeType":"909","messageId":"910","endLine":576,"endColumn":24,"suggestions":"1276"},{"ruleId":"907","severity":1,"message":"917","line":576,"column":39,"nodeType":"909","messageId":"910","endLine":576,"endColumn":40,"suggestions":"1277"},{"ruleId":"907","severity":1,"message":"915","line":582,"column":23,"nodeType":"909","messageId":"910","endLine":582,"endColumn":24,"suggestions":"1278"},{"ruleId":"907","severity":1,"message":"917","line":582,"column":39,"nodeType":"909","messageId":"910","endLine":582,"endColumn":40,"suggestions":"1279"},{"ruleId":"907","severity":1,"message":"915","line":588,"column":23,"nodeType":"909","messageId":"910","endLine":588,"endColumn":24,"suggestions":"1280"},{"ruleId":"907","severity":1,"message":"917","line":588,"column":39,"nodeType":"909","messageId":"910","endLine":588,"endColumn":40,"suggestions":"1281"},{"ruleId":"907","severity":1,"message":"915","line":594,"column":24,"nodeType":"909","messageId":"910","endLine":594,"endColumn":25,"suggestions":"1282"},{"ruleId":"907","severity":1,"message":"917","line":594,"column":40,"nodeType":"909","messageId":"910","endLine":594,"endColumn":41,"suggestions":"1283"},{"ruleId":"907","severity":1,"message":"915","line":600,"column":23,"nodeType":"909","messageId":"910","endLine":600,"endColumn":24,"suggestions":"1284"},{"ruleId":"907","severity":1,"message":"917","line":600,"column":39,"nodeType":"909","messageId":"910","endLine":600,"endColumn":40,"suggestions":"1285"},{"ruleId":"907","severity":1,"message":"915","line":606,"column":23,"nodeType":"909","messageId":"910","endLine":606,"endColumn":24,"suggestions":"1286"},{"ruleId":"907","severity":1,"message":"917","line":606,"column":39,"nodeType":"909","messageId":"910","endLine":606,"endColumn":40,"suggestions":"1287"},{"ruleId":"907","severity":1,"message":"915","line":612,"column":23,"nodeType":"909","messageId":"910","endLine":612,"endColumn":24,"suggestions":"1288"},{"ruleId":"907","severity":1,"message":"917","line":612,"column":39,"nodeType":"909","messageId":"910","endLine":612,"endColumn":40,"suggestions":"1289"},{"ruleId":"907","severity":1,"message":"915","line":618,"column":23,"nodeType":"909","messageId":"910","endLine":618,"endColumn":24,"suggestions":"1290"},{"ruleId":"907","severity":1,"message":"917","line":618,"column":39,"nodeType":"909","messageId":"910","endLine":618,"endColumn":40,"suggestions":"1291"},{"ruleId":"907","severity":1,"message":"915","line":624,"column":23,"nodeType":"909","messageId":"910","endLine":624,"endColumn":24,"suggestions":"1292"},{"ruleId":"907","severity":1,"message":"917","line":624,"column":39,"nodeType":"909","messageId":"910","endLine":624,"endColumn":40,"suggestions":"1293"},{"ruleId":"907","severity":1,"message":"915","line":630,"column":23,"nodeType":"909","messageId":"910","endLine":630,"endColumn":24,"suggestions":"1294"},{"ruleId":"907","severity":1,"message":"917","line":630,"column":39,"nodeType":"909","messageId":"910","endLine":630,"endColumn":40,"suggestions":"1295"},{"ruleId":"907","severity":1,"message":"915","line":636,"column":23,"nodeType":"909","messageId":"910","endLine":636,"endColumn":24,"suggestions":"1296"},{"ruleId":"907","severity":1,"message":"917","line":636,"column":39,"nodeType":"909","messageId":"910","endLine":636,"endColumn":40,"suggestions":"1297"},{"ruleId":"907","severity":1,"message":"915","line":642,"column":23,"nodeType":"909","messageId":"910","endLine":642,"endColumn":24,"suggestions":"1298"},{"ruleId":"907","severity":1,"message":"917","line":642,"column":39,"nodeType":"909","messageId":"910","endLine":642,"endColumn":40,"suggestions":"1299"},{"ruleId":"907","severity":1,"message":"915","line":648,"column":23,"nodeType":"909","messageId":"910","endLine":648,"endColumn":24,"suggestions":"1300"},{"ruleId":"907","severity":1,"message":"917","line":648,"column":39,"nodeType":"909","messageId":"910","endLine":648,"endColumn":40,"suggestions":"1301"},{"ruleId":"907","severity":1,"message":"908","line":671,"column":37,"nodeType":"909","messageId":"910","endLine":671,"endColumn":38,"suggestions":"1302"},{"ruleId":"907","severity":1,"message":"908","line":671,"column":46,"nodeType":"909","messageId":"910","endLine":671,"endColumn":47,"suggestions":"1303"},{"ruleId":"907","severity":1,"message":"908","line":673,"column":23,"nodeType":"909","messageId":"910","endLine":673,"endColumn":24,"suggestions":"1304"},{"ruleId":"907","severity":1,"message":"908","line":673,"column":32,"nodeType":"909","messageId":"910","endLine":673,"endColumn":33,"suggestions":"1305"},{"ruleId":"907","severity":1,"message":"915","line":674,"column":23,"nodeType":"909","messageId":"910","endLine":674,"endColumn":24,"suggestions":"1306"},{"ruleId":"907","severity":1,"message":"917","line":674,"column":38,"nodeType":"909","messageId":"910","endLine":674,"endColumn":39,"suggestions":"1307"},{"ruleId":"907","severity":1,"message":"908","line":731,"column":41,"nodeType":"909","messageId":"910","endLine":731,"endColumn":42,"suggestions":"1308"},{"ruleId":"907","severity":1,"message":"908","line":731,"column":50,"nodeType":"909","messageId":"910","endLine":731,"endColumn":51,"suggestions":"1309"},{"ruleId":"907","severity":1,"message":"908","line":731,"column":59,"nodeType":"909","messageId":"910","endLine":731,"endColumn":60,"suggestions":"1310"},{"ruleId":"907","severity":1,"message":"908","line":731,"column":68,"nodeType":"909","messageId":"910","endLine":731,"endColumn":69,"suggestions":"1311"},{"ruleId":"907","severity":1,"message":"908","line":731,"column":77,"nodeType":"909","messageId":"910","endLine":731,"endColumn":78,"suggestions":"1312"},{"ruleId":"907","severity":1,"message":"908","line":733,"column":31,"nodeType":"909","messageId":"910","endLine":733,"endColumn":32,"suggestions":"1313"},{"ruleId":"907","severity":1,"message":"908","line":733,"column":40,"nodeType":"909","messageId":"910","endLine":733,"endColumn":41,"suggestions":"1314"},{"ruleId":"907","severity":1,"message":"908","line":733,"column":49,"nodeType":"909","messageId":"910","endLine":733,"endColumn":50,"suggestions":"1315"},{"ruleId":"907","severity":1,"message":"908","line":733,"column":58,"nodeType":"909","messageId":"910","endLine":733,"endColumn":59,"suggestions":"1316"},{"ruleId":"907","severity":1,"message":"908","line":733,"column":67,"nodeType":"909","messageId":"910","endLine":733,"endColumn":68,"suggestions":"1317"},{"ruleId":"907","severity":1,"message":"915","line":734,"column":23,"nodeType":"909","messageId":"910","endLine":734,"endColumn":24,"suggestions":"1318"},{"ruleId":"907","severity":1,"message":"917","line":734,"column":39,"nodeType":"909","messageId":"910","endLine":734,"endColumn":40,"suggestions":"1319"},{"ruleId":"907","severity":1,"message":"915","line":99,"column":32,"nodeType":"909","messageId":"910","endLine":99,"endColumn":33,"suggestions":"1320"},{"ruleId":"907","severity":1,"message":"917","line":99,"column":45,"nodeType":"909","messageId":"910","endLine":99,"endColumn":46,"suggestions":"1321"},{"ruleId":"794","severity":1,"message":"795","line":42,"column":27,"nodeType":"796","messageId":"797","endLine":42,"endColumn":29},{"ruleId":"794","severity":1,"message":"795","line":42,"column":44,"nodeType":"796","messageId":"797","endLine":42,"endColumn":46},"no-native-reassign",["1322"],"no-negated-in-lhs",["1323"],"no-unused-vars","'Pos' is assigned a value but never used.","Identifier","unusedVar","'axios' is defined but never used.","'authData' is assigned a value but never used.","'content' is assigned a value but never used.","'header' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'inventoryService'. Either include it or remove the dependency array.","ArrayExpression",["1324"],"'CDropdown' is defined but never used.","'CDropdownToggle' is defined but never used.","'CDropdownMenu' is defined but never used.","'CDropdownItem' is defined but never used.","'stat' is defined but never used.","'categoryArray' is assigned a value but never used.","'setCategoryArray' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'CRow' is defined but never used.","'CDataTable' is defined but never used.","'changeDateFormat' is assigned a value but never used.","'dateObj' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'endDate', 'inventoryService', and 'startDate'. Either include them or remove the dependency array.",["1325"],"'Box' is defined but never used.","'productDetails' is assigned a value but never used.","'setModalLabel' is assigned a value but never used.","'detailsModal' is assigned a value but never used.","'setDetailsModal' is assigned a value but never used.","'details' is assigned a value but never used.","'setDetails' is assigned a value but never used.","'detailsIndex' is assigned a value but never used.","'unitCost' is assigned a value but never used.","'redState' is assigned a value but never used.","'apiLoader' is assigned a value but never used.","'loader' is assigned a value but never used.","'itemNo' is assigned a value but never used.","no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray","'TOTALQTY' is assigned a value but never used.","'pushToWoocom' is assigned a value but never used.","'responses' is assigned a value but never used.","'data' is assigned a value but never used.","'tempTable' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'costChange' is assigned a value but never used.","'addProduct' is assigned a value but never used.","'invoiceData' is defined but never used.","no-self-assign","'row.sku' is assigned to itself.","MemberExpression","selfAssignment","'row.isReviewed' is assigned to itself.","'row.linkingCorrect' is assigned to itself.","'connect' is defined but never used.","'Checkbox' is defined but never used.","'HicksData' is defined but never used.","'CancelIcon' is defined but never used.","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","'invoiceNo' is assigned a value but never used.","'setInvoiceNo' is assigned a value but never used.","'saveInvoiceFlag' is assigned a value but never used.","'api' is assigned a value but never used.","'reviewItems' is assigned a value but never used.","'setReviewItems' is assigned a value but never used.","'costInc' is assigned a value but never used.","'costDec' is assigned a value but never used.","'isUpdated' is assigned a value but never used.","'updateIndex' is assigned a value but never used.","'searchVal' is assigned a value but never used.","'setSearchVal' is assigned a value but never used.","'dropdownLoader' is assigned a value but never used.","'setDropdownLoader' is assigned a value but never used.","'fetchingOptions' is assigned a value but never used.","'dropdownIndex' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'res' is assigned a value but never used.","'row.description' is assigned to itself.","'hicksvilleDropdown' is assigned a value but never used.","'searchDropdown' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'updateItemOld' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["1326"],"'POSAxios' is defined but never used.","'chetak' is defined but never used.","'IconButton' is defined but never used.","'AddShoppingCartIcon' is defined but never used.","'InfoOutlinedIcon' is defined but never used.","'lightBlue' is defined but never used.","'disabled' is assigned a value but never used.","'setDisabled' is assigned a value but never used.","'setInvDate' is assigned a value but never used.","'setInvNo' is assigned a value but never used.","'setInvPage' is assigned a value but never used.","'stateUpdated' is assigned a value but never used.","'notFounds' is assigned a value but never used.","'unitsInCase' is assigned a value but never used.","'setUnitsInCase' is assigned a value but never used.","'price' is assigned a value but never used.","'setPrice' is assigned a value but never used.","'setRedState' is assigned a value but never used.","'selectedInvoice' is assigned a value but never used.","'showModal1' is assigned a value but never used.","'modalBody' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'sendInvoiceData' is assigned a value but never used.","'resScnInvDta' is assigned a value but never used.","'updateItem' is assigned a value but never used.","'addForReview' is assigned a value but never used.","'setMarkup' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.filename', 'props.selectedInvoice', and 'tesseractService'. Either include them or remove the dependency array.",["1327"],"'setNewInventoryData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'inventoryService' and 'newInventoryData'. Either include them or remove the dependency array.",["1328"],"'Grid' is defined but never used.","React Hook useEffect has a missing dependency: 'props.isAuth'. Either include it or remove the dependency array. If 'setUser' needs the current value of 'props.isAuth', you can also switch to useReducer instead of useState and read 'props.isAuth' in the reducer.",["1329"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["1330","1331"],["1332","1333"],["1334","1335"],["1336","1337"],"Unnecessary escape character: \\$.",["1338","1339"],"Unnecessary escape character: \\*.",["1340","1341"],"Unnecessary escape character: \\+.",["1342","1343"],"Unnecessary escape character: \\-.",["1344","1345"],["1346","1347"],["1348","1349"],["1350","1351"],["1352","1353"],["1354","1355"],["1356","1357"],["1358","1359"],["1360","1361"],["1362","1363"],["1364","1365"],["1366","1367"],["1368","1369"],["1370","1371"],["1372","1373"],["1374","1375"],["1376","1377"],["1378","1379"],["1380","1381"],["1382","1383"],["1384","1385"],["1386","1387"],["1388","1389"],["1390","1391"],["1392","1393"],["1394","1395"],["1396","1397"],["1398","1399"],["1400","1401"],["1402","1403"],["1404","1405"],["1406","1407"],["1408","1409"],["1410","1411"],["1412","1413"],["1414","1415"],["1416","1417"],["1418","1419"],["1420","1421"],["1422","1423"],["1424","1425"],["1426","1427"],["1428","1429"],["1430","1431"],["1432","1433"],["1434","1435"],["1436","1437"],["1438","1439"],["1440","1441"],["1442","1443"],["1444","1445"],["1446","1447"],["1448","1449"],["1450","1451"],["1452","1453"],["1454","1455"],["1456","1457"],["1458","1459"],["1460","1461"],["1462","1463"],["1464","1465"],["1466","1467"],["1468","1469"],["1470","1471"],["1472","1473"],["1474","1475"],["1476","1477"],["1478","1479"],["1480","1481"],["1482","1483"],["1484","1485"],["1486","1487"],["1488","1489"],["1490","1491"],["1492","1493"],["1494","1495"],"Unnecessary escape character: \\/.",["1496","1497"],["1498","1499"],["1500","1501"],["1502","1503"],["1504","1505"],["1506","1507"],["1508","1509"],["1510","1511"],["1512","1513"],["1514","1515"],["1516","1517"],["1518","1519"],["1520","1521"],["1522","1523"],["1524","1525"],["1526","1527"],["1528","1529"],["1530","1531"],["1532","1533"],["1534","1535"],["1536","1537"],["1538","1539"],["1540","1541"],["1542","1543"],["1544","1545"],["1546","1547"],["1548","1549"],["1550","1551"],["1552","1553"],["1554","1555"],["1556","1557"],["1558","1559"],["1560","1561"],["1562","1563"],["1564","1565"],["1566","1567"],["1568","1569"],["1570","1571"],["1572","1573"],["1574","1575"],["1576","1577"],["1578","1579"],["1580","1581"],["1582","1583"],["1584","1585"],["1586","1587"],["1588","1589"],["1590","1591"],["1592","1593"],["1594","1595"],["1596","1597"],["1598","1599"],["1600","1601"],["1602","1603"],["1604","1605"],["1606","1607"],["1608","1609"],["1610","1611"],["1612","1613"],["1614","1615"],["1616","1617"],["1618","1619"],["1620","1621"],["1622","1623"],["1624","1625"],["1626","1627"],["1628","1629"],["1630","1631"],["1632","1633"],["1634","1635"],["1636","1637"],["1638","1639"],["1640","1641"],["1642","1643"],["1644","1645"],["1646","1647"],["1648","1649"],["1650","1651"],["1652","1653"],["1654","1655"],["1656","1657"],["1658","1659"],["1660","1661"],["1662","1663"],["1664","1665"],["1666","1667"],["1668","1669"],["1670","1671"],["1672","1673"],["1674","1675"],["1676","1677"],["1678","1679"],["1680","1681"],["1682","1683"],["1684","1685"],["1686","1687"],["1688","1689"],["1690","1691"],["1692","1693"],["1694","1695"],["1696","1697"],["1698","1699"],["1700","1701"],["1702","1703"],["1704","1705"],["1706","1707"],["1708","1709"],["1710","1711"],["1712","1713"],["1714","1715"],["1716","1717"],["1718","1719"],["1720","1721"],["1722","1723"],["1724","1725"],["1726","1727"],["1728","1729"],["1730","1731"],["1732","1733"],["1734","1735"],["1736","1737"],["1738","1739"],["1740","1741"],["1742","1743"],["1744","1745"],["1746","1747"],["1748","1749"],["1750","1751"],["1752","1753"],["1754","1755"],["1756","1757"],["1758","1759"],["1760","1761"],["1762","1763"],["1764","1765"],["1766","1767"],["1768","1769"],["1770","1771"],["1772","1773"],["1774","1775"],["1776","1777"],["1778","1779"],["1780","1781"],["1782","1783"],["1784","1785"],["1786","1787"],["1788","1789"],["1790","1791"],["1792","1793"],["1794","1795"],["1796","1797"],["1798","1799"],["1800","1801"],["1802","1803"],["1804","1805"],["1806","1807"],["1808","1809"],["1810","1811"],["1812","1813"],["1814","1815"],["1816","1817"],["1818","1819"],["1820","1821"],["1822","1823"],["1824","1825"],["1826","1827"],["1828","1829"],["1830","1831"],["1832","1833"],["1834","1835"],["1836","1837"],["1838","1839"],["1840","1841"],["1842","1843"],["1844","1845"],["1846","1847"],["1848","1849"],["1850","1851"],["1852","1853"],["1854","1855"],["1856","1857"],["1858","1859"],["1860","1861"],["1862","1863"],["1864","1865"],["1866","1867"],["1868","1869"],["1870","1871"],["1872","1873"],["1874","1875"],["1876","1877"],["1878","1879"],["1880","1881"],["1882","1883"],["1884","1885"],["1886","1887"],["1888","1889"],["1890","1891"],["1892","1893"],["1894","1895"],["1896","1897"],["1898","1899"],["1900","1901"],["1902","1903"],["1904","1905"],["1906","1907"],["1908","1909"],["1910","1911"],["1912","1913"],["1914","1915"],["1916","1917"],["1918","1919"],["1920","1921"],"Unnecessary escape character: \\,.",["1922","1923"],["1924","1925"],["1926","1927"],["1928","1929"],["1930","1931"],["1932","1933"],["1934","1935"],["1936","1937"],["1938","1939"],["1940","1941"],["1942","1943"],["1944","1945"],["1946","1947"],["1948","1949"],["1950","1951"],["1952","1953"],["1954","1955"],["1956","1957"],["1958","1959"],["1960","1961"],["1962","1963"],["1964","1965"],["1966","1967"],["1968","1969"],["1970","1971"],["1972","1973"],["1974","1975"],["1976","1977"],["1978","1979"],["1980","1981"],["1982","1983"],["1984","1985"],["1986","1987"],["1988","1989"],["1990","1991"],["1992","1993"],["1994","1995"],["1996","1997"],["1998","1999"],["2000","2001"],["2002","2003"],["2004","2005"],["2006","2007"],["2008","2009"],["2010","2011"],["2012","2013"],["2014","2015"],["2016","2017"],["2018","2019"],["2020","2021"],["2022","2023"],["2024","2025"],["2026","2027"],["2028","2029"],["2030","2031"],["2032","2033"],["2034","2035"],["2036","2037"],["2038","2039"],["2040","2041"],["2042","2043"],["2044","2045"],["2046","2047"],["2048","2049"],["2050","2051"],["2052","2053"],["2054","2055"],["2056","2057"],["2058","2059"],["2060","2061"],["2062","2063"],["2064","2065"],["2066","2067"],["2068","2069"],["2070","2071"],["2072","2073"],["2074","2075"],["2076","2077"],["2078","2079"],["2080","2081"],["2082","2083"],["2084","2085"],["2086","2087"],["2088","2089"],["2090","2091"],["2092","2093"],["2094","2095"],["2096","2097"],["2098","2099"],["2100","2101"],["2102","2103"],["2104","2105"],["2106","2107"],["2108","2109"],["2110","2111"],["2112","2113"],["2114","2115"],["2116","2117"],["2118","2119"],["2120","2121"],["2122","2123"],["2124","2125"],["2126","2127"],["2128","2129"],["2130","2131"],["2132","2133"],["2134","2135"],["2136","2137"],["2138","2139"],"no-global-assign","no-unsafe-negation",{"desc":"2140","fix":"2141"},{"desc":"2142","fix":"2143"},{"desc":"2144","fix":"2145"},{"desc":"2146","fix":"2147"},{"desc":"2148","fix":"2149"},{"desc":"2150","fix":"2151"},{"messageId":"2152","fix":"2153","desc":"2154"},{"messageId":"2155","fix":"2156","desc":"2157"},{"messageId":"2152","fix":"2158","desc":"2154"},{"messageId":"2155","fix":"2159","desc":"2157"},{"messageId":"2152","fix":"2160","desc":"2154"},{"messageId":"2155","fix":"2161","desc":"2157"},{"messageId":"2152","fix":"2162","desc":"2154"},{"messageId":"2155","fix":"2163","desc":"2157"},{"messageId":"2152","fix":"2164","desc":"2154"},{"messageId":"2155","fix":"2165","desc":"2157"},{"messageId":"2152","fix":"2166","desc":"2154"},{"messageId":"2155","fix":"2167","desc":"2157"},{"messageId":"2152","fix":"2168","desc":"2154"},{"messageId":"2155","fix":"2169","desc":"2157"},{"messageId":"2152","fix":"2170","desc":"2154"},{"messageId":"2155","fix":"2171","desc":"2157"},{"messageId":"2152","fix":"2172","desc":"2154"},{"messageId":"2155","fix":"2173","desc":"2157"},{"messageId":"2152","fix":"2174","desc":"2154"},{"messageId":"2155","fix":"2175","desc":"2157"},{"messageId":"2152","fix":"2176","desc":"2154"},{"messageId":"2155","fix":"2177","desc":"2157"},{"messageId":"2152","fix":"2178","desc":"2154"},{"messageId":"2155","fix":"2179","desc":"2157"},{"messageId":"2152","fix":"2180","desc":"2154"},{"messageId":"2155","fix":"2181","desc":"2157"},{"messageId":"2152","fix":"2182","desc":"2154"},{"messageId":"2155","fix":"2183","desc":"2157"},{"messageId":"2152","fix":"2184","desc":"2154"},{"messageId":"2155","fix":"2185","desc":"2157"},{"messageId":"2152","fix":"2186","desc":"2154"},{"messageId":"2155","fix":"2187","desc":"2157"},{"messageId":"2152","fix":"2188","desc":"2154"},{"messageId":"2155","fix":"2189","desc":"2157"},{"messageId":"2152","fix":"2190","desc":"2154"},{"messageId":"2155","fix":"2191","desc":"2157"},{"messageId":"2152","fix":"2192","desc":"2154"},{"messageId":"2155","fix":"2193","desc":"2157"},{"messageId":"2152","fix":"2194","desc":"2154"},{"messageId":"2155","fix":"2195","desc":"2157"},{"messageId":"2152","fix":"2196","desc":"2154"},{"messageId":"2155","fix":"2197","desc":"2157"},{"messageId":"2152","fix":"2198","desc":"2154"},{"messageId":"2155","fix":"2199","desc":"2157"},{"messageId":"2152","fix":"2200","desc":"2154"},{"messageId":"2155","fix":"2201","desc":"2157"},{"messageId":"2152","fix":"2202","desc":"2154"},{"messageId":"2155","fix":"2203","desc":"2157"},{"messageId":"2152","fix":"2204","desc":"2154"},{"messageId":"2155","fix":"2205","desc":"2157"},{"messageId":"2152","fix":"2206","desc":"2154"},{"messageId":"2155","fix":"2207","desc":"2157"},{"messageId":"2152","fix":"2208","desc":"2154"},{"messageId":"2155","fix":"2209","desc":"2157"},{"messageId":"2152","fix":"2210","desc":"2154"},{"messageId":"2155","fix":"2211","desc":"2157"},{"messageId":"2152","fix":"2212","desc":"2154"},{"messageId":"2155","fix":"2213","desc":"2157"},{"messageId":"2152","fix":"2214","desc":"2154"},{"messageId":"2155","fix":"2215","desc":"2157"},{"messageId":"2152","fix":"2216","desc":"2154"},{"messageId":"2155","fix":"2217","desc":"2157"},{"messageId":"2152","fix":"2218","desc":"2154"},{"messageId":"2155","fix":"2219","desc":"2157"},{"messageId":"2152","fix":"2220","desc":"2154"},{"messageId":"2155","fix":"2221","desc":"2157"},{"messageId":"2152","fix":"2222","desc":"2154"},{"messageId":"2155","fix":"2223","desc":"2157"},{"messageId":"2152","fix":"2224","desc":"2154"},{"messageId":"2155","fix":"2225","desc":"2157"},{"messageId":"2152","fix":"2226","desc":"2154"},{"messageId":"2155","fix":"2227","desc":"2157"},{"messageId":"2152","fix":"2228","desc":"2154"},{"messageId":"2155","fix":"2229","desc":"2157"},{"messageId":"2152","fix":"2230","desc":"2154"},{"messageId":"2155","fix":"2231","desc":"2157"},{"messageId":"2152","fix":"2232","desc":"2154"},{"messageId":"2155","fix":"2233","desc":"2157"},{"messageId":"2152","fix":"2234","desc":"2154"},{"messageId":"2155","fix":"2235","desc":"2157"},{"messageId":"2152","fix":"2236","desc":"2154"},{"messageId":"2155","fix":"2237","desc":"2157"},{"messageId":"2152","fix":"2238","desc":"2154"},{"messageId":"2155","fix":"2239","desc":"2157"},{"messageId":"2152","fix":"2240","desc":"2154"},{"messageId":"2155","fix":"2241","desc":"2157"},{"messageId":"2152","fix":"2242","desc":"2154"},{"messageId":"2155","fix":"2243","desc":"2157"},{"messageId":"2152","fix":"2244","desc":"2154"},{"messageId":"2155","fix":"2245","desc":"2157"},{"messageId":"2152","fix":"2246","desc":"2154"},{"messageId":"2155","fix":"2247","desc":"2157"},{"messageId":"2152","fix":"2248","desc":"2154"},{"messageId":"2155","fix":"2249","desc":"2157"},{"messageId":"2152","fix":"2250","desc":"2154"},{"messageId":"2155","fix":"2251","desc":"2157"},{"messageId":"2152","fix":"2252","desc":"2154"},{"messageId":"2155","fix":"2253","desc":"2157"},{"messageId":"2152","fix":"2254","desc":"2154"},{"messageId":"2155","fix":"2255","desc":"2157"},{"messageId":"2152","fix":"2256","desc":"2154"},{"messageId":"2155","fix":"2257","desc":"2157"},{"messageId":"2152","fix":"2258","desc":"2154"},{"messageId":"2155","fix":"2259","desc":"2157"},{"messageId":"2152","fix":"2260","desc":"2154"},{"messageId":"2155","fix":"2261","desc":"2157"},{"messageId":"2152","fix":"2262","desc":"2154"},{"messageId":"2155","fix":"2263","desc":"2157"},{"messageId":"2152","fix":"2264","desc":"2154"},{"messageId":"2155","fix":"2265","desc":"2157"},{"messageId":"2152","fix":"2266","desc":"2154"},{"messageId":"2155","fix":"2267","desc":"2157"},{"messageId":"2152","fix":"2268","desc":"2154"},{"messageId":"2155","fix":"2269","desc":"2157"},{"messageId":"2152","fix":"2270","desc":"2154"},{"messageId":"2155","fix":"2271","desc":"2157"},{"messageId":"2152","fix":"2272","desc":"2154"},{"messageId":"2155","fix":"2273","desc":"2157"},{"messageId":"2152","fix":"2274","desc":"2154"},{"messageId":"2155","fix":"2275","desc":"2157"},{"messageId":"2152","fix":"2276","desc":"2154"},{"messageId":"2155","fix":"2277","desc":"2157"},{"messageId":"2152","fix":"2278","desc":"2154"},{"messageId":"2155","fix":"2279","desc":"2157"},{"messageId":"2152","fix":"2280","desc":"2154"},{"messageId":"2155","fix":"2281","desc":"2157"},{"messageId":"2152","fix":"2282","desc":"2154"},{"messageId":"2155","fix":"2283","desc":"2157"},{"messageId":"2152","fix":"2284","desc":"2154"},{"messageId":"2155","fix":"2285","desc":"2157"},{"messageId":"2152","fix":"2286","desc":"2154"},{"messageId":"2155","fix":"2287","desc":"2157"},{"messageId":"2152","fix":"2288","desc":"2154"},{"messageId":"2155","fix":"2289","desc":"2157"},{"messageId":"2152","fix":"2290","desc":"2154"},{"messageId":"2155","fix":"2291","desc":"2157"},{"messageId":"2152","fix":"2292","desc":"2154"},{"messageId":"2155","fix":"2293","desc":"2157"},{"messageId":"2152","fix":"2294","desc":"2154"},{"messageId":"2155","fix":"2295","desc":"2157"},{"messageId":"2152","fix":"2296","desc":"2154"},{"messageId":"2155","fix":"2297","desc":"2157"},{"messageId":"2152","fix":"2298","desc":"2154"},{"messageId":"2155","fix":"2299","desc":"2157"},{"messageId":"2152","fix":"2300","desc":"2154"},{"messageId":"2155","fix":"2301","desc":"2157"},{"messageId":"2152","fix":"2302","desc":"2154"},{"messageId":"2155","fix":"2303","desc":"2157"},{"messageId":"2152","fix":"2304","desc":"2154"},{"messageId":"2155","fix":"2305","desc":"2157"},{"messageId":"2152","fix":"2306","desc":"2154"},{"messageId":"2155","fix":"2307","desc":"2157"},{"messageId":"2152","fix":"2308","desc":"2154"},{"messageId":"2155","fix":"2309","desc":"2157"},{"messageId":"2152","fix":"2310","desc":"2154"},{"messageId":"2155","fix":"2311","desc":"2157"},{"messageId":"2152","fix":"2312","desc":"2154"},{"messageId":"2155","fix":"2313","desc":"2157"},{"messageId":"2152","fix":"2314","desc":"2154"},{"messageId":"2155","fix":"2315","desc":"2157"},{"messageId":"2152","fix":"2316","desc":"2154"},{"messageId":"2155","fix":"2317","desc":"2157"},{"messageId":"2152","fix":"2318","desc":"2154"},{"messageId":"2155","fix":"2319","desc":"2157"},{"messageId":"2152","fix":"2320","desc":"2154"},{"messageId":"2155","fix":"2321","desc":"2157"},{"messageId":"2152","fix":"2322","desc":"2154"},{"messageId":"2155","fix":"2323","desc":"2157"},{"messageId":"2152","fix":"2324","desc":"2154"},{"messageId":"2155","fix":"2325","desc":"2157"},{"messageId":"2152","fix":"2326","desc":"2154"},{"messageId":"2155","fix":"2327","desc":"2157"},{"messageId":"2152","fix":"2328","desc":"2154"},{"messageId":"2155","fix":"2329","desc":"2157"},{"messageId":"2152","fix":"2330","desc":"2154"},{"messageId":"2155","fix":"2331","desc":"2157"},{"messageId":"2152","fix":"2332","desc":"2154"},{"messageId":"2155","fix":"2333","desc":"2157"},{"messageId":"2152","fix":"2334","desc":"2154"},{"messageId":"2155","fix":"2335","desc":"2157"},{"messageId":"2152","fix":"2336","desc":"2154"},{"messageId":"2155","fix":"2337","desc":"2157"},{"messageId":"2152","fix":"2338","desc":"2154"},{"messageId":"2155","fix":"2339","desc":"2157"},{"messageId":"2152","fix":"2340","desc":"2154"},{"messageId":"2155","fix":"2341","desc":"2157"},{"messageId":"2152","fix":"2342","desc":"2154"},{"messageId":"2155","fix":"2343","desc":"2157"},{"messageId":"2152","fix":"2344","desc":"2154"},{"messageId":"2155","fix":"2345","desc":"2157"},{"messageId":"2152","fix":"2346","desc":"2154"},{"messageId":"2155","fix":"2347","desc":"2157"},{"messageId":"2152","fix":"2348","desc":"2154"},{"messageId":"2155","fix":"2349","desc":"2157"},{"messageId":"2152","fix":"2350","desc":"2154"},{"messageId":"2155","fix":"2351","desc":"2157"},{"messageId":"2152","fix":"2352","desc":"2154"},{"messageId":"2155","fix":"2353","desc":"2157"},{"messageId":"2152","fix":"2354","desc":"2154"},{"messageId":"2155","fix":"2355","desc":"2157"},{"messageId":"2152","fix":"2356","desc":"2154"},{"messageId":"2155","fix":"2357","desc":"2157"},{"messageId":"2152","fix":"2358","desc":"2154"},{"messageId":"2155","fix":"2359","desc":"2157"},{"messageId":"2152","fix":"2360","desc":"2154"},{"messageId":"2155","fix":"2361","desc":"2157"},{"messageId":"2152","fix":"2362","desc":"2154"},{"messageId":"2155","fix":"2363","desc":"2157"},{"messageId":"2152","fix":"2364","desc":"2154"},{"messageId":"2155","fix":"2365","desc":"2157"},{"messageId":"2152","fix":"2366","desc":"2154"},{"messageId":"2155","fix":"2367","desc":"2157"},{"messageId":"2152","fix":"2368","desc":"2154"},{"messageId":"2155","fix":"2369","desc":"2157"},{"messageId":"2152","fix":"2370","desc":"2154"},{"messageId":"2155","fix":"2371","desc":"2157"},{"messageId":"2152","fix":"2372","desc":"2154"},{"messageId":"2155","fix":"2373","desc":"2157"},{"messageId":"2152","fix":"2374","desc":"2154"},{"messageId":"2155","fix":"2375","desc":"2157"},{"messageId":"2152","fix":"2376","desc":"2154"},{"messageId":"2155","fix":"2377","desc":"2157"},{"messageId":"2152","fix":"2378","desc":"2154"},{"messageId":"2155","fix":"2379","desc":"2157"},{"messageId":"2152","fix":"2380","desc":"2154"},{"messageId":"2155","fix":"2381","desc":"2157"},{"messageId":"2152","fix":"2382","desc":"2154"},{"messageId":"2155","fix":"2383","desc":"2157"},{"messageId":"2152","fix":"2384","desc":"2154"},{"messageId":"2155","fix":"2385","desc":"2157"},{"messageId":"2152","fix":"2386","desc":"2154"},{"messageId":"2155","fix":"2387","desc":"2157"},{"messageId":"2152","fix":"2388","desc":"2154"},{"messageId":"2155","fix":"2389","desc":"2157"},{"messageId":"2152","fix":"2390","desc":"2154"},{"messageId":"2155","fix":"2391","desc":"2157"},{"messageId":"2152","fix":"2392","desc":"2154"},{"messageId":"2155","fix":"2393","desc":"2157"},{"messageId":"2152","fix":"2394","desc":"2154"},{"messageId":"2155","fix":"2395","desc":"2157"},{"messageId":"2152","fix":"2396","desc":"2154"},{"messageId":"2155","fix":"2397","desc":"2157"},{"messageId":"2152","fix":"2398","desc":"2154"},{"messageId":"2155","fix":"2399","desc":"2157"},{"messageId":"2152","fix":"2400","desc":"2154"},{"messageId":"2155","fix":"2401","desc":"2157"},{"messageId":"2152","fix":"2402","desc":"2154"},{"messageId":"2155","fix":"2403","desc":"2157"},{"messageId":"2152","fix":"2404","desc":"2154"},{"messageId":"2155","fix":"2405","desc":"2157"},{"messageId":"2152","fix":"2406","desc":"2154"},{"messageId":"2155","fix":"2407","desc":"2157"},{"messageId":"2152","fix":"2408","desc":"2154"},{"messageId":"2155","fix":"2409","desc":"2157"},{"messageId":"2152","fix":"2410","desc":"2154"},{"messageId":"2155","fix":"2411","desc":"2157"},{"messageId":"2152","fix":"2412","desc":"2154"},{"messageId":"2155","fix":"2413","desc":"2157"},{"messageId":"2152","fix":"2414","desc":"2154"},{"messageId":"2155","fix":"2415","desc":"2157"},{"messageId":"2152","fix":"2416","desc":"2154"},{"messageId":"2155","fix":"2417","desc":"2157"},{"messageId":"2152","fix":"2418","desc":"2154"},{"messageId":"2155","fix":"2419","desc":"2157"},{"messageId":"2152","fix":"2420","desc":"2154"},{"messageId":"2155","fix":"2421","desc":"2157"},{"messageId":"2152","fix":"2422","desc":"2154"},{"messageId":"2155","fix":"2423","desc":"2157"},{"messageId":"2152","fix":"2424","desc":"2154"},{"messageId":"2155","fix":"2425","desc":"2157"},{"messageId":"2152","fix":"2426","desc":"2154"},{"messageId":"2155","fix":"2427","desc":"2157"},{"messageId":"2152","fix":"2428","desc":"2154"},{"messageId":"2155","fix":"2429","desc":"2157"},{"messageId":"2152","fix":"2430","desc":"2154"},{"messageId":"2155","fix":"2431","desc":"2157"},{"messageId":"2152","fix":"2432","desc":"2154"},{"messageId":"2155","fix":"2433","desc":"2157"},{"messageId":"2152","fix":"2434","desc":"2154"},{"messageId":"2155","fix":"2435","desc":"2157"},{"messageId":"2152","fix":"2436","desc":"2154"},{"messageId":"2155","fix":"2437","desc":"2157"},{"messageId":"2152","fix":"2438","desc":"2154"},{"messageId":"2155","fix":"2439","desc":"2157"},{"messageId":"2152","fix":"2440","desc":"2154"},{"messageId":"2155","fix":"2441","desc":"2157"},{"messageId":"2152","fix":"2442","desc":"2154"},{"messageId":"2155","fix":"2443","desc":"2157"},{"messageId":"2152","fix":"2444","desc":"2154"},{"messageId":"2155","fix":"2445","desc":"2157"},{"messageId":"2152","fix":"2446","desc":"2154"},{"messageId":"2155","fix":"2447","desc":"2157"},{"messageId":"2152","fix":"2448","desc":"2154"},{"messageId":"2155","fix":"2449","desc":"2157"},{"messageId":"2152","fix":"2450","desc":"2154"},{"messageId":"2155","fix":"2451","desc":"2157"},{"messageId":"2152","fix":"2452","desc":"2154"},{"messageId":"2155","fix":"2453","desc":"2157"},{"messageId":"2152","fix":"2454","desc":"2154"},{"messageId":"2155","fix":"2455","desc":"2157"},{"messageId":"2152","fix":"2456","desc":"2154"},{"messageId":"2155","fix":"2457","desc":"2157"},{"messageId":"2152","fix":"2458","desc":"2154"},{"messageId":"2155","fix":"2459","desc":"2157"},{"messageId":"2152","fix":"2460","desc":"2154"},{"messageId":"2155","fix":"2461","desc":"2157"},{"messageId":"2152","fix":"2462","desc":"2154"},{"messageId":"2155","fix":"2463","desc":"2157"},{"messageId":"2152","fix":"2464","desc":"2154"},{"messageId":"2155","fix":"2465","desc":"2157"},{"messageId":"2152","fix":"2466","desc":"2154"},{"messageId":"2155","fix":"2467","desc":"2157"},{"messageId":"2152","fix":"2468","desc":"2154"},{"messageId":"2155","fix":"2469","desc":"2157"},{"messageId":"2152","fix":"2470","desc":"2154"},{"messageId":"2155","fix":"2471","desc":"2157"},{"messageId":"2152","fix":"2472","desc":"2154"},{"messageId":"2155","fix":"2473","desc":"2157"},{"messageId":"2152","fix":"2474","desc":"2154"},{"messageId":"2155","fix":"2475","desc":"2157"},{"messageId":"2152","fix":"2476","desc":"2154"},{"messageId":"2155","fix":"2477","desc":"2157"},{"messageId":"2152","fix":"2478","desc":"2154"},{"messageId":"2155","fix":"2479","desc":"2157"},{"messageId":"2152","fix":"2480","desc":"2154"},{"messageId":"2155","fix":"2481","desc":"2157"},{"messageId":"2152","fix":"2482","desc":"2154"},{"messageId":"2155","fix":"2483","desc":"2157"},{"messageId":"2152","fix":"2484","desc":"2154"},{"messageId":"2155","fix":"2485","desc":"2157"},{"messageId":"2152","fix":"2486","desc":"2154"},{"messageId":"2155","fix":"2487","desc":"2157"},{"messageId":"2152","fix":"2488","desc":"2154"},{"messageId":"2155","fix":"2489","desc":"2157"},{"messageId":"2152","fix":"2490","desc":"2154"},{"messageId":"2155","fix":"2491","desc":"2157"},{"messageId":"2152","fix":"2492","desc":"2154"},{"messageId":"2155","fix":"2493","desc":"2157"},{"messageId":"2152","fix":"2494","desc":"2154"},{"messageId":"2155","fix":"2495","desc":"2157"},{"messageId":"2152","fix":"2496","desc":"2154"},{"messageId":"2155","fix":"2497","desc":"2157"},{"messageId":"2152","fix":"2498","desc":"2154"},{"messageId":"2155","fix":"2499","desc":"2157"},{"messageId":"2152","fix":"2500","desc":"2154"},{"messageId":"2155","fix":"2501","desc":"2157"},{"messageId":"2152","fix":"2502","desc":"2154"},{"messageId":"2155","fix":"2503","desc":"2157"},{"messageId":"2152","fix":"2504","desc":"2154"},{"messageId":"2155","fix":"2505","desc":"2157"},{"messageId":"2152","fix":"2506","desc":"2154"},{"messageId":"2155","fix":"2507","desc":"2157"},{"messageId":"2152","fix":"2508","desc":"2154"},{"messageId":"2155","fix":"2509","desc":"2157"},{"messageId":"2152","fix":"2510","desc":"2154"},{"messageId":"2155","fix":"2511","desc":"2157"},{"messageId":"2152","fix":"2512","desc":"2154"},{"messageId":"2155","fix":"2513","desc":"2157"},{"messageId":"2152","fix":"2514","desc":"2154"},{"messageId":"2155","fix":"2515","desc":"2157"},{"messageId":"2152","fix":"2516","desc":"2154"},{"messageId":"2155","fix":"2517","desc":"2157"},{"messageId":"2152","fix":"2518","desc":"2154"},{"messageId":"2155","fix":"2519","desc":"2157"},{"messageId":"2152","fix":"2520","desc":"2154"},{"messageId":"2155","fix":"2521","desc":"2157"},{"messageId":"2152","fix":"2522","desc":"2154"},{"messageId":"2155","fix":"2523","desc":"2157"},{"messageId":"2152","fix":"2524","desc":"2154"},{"messageId":"2155","fix":"2525","desc":"2157"},{"messageId":"2152","fix":"2526","desc":"2154"},{"messageId":"2155","fix":"2527","desc":"2157"},{"messageId":"2152","fix":"2528","desc":"2154"},{"messageId":"2155","fix":"2529","desc":"2157"},{"messageId":"2152","fix":"2530","desc":"2154"},{"messageId":"2155","fix":"2531","desc":"2157"},{"messageId":"2152","fix":"2532","desc":"2154"},{"messageId":"2155","fix":"2533","desc":"2157"},{"messageId":"2152","fix":"2534","desc":"2154"},{"messageId":"2155","fix":"2535","desc":"2157"},{"messageId":"2152","fix":"2536","desc":"2154"},{"messageId":"2155","fix":"2537","desc":"2157"},{"messageId":"2152","fix":"2538","desc":"2154"},{"messageId":"2155","fix":"2539","desc":"2157"},{"messageId":"2152","fix":"2540","desc":"2154"},{"messageId":"2155","fix":"2541","desc":"2157"},{"messageId":"2152","fix":"2542","desc":"2154"},{"messageId":"2155","fix":"2543","desc":"2157"},{"messageId":"2152","fix":"2544","desc":"2154"},{"messageId":"2155","fix":"2545","desc":"2157"},{"messageId":"2152","fix":"2546","desc":"2154"},{"messageId":"2155","fix":"2547","desc":"2157"},{"messageId":"2152","fix":"2548","desc":"2154"},{"messageId":"2155","fix":"2549","desc":"2157"},{"messageId":"2152","fix":"2550","desc":"2154"},{"messageId":"2155","fix":"2551","desc":"2157"},{"messageId":"2152","fix":"2552","desc":"2154"},{"messageId":"2155","fix":"2553","desc":"2157"},{"messageId":"2152","fix":"2554","desc":"2154"},{"messageId":"2155","fix":"2555","desc":"2157"},{"messageId":"2152","fix":"2556","desc":"2154"},{"messageId":"2155","fix":"2557","desc":"2157"},{"messageId":"2152","fix":"2558","desc":"2154"},{"messageId":"2155","fix":"2559","desc":"2157"},{"messageId":"2152","fix":"2560","desc":"2154"},{"messageId":"2155","fix":"2561","desc":"2157"},{"messageId":"2152","fix":"2562","desc":"2154"},{"messageId":"2155","fix":"2563","desc":"2157"},{"messageId":"2152","fix":"2564","desc":"2154"},{"messageId":"2155","fix":"2565","desc":"2157"},{"messageId":"2152","fix":"2566","desc":"2154"},{"messageId":"2155","fix":"2567","desc":"2157"},{"messageId":"2152","fix":"2568","desc":"2154"},{"messageId":"2155","fix":"2569","desc":"2157"},{"messageId":"2152","fix":"2570","desc":"2154"},{"messageId":"2155","fix":"2571","desc":"2157"},{"messageId":"2152","fix":"2572","desc":"2154"},{"messageId":"2155","fix":"2573","desc":"2157"},{"messageId":"2152","fix":"2574","desc":"2154"},{"messageId":"2155","fix":"2575","desc":"2157"},{"messageId":"2152","fix":"2576","desc":"2154"},{"messageId":"2155","fix":"2577","desc":"2157"},{"messageId":"2152","fix":"2578","desc":"2154"},{"messageId":"2155","fix":"2579","desc":"2157"},{"messageId":"2152","fix":"2580","desc":"2154"},{"messageId":"2155","fix":"2581","desc":"2157"},{"messageId":"2152","fix":"2582","desc":"2154"},{"messageId":"2155","fix":"2583","desc":"2157"},{"messageId":"2152","fix":"2584","desc":"2154"},{"messageId":"2155","fix":"2585","desc":"2157"},{"messageId":"2152","fix":"2586","desc":"2154"},{"messageId":"2155","fix":"2587","desc":"2157"},{"messageId":"2152","fix":"2588","desc":"2154"},{"messageId":"2155","fix":"2589","desc":"2157"},{"messageId":"2152","fix":"2590","desc":"2154"},{"messageId":"2155","fix":"2591","desc":"2157"},{"messageId":"2152","fix":"2592","desc":"2154"},{"messageId":"2155","fix":"2593","desc":"2157"},{"messageId":"2152","fix":"2594","desc":"2154"},{"messageId":"2155","fix":"2595","desc":"2157"},{"messageId":"2152","fix":"2596","desc":"2154"},{"messageId":"2155","fix":"2597","desc":"2157"},{"messageId":"2152","fix":"2598","desc":"2154"},{"messageId":"2155","fix":"2599","desc":"2157"},{"messageId":"2152","fix":"2600","desc":"2154"},{"messageId":"2155","fix":"2601","desc":"2157"},{"messageId":"2152","fix":"2602","desc":"2154"},{"messageId":"2155","fix":"2603","desc":"2157"},{"messageId":"2152","fix":"2604","desc":"2154"},{"messageId":"2155","fix":"2605","desc":"2157"},{"messageId":"2152","fix":"2606","desc":"2154"},{"messageId":"2155","fix":"2607","desc":"2157"},{"messageId":"2152","fix":"2608","desc":"2154"},{"messageId":"2155","fix":"2609","desc":"2157"},{"messageId":"2152","fix":"2610","desc":"2154"},{"messageId":"2155","fix":"2611","desc":"2157"},{"messageId":"2152","fix":"2612","desc":"2154"},{"messageId":"2155","fix":"2613","desc":"2157"},{"messageId":"2152","fix":"2614","desc":"2154"},{"messageId":"2155","fix":"2615","desc":"2157"},{"messageId":"2152","fix":"2616","desc":"2154"},{"messageId":"2155","fix":"2617","desc":"2157"},{"messageId":"2152","fix":"2618","desc":"2154"},{"messageId":"2155","fix":"2619","desc":"2157"},{"messageId":"2152","fix":"2620","desc":"2154"},{"messageId":"2155","fix":"2621","desc":"2157"},{"messageId":"2152","fix":"2622","desc":"2154"},{"messageId":"2155","fix":"2623","desc":"2157"},{"messageId":"2152","fix":"2624","desc":"2154"},{"messageId":"2155","fix":"2625","desc":"2157"},{"messageId":"2152","fix":"2626","desc":"2154"},{"messageId":"2155","fix":"2627","desc":"2157"},{"messageId":"2152","fix":"2628","desc":"2154"},{"messageId":"2155","fix":"2629","desc":"2157"},{"messageId":"2152","fix":"2630","desc":"2154"},{"messageId":"2155","fix":"2631","desc":"2157"},{"messageId":"2152","fix":"2632","desc":"2154"},{"messageId":"2155","fix":"2633","desc":"2157"},{"messageId":"2152","fix":"2634","desc":"2154"},{"messageId":"2155","fix":"2635","desc":"2157"},{"messageId":"2152","fix":"2636","desc":"2154"},{"messageId":"2155","fix":"2637","desc":"2157"},{"messageId":"2152","fix":"2638","desc":"2154"},{"messageId":"2155","fix":"2639","desc":"2157"},{"messageId":"2152","fix":"2640","desc":"2154"},{"messageId":"2155","fix":"2641","desc":"2157"},{"messageId":"2152","fix":"2642","desc":"2154"},{"messageId":"2155","fix":"2643","desc":"2157"},{"messageId":"2152","fix":"2644","desc":"2154"},{"messageId":"2155","fix":"2645","desc":"2157"},{"messageId":"2152","fix":"2646","desc":"2154"},{"messageId":"2155","fix":"2647","desc":"2157"},{"messageId":"2152","fix":"2648","desc":"2154"},{"messageId":"2155","fix":"2649","desc":"2157"},{"messageId":"2152","fix":"2650","desc":"2154"},{"messageId":"2155","fix":"2651","desc":"2157"},{"messageId":"2152","fix":"2652","desc":"2154"},{"messageId":"2155","fix":"2653","desc":"2157"},{"messageId":"2152","fix":"2654","desc":"2154"},{"messageId":"2155","fix":"2655","desc":"2157"},{"messageId":"2152","fix":"2656","desc":"2154"},{"messageId":"2155","fix":"2657","desc":"2157"},{"messageId":"2152","fix":"2658","desc":"2154"},{"messageId":"2155","fix":"2659","desc":"2157"},{"messageId":"2152","fix":"2660","desc":"2154"},{"messageId":"2155","fix":"2661","desc":"2157"},{"messageId":"2152","fix":"2662","desc":"2154"},{"messageId":"2155","fix":"2663","desc":"2157"},{"messageId":"2152","fix":"2664","desc":"2154"},{"messageId":"2155","fix":"2665","desc":"2157"},{"messageId":"2152","fix":"2666","desc":"2154"},{"messageId":"2155","fix":"2667","desc":"2157"},{"messageId":"2152","fix":"2668","desc":"2154"},{"messageId":"2155","fix":"2669","desc":"2157"},{"messageId":"2152","fix":"2670","desc":"2154"},{"messageId":"2155","fix":"2671","desc":"2157"},{"messageId":"2152","fix":"2672","desc":"2154"},{"messageId":"2155","fix":"2673","desc":"2157"},{"messageId":"2152","fix":"2674","desc":"2154"},{"messageId":"2155","fix":"2675","desc":"2157"},{"messageId":"2152","fix":"2676","desc":"2154"},{"messageId":"2155","fix":"2677","desc":"2157"},{"messageId":"2152","fix":"2678","desc":"2154"},{"messageId":"2155","fix":"2679","desc":"2157"},{"messageId":"2152","fix":"2680","desc":"2154"},{"messageId":"2155","fix":"2681","desc":"2157"},{"messageId":"2152","fix":"2682","desc":"2154"},{"messageId":"2155","fix":"2683","desc":"2157"},{"messageId":"2152","fix":"2684","desc":"2154"},{"messageId":"2155","fix":"2685","desc":"2157"},{"messageId":"2152","fix":"2686","desc":"2154"},{"messageId":"2155","fix":"2687","desc":"2157"},{"messageId":"2152","fix":"2688","desc":"2154"},{"messageId":"2155","fix":"2689","desc":"2157"},{"messageId":"2152","fix":"2690","desc":"2154"},{"messageId":"2155","fix":"2691","desc":"2157"},{"messageId":"2152","fix":"2692","desc":"2154"},{"messageId":"2155","fix":"2693","desc":"2157"},{"messageId":"2152","fix":"2694","desc":"2154"},{"messageId":"2155","fix":"2695","desc":"2157"},{"messageId":"2152","fix":"2696","desc":"2154"},{"messageId":"2155","fix":"2697","desc":"2157"},{"messageId":"2152","fix":"2698","desc":"2154"},{"messageId":"2155","fix":"2699","desc":"2157"},{"messageId":"2152","fix":"2700","desc":"2154"},{"messageId":"2155","fix":"2701","desc":"2157"},{"messageId":"2152","fix":"2702","desc":"2154"},{"messageId":"2155","fix":"2703","desc":"2157"},{"messageId":"2152","fix":"2704","desc":"2154"},{"messageId":"2155","fix":"2705","desc":"2157"},{"messageId":"2152","fix":"2706","desc":"2154"},{"messageId":"2155","fix":"2707","desc":"2157"},{"messageId":"2152","fix":"2708","desc":"2154"},{"messageId":"2155","fix":"2709","desc":"2157"},{"messageId":"2152","fix":"2710","desc":"2154"},{"messageId":"2155","fix":"2711","desc":"2157"},{"messageId":"2152","fix":"2712","desc":"2154"},{"messageId":"2155","fix":"2713","desc":"2157"},{"messageId":"2152","fix":"2714","desc":"2154"},{"messageId":"2155","fix":"2715","desc":"2157"},{"messageId":"2152","fix":"2716","desc":"2154"},{"messageId":"2155","fix":"2717","desc":"2157"},{"messageId":"2152","fix":"2718","desc":"2154"},{"messageId":"2155","fix":"2719","desc":"2157"},{"messageId":"2152","fix":"2720","desc":"2154"},{"messageId":"2155","fix":"2721","desc":"2157"},{"messageId":"2152","fix":"2722","desc":"2154"},{"messageId":"2155","fix":"2723","desc":"2157"},{"messageId":"2152","fix":"2724","desc":"2154"},{"messageId":"2155","fix":"2725","desc":"2157"},{"messageId":"2152","fix":"2726","desc":"2154"},{"messageId":"2155","fix":"2727","desc":"2157"},{"messageId":"2152","fix":"2728","desc":"2154"},{"messageId":"2155","fix":"2729","desc":"2157"},{"messageId":"2152","fix":"2730","desc":"2154"},{"messageId":"2155","fix":"2731","desc":"2157"},{"messageId":"2152","fix":"2732","desc":"2154"},{"messageId":"2155","fix":"2733","desc":"2157"},{"messageId":"2152","fix":"2734","desc":"2154"},{"messageId":"2155","fix":"2735","desc":"2157"},{"messageId":"2152","fix":"2736","desc":"2154"},{"messageId":"2155","fix":"2737","desc":"2157"},{"messageId":"2152","fix":"2738","desc":"2154"},{"messageId":"2155","fix":"2739","desc":"2157"},{"messageId":"2152","fix":"2740","desc":"2154"},{"messageId":"2155","fix":"2741","desc":"2157"},{"messageId":"2152","fix":"2742","desc":"2154"},{"messageId":"2155","fix":"2743","desc":"2157"},{"messageId":"2152","fix":"2744","desc":"2154"},{"messageId":"2155","fix":"2745","desc":"2157"},{"messageId":"2152","fix":"2746","desc":"2154"},{"messageId":"2155","fix":"2747","desc":"2157"},{"messageId":"2152","fix":"2748","desc":"2154"},{"messageId":"2155","fix":"2749","desc":"2157"},{"messageId":"2152","fix":"2750","desc":"2154"},{"messageId":"2155","fix":"2751","desc":"2157"},{"messageId":"2152","fix":"2752","desc":"2154"},{"messageId":"2155","fix":"2753","desc":"2157"},{"messageId":"2152","fix":"2754","desc":"2154"},{"messageId":"2155","fix":"2755","desc":"2157"},{"messageId":"2152","fix":"2756","desc":"2154"},{"messageId":"2155","fix":"2757","desc":"2157"},{"messageId":"2152","fix":"2758","desc":"2154"},{"messageId":"2155","fix":"2759","desc":"2157"},{"messageId":"2152","fix":"2760","desc":"2154"},{"messageId":"2155","fix":"2761","desc":"2157"},{"messageId":"2152","fix":"2762","desc":"2154"},{"messageId":"2155","fix":"2763","desc":"2157"},{"messageId":"2152","fix":"2764","desc":"2154"},{"messageId":"2155","fix":"2765","desc":"2157"},{"messageId":"2152","fix":"2766","desc":"2154"},{"messageId":"2155","fix":"2767","desc":"2157"},{"messageId":"2152","fix":"2768","desc":"2154"},{"messageId":"2155","fix":"2769","desc":"2157"},{"messageId":"2152","fix":"2770","desc":"2154"},{"messageId":"2155","fix":"2771","desc":"2157"},{"messageId":"2152","fix":"2772","desc":"2154"},{"messageId":"2155","fix":"2773","desc":"2157"},{"messageId":"2152","fix":"2774","desc":"2154"},{"messageId":"2155","fix":"2775","desc":"2157"},{"messageId":"2152","fix":"2776","desc":"2154"},{"messageId":"2155","fix":"2777","desc":"2157"},{"messageId":"2152","fix":"2778","desc":"2154"},{"messageId":"2155","fix":"2779","desc":"2157"},{"messageId":"2152","fix":"2780","desc":"2154"},{"messageId":"2155","fix":"2781","desc":"2157"},{"messageId":"2152","fix":"2782","desc":"2154"},{"messageId":"2155","fix":"2783","desc":"2157"},{"messageId":"2152","fix":"2784","desc":"2154"},{"messageId":"2155","fix":"2785","desc":"2157"},{"messageId":"2152","fix":"2786","desc":"2154"},{"messageId":"2155","fix":"2787","desc":"2157"},{"messageId":"2152","fix":"2788","desc":"2154"},{"messageId":"2155","fix":"2789","desc":"2157"},{"messageId":"2152","fix":"2790","desc":"2154"},{"messageId":"2155","fix":"2791","desc":"2157"},{"messageId":"2152","fix":"2792","desc":"2154"},{"messageId":"2155","fix":"2793","desc":"2157"},{"messageId":"2152","fix":"2794","desc":"2154"},{"messageId":"2155","fix":"2795","desc":"2157"},{"messageId":"2152","fix":"2796","desc":"2154"},{"messageId":"2155","fix":"2797","desc":"2157"},{"messageId":"2152","fix":"2798","desc":"2154"},{"messageId":"2155","fix":"2799","desc":"2157"},{"messageId":"2152","fix":"2800","desc":"2154"},{"messageId":"2155","fix":"2801","desc":"2157"},{"messageId":"2152","fix":"2802","desc":"2154"},{"messageId":"2155","fix":"2803","desc":"2157"},{"messageId":"2152","fix":"2804","desc":"2154"},{"messageId":"2155","fix":"2805","desc":"2157"},{"messageId":"2152","fix":"2806","desc":"2154"},{"messageId":"2155","fix":"2807","desc":"2157"},{"messageId":"2152","fix":"2808","desc":"2154"},{"messageId":"2155","fix":"2809","desc":"2157"},{"messageId":"2152","fix":"2810","desc":"2154"},{"messageId":"2155","fix":"2811","desc":"2157"},{"messageId":"2152","fix":"2812","desc":"2154"},{"messageId":"2155","fix":"2813","desc":"2157"},{"messageId":"2152","fix":"2814","desc":"2154"},{"messageId":"2155","fix":"2815","desc":"2157"},{"messageId":"2152","fix":"2816","desc":"2154"},{"messageId":"2155","fix":"2817","desc":"2157"},{"messageId":"2152","fix":"2818","desc":"2154"},{"messageId":"2155","fix":"2819","desc":"2157"},{"messageId":"2152","fix":"2820","desc":"2154"},{"messageId":"2155","fix":"2821","desc":"2157"},{"messageId":"2152","fix":"2822","desc":"2154"},{"messageId":"2155","fix":"2823","desc":"2157"},{"messageId":"2152","fix":"2824","desc":"2154"},{"messageId":"2155","fix":"2825","desc":"2157"},{"messageId":"2152","fix":"2826","desc":"2154"},{"messageId":"2155","fix":"2827","desc":"2157"},{"messageId":"2152","fix":"2828","desc":"2154"},{"messageId":"2155","fix":"2829","desc":"2157"},{"messageId":"2152","fix":"2830","desc":"2154"},{"messageId":"2155","fix":"2831","desc":"2157"},{"messageId":"2152","fix":"2832","desc":"2154"},{"messageId":"2155","fix":"2833","desc":"2157"},{"messageId":"2152","fix":"2834","desc":"2154"},{"messageId":"2155","fix":"2835","desc":"2157"},{"messageId":"2152","fix":"2836","desc":"2154"},{"messageId":"2155","fix":"2837","desc":"2157"},{"messageId":"2152","fix":"2838","desc":"2154"},{"messageId":"2155","fix":"2839","desc":"2157"},{"messageId":"2152","fix":"2840","desc":"2154"},{"messageId":"2155","fix":"2841","desc":"2157"},{"messageId":"2152","fix":"2842","desc":"2154"},{"messageId":"2155","fix":"2843","desc":"2157"},{"messageId":"2152","fix":"2844","desc":"2154"},{"messageId":"2155","fix":"2845","desc":"2157"},{"messageId":"2152","fix":"2846","desc":"2154"},{"messageId":"2155","fix":"2847","desc":"2157"},{"messageId":"2152","fix":"2848","desc":"2154"},{"messageId":"2155","fix":"2849","desc":"2157"},{"messageId":"2152","fix":"2850","desc":"2154"},{"messageId":"2155","fix":"2851","desc":"2157"},{"messageId":"2152","fix":"2852","desc":"2154"},{"messageId":"2155","fix":"2853","desc":"2157"},{"messageId":"2152","fix":"2854","desc":"2154"},{"messageId":"2155","fix":"2855","desc":"2157"},{"messageId":"2152","fix":"2856","desc":"2154"},{"messageId":"2155","fix":"2857","desc":"2157"},{"messageId":"2152","fix":"2858","desc":"2154"},{"messageId":"2155","fix":"2859","desc":"2157"},{"messageId":"2152","fix":"2860","desc":"2154"},{"messageId":"2155","fix":"2861","desc":"2157"},{"messageId":"2152","fix":"2862","desc":"2154"},{"messageId":"2155","fix":"2863","desc":"2157"},{"messageId":"2152","fix":"2864","desc":"2154"},{"messageId":"2155","fix":"2865","desc":"2157"},{"messageId":"2152","fix":"2866","desc":"2154"},{"messageId":"2155","fix":"2867","desc":"2157"},{"messageId":"2152","fix":"2868","desc":"2154"},{"messageId":"2155","fix":"2869","desc":"2157"},{"messageId":"2152","fix":"2870","desc":"2154"},{"messageId":"2155","fix":"2871","desc":"2157"},{"messageId":"2152","fix":"2872","desc":"2154"},{"messageId":"2155","fix":"2873","desc":"2157"},{"messageId":"2152","fix":"2874","desc":"2154"},{"messageId":"2155","fix":"2875","desc":"2157"},{"messageId":"2152","fix":"2876","desc":"2154"},{"messageId":"2155","fix":"2877","desc":"2157"},{"messageId":"2152","fix":"2878","desc":"2154"},{"messageId":"2155","fix":"2879","desc":"2157"},{"messageId":"2152","fix":"2880","desc":"2154"},{"messageId":"2155","fix":"2881","desc":"2157"},{"messageId":"2152","fix":"2882","desc":"2154"},{"messageId":"2155","fix":"2883","desc":"2157"},{"messageId":"2152","fix":"2884","desc":"2154"},{"messageId":"2155","fix":"2885","desc":"2157"},{"messageId":"2152","fix":"2886","desc":"2154"},{"messageId":"2155","fix":"2887","desc":"2157"},{"messageId":"2152","fix":"2888","desc":"2154"},{"messageId":"2155","fix":"2889","desc":"2157"},{"messageId":"2152","fix":"2890","desc":"2154"},{"messageId":"2155","fix":"2891","desc":"2157"},{"messageId":"2152","fix":"2892","desc":"2154"},{"messageId":"2155","fix":"2893","desc":"2157"},{"messageId":"2152","fix":"2894","desc":"2154"},{"messageId":"2155","fix":"2895","desc":"2157"},{"messageId":"2152","fix":"2896","desc":"2154"},{"messageId":"2155","fix":"2897","desc":"2157"},{"messageId":"2152","fix":"2898","desc":"2154"},{"messageId":"2155","fix":"2899","desc":"2157"},{"messageId":"2152","fix":"2900","desc":"2154"},{"messageId":"2155","fix":"2901","desc":"2157"},{"messageId":"2152","fix":"2902","desc":"2154"},{"messageId":"2155","fix":"2903","desc":"2157"},{"messageId":"2152","fix":"2904","desc":"2154"},{"messageId":"2155","fix":"2905","desc":"2157"},{"messageId":"2152","fix":"2906","desc":"2154"},{"messageId":"2155","fix":"2907","desc":"2157"},{"messageId":"2152","fix":"2908","desc":"2154"},{"messageId":"2155","fix":"2909","desc":"2157"},{"messageId":"2152","fix":"2910","desc":"2154"},{"messageId":"2155","fix":"2911","desc":"2157"},{"messageId":"2152","fix":"2912","desc":"2154"},{"messageId":"2155","fix":"2913","desc":"2157"},{"messageId":"2152","fix":"2914","desc":"2154"},{"messageId":"2155","fix":"2915","desc":"2157"},{"messageId":"2152","fix":"2916","desc":"2154"},{"messageId":"2155","fix":"2917","desc":"2157"},{"messageId":"2152","fix":"2918","desc":"2154"},{"messageId":"2155","fix":"2919","desc":"2157"},{"messageId":"2152","fix":"2920","desc":"2154"},{"messageId":"2155","fix":"2921","desc":"2157"},{"messageId":"2152","fix":"2922","desc":"2154"},{"messageId":"2155","fix":"2923","desc":"2157"},{"messageId":"2152","fix":"2924","desc":"2154"},{"messageId":"2155","fix":"2925","desc":"2157"},{"messageId":"2152","fix":"2926","desc":"2154"},{"messageId":"2155","fix":"2927","desc":"2157"},{"messageId":"2152","fix":"2928","desc":"2154"},{"messageId":"2155","fix":"2929","desc":"2157"},{"messageId":"2152","fix":"2930","desc":"2154"},{"messageId":"2155","fix":"2931","desc":"2157"},{"messageId":"2152","fix":"2932","desc":"2154"},{"messageId":"2155","fix":"2933","desc":"2157"},{"messageId":"2152","fix":"2934","desc":"2154"},{"messageId":"2155","fix":"2935","desc":"2157"},{"messageId":"2152","fix":"2936","desc":"2154"},{"messageId":"2155","fix":"2937","desc":"2157"},{"messageId":"2152","fix":"2938","desc":"2154"},{"messageId":"2155","fix":"2939","desc":"2157"},{"messageId":"2152","fix":"2940","desc":"2154"},{"messageId":"2155","fix":"2941","desc":"2157"},{"messageId":"2152","fix":"2942","desc":"2154"},{"messageId":"2155","fix":"2943","desc":"2157"},{"messageId":"2152","fix":"2944","desc":"2154"},{"messageId":"2155","fix":"2945","desc":"2157"},{"messageId":"2152","fix":"2946","desc":"2154"},{"messageId":"2155","fix":"2947","desc":"2157"},{"messageId":"2152","fix":"2948","desc":"2154"},{"messageId":"2155","fix":"2949","desc":"2157"},{"messageId":"2152","fix":"2950","desc":"2154"},{"messageId":"2155","fix":"2951","desc":"2157"},{"messageId":"2152","fix":"2952","desc":"2154"},{"messageId":"2155","fix":"2953","desc":"2157"},{"messageId":"2152","fix":"2954","desc":"2154"},{"messageId":"2155","fix":"2955","desc":"2157"},{"messageId":"2152","fix":"2956","desc":"2154"},{"messageId":"2155","fix":"2957","desc":"2157"},{"messageId":"2152","fix":"2958","desc":"2154"},{"messageId":"2155","fix":"2959","desc":"2157"},{"messageId":"2152","fix":"2960","desc":"2154"},{"messageId":"2155","fix":"2961","desc":"2157"},{"messageId":"2152","fix":"2962","desc":"2154"},{"messageId":"2155","fix":"2963","desc":"2157"},{"messageId":"2152","fix":"2964","desc":"2154"},{"messageId":"2155","fix":"2965","desc":"2157"},"Update the dependencies array to be: [inventoryService]",{"range":"2966","text":"2967"},"Update the dependencies array to be: [endDate, inventoryService, startDate]",{"range":"2968","text":"2969"},"Update the dependencies array to be: [dispatch]",{"range":"2970","text":"2971"},"Update the dependencies array to be: [props.filename, props.selectedInvoice, tesseractService]",{"range":"2972","text":"2973"},"Update the dependencies array to be: [inventoryService, newInventoryData]",{"range":"2974","text":"2975"},"Update the dependencies array to be: [props.isAuth, user]",{"range":"2976","text":"2977"},"removeEscape",{"range":"2978","text":"2979"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"2980","text":"2981"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"2982","text":"2979"},{"range":"2983","text":"2981"},{"range":"2984","text":"2979"},{"range":"2985","text":"2981"},{"range":"2986","text":"2979"},{"range":"2987","text":"2981"},{"range":"2988","text":"2979"},{"range":"2989","text":"2981"},{"range":"2990","text":"2979"},{"range":"2991","text":"2981"},{"range":"2992","text":"2979"},{"range":"2993","text":"2981"},{"range":"2994","text":"2979"},{"range":"2995","text":"2981"},{"range":"2996","text":"2979"},{"range":"2997","text":"2981"},{"range":"2998","text":"2979"},{"range":"2999","text":"2981"},{"range":"3000","text":"2979"},{"range":"3001","text":"2981"},{"range":"3002","text":"2979"},{"range":"3003","text":"2981"},{"range":"3004","text":"2979"},{"range":"3005","text":"2981"},{"range":"3006","text":"2979"},{"range":"3007","text":"2981"},{"range":"3008","text":"2979"},{"range":"3009","text":"2981"},{"range":"3010","text":"2979"},{"range":"3011","text":"2981"},{"range":"3012","text":"2979"},{"range":"3013","text":"2981"},{"range":"3014","text":"2979"},{"range":"3015","text":"2981"},{"range":"3016","text":"2979"},{"range":"3017","text":"2981"},{"range":"3018","text":"2979"},{"range":"3019","text":"2981"},{"range":"3020","text":"2979"},{"range":"3021","text":"2981"},{"range":"3022","text":"2979"},{"range":"3023","text":"2981"},{"range":"3024","text":"2979"},{"range":"3025","text":"2981"},{"range":"3026","text":"2979"},{"range":"3027","text":"2981"},{"range":"3028","text":"2979"},{"range":"3029","text":"2981"},{"range":"3030","text":"2979"},{"range":"3031","text":"2981"},{"range":"3032","text":"2979"},{"range":"3033","text":"2981"},{"range":"3034","text":"2979"},{"range":"3035","text":"2981"},{"range":"3036","text":"2979"},{"range":"3037","text":"2981"},{"range":"3038","text":"2979"},{"range":"3039","text":"2981"},{"range":"3040","text":"2979"},{"range":"3041","text":"2981"},{"range":"3042","text":"2979"},{"range":"3043","text":"2981"},{"range":"3044","text":"2979"},{"range":"3045","text":"2981"},{"range":"3046","text":"2979"},{"range":"3047","text":"2981"},{"range":"3048","text":"2979"},{"range":"3049","text":"2981"},{"range":"3050","text":"2979"},{"range":"3051","text":"2981"},{"range":"3052","text":"2979"},{"range":"3053","text":"2981"},{"range":"3054","text":"2979"},{"range":"3055","text":"2981"},{"range":"3056","text":"2979"},{"range":"3057","text":"2981"},{"range":"3058","text":"2979"},{"range":"3059","text":"2981"},{"range":"3060","text":"2979"},{"range":"3061","text":"2981"},{"range":"3062","text":"2979"},{"range":"3063","text":"2981"},{"range":"3064","text":"2979"},{"range":"3065","text":"2981"},{"range":"3066","text":"2979"},{"range":"3067","text":"2981"},{"range":"3068","text":"2979"},{"range":"3069","text":"2981"},{"range":"3070","text":"2979"},{"range":"3071","text":"2981"},{"range":"3072","text":"2979"},{"range":"3073","text":"2981"},{"range":"3074","text":"2979"},{"range":"3075","text":"2981"},{"range":"3076","text":"2979"},{"range":"3077","text":"2981"},{"range":"3078","text":"2979"},{"range":"3079","text":"2981"},{"range":"3080","text":"2979"},{"range":"3081","text":"2981"},{"range":"3082","text":"2979"},{"range":"3083","text":"2981"},{"range":"3084","text":"2979"},{"range":"3085","text":"2981"},{"range":"3086","text":"2979"},{"range":"3087","text":"2981"},{"range":"3088","text":"2979"},{"range":"3089","text":"2981"},{"range":"3090","text":"2979"},{"range":"3091","text":"2981"},{"range":"3092","text":"2979"},{"range":"3093","text":"2981"},{"range":"3094","text":"2979"},{"range":"3095","text":"2981"},{"range":"3096","text":"2979"},{"range":"3097","text":"2981"},{"range":"3098","text":"2979"},{"range":"3099","text":"2981"},{"range":"3100","text":"2979"},{"range":"3101","text":"2981"},{"range":"3102","text":"2979"},{"range":"3103","text":"2981"},{"range":"3104","text":"2979"},{"range":"3105","text":"2981"},{"range":"3106","text":"2979"},{"range":"3107","text":"2981"},{"range":"3108","text":"2979"},{"range":"3109","text":"2981"},{"range":"3110","text":"2979"},{"range":"3111","text":"2981"},{"range":"3112","text":"2979"},{"range":"3113","text":"2981"},{"range":"3114","text":"2979"},{"range":"3115","text":"2981"},{"range":"3116","text":"2979"},{"range":"3117","text":"2981"},{"range":"3118","text":"2979"},{"range":"3119","text":"2981"},{"range":"3120","text":"2979"},{"range":"3121","text":"2981"},{"range":"3122","text":"2979"},{"range":"3123","text":"2981"},{"range":"3124","text":"2979"},{"range":"3125","text":"2981"},{"range":"3126","text":"2979"},{"range":"3127","text":"2981"},{"range":"3128","text":"2979"},{"range":"3129","text":"2981"},{"range":"3130","text":"2979"},{"range":"3131","text":"2981"},{"range":"3132","text":"2979"},{"range":"3133","text":"2981"},{"range":"3134","text":"2979"},{"range":"3135","text":"2981"},{"range":"3136","text":"2979"},{"range":"3137","text":"2981"},{"range":"3138","text":"2979"},{"range":"3139","text":"2981"},{"range":"3140","text":"2979"},{"range":"3141","text":"2981"},{"range":"3142","text":"2979"},{"range":"3143","text":"2981"},{"range":"3144","text":"2979"},{"range":"3145","text":"2981"},{"range":"3146","text":"2979"},{"range":"3147","text":"2981"},{"range":"3148","text":"2979"},{"range":"3149","text":"2981"},{"range":"3150","text":"2979"},{"range":"3151","text":"2981"},{"range":"3152","text":"2979"},{"range":"3153","text":"2981"},{"range":"3154","text":"2979"},{"range":"3155","text":"2981"},{"range":"3156","text":"2979"},{"range":"3157","text":"2981"},{"range":"3158","text":"2979"},{"range":"3159","text":"2981"},{"range":"3160","text":"2979"},{"range":"3161","text":"2981"},{"range":"3162","text":"2979"},{"range":"3163","text":"2981"},{"range":"3164","text":"2979"},{"range":"3165","text":"2981"},{"range":"3166","text":"2979"},{"range":"3167","text":"2981"},{"range":"3168","text":"2979"},{"range":"3169","text":"2981"},{"range":"3170","text":"2979"},{"range":"3171","text":"2981"},{"range":"3172","text":"2979"},{"range":"3173","text":"2981"},{"range":"3174","text":"2979"},{"range":"3175","text":"2981"},{"range":"3176","text":"2979"},{"range":"3177","text":"2981"},{"range":"3178","text":"2979"},{"range":"3179","text":"2981"},{"range":"3180","text":"2979"},{"range":"3181","text":"2981"},{"range":"3182","text":"2979"},{"range":"3183","text":"2981"},{"range":"3184","text":"2979"},{"range":"3185","text":"2981"},{"range":"3186","text":"2979"},{"range":"3187","text":"2981"},{"range":"3188","text":"2979"},{"range":"3189","text":"2981"},{"range":"3190","text":"2979"},{"range":"3191","text":"2981"},{"range":"3192","text":"2979"},{"range":"3193","text":"2981"},{"range":"3194","text":"2979"},{"range":"3195","text":"2981"},{"range":"3196","text":"2979"},{"range":"3197","text":"2981"},{"range":"3198","text":"2979"},{"range":"3199","text":"2981"},{"range":"3200","text":"2979"},{"range":"3201","text":"2981"},{"range":"3202","text":"2979"},{"range":"3203","text":"2981"},{"range":"3204","text":"2979"},{"range":"3205","text":"2981"},{"range":"3206","text":"2979"},{"range":"3207","text":"2981"},{"range":"3208","text":"2979"},{"range":"3209","text":"2981"},{"range":"3210","text":"2979"},{"range":"3211","text":"2981"},{"range":"3212","text":"2979"},{"range":"3213","text":"2981"},{"range":"3214","text":"2979"},{"range":"3215","text":"2981"},{"range":"3216","text":"2979"},{"range":"3217","text":"2981"},{"range":"3218","text":"2979"},{"range":"3219","text":"2981"},{"range":"3220","text":"2979"},{"range":"3221","text":"2981"},{"range":"3222","text":"2979"},{"range":"3223","text":"2981"},{"range":"3224","text":"2979"},{"range":"3225","text":"2981"},{"range":"3226","text":"2979"},{"range":"3227","text":"2981"},{"range":"3228","text":"2979"},{"range":"3229","text":"2981"},{"range":"3230","text":"2979"},{"range":"3231","text":"2981"},{"range":"3232","text":"2979"},{"range":"3233","text":"2981"},{"range":"3234","text":"2979"},{"range":"3235","text":"2981"},{"range":"3236","text":"2979"},{"range":"3237","text":"2981"},{"range":"3238","text":"2979"},{"range":"3239","text":"2981"},{"range":"3240","text":"2979"},{"range":"3241","text":"2981"},{"range":"3242","text":"2979"},{"range":"3243","text":"2981"},{"range":"3244","text":"2979"},{"range":"3245","text":"2981"},{"range":"3246","text":"2979"},{"range":"3247","text":"2981"},{"range":"3248","text":"2979"},{"range":"3249","text":"2981"},{"range":"3250","text":"2979"},{"range":"3251","text":"2981"},{"range":"3252","text":"2979"},{"range":"3253","text":"2981"},{"range":"3254","text":"2979"},{"range":"3255","text":"2981"},{"range":"3256","text":"2979"},{"range":"3257","text":"2981"},{"range":"3258","text":"2979"},{"range":"3259","text":"2981"},{"range":"3260","text":"2979"},{"range":"3261","text":"2981"},{"range":"3262","text":"2979"},{"range":"3263","text":"2981"},{"range":"3264","text":"2979"},{"range":"3265","text":"2981"},{"range":"3266","text":"2979"},{"range":"3267","text":"2981"},{"range":"3268","text":"2979"},{"range":"3269","text":"2981"},{"range":"3270","text":"2979"},{"range":"3271","text":"2981"},{"range":"3272","text":"2979"},{"range":"3273","text":"2981"},{"range":"3274","text":"2979"},{"range":"3275","text":"2981"},{"range":"3276","text":"2979"},{"range":"3277","text":"2981"},{"range":"3278","text":"2979"},{"range":"3279","text":"2981"},{"range":"3280","text":"2979"},{"range":"3281","text":"2981"},{"range":"3282","text":"2979"},{"range":"3283","text":"2981"},{"range":"3284","text":"2979"},{"range":"3285","text":"2981"},{"range":"3286","text":"2979"},{"range":"3287","text":"2981"},{"range":"3288","text":"2979"},{"range":"3289","text":"2981"},{"range":"3290","text":"2979"},{"range":"3291","text":"2981"},{"range":"3292","text":"2979"},{"range":"3293","text":"2981"},{"range":"3294","text":"2979"},{"range":"3295","text":"2981"},{"range":"3296","text":"2979"},{"range":"3297","text":"2981"},{"range":"3298","text":"2979"},{"range":"3299","text":"2981"},{"range":"3300","text":"2979"},{"range":"3301","text":"2981"},{"range":"3302","text":"2979"},{"range":"3303","text":"2981"},{"range":"3304","text":"2979"},{"range":"3305","text":"2981"},{"range":"3306","text":"2979"},{"range":"3307","text":"2981"},{"range":"3308","text":"2979"},{"range":"3309","text":"2981"},{"range":"3310","text":"2979"},{"range":"3311","text":"2981"},{"range":"3312","text":"2979"},{"range":"3313","text":"2981"},{"range":"3314","text":"2979"},{"range":"3315","text":"2981"},{"range":"3316","text":"2979"},{"range":"3317","text":"2981"},{"range":"3318","text":"2979"},{"range":"3319","text":"2981"},{"range":"3320","text":"2979"},{"range":"3321","text":"2981"},{"range":"3322","text":"2979"},{"range":"3323","text":"2981"},{"range":"3324","text":"2979"},{"range":"3325","text":"2981"},{"range":"3326","text":"2979"},{"range":"3327","text":"2981"},{"range":"3328","text":"2979"},{"range":"3329","text":"2981"},{"range":"3330","text":"2979"},{"range":"3331","text":"2981"},{"range":"3332","text":"2979"},{"range":"3333","text":"2981"},{"range":"3334","text":"2979"},{"range":"3335","text":"2981"},{"range":"3336","text":"2979"},{"range":"3337","text":"2981"},{"range":"3338","text":"2979"},{"range":"3339","text":"2981"},{"range":"3340","text":"2979"},{"range":"3341","text":"2981"},{"range":"3342","text":"2979"},{"range":"3343","text":"2981"},{"range":"3344","text":"2979"},{"range":"3345","text":"2981"},{"range":"3346","text":"2979"},{"range":"3347","text":"2981"},{"range":"3348","text":"2979"},{"range":"3349","text":"2981"},{"range":"3350","text":"2979"},{"range":"3351","text":"2981"},{"range":"3352","text":"2979"},{"range":"3353","text":"2981"},{"range":"3354","text":"2979"},{"range":"3355","text":"2981"},{"range":"3356","text":"2979"},{"range":"3357","text":"2981"},{"range":"3358","text":"2979"},{"range":"3359","text":"2981"},{"range":"3360","text":"2979"},{"range":"3361","text":"2981"},{"range":"3362","text":"2979"},{"range":"3363","text":"2981"},{"range":"3364","text":"2979"},{"range":"3365","text":"2981"},{"range":"3366","text":"2979"},{"range":"3367","text":"2981"},{"range":"3368","text":"2979"},{"range":"3369","text":"2981"},{"range":"3370","text":"2979"},{"range":"3371","text":"2981"},{"range":"3372","text":"2979"},{"range":"3373","text":"2981"},{"range":"3374","text":"2979"},{"range":"3375","text":"2981"},{"range":"3376","text":"2979"},{"range":"3377","text":"2981"},{"range":"3378","text":"2979"},{"range":"3379","text":"2981"},{"range":"3380","text":"2979"},{"range":"3381","text":"2981"},{"range":"3382","text":"2979"},{"range":"3383","text":"2981"},{"range":"3384","text":"2979"},{"range":"3385","text":"2981"},{"range":"3386","text":"2979"},{"range":"3387","text":"2981"},{"range":"3388","text":"2979"},{"range":"3389","text":"2981"},{"range":"3390","text":"2979"},{"range":"3391","text":"2981"},{"range":"3392","text":"2979"},{"range":"3393","text":"2981"},{"range":"3394","text":"2979"},{"range":"3395","text":"2981"},{"range":"3396","text":"2979"},{"range":"3397","text":"2981"},{"range":"3398","text":"2979"},{"range":"3399","text":"2981"},{"range":"3400","text":"2979"},{"range":"3401","text":"2981"},{"range":"3402","text":"2979"},{"range":"3403","text":"2981"},{"range":"3404","text":"2979"},{"range":"3405","text":"2981"},{"range":"3406","text":"2979"},{"range":"3407","text":"2981"},{"range":"3408","text":"2979"},{"range":"3409","text":"2981"},{"range":"3410","text":"2979"},{"range":"3411","text":"2981"},{"range":"3412","text":"2979"},{"range":"3413","text":"2981"},{"range":"3414","text":"2979"},{"range":"3415","text":"2981"},{"range":"3416","text":"2979"},{"range":"3417","text":"2981"},{"range":"3418","text":"2979"},{"range":"3419","text":"2981"},{"range":"3420","text":"2979"},{"range":"3421","text":"2981"},{"range":"3422","text":"2979"},{"range":"3423","text":"2981"},{"range":"3424","text":"2979"},{"range":"3425","text":"2981"},{"range":"3426","text":"2979"},{"range":"3427","text":"2981"},{"range":"3428","text":"2979"},{"range":"3429","text":"2981"},{"range":"3430","text":"2979"},{"range":"3431","text":"2981"},{"range":"3432","text":"2979"},{"range":"3433","text":"2981"},{"range":"3434","text":"2979"},{"range":"3435","text":"2981"},{"range":"3436","text":"2979"},{"range":"3437","text":"2981"},{"range":"3438","text":"2979"},{"range":"3439","text":"2981"},{"range":"3440","text":"2979"},{"range":"3441","text":"2981"},{"range":"3442","text":"2979"},{"range":"3443","text":"2981"},{"range":"3444","text":"2979"},{"range":"3445","text":"2981"},{"range":"3446","text":"2979"},{"range":"3447","text":"2981"},{"range":"3448","text":"2979"},{"range":"3449","text":"2981"},{"range":"3450","text":"2979"},{"range":"3451","text":"2981"},{"range":"3452","text":"2979"},{"range":"3453","text":"2981"},{"range":"3454","text":"2979"},{"range":"3455","text":"2981"},{"range":"3456","text":"2979"},{"range":"3457","text":"2981"},{"range":"3458","text":"2979"},{"range":"3459","text":"2981"},{"range":"3460","text":"2979"},{"range":"3461","text":"2981"},{"range":"3462","text":"2979"},{"range":"3463","text":"2981"},{"range":"3464","text":"2979"},{"range":"3465","text":"2981"},{"range":"3466","text":"2979"},{"range":"3467","text":"2981"},{"range":"3468","text":"2979"},{"range":"3469","text":"2981"},{"range":"3470","text":"2979"},{"range":"3471","text":"2981"},{"range":"3472","text":"2979"},{"range":"3473","text":"2981"},{"range":"3474","text":"2979"},{"range":"3475","text":"2981"},{"range":"3476","text":"2979"},{"range":"3477","text":"2981"},{"range":"3478","text":"2979"},{"range":"3479","text":"2981"},{"range":"3480","text":"2979"},{"range":"3481","text":"2981"},{"range":"3482","text":"2979"},{"range":"3483","text":"2981"},{"range":"3484","text":"2979"},{"range":"3485","text":"2981"},{"range":"3486","text":"2979"},{"range":"3487","text":"2981"},{"range":"3488","text":"2979"},{"range":"3489","text":"2981"},{"range":"3490","text":"2979"},{"range":"3491","text":"2981"},{"range":"3492","text":"2979"},{"range":"3493","text":"2981"},{"range":"3494","text":"2979"},{"range":"3495","text":"2981"},{"range":"3496","text":"2979"},{"range":"3497","text":"2981"},{"range":"3498","text":"2979"},{"range":"3499","text":"2981"},{"range":"3500","text":"2979"},{"range":"3501","text":"2981"},{"range":"3502","text":"2979"},{"range":"3503","text":"2981"},{"range":"3504","text":"2979"},{"range":"3505","text":"2981"},{"range":"3506","text":"2979"},{"range":"3507","text":"2981"},{"range":"3508","text":"2979"},{"range":"3509","text":"2981"},{"range":"3510","text":"2979"},{"range":"3511","text":"2981"},{"range":"3512","text":"2979"},{"range":"3513","text":"2981"},{"range":"3514","text":"2979"},{"range":"3515","text":"2981"},{"range":"3516","text":"2979"},{"range":"3517","text":"2981"},{"range":"3518","text":"2979"},{"range":"3519","text":"2981"},{"range":"3520","text":"2979"},{"range":"3521","text":"2981"},{"range":"3522","text":"2979"},{"range":"3523","text":"2981"},{"range":"3524","text":"2979"},{"range":"3525","text":"2981"},{"range":"3526","text":"2979"},{"range":"3527","text":"2981"},{"range":"3528","text":"2979"},{"range":"3529","text":"2981"},{"range":"3530","text":"2979"},{"range":"3531","text":"2981"},{"range":"3532","text":"2979"},{"range":"3533","text":"2981"},{"range":"3534","text":"2979"},{"range":"3535","text":"2981"},{"range":"3536","text":"2979"},{"range":"3537","text":"2981"},{"range":"3538","text":"2979"},{"range":"3539","text":"2981"},{"range":"3540","text":"2979"},{"range":"3541","text":"2981"},{"range":"3542","text":"2979"},{"range":"3543","text":"2981"},{"range":"3544","text":"2979"},{"range":"3545","text":"2981"},{"range":"3546","text":"2979"},{"range":"3547","text":"2981"},{"range":"3548","text":"2979"},{"range":"3549","text":"2981"},{"range":"3550","text":"2979"},{"range":"3551","text":"2981"},{"range":"3552","text":"2979"},{"range":"3553","text":"2981"},{"range":"3554","text":"2979"},{"range":"3555","text":"2981"},{"range":"3556","text":"2979"},{"range":"3557","text":"2981"},{"range":"3558","text":"2979"},{"range":"3559","text":"2981"},{"range":"3560","text":"2979"},{"range":"3561","text":"2981"},{"range":"3562","text":"2979"},{"range":"3563","text":"2981"},{"range":"3564","text":"2979"},{"range":"3565","text":"2981"},{"range":"3566","text":"2979"},{"range":"3567","text":"2981"},{"range":"3568","text":"2979"},{"range":"3569","text":"2981"},{"range":"3570","text":"2979"},{"range":"3571","text":"2981"},{"range":"3572","text":"2979"},{"range":"3573","text":"2981"},{"range":"3574","text":"2979"},{"range":"3575","text":"2981"},{"range":"3576","text":"2979"},{"range":"3577","text":"2981"},{"range":"3578","text":"2979"},{"range":"3579","text":"2981"},{"range":"3580","text":"2979"},{"range":"3581","text":"2981"},{"range":"3582","text":"2979"},{"range":"3583","text":"2981"},{"range":"3584","text":"2979"},{"range":"3585","text":"2981"},{"range":"3586","text":"2979"},{"range":"3587","text":"2981"},{"range":"3588","text":"2979"},{"range":"3589","text":"2981"},{"range":"3590","text":"2979"},{"range":"3591","text":"2981"},{"range":"3592","text":"2979"},{"range":"3593","text":"2981"},{"range":"3594","text":"2979"},{"range":"3595","text":"2981"},{"range":"3596","text":"2979"},{"range":"3597","text":"2981"},{"range":"3598","text":"2979"},{"range":"3599","text":"2981"},{"range":"3600","text":"2979"},{"range":"3601","text":"2981"},{"range":"3602","text":"2979"},{"range":"3603","text":"2981"},{"range":"3604","text":"2979"},{"range":"3605","text":"2981"},{"range":"3606","text":"2979"},{"range":"3607","text":"2981"},{"range":"3608","text":"2979"},{"range":"3609","text":"2981"},{"range":"3610","text":"2979"},{"range":"3611","text":"2981"},{"range":"3612","text":"2979"},{"range":"3613","text":"2981"},{"range":"3614","text":"2979"},{"range":"3615","text":"2981"},{"range":"3616","text":"2979"},{"range":"3617","text":"2981"},{"range":"3618","text":"2979"},{"range":"3619","text":"2981"},{"range":"3620","text":"2979"},{"range":"3621","text":"2981"},{"range":"3622","text":"2979"},{"range":"3623","text":"2981"},{"range":"3624","text":"2979"},{"range":"3625","text":"2981"},{"range":"3626","text":"2979"},{"range":"3627","text":"2981"},{"range":"3628","text":"2979"},{"range":"3629","text":"2981"},{"range":"3630","text":"2979"},{"range":"3631","text":"2981"},{"range":"3632","text":"2979"},{"range":"3633","text":"2981"},{"range":"3634","text":"2979"},{"range":"3635","text":"2981"},{"range":"3636","text":"2979"},{"range":"3637","text":"2981"},{"range":"3638","text":"2979"},{"range":"3639","text":"2981"},{"range":"3640","text":"2979"},{"range":"3641","text":"2981"},{"range":"3642","text":"2979"},{"range":"3643","text":"2981"},{"range":"3644","text":"2979"},{"range":"3645","text":"2981"},{"range":"3646","text":"2979"},{"range":"3647","text":"2981"},{"range":"3648","text":"2979"},{"range":"3649","text":"2981"},{"range":"3650","text":"2979"},{"range":"3651","text":"2981"},{"range":"3652","text":"2979"},{"range":"3653","text":"2981"},{"range":"3654","text":"2979"},{"range":"3655","text":"2981"},{"range":"3656","text":"2979"},{"range":"3657","text":"2981"},{"range":"3658","text":"2979"},{"range":"3659","text":"2981"},{"range":"3660","text":"2979"},{"range":"3661","text":"2981"},{"range":"3662","text":"2979"},{"range":"3663","text":"2981"},{"range":"3664","text":"2979"},{"range":"3665","text":"2981"},{"range":"3666","text":"2979"},{"range":"3667","text":"2981"},{"range":"3668","text":"2979"},{"range":"3669","text":"2981"},{"range":"3670","text":"2979"},{"range":"3671","text":"2981"},{"range":"3672","text":"2979"},{"range":"3673","text":"2981"},{"range":"3674","text":"2979"},{"range":"3675","text":"2981"},{"range":"3676","text":"2979"},{"range":"3677","text":"2981"},{"range":"3678","text":"2979"},{"range":"3679","text":"2981"},{"range":"3680","text":"2979"},{"range":"3681","text":"2981"},{"range":"3682","text":"2979"},{"range":"3683","text":"2981"},{"range":"3684","text":"2979"},{"range":"3685","text":"2981"},{"range":"3686","text":"2979"},{"range":"3687","text":"2981"},{"range":"3688","text":"2979"},{"range":"3689","text":"2981"},{"range":"3690","text":"2979"},{"range":"3691","text":"2981"},{"range":"3692","text":"2979"},{"range":"3693","text":"2981"},{"range":"3694","text":"2979"},{"range":"3695","text":"2981"},{"range":"3696","text":"2979"},{"range":"3697","text":"2981"},{"range":"3698","text":"2979"},{"range":"3699","text":"2981"},{"range":"3700","text":"2979"},{"range":"3701","text":"2981"},{"range":"3702","text":"2979"},{"range":"3703","text":"2981"},{"range":"3704","text":"2979"},{"range":"3705","text":"2981"},{"range":"3706","text":"2979"},{"range":"3707","text":"2981"},{"range":"3708","text":"2979"},{"range":"3709","text":"2981"},{"range":"3710","text":"2979"},{"range":"3711","text":"2981"},{"range":"3712","text":"2979"},{"range":"3713","text":"2981"},{"range":"3714","text":"2979"},{"range":"3715","text":"2981"},{"range":"3716","text":"2979"},{"range":"3717","text":"2981"},{"range":"3718","text":"2979"},{"range":"3719","text":"2981"},{"range":"3720","text":"2979"},{"range":"3721","text":"2981"},{"range":"3722","text":"2979"},{"range":"3723","text":"2981"},{"range":"3724","text":"2979"},{"range":"3725","text":"2981"},{"range":"3726","text":"2979"},{"range":"3727","text":"2981"},{"range":"3728","text":"2979"},{"range":"3729","text":"2981"},{"range":"3730","text":"2979"},{"range":"3731","text":"2981"},{"range":"3732","text":"2979"},{"range":"3733","text":"2981"},{"range":"3734","text":"2979"},{"range":"3735","text":"2981"},{"range":"3736","text":"2979"},{"range":"3737","text":"2981"},{"range":"3738","text":"2979"},{"range":"3739","text":"2981"},{"range":"3740","text":"2979"},{"range":"3741","text":"2981"},{"range":"3742","text":"2979"},{"range":"3743","text":"2981"},{"range":"3744","text":"2979"},{"range":"3745","text":"2981"},{"range":"3746","text":"2979"},{"range":"3747","text":"2981"},{"range":"3748","text":"2979"},{"range":"3749","text":"2981"},{"range":"3750","text":"2979"},{"range":"3751","text":"2981"},{"range":"3752","text":"2979"},{"range":"3753","text":"2981"},{"range":"3754","text":"2979"},{"range":"3755","text":"2981"},{"range":"3756","text":"2979"},{"range":"3757","text":"2981"},{"range":"3758","text":"2979"},{"range":"3759","text":"2981"},{"range":"3760","text":"2979"},{"range":"3761","text":"2981"},{"range":"3762","text":"2979"},{"range":"3763","text":"2981"},{"range":"3764","text":"2979"},{"range":"3765","text":"2981"},{"range":"3766","text":"2979"},{"range":"3767","text":"2981"},{"range":"3768","text":"2979"},{"range":"3769","text":"2981"},{"range":"3770","text":"2979"},{"range":"3771","text":"2981"},{"range":"3772","text":"2979"},{"range":"3773","text":"2981"},{"range":"3774","text":"2979"},{"range":"3775","text":"2981"},{"range":"3776","text":"2979"},{"range":"3777","text":"2981"},{"range":"3778","text":"2979"},{"range":"3779","text":"2981"},{"range":"3780","text":"2979"},{"range":"3781","text":"2981"},{"range":"3782","text":"2979"},{"range":"3783","text":"2981"},{"range":"3784","text":"2979"},{"range":"3785","text":"2981"},{"range":"3786","text":"2979"},{"range":"3787","text":"2981"},{"range":"3788","text":"2979"},{"range":"3789","text":"2981"},[2495,2497],"[inventoryService]",[6243,6245],"[endDate, inventoryService, startDate]",[97459,97461],"[dispatch]",[48098,48100],"[props.filename, props.selectedInvoice, tesseractService]",[11019,11021],"[inventoryService, newInventoryData]",[407,413],"[props.isAuth, user]",[84,85],"",[84,84],"\\",[93,94],[93,93],[197,198],[197,197],[206,207],[206,206],[243,244],[243,243],[256,257],[256,256],[258,259],[258,258],[260,261],[260,260],[330,331],[330,330],[339,340],[339,339],[443,444],[443,443],[452,453],[452,452],[489,490],[489,489],[504,505],[504,504],[577,578],[577,577],[586,587],[586,586],[686,687],[686,686],[695,696],[695,695],[732,733],[732,732],[747,748],[747,747],[808,809],[808,808],[817,818],[817,817],[910,911],[910,910],[919,920],[919,919],[956,957],[956,956],[971,972],[971,971],[973,974],[973,973],[1043,1044],[1043,1043],[1052,1053],[1052,1052],[1137,1138],[1137,1137],[1146,1147],[1146,1146],[1183,1184],[1183,1183],[1198,1199],[1198,1198],[1273,1274],[1273,1273],[1390,1391],[1390,1390],[1405,1406],[1405,1405],[1477,1478],[1477,1477],[1572,1573],[1572,1572],[1611,1612],[1611,1611],[1626,1627],[1626,1626],[1685,1686],[1685,1685],[1701,1702],[1701,1701],[1710,1711],[1710,1710],[1719,1720],[1719,1719],[1841,1842],[1841,1841],[1857,1858],[1857,1857],[1866,1867],[1866,1866],[1875,1876],[1875,1875],[1918,1919],[1918,1918],[1933,1934],[1933,1933],[2201,2202],[2201,2201],[2214,2215],[2214,2214],[2456,2457],[2456,2456],[2474,2475],[2474,2474],[2725,2726],[2725,2725],[2741,2742],[2741,2741],[2981,2982],[2981,2981],[2999,3000],[2999,2999],[3053,3054],[3053,3053],[3062,3063],[3062,3062],[3158,3159],[3158,3158],[3167,3168],[3167,3167],[3204,3205],[3204,3204],[3219,3220],[3219,3219],[3296,3297],[3296,3296],[3305,3306],[3305,3305],[3390,3391],[3390,3390],[3399,3400],[3399,3399],[3436,3437],[3436,3436],[3451,3452],[3451,3451],[3453,3454],[3453,3453],[3505,3506],[3505,3505],[3514,3515],[3514,3514],[3610,3611],[3610,3610],[3619,3620],[3619,3619],[3656,3657],[3656,3656],[3671,3672],[3671,3671],[3762,3763],[3762,3762],[3778,3779],[3778,3778],[3881,3882],[3881,3881],[3897,3898],[3897,3897],[3936,3937],[3936,3936],[3951,3952],[3951,3951],[3953,3954],[3953,3953],[4049,4050],[4049,4049],[4058,4059],[4058,4058],[4181,4182],[4181,4181],[4190,4191],[4190,4190],[4231,4232],[4231,4231],[4246,4247],[4246,4246],[4334,4335],[4334,4334],[4343,4344],[4343,4343],[4489,4490],[4489,4489],[4498,4499],[4498,4498],[4539,4540],[4539,4539],[4552,4553],[4552,4552],[4611,4612],[4611,4611],[4620,4621],[4620,4620],[4629,4630],[4629,4629],[4720,4721],[4720,4720],[4729,4730],[4729,4729],[4738,4739],[4738,4738],[4777,4778],[4777,4777],[4790,4791],[4790,4790],[4834,4835],[4834,4834],[4846,4847],[4846,4846],[4862,4863],[4862,4862],[4958,4959],[4958,4958],[4974,4975],[4974,4974],[5014,5015],[5014,5014],[5027,5028],[5027,5027],[5088,5089],[5088,5088],[5097,5098],[5097,5097],[5195,5196],[5195,5195],[5204,5205],[5204,5204],[5243,5244],[5243,5243],[5256,5257],[5256,5256],[5542,5543],[5542,5542],[5555,5556],[5555,5555],[5612,5613],[5612,5612],[5631,5632],[5631,5631],[5736,5737],[5736,5736],[5773,5774],[5773,5773],[5789,5790],[5789,5789],[5791,5792],[5791,5791],[5868,5869],[5868,5868],[5878,5879],[5878,5878],[5887,5888],[5887,5887],[5999,6000],[5999,5999],[6009,6010],[6009,6009],[6018,6019],[6018,6018],[6057,6058],[6057,6057],[6073,6074],[6073,6073],[6145,6146],[6145,6145],[6154,6155],[6154,6154],[6259,6260],[6259,6259],[6268,6269],[6268,6268],[6305,6306],[6305,6305],[6321,6322],[6321,6321],[6524,6525],[6524,6524],[6540,6541],[6540,6540],[6542,6543],[6542,6542],[6609,6610],[6609,6609],[6618,6619],[6618,6618],[6724,6725],[6724,6724],[6733,6734],[6733,6733],[6772,6773],[6772,6772],[6788,6789],[6788,6788],[6851,6852],[6851,6851],[6867,6868],[6867,6867],[6876,6877],[6876,6876],[6977,6978],[6977,6977],[6993,6994],[6993,6993],[7002,7003],[7002,7002],[7043,7044],[7043,7043],[7059,7060],[7059,7059],[7125,7126],[7125,7125],[7134,7135],[7134,7134],[7232,7233],[7232,7232],[7241,7242],[7241,7241],[7280,7281],[7280,7280],[7296,7297],[7296,7296],[7360,7361],[7360,7360],[7369,7370],[7369,7369],[7473,7474],[7473,7473],[7482,7483],[7482,7482],[7519,7520],[7519,7519],[7535,7536],[7535,7535],[7609,7610],[7609,7609],[7618,7619],[7618,7618],[7738,7739],[7738,7738],[7747,7748],[7747,7747],[7786,7787],[7786,7786],[7802,7803],[7802,7802],[7871,7872],[7871,7871],[7880,7881],[7880,7880],[7976,7977],[7976,7976],[7985,7986],[7985,7985],[8022,8023],[8022,8022],[8038,8039],[8038,8038],[8134,8135],[8134,8134],[8143,8144],[8143,8143],[8247,8248],[8247,8247],[8256,8257],[8256,8256],[8293,8294],[8293,8293],[8309,8310],[8309,8309],[8389,8390],[8389,8389],[8398,8399],[8398,8398],[8503,8504],[8503,8503],[8512,8513],[8512,8512],[8550,8551],[8550,8550],[8566,8567],[8566,8566],[8625,8626],[8625,8625],[8634,8635],[8634,8634],[8732,8733],[8732,8732],[8741,8742],[8741,8741],[8780,8781],[8780,8780],[8796,8797],[8796,8796],[8865,8866],[8865,8865],[8947,8948],[8947,8947],[8984,8985],[8984,8984],[9000,9001],[9000,9000],[9070,9071],[9070,9070],[9079,9080],[9079,9079],[9175,9176],[9175,9175],[9184,9185],[9184,9184],[9221,9222],[9221,9221],[9237,9238],[9237,9237],[9239,9240],[9239,9239],[9322,9323],[9322,9322],[9349,9350],[9349,9349],[9358,9359],[9358,9358],[9495,9496],[9495,9495],[9504,9505],[9504,9504],[9543,9544],[9543,9543],[9559,9560],[9559,9559],[9794,9795],[9794,9794],[9810,9811],[9810,9810],[10051,10052],[10051,10051],[10067,10068],[10067,10067],[10345,10346],[10345,10345],[10361,10362],[10361,10361],[10604,10605],[10604,10604],[10620,10621],[10620,10620],[10876,10877],[10876,10876],[10892,10893],[10892,10892],[11134,11135],[11134,11134],[11150,11151],[11150,11150],[11434,11435],[11434,11434],[11450,11451],[11450,11450],[11725,11726],[11725,11725],[11741,11742],[11741,11741],[12049,12050],[12049,12049],[12067,12068],[12067,12067],[12340,12341],[12340,12340],[12358,12359],[12358,12358],[12669,12670],[12669,12669],[12687,12688],[12687,12687],[12997,12998],[12997,12997],[13013,13014],[13013,13013],[13398,13399],[13398,13398],[13417,13418],[13417,13417],[13600,13601],[13600,13600],[13613,13614],[13613,13613],[13615,13616],[13615,13615],[13617,13618],[13617,13617],[13619,13620],[13619,13619],[13705,13706],[13705,13705],[13792,13793],[13792,13792],[13829,13830],[13829,13829],[13842,13843],[13842,13842],[13844,13845],[13844,13844],[13846,13847],[13846,13846],[13848,13849],[13848,13848],[14061,14062],[14061,14061],[14074,14075],[14074,14074],[14076,14077],[14076,14076],[14078,14079],[14078,14078],[14080,14081],[14080,14080],[14150,14151],[14150,14150],[14250,14251],[14250,14250],[14289,14290],[14289,14289],[14302,14303],[14302,14302],[14304,14305],[14304,14304],[14306,14307],[14306,14306],[14308,14309],[14308,14308],[14391,14392],[14391,14391],[14400,14401],[14400,14400],[14532,14533],[14532,14532],[14541,14542],[14541,14541],[14582,14583],[14582,14582],[14595,14596],[14595,14595],[14597,14598],[14597,14597],[14599,14600],[14599,14599],[14669,14670],[14669,14669],[14678,14679],[14678,14678],[14787,14788],[14787,14787],[14796,14797],[14796,14796],[14835,14836],[14835,14835],[14848,14849],[14848,14848],[14850,14851],[14850,14850],[14852,14853],[14852,14852],[15085,15086],[15085,15085],[15098,15099],[15098,15098],[15352,15353],[15352,15352],[15365,15366],[15365,15365],[15669,15670],[15669,15669],[15682,15683],[15682,15682],[15968,15969],[15968,15968],[15981,15982],[15981,15981],[16275,16276],[16275,16275],[16288,16289],[16288,16288],[16540,16541],[16540,16540],[16553,16554],[16553,16553],[16884,16885],[16884,16884],[16897,16898],[16897,16897],[16951,16952],[16951,16951],[16971,16972],[16971,16971],[17067,17068],[17067,17067],[17087,17088],[17087,17087],[17129,17130],[17129,17129],[17141,17142],[17141,17141],[17434,17435],[17434,17434],[17447,17448],[17447,17447],[17720,17721],[17720,17720],[17733,17734],[17733,17733],[18005,18006],[18005,18005],[18018,18019],[18018,18018],[18259,18260],[18259,18259],[18272,18273],[18272,18272],[18622,18623],[18622,18622],[18635,18636],[18635,18635],[18857,18858],[18857,18857],[18872,18873],[18872,18872],[19198,19199],[19198,19198],[19210,19211],[19210,19210],[19438,19439],[19438,19438],[19451,19452],[19451,19451],[19742,19743],[19742,19742],[19755,19756],[19755,19755],[20000,20001],[20000,20000],[20013,20014],[20013,20013],[20244,20245],[20244,20244],[20257,20258],[20257,20257],[20523,20524],[20523,20523],[20536,20537],[20536,20536],[20783,20784],[20783,20783],[20796,20797],[20796,20796],[21033,21034],[21033,21033],[21046,21047],[21046,21046],[21371,21372],[21371,21371],[21384,21385],[21384,21384],[21953,21954],[21953,21953],[21967,21968],[21967,21967],[22234,22235],[22234,22234],[22248,22249],[22248,22248],[22842,22843],[22842,22842],[22855,22856],[22855,22855],[23148,23149],[23148,23148],[23161,23162],[23161,23161],[23401,23402],[23401,23401],[23414,23415],[23414,23414],[23634,23635],[23634,23634],[23648,23649],[23648,23648],[23716,23717],[23716,23716],[23913,23914],[23913,23913],[23926,23927],[23926,23926],[24197,24198],[24197,24197],[24211,24212],[24211,24211],[24480,24481],[24480,24480],[24496,24497],[24496,24496],[24735,24736],[24735,24735],[24751,24752],[24751,24751],[25087,25088],[25087,25087],[25104,25105],[25104,25104],[25330,25331],[25330,25330],[25346,25347],[25346,25346],[25581,25582],[25581,25581],[25597,25598],[25597,25597],[25857,25858],[25857,25857],[25873,25874],[25873,25873],[26129,26130],[26129,26129],[26145,26146],[26145,26145],[26442,26443],[26442,26442],[26458,26459],[26458,26458],[26697,26698],[26697,26697],[26713,26714],[26713,26713],[26982,26983],[26982,26982],[26998,26999],[26998,26998],[27236,27237],[27236,27236],[27252,27253],[27252,27252],[27490,27491],[27490,27490],[27506,27507],[27506,27506],[27732,27733],[27732,27732],[27748,27749],[27748,27748],[27984,27985],[27984,27984],[28000,28001],[28000,28000],[28241,28242],[28241,28241],[28257,28258],[28257,28257],[28522,28523],[28522,28522],[28538,28539],[28538,28538],[28790,28791],[28790,28790],[28806,28807],[28806,28806],[29058,29059],[29058,29058],[29074,29075],[29074,29074],[29832,29833],[29832,29832],[29841,29842],[29841,29841],[29944,29945],[29944,29944],[29953,29954],[29953,29953],[29990,29991],[29990,29990],[30005,30006],[30005,30005],[32746,32747],[32746,32746],[32755,32756],[32755,32755],[32764,32765],[32764,32764],[32773,32774],[32773,32773],[32782,32783],[32782,32782],[32926,32927],[32926,32926],[32935,32936],[32935,32935],[32944,32945],[32944,32944],[32953,32954],[32953,32953],[32962,32963],[32962,32962],[33007,33008],[33007,33007],[33023,33024],[33023,33023],[3297,3298],[3297,3297],[3310,3311],[3310,3310]]