[{"/root/environment/inventory-management/client/src/index.js":"1","/root/environment/inventory-management/client/src/App.js":"2","/root/environment/inventory-management/client/src/store/reducer/reducerAuth.js":"3","/root/environment/inventory-management/client/src/store/action/actionAuth.js":"4","/root/environment/inventory-management/client/src/components/Invoice/Invoice.js":"5","/root/environment/inventory-management/client/src/components/Layout/Layout.js":"6","/root/environment/inventory-management/client/src/components/DisplayData/DisplayData.js":"7","/root/environment/inventory-management/client/src/components/Navigation/Toolbar/Toolbar.js":"8","/root/environment/inventory-management/client/src/services/TesseractService.js":"9","/root/environment/inventory-management/client/src/utils/filterData.js":"10","/root/environment/inventory-management/client/src/components/Navigation/NavigationItems/NavigationItems.js":"11","/root/environment/inventory-management/client/src/components/Navigation/NavigationItems/NavigationItem/NavigationItem.js":"12","/root/environment/inventory-management/client/src/UI/Spinner/Spinner.js":"13","/root/environment/inventory-management/client/src/containers/Auth/Auth.js":"14","/root/environment/inventory-management/client/src/containers/Auth/Logout/Logout.js":"15","/root/environment/inventory-management/client/src/firebase.js":"16","/root/environment/inventory-management/client/src/services/LoginService.js":"17","/root/environment/inventory-management/client/src/UI/LoginPage.js":"18","/root/environment/inventory-management/client/src/services/axios.js":"19","/root/environment/inventory-management/client/src/UI/Button.js":"20","/root/environment/inventory-management/client/src/components/Update/UpdateInventory.js":"21","/root/environment/inventory-management/client/src/utils/invoice-filters/chetak.js":"22","/root/environment/inventory-management/client/src/utils/filter.js":"23","/root/environment/inventory-management/client/src/utils/invoice-filters/krishna-foods.js":"24","/root/environment/inventory-management/client/src/utils/optionData.js":"25"},{"size":697,"mtime":1614833803677,"results":"26","hashOfConfig":"27"},{"size":1700,"mtime":1614833803677,"results":"28","hashOfConfig":"27"},{"size":1004,"mtime":1614833803677,"results":"29","hashOfConfig":"27"},{"size":3706,"mtime":1614833803677,"results":"30","hashOfConfig":"27"},{"size":6060,"mtime":1614834408556,"results":"31","hashOfConfig":"27"},{"size":419,"mtime":1612510117669,"results":"32","hashOfConfig":"27"},{"size":12011,"mtime":1614835494779,"results":"33","hashOfConfig":"27"},{"size":718,"mtime":1614833803677,"results":"34","hashOfConfig":"27"},{"size":591,"mtime":1614833803677,"results":"35","hashOfConfig":"27"},{"size":1102,"mtime":1614833803677,"results":"36","hashOfConfig":"27"},{"size":676,"mtime":1614833803677,"results":"37","hashOfConfig":"27"},{"size":418,"mtime":1612510117669,"results":"38","hashOfConfig":"27"},{"size":167,"mtime":1614833803677,"results":"39","hashOfConfig":"27"},{"size":1633,"mtime":1614833803677,"results":"40","hashOfConfig":"27"},{"size":498,"mtime":1614833803677,"results":"41","hashOfConfig":"27"},{"size":603,"mtime":1614833803677,"results":"42","hashOfConfig":"27"},{"size":187,"mtime":1614833803677,"results":"43","hashOfConfig":"27"},{"size":1452,"mtime":1614833803677,"results":"44","hashOfConfig":"27"},{"size":438,"mtime":1614833803677,"results":"45","hashOfConfig":"27"},{"size":316,"mtime":1614833803677,"results":"46","hashOfConfig":"27"},{"size":4494,"mtime":1614833803677,"results":"47","hashOfConfig":"27"},{"size":19158,"mtime":1614835737890,"results":"48","hashOfConfig":"27"},{"size":2151,"mtime":1614833803677,"results":"49","hashOfConfig":"27"},{"size":2853,"mtime":1614833803681,"results":"50","hashOfConfig":"27"},{"size":1451,"mtime":1614833803681,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11gq97j",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/root/environment/inventory-management/client/src/index.js",[],"/root/environment/inventory-management/client/src/App.js",[],"/root/environment/inventory-management/client/src/store/reducer/reducerAuth.js",[],"/root/environment/inventory-management/client/src/store/action/actionAuth.js",["106","107"],"/root/environment/inventory-management/client/src/components/Invoice/Invoice.js",["108"],"/root/environment/inventory-management/client/src/components/Layout/Layout.js",[],["109","110"],"/root/environment/inventory-management/client/src/components/DisplayData/DisplayData.js",["111","112","113","114","115","116"],"/root/environment/inventory-management/client/src/components/Navigation/Toolbar/Toolbar.js",[],"/root/environment/inventory-management/client/src/services/TesseractService.js",[],"/root/environment/inventory-management/client/src/utils/filterData.js",[],"/root/environment/inventory-management/client/src/components/Navigation/NavigationItems/NavigationItems.js",["117"],"/root/environment/inventory-management/client/src/components/Navigation/NavigationItems/NavigationItem/NavigationItem.js",[],"/root/environment/inventory-management/client/src/UI/Spinner/Spinner.js",[],"/root/environment/inventory-management/client/src/containers/Auth/Auth.js",[],"/root/environment/inventory-management/client/src/containers/Auth/Logout/Logout.js",[],"/root/environment/inventory-management/client/src/firebase.js",[],"/root/environment/inventory-management/client/src/services/LoginService.js",[],"/root/environment/inventory-management/client/src/UI/LoginPage.js",[],"/root/environment/inventory-management/client/src/services/axios.js",[],"/root/environment/inventory-management/client/src/UI/Button.js",[],"/root/environment/inventory-management/client/src/components/Update/UpdateInventory.js",["118"],"import React, { useEffect, useState } from 'react'\nimport { Redirect } from 'react-router';\nimport firebase from \"../../firebase\";\nimport Button from '../../UI/Button';\nimport Spinner from '../../UI/Spinner/Spinner';\n\nconst UpdateInventory = ({newInventoryData, header}) => {\n    const [inventory, setInventory] = useState([])\n    const [redirect, setRedirect] = useState(false)\n    const [loader, setLoader] = useState(true)\n    const getInventoryData = () => {\n        const ref = firebase.database().ref(\"/test\");\n        ref.on(\"value\", (snapshot) => {\n            // console.log(snapshot.val());\n            if (snapshot.val()) {\n                const data = Object.values(snapshot.val());\n                setInventory(data)\n            }\n            setLoader(false)\n        });\n    }\n    const renderTableHeader = () => {\n      return header.map((key, index) => {\n        return (\n          <th key={index}>\n            {key.toUpperCase()}\n          </th>\n        );\n      });\n    };\n    const renderTableData = () => {\n        let rows = newInventoryData.map((element, index) => {\n          return (\n            <tr key={index}>\n              <td>{index + 1}</td>\n              <td>{element.qty}</td>\n              <td>{element.itemNo}</td>\n              <td>{element.description}</td>\n              <td>{element.pieces}</td>\n              <td>{element.unitPrice}</td>\n              <td>{element.extendedPrice}</td>\n              <td>{element.markup}</td>\n              <td>{element.sp}</td>\n            </tr>\n          );\n        });\n        return (\n          <div >\n            <table className=\"table table-hover table-responsive-sm\">\n              <tbody>\n                <tr>{renderTableHeader()}</tr>\n                {rows}\n              </tbody>\n            </table>\n            <Button\n              text=\"Confirm Submit\"\n              color=\"btn btn-info\"\n              type=\"submit\"\n              onClick={pushInventoryDetails}\n            />\n          </div>\n        );\n    };\n    /**Incomplete push inventory function*/\n    const pushInventoryDetails = async () => {\n        setLoader(true)\n        let data = newInventoryData.map((element) => {\n          return {\n            item: element.itemNo,\n            qty: parseInt(element.qty) * parseInt(element.pieces),\n            cp: element.unitPrice,\n            markup: element.markup,\n            sp: element.sp,\n          };\n        });\n\n        data = [...data, ...inventory];\n        // console.log(\"Before\", data.length);\n\n        var duplicates = {};\n        for (var i = 0; i < data.length; i++) {\n          if (duplicates.hasOwnProperty(data[i].item)) {\n            duplicates[data[i].item].push(i);\n          } else if (data.lastIndexOf(data[i].item) !== i) {\n            duplicates[data[i].item] = [i];\n          }\n        }\n        // console.log(\"duplicates\", duplicates)\n        let tempData = Object.values(duplicates).filter(\n          (ele) => ele.length > 1\n        );\n        // let indices = tempData.map(ele => ...ele)\n        if (tempData.length > 0) {\n          tempData.forEach((index) => {\n            let temp = 0;\n            index.forEach((val) => {\n              if (data[val]) {\n                // console.log(\"data[val]\", data[val]);\n                temp += data[val].qty;\n                if (temp - data[val].qty !== 0) {\n                  data[val] = null;\n                }\n              }\n            });\n            data[index[0]].qty = temp;\n          });\n        }\n        data = data.filter((ele) => ele !== null);\n        // console.log(\"All Data\", data);\n\n        const success = await updateData(data)\n        setLoader(false)\n        if (success) {\n          \n          window.alert(\"Inventory updated successfully\");\n          setRedirect(true)\n        } else {\n          window.alert(\"Inventory not updated\");\n        }\n      \n    };\n\n    const updateData = async (data) => {\n        try {\n            await data.map((item) => {\n                firebase\n                  .database()\n                  .ref(\"/test\")\n                  .child(`${item.item}`)\n                  .set(item);\n                });\n            return true;\n        } catch (error) {\n            return false;\n        }\n    };\n\n    useEffect(() => {\n      getInventoryData()\n    }, [])\n\n    if (redirect) {\n      return  <Redirect to=\"/\" />;\n    }\n    if (loader) {\n      return <Spinner />\n    }\n    return (\n      <div>\n        {renderTableData()}\n      </div>\n    );\n}\n\nexport default UpdateInventory\n","/root/environment/inventory-management/client/src/utils/invoice-filters/chetak.js",["119","120"],"/root/environment/inventory-management/client/src/utils/filter.js",["121","122","123","124"],"export const applyFilter=(arr,options)=>{\n  let result=[];\n  for(let i=0;i<arr.length;i++){\n    let data=arr[i];\n    for(var prop in data){\n      if (Object.prototype.hasOwnProperty.call(data,prop)){\n        let str=convertRowToString(data[prop]);\n        str=str.replace(/[`~!@#\\$%^&=:;'<>?,\\*]/gi, '');\n        str=str.replace(/ +(?= )/g,'');\n        str=str.trimStart();\n        str=str.trimEnd();\n        if((options.regex).test(str)){\n          let obj={};\n          for(let j=0;j<options.header.length;j++){\n            let x=\"\";\n            if(Array.isArray(options.body[j])){\n              let index=str.search(options.body[j][1]);\n              x=str.substr(0,index);\n              str=str.substr(x.length);\n            }else{\n              let y=str.split(\" \");\n              str=\"\";\n              for(let k=0;k<options.body[j];k++)x+=y[k]+\" \";\n              for(let k=options.body[j];k<y.length;k++)str+=y[k]+\" \";\n            }\n            x=x.trimStart();\n            x=x.trimEnd();\n            str=str.trimStart();\n            str=str.trimEnd();\n            obj[options.header[j]]=x.toUpperCase();\n          }\n          result.push(obj);\n        }\n      }\n    }\n  }\n  return result;\n}\n\nconst convertRowToString=(obj)=>{\n  let str=\"\";\n  for (var prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj,prop)){\n      str+=obj[prop]+\" \";\n    }\n  }\n  //remove multiple instances of multiple space with single space\n  str=str.replace(/ +(?= )/g,'');\n  str=str.trimStart();\n  str=str.trimEnd();\n  return str;\n}\n\nexport const emptyColumn=(arr)=>{\n  let data=[];\n  for(let i=0;i<arr.length;i++){\n    let obj={};\n    let table=arr[i];\n    for(var prop in table){\n      if (Object.prototype.hasOwnProperty.call(table,prop)){\n        let str=table[prop][1];\n        str=str.replace(/[`~!@#\\$%^&=:;'<>?,\\*]/gi, '');\n        str=str.replace(/ +(?= )/g,'');\n        str=str.trimStart();\n        str=str.trimEnd();\n        let b=str.split(\" \");\n        str=\"\";\n        for(let j=1;j<b.length;j++)str+=b[j];\n        let o=Object.assign({},table[prop]);\n        o[1]=str;\n        obj[prop]=o;\n      }\n    }\n    data.push(obj);\n  }\n  return data;\n}","/root/environment/inventory-management/client/src/utils/invoice-filters/krishna-foods.js",["125","126"],"/**krishna foods\n * 1: {1: \"Quantity \", 2: \"Item Code \", 3: \"Description \", 4: \"U/M \", 5: \"Price Each \", 6: \"Amount \"}\n2: {1: \"10 \", 2: \"Gur Rewari \", 3: \"Gur Rewari 400 gms 20 / ctn \", 4: \"\", 5: \"52.00 \", 6: \"520.00 \"}\n3: {1: \"3 \", 2: \"Sugar Rewari \", 3: \"Sugar rewari 400 gms 20 / ctn \", 4: \"\", 5: \"52.00 \", 6: \"156.00 \"}\n4: {1: \"6 \", 2: \"Gur Gajj \", 3: \"Dry Fruit Gur Gajjak 400 gms 20 / ctn \", 4: \"\", 5: \"70.00 \", 6: \"420.00 \"}\n5: {1: \"4 \", 2: \"Gurr Khasta Gajjak \", 3: \"Gur Khasta Gajjak 400 gms / 20 ctn \", 4: \"\", 5: \"70.00 \", 6: \"280.00 \"}\n6: {1: \"1 \", 2: \"seasme ladoo \", 3: \"Seasme ladoo Bikaji, 240 gm / 20 ctn \", 4: \"\", 5: \"50.00 \", 6: \"50.00 \"}\n7: {1: \"\", 2: \"Peanut Ladoo \", 3: \"Peanut Ladoo Bikaji 240 gms / 20 ctn \", 4: \"\", 5: \"50.00 \", 6: \"50.00 \"}\n8: {1: \"X \", 2: \"Rajgeron ladoo \", 3: \"Rajgeron Ladoo Bikaji 150 gm 20 / ctn \", 4: \"\", 5: \"50.00 \", 6: \"50.00 \"}\n9: {1: \"\", 2: \"Pea ChiKi \", 3: \"Peanut Chikki 400 gms / 20 ctn \", 4: \"\", 5: \"55.00 \", 6: \"110.00 \"}\n10: {1: \"\", 2: \"Se Chikki \", 3: \"Saesme Chikki 400 Gms / 20 Ctn \", 4: \"\", 5: \"65.00 \", 6: \"65.00 \"}\n11: {1: \"\", 2: \"Ass Chiki \", 3: \"Assorted Chikki 400 gms 20 / ctn \", 4: \"\", 5: \"65.00 \", 6: \"130.00 \"}\n12: {1: \"3 \", 2: \"Gobhi Parantha 4 \", 3: \"Gobhi Parantha (4 Pcs X 12 Pks ) Bikaji \", 4: \"\", 5: \"21.00 \", 6: \"63.00 \"}\n13: {1: \"\", 2: \"Methi Parantha 6 \", 3: \"Methi Parantha (6 Pcs X 12 Pks ) Bikaji \", 4: \"\", 5: \"19.80 \", 6: \"59.40 \"}\n14: {1: \"\", 2: \"Home Style Paran \", 3: \"Home Style Parantha ( 6 Pcs X 12 Pks ) Bikaji \", 4: \"\", 5: \"19.20 \", 6: \"57.60 \"}\n__proto__: Object\n1: {1: {…}, 2: {…}}\n2: {1: {…}, 2: {…}}\n3: {1: {…}, 2: {…}}\nlength: 4\n__proto__: Array(0)\nstatusCode: 200\n__proto__: Object\n\n */\nexport const krishnaFoods = (data) => {\n    let filteredData = data.filter((line) => line[6] !== \"\" && !isNaN(line[6]));\n        // .filter((line) => line./* text. */ includes(\"(\"))\n        // .map((line) => line./* text. */ trim());\n\n    let tableData = filteredData.map((row, index) => {\n        let qty = row[1].trim()\n        const itemNo = row[2].trim()\n        const description = row[3].trim()\n        const unitPrice = row[5].trim()\n        const extendedPrice = row[6].trim()\n        const pieces = 0;\n        const markup = 0;\n        if(isNaN(extendedPrice) || isNaN(unitPrice)){\n          return null\n        }\n        if (extendedPrice == \"0.00\" && qty == \"0\") {\n            return null;\n        }\n        if(isNaN(qty) || !qty) {\n          // itemNo = [qty, itemNo].join(\" \")\n          qty = (parseFloat(extendedPrice)/ parseFloat(unitPrice)).toFixed(0)\n           \n        }\n        return {\n          qty,\n          itemNo,\n          description,\n          pieces,\n          unitPrice,\n          extendedPrice,\n          markup,\n        };\n    });\n    console.table(filteredData)\n    return tableData.filter((data) => data !== null);\n    \n};","/root/environment/inventory-management/client/src/utils/optionData.js",[],{"ruleId":"127","severity":1,"message":"128","line":1,"column":8,"nodeType":"129","messageId":"130","endLine":1,"endColumn":13},{"ruleId":"127","severity":1,"message":"131","line":46,"column":15,"nodeType":"129","messageId":"130","endLine":46,"endColumn":23},{"ruleId":"127","severity":1,"message":"132","line":61,"column":13,"nodeType":"129","messageId":"130","endLine":61,"endColumn":22},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"127","severity":1,"message":"137","line":20,"column":10,"nodeType":"129","messageId":"130","endLine":20,"endColumn":23},{"ruleId":"138","severity":1,"message":"139","line":75,"column":34,"nodeType":"140","messageId":"141","endLine":75,"endColumn":36},{"ruleId":"142","severity":1,"message":"143","line":246,"column":7,"nodeType":"144","messageId":"145","endLine":260,"endColumn":9},{"ruleId":"142","severity":1,"message":"143","line":268,"column":7,"nodeType":"146","messageId":"145","endLine":270,"endColumn":21},{"ruleId":"138","severity":1,"message":"147","line":307,"column":27,"nodeType":"140","messageId":"141","endLine":307,"endColumn":29},{"ruleId":"148","severity":1,"message":"149","line":330,"column":6,"nodeType":"150","endLine":330,"endColumn":8,"suggestions":"151"},{"ruleId":"148","severity":1,"message":"152","line":12,"column":8,"nodeType":"150","endLine":12,"endColumn":14,"suggestions":"153"},{"ruleId":"154","severity":1,"message":"155","line":125,"column":35,"nodeType":"156","messageId":"157","endLine":125,"endColumn":37},{"ruleId":"138","severity":1,"message":"147","line":410,"column":23,"nodeType":"140","messageId":"141","endLine":410,"endColumn":25},{"ruleId":"138","severity":1,"message":"147","line":410,"column":40,"nodeType":"140","messageId":"141","endLine":410,"endColumn":42},{"ruleId":"158","severity":1,"message":"159","line":8,"column":32,"nodeType":"160","messageId":"161","endLine":8,"endColumn":33,"suggestions":"162"},{"ruleId":"158","severity":1,"message":"163","line":8,"column":45,"nodeType":"160","messageId":"161","endLine":8,"endColumn":46,"suggestions":"164"},{"ruleId":"158","severity":1,"message":"159","line":62,"column":32,"nodeType":"160","messageId":"161","endLine":62,"endColumn":33,"suggestions":"165"},{"ruleId":"158","severity":1,"message":"163","line":62,"column":45,"nodeType":"160","messageId":"161","endLine":62,"endColumn":46,"suggestions":"166"},{"ruleId":"138","severity":1,"message":"147","line":42,"column":27,"nodeType":"140","messageId":"141","endLine":42,"endColumn":29},{"ruleId":"138","severity":1,"message":"147","line":42,"column":44,"nodeType":"140","messageId":"141","endLine":42,"endColumn":46},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'authData' is assigned a value but never used.","'postImage' is assigned a value but never used.","no-native-reassign",["167"],"no-negated-in-lhs",["168"],"'inventoryData' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","VariableDeclaration","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.filename', 'props.selectedInvoice', and 'tesseractService'. Either include them or remove the dependency array.","ArrayExpression",["169"],"React Hook useEffect has a missing dependency: 'props.isAuth'. Either include it or remove the dependency array. If 'setUser' needs the current value of 'props.isAuth', you can also switch to useReducer instead of useState and read 'props.isAuth' in the reducer.",["170"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-useless-escape","Unnecessary escape character: \\$.","Literal","unnecessaryEscape",["171","172"],"Unnecessary escape character: \\*.",["173","174"],["175","176"],["177","178"],"no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"messageId":"183","fix":"184","desc":"185"},{"messageId":"186","fix":"187","desc":"188"},{"messageId":"183","fix":"189","desc":"185"},{"messageId":"186","fix":"190","desc":"188"},{"messageId":"183","fix":"191","desc":"185"},{"messageId":"186","fix":"192","desc":"188"},{"messageId":"183","fix":"193","desc":"185"},{"messageId":"186","fix":"194","desc":"188"},"Update the dependencies array to be: [props.filename, props.selectedInvoice, tesseractService]",{"range":"195","text":"196"},"Update the dependencies array to be: [props.isAuth, user]",{"range":"197","text":"198"},"removeEscape",{"range":"199","text":"200"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"201","text":"202"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"203","text":"200"},{"range":"204","text":"202"},{"range":"205","text":"200"},{"range":"206","text":"202"},{"range":"207","text":"200"},{"range":"208","text":"202"},[11448,11450],"[props.filename, props.selectedInvoice, tesseractService]",[396,402],"[props.isAuth, user]",[279,280],"",[279,279],"\\",[292,293],[292,292],[1799,1800],[1799,1799],[1812,1813],[1812,1812]]