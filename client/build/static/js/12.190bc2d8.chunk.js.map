{"version":3,"sources":["services/InventoryService.js","components/Inventory/Inventory.js"],"names":["InventoryService","productSKU","a","WordpressAxios","get","params","sku","response","data","productId","put","res","post","upc","itemName","Axios","appendURL","console","log","columns","id","label","useStyles","makeStyles","root","width","paddingTop","container","maxHeight","marginTop","table","fontWeight","fontSize","backgroundColor","cursor","StickyHeadTable","classes","React","useState","page","setPage","rowsPerPage","setRowsPerPage","inventoryService","products","setProducts","loader","setLoader","searchVal","setSearchVal","getProducts","SyncInventory","map","item","UPC","SKU","ItemName","Price","cost","Cost","price","currentStockQuantity","TotalQty","posSoldQuantity","soldQty","wordpressSoldQty","alert","useEffect","getInitialSyncedData","className","style","display","variant","value","marginLeft","onChange","e","target","flexGrow","sm","onClick","stickyHeader","aria-label","column","align","minWidth","slice","filter","toLowerCase","includes","row","hover","role","rowsPerPageOptions","component","count","length","onChangePage","event","newPage","onChangeRowsPerPage"],"mappings":"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","file":"static/js/12.190bc2d8.chunk.js","sourcesContent":["import { POSAxios, WordpressAxios } from \"./axios\";\nimport Axios from \"./axios\";\nconst appendURL = process.env.NODE_ENV === \"production\" ? \"/server\" : \"\";\n\nexport class InventoryService {\n  async GetProductDetails(productSKU) {\n    const response = await WordpressAxios.get(`/products/`, {\n      params: { sku: productSKU },\n    });\n    return response.data;\n  }\n\n  async UpdateProductDetails(productId, data) {\n    const res = await WordpressAxios.put(`/products/${productId}`, data);\n    return res.data;\n  }\n  async getAllProducts() {\n    const res = await WordpressAxios.get(\"products\");\n    return res.data;\n  }\n  async createProduct(data) {\n    const res = await WordpressAxios.post(\"products\", data);\n    return res.data;\n  }\n\n  async GetPOSProductDetails(upc, itemName = \"\") {\n    const response = await Axios.get(appendURL + \"/api/getPOSProduct\", {\n      params: { upc, itemName },\n    });\n    return response.data;\n  }\n  async UpdatePOSProducts(data) {\n    const res = await Axios.post(\n      appendURL + \"/api/pos/Product/ManageItem\",\n      data\n    );\n    return res.data;\n  }\n  async SyncInventory() {\n    const res = await Axios.get(appendURL + \"/api/sync\");\n    return res.data;\n  }\n  async UpdateProductFields(data) {\n    /**\n     ***** data format\n     * data = {invoiceName: \"chetak\", itemName:\"CAS 123\", value:{\"Description\": \"jnckwc\", \"Price\": \"44\"}}\n     */\n    const res = await Axios.put(\n      appendURL + \"/api/invoice/product/update\",\n      data\n    );\n    return res.data;\n  }\n\n  async CreateNotFoundItems(data) {\n    /**\n     * data format\n     * {Item:String,Description:String,Quantity:String,Price:String,sku:String,Barcode:String,PosSKU:String,InvoiceName:String}\n     */\n    const res = await Axios.post(appendURL + \"/api/invoice/notfound\", data);\n    return res.data;\n  }\n\n  async UpdateDBProduct(data) {\n    const res = await Axios.put(appendURL + \"/api/invoice/pos/update\", data);\n    return res.data;\n  }\n  async CreateDBProduct(data) {\n    const res = await Axios.post(appendURL + \"/api/invoice/pos/create\", data);\n    return res.data;\n  }\n\n  async getInitialSyncedData() {\n    const res = await Axios.get(appendURL + \"/api/invoice/pos\");\n    console.log(res);\n    return res.data;\n  }\n}\n","import { CRow, CCol, CDataTable } from \"@coreui/react\";\nimport { InventoryService } from \"../../services/InventoryService\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst columns = [\n  { id: \"upc\", label: \"UPC\" },\n  { id: \"sku\", label: \"SKU\" },\n  { id: \"itemName\", label: \"Item Name\" },\n  { id: \"cost\", label: \"Cost\" },\n  { id: \"price\", label: \"Price\" },\n  { id: \"currentStockQuantity\", label: \"Current Stock Quantity\" },\n  { id: \"posSoldQuantity\", label: \"POS Sold Quantity\" },\n  { id: \"wordpressSoldQty\", label: \"Wordpress Sold Qty.\" },\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    paddingTop: 50,\n  },\n  container: {\n    maxHeight: \"80vh\",\n    marginTop: 10,\n  },\n  table: {\n    \"& thead th\": {\n      fontWeight: \"600\",\n      fontSize: 20,\n      backgroundColor: \"grey\",\n    },\n    \"& tbody td\": {\n      fontWeight: \"300\",\n    },\n    \"& tbody tr:hover\": {\n      backgroundColor: \"#fffbf2\",\n      cursor: \"pointer\",\n    },\n  },\n});\n\nexport default function StickyHeadTable() {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(100);\n  const inventoryService = new InventoryService();\n  const [products, setProducts] = React.useState([]);\n  const [loader, setLoader] = React.useState(true);\n  const [searchVal, setSearchVal] = React.useState(\"\");\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const getProducts = async () => {\n    try {\n      setLoader(true);\n      const res = await inventoryService.SyncInventory();\n      const data = res.map((item) => {\n        const {\n          UPC,\n          SKU,\n          ItemName,\n          Price,\n          Cost,\n          TotalQty,\n          soldQty,\n          wordpressSoldQty,\n        } = item;\n        return {\n          upc: UPC,\n          itemName: ItemName,\n          cost: Cost,\n          price: Price,\n          sku: SKU,\n          currentStockQuantity: TotalQty,\n          posSoldQuantity: soldQty,\n          wordpressSoldQty,\n        };\n      });\n      setProducts(data);\n      alert(\"Sync complete\");\n    } catch (error) {\n      alert(\"Couldn't sync inventory\", error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  React.useEffect(() => {\n    async function getInitialSyncedData() {\n      try {\n        setLoader(true);\n        const res = await inventoryService.getInitialSyncedData();\n        const data = res.map((item) => {\n          const {\n            UPC,\n            SKU,\n            ItemName,\n            Price,\n            Cost,\n            TotalQty,\n            soldQty,\n            wordpressSoldQty,\n          } = item;\n          return {\n            upc: UPC,\n            itemName: ItemName,\n            cost: Cost,\n            price: Price,\n            sku: SKU,\n            currentStockQuantity: TotalQty,\n            posSoldQuantity: soldQty,\n            wordpressSoldQty,\n          };\n        });\n\n        setProducts(data);\n      } catch (error) {\n        alert(\"Couldn't sync inventory\", error);\n      } finally {\n        setLoader(false);\n      }\n    }\n    getInitialSyncedData();\n  }, []);\n\n  if (loader) {\n    return <Spinner />;\n  }\n  return (\n    <Paper className={classes.root}>\n      <Grid style={{ display: \"flex\" }}>\n        <TextField\n          label=\"Search\"\n          variant=\"outlined\"\n          value={searchVal}\n          style={{ marginLeft: 20 }}\n          onChange={(e) => setSearchVal(e.target.value)}\n        />\n\n        <Box style={{ flexGrow: 1 }} />\n        <CCol sm=\"1\">\n          <button className=\"btn btn-lg btn-info\" onClick={() => getProducts()}>\n            Sync\n          </button>\n        </CCol>\n      </Grid>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\" className={classes.table}>\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {products\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .filter((item) => {\n                if (searchVal) {\n                  if (item.itemName.toLowerCase().includes(searchVal)) {\n                    return item;\n                  } else {\n                    return null;\n                  }\n                }\n                return item;\n              })\n              .map((row) => {\n                return (\n                  <TableRow hover role=\"checkbox\" key={row.upc}>\n                    {columns.map((column) => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[100, 200, 500]}\n        component=\"div\"\n        count={products.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n"],"sourceRoot":""}