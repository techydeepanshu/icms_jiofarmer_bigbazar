{"version":3,"sources":["../node_modules/@material-ui/core/esm/utils/deprecatedPropType.js","../node_modules/@material-ui/core/esm/utils/requirePropFactory.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/@babel/runtime/helpers/interopRequireWildcard.js","../node_modules/@material-ui/icons/utils/createSvgIcon.js","../node_modules/@material-ui/core/esm/utils/index.js","../node_modules/@material-ui/core/esm/utils/unsupportedProp.js","../node_modules/@material-ui/icons/InfoOutlined.js","../node_modules/@material-ui/icons/Cancel.js","../../index.ts","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@material-ui/icons/AddCircle.js","../node_modules/@material-ui/core/esm/styles/makeStyles.js","../node_modules/@material-ui/core/esm/Grid/Grid.js","components/HandWrittenInvoice/HandWrittenInvoiceList.js","components/HandWrittenInvoice/HandWrittenInvoice.js"],"names":["deprecatedPropType","validator","reason","requirePropFactory","componentNameInError","module","exports","obj","__esModule","_typeof","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","value","enumerable","_utils","createSvgIcon","require","unsupportedProp","props","propName","componentName","location","propFullName","_interopRequireDefault","_interopRequireWildcard","default","React","_default","createElement","d","registerVersion","version","SDK_VERSION","Symbol","iterator","constructor","makeStyles","stylesOrCreator","options","arguments","length","undefined","makeStylesWithoutDefault","_extends","defaultTheme","SPACINGS","GRID_SIZES","getOffset","val","div","parse","parseFloat","concat","String","replace","Grid","ref","_props$alignContent","alignContent","_props$alignItems","alignItems","classes","classNameProp","className","_props$component","component","Component","_props$container","container","_props$direction","direction","_props$item","item","justify","_props$justifyContent","justifyContent","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","zeroMinWidth","other","_objectWithoutProperties","clsx","root","StyledGrid","withStyles","theme","boxSizing","display","flexWrap","width","margin","minWidth","flexDirection","breakpoint","styles","forEach","themeSpacing","padding","generateGutter","breakpoints","keys","reduce","accumulator","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","name","handwrittenInvoiceList","slug","jsonName","emptyColumn","databaseName","useStyles","paddingTop","maxHeight","marginTop","table","fontWeight","fontSize","backgroundColor","cursor","HandwrittenInvoice","tesseractService","TesseractService","useState","setProductDetails","itemNoDropdown","setItemNoDropdown","dispatch","useDispatch","dropdownLabel","invoice","inventoryService","InventoryService","setOptions","showModal","setShowModal","modalLabel","todayDate","setTodayDate","userEmail","setUserEmail","itemName","setItemName","unitsInCase","setUnitsInCase","caseCost","setCaseCost","newUnitCost","newUnitPrice","setNewUnitPrice","prevNewUnitPrice","setPrevNewUnitPrice","showPosIndex","setShowPosIndex","notFounds","useSelector","state","redItems","detailsModal","setDetailsIndex","setUnitCost","setRedState","openInvoice","inv","num","day","invoiceNo","setInvoiceNo","quantity","setQuantity","price","setPrice","extendedPrice","setExtendedPrice","date","setDate","selectedDropdown","setSelectedDropdown","description","pos","barcode","posSku","department","unitCost","unitPrice","showPosState","setShowPosState","tableDataCopy","setTableDataCopy","tableData","setTableData","console","log","isReviewed","Item","Quantity","Description","Price","POS","Barcode","PosSKU","Size","Department","SellerCost","SellingPrice","posProduct","setPosProduct","posProducts","loaders","apiLoader","loader","wooComProducts","singleItemData","updateSku","header","getProducts","a","Promise","all","map","row","GetProductDetails","res","id","regular_price","sku","stock_quantity","sale_price","itemNo","items","getPosProducts","hasErrorOccured","GetPOSProductDetails","Array","isArray","alert","SKU","UPC","ITEMNAME","TOTALQTY","DEPNAME","COST","cp","PRICE","sellingPrice","parseInt","qty","pieces","isNew","BUYASCASE","CASEUNITS","toString","CASECOST","sp","pushToWoocom","products","product","UpdateProductDetails","responses","pushToPOS","codeOrSku","indexOf","i","itemNoPresent","UpdatePOSProducts","JSON","stringify","DESCRIPTION","QTY","SIZE","PACK","REPLACEQTY","DEPARTMENT","CATEGORY","SUBCATEGORY","ISFOODSTAMP","ISWEIGHTED","ISTAXABLE","VENDORNAME","VENDORCODE","VENDORCOST","ISNEWITEM","COMPANYNAME","PRODUCTCODE","MODELNUM","slice","Date","toLocaleDateString","VINTAGE","Cost","ItemName","TotalQty","pushInventoryDetails2","data","element","markup","duplicates","push","lastIndexOf","tempData","values","filter","ele","index","temp","updatedWoocomProducts","wooIndex","findIndex","wooProduct","window","pushSingleItemToInventory","isUpdated","data1","invoiceName","toLowerCase","cost","isUpdatedDate","UpdateHandWrittenProductFields","InvoiceName","InvoiceDate","ItemNo","InvoiceDescription","PosDescription","posName","OldUnitCost","OldUnitPrice","OldMarkup","toFixed","NewUnitCost","NewUnitPrice","NewMarkup","UpdateDate","Person","TimeStamp","toTimeString","split","InvCaseCost","InvUnitsInCase","HandWritten","handwrittenPosLogs","logUpdate","setProductsInTableNew","reversePOSUpdate","reverseUpdate","result","ok","setProductsInTable","linkManually","costChange","invError","logState","ItemCode","LinkingDate","PersonName","PosUnitCost","PosUnitPrice","InvUnitCost","CostIncrease","CostDecrease","CostSame","InvError","linkManuallyLog","logResult","statusText","updateUnits","then","Error","catch","err","updatePosDetails","sellerCost","finally","linkingCorrect","Unidentified","UnidentifiedLog","renderTableData","rows","isEmpty","isNaN","isFree","red","free","style","show","opacity","TextField","type","variant","onChange","e","handleChange","target","IconButton","color","fill","tooltipIsReviewed","tooltip","onClick","toggleModal","disabled","border","textAlign","textDecoration","align","Autocomplete","event","newValue","getOptionLabel","option","renderInput","params","loading","onInputChange","setTimeout","hicksvilleDropdownNew","newState","upc","label","priceIncrease","details","Button","text","confirm","position","top","background","toUpperCase","divRow","reload","updateItem","sellingCost","x","tempTableData","propertyNames","getHicksvilleData","productsString","newData","s","altupc1","altupc2","vintage","totalQty","pricea","priceb","pricec","salePrice","pack","getItems","getItemForHandwrittenInvoice","invoiceData","trim","Details","currentInvoice","resdata","invData","useEffect","curDate","getFullYear","getMonth","getDate","firebase","auth","onAuthStateChanged","user","email","Paper","autoHighlight","height","marginLeft","onClose","closeButton","fluid","htmlFor"],"mappings":"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","file":"static/js/7.83946150.chunk.js","sourcesContent":["export default function deprecatedPropType(validator, reason) {\n  if (process.env.NODE_ENV === 'production') {\n    return function () {\n      return null;\n    };\n  }\n\n  return function (props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    if (typeof props[propName] !== 'undefined') {\n      return new Error(\"The \".concat(location, \" `\").concat(propFullNameSafe, \"` of \") + \"`\".concat(componentNameSafe, \"` is deprecated. \").concat(reason));\n    }\n\n    return null;\n  };\n}","export default function requirePropFactory(componentNameInError) {\n  if (process.env.NODE_ENV === 'production') {\n    return function () {\n      return null;\n    };\n  }\n\n  var requireProp = function requireProp(requiredProp) {\n    return function (props, propName, componentName, location, propFullName) {\n      var propFullNameSafe = propFullName || propName;\n\n      if (typeof props[propName] !== 'undefined' && !props[requiredProp]) {\n        return new Error(\"The prop `\".concat(propFullNameSafe, \"` of \") + \"`\".concat(componentNameInError, \"` must be used on `\").concat(requiredProp, \"`.\"));\n      }\n\n      return null;\n    };\n  };\n\n  return requireProp;\n}","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nmodule.exports = _interopRequireWildcard, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.createSvgIcon;\n  }\n});\n\nvar _utils = require(\"@material-ui/core/utils\");","export { default as capitalize } from './capitalize';\nexport { default as createChainedFunction } from './createChainedFunction';\nexport { default as createSvgIcon } from './createSvgIcon';\nexport { default as debounce } from './debounce';\nexport { default as deprecatedPropType } from './deprecatedPropType';\nexport { default as isMuiElement } from './isMuiElement';\nexport { default as ownerDocument } from './ownerDocument';\nexport { default as ownerWindow } from './ownerWindow';\nexport { default as requirePropFactory } from './requirePropFactory';\nexport { default as setRef } from './setRef';\nexport { default as unsupportedProp } from './unsupportedProp';\nexport { default as useControlled } from './useControlled';\nexport { default as useEventCallback } from './useEventCallback';\nexport { default as useForkRef } from './useForkRef'; // eslint-disable-next-line camelcase\n\nexport { default as unstable_useId } from './unstable_useId';\nexport { default as useIsFocusVisible } from './useIsFocusVisible';","export default function unsupportedProp(props, propName, componentName, location, propFullName) {\n  if (process.env.NODE_ENV === 'production') {\n    return null;\n  }\n\n  var propFullNameSafe = propFullName || propName;\n\n  if (typeof props[propName] !== 'undefined') {\n    return new Error(\"The prop `\".concat(propFullNameSafe, \"` is not supported. Please remove it.\"));\n  }\n\n  return null;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 7h2v2h-2zm0 4h2v6h-2zm1-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'InfoOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\n\nexports.default = _default;","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport { name, version } from '../package.json';\n\nfirebase.registerVersion(name, version, 'app');\nfirebase.SDK_VERSION = version;\n\nexport default firebase;\n","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddCircle');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"center\"`. */\n    'justify-content-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"flex-end\"`. */\n    'justify-content-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"space-between\"`. */\n    'justify-content-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"space-around\"`. */\n    'justify-content-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"space-evenly\"`. */\n    'justify-content-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      justify = props.justify,\n      _props$justifyContent = props.justifyContent,\n      justifyContent = _props$justifyContent === void 0 ? 'flex-start' : _props$justifyContent,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"justifyContent\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], (justify || justifyContent) !== 'flex-start' && classes[\"justify-content-xs-\".concat(String(justify || justifyContent))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   * @deprecated Use `justifyContent` instead, the prop was renamed\n   */\n  justify: deprecatedPropType(PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']), 'Use `justifyContent` instead, the prop was renamed.'),\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justifyContent: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justifyContent: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","export const handwrittenInvoiceList = [\r\n      //********handwritten invoices********\r\n  {\r\n    value: \"Giant Farm\",\r\n    slug: \"giant-farm\",\r\n    jsonName: \"giant-farm.json\",\r\n    emptyColumn: true,\r\n    databaseName: \"giantfarms\",\r\n  },\r\n  {\r\n    value: \"Duty Free Produce\",\r\n    slug: \"duty-free-produce\",\r\n    jsonName: \"duty-free-produce.json\",\r\n    emptyColumn: true,\r\n    databaseName: \"dutyfreeproduces\",\r\n  },\r\n  {\r\n    value: \"Gurme Guru\",\r\n    slug: \"gurme-guru\",\r\n    jsonName: \"gurme-guru.json\",\r\n    emptyColumn: true,\r\n    databaseName: \"gurmegurus\",\r\n  },\r\n\r\n  //********handwritten invoices********\r\n];","import React, { useEffect, useState } from \"react\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\n// import { dropdownOptions } from \"../../utils/invoiceList\";\r\nimport { handwrittenInvoiceList } from \"./HandWrittenInvoiceList\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { InventoryService } from \"../../services/InventoryService\";\r\nimport {\r\n  CModal,\r\n  CModalBody,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CButton,\r\n  CContainer,\r\n  CCol,\r\n  CRow,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CDropdown,\r\n  CDropdownToggle,\r\n  CDropdownMenu,\r\n  CDropdownItem,\r\n} from \"@coreui/react\";\r\n\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { TesseractService } from \"../../services/TesseractService\";\r\nimport Button from \"../../UI/Button\";\r\nimport styles from \"../DisplayData/DisplayData.module.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport Cancel from \"@material-ui/icons/Cancel\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\n\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    paddingTop: 50,\r\n  },\r\n  container: {\r\n    maxHeight: \"80vh\",\r\n    marginTop: 10,\r\n  },\r\n  table: {\r\n    \"& thead th\": {\r\n      fontWeight: \"600\",\r\n      fontSize: 20,\r\n      backgroundColor: \"grey\",\r\n    },\r\n    \"& tbody td\": {\r\n      fontWeight: \"300\",\r\n    },\r\n    \"& tbody tr:hover\": {\r\n      backgroundColor: \"#fffbf2\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n});\r\n\r\nconst HandwrittenInvoice = () => {\r\n  // const [loader, setLoader] = useState();\r\n  const tesseractService = new TesseractService();\r\n\r\n  const [productDetails, setProductDetails] = useState([]);\r\n  const [itemNoDropdown, setItemNoDropdown] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  const numOfCollections = handwrittenInvoiceList.length;\r\n  const dropdownLabel = \"Select Invoice(\" + numOfCollections + \")\";\r\n  // const [invoice, setInvoice] = useState(\"\");\r\n  let invoice = \"\";\r\n  const classes = useStyles();\r\n  const inventoryService = new InventoryService();\r\n  const [options, setOptions] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalLabel, setModalLabel] = useState(\"\");\r\n\r\n  const [todayDate, setTodayDate] = useState(\"\");\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n\r\n  const [itemName, setItemName] = useState(\"\");\r\n  const [unitsInCase, setUnitsInCase] = useState(\"\");\r\n  const [caseCost, setCaseCost] = useState();\r\n\r\n  const [newUnitCost, setNewUnitCost] = useState(\"\");\r\n  const [newUnitPrice, setNewUnitPrice] = useState(\"\");\r\n  const [prevNewUnitPrice, setPrevNewUnitPrice] = useState(\"\");\r\n\r\n  const [showPosIndex, setShowPosIndex] = useState(-1);\r\n  // const showPosState = useSelector(state => state.showPosState);\r\n  const notFounds = useSelector((state) => state.redItems.notFounds);\r\n\r\n  const [detailsModal, setDetailsModal] = useState(false);\r\n  const [details, setDetails] = useState(\"\");\r\n  const [detailsIndex, setDetailsIndex] = useState(-1);\r\n  const [unitCost, setUnitCost] = useState(\"\");\r\n  const [redState, setRedState] = useState(\"true\");\r\n\r\n  // ************** Added by Deepanshu *****************\r\n  // const [inv, setInv] = useState(\"\");\r\n  const inv = useSelector((state) => state.openInvoice.inv);\r\n  // const [ num, setNum] = useState(\"\");\r\n  const num = useSelector((state) => state.openInvoice.num);\r\n  // const [day, setDay] = useState(\"\");\r\n  const day = useSelector((state) => state.openInvoice.day);\r\n\r\n  const [invoiceNo, setInvoiceNo] = useState(\"\");\r\n  const [quantity, setQuantity] = useState(\"\");\r\n  const [price, setPrice] = useState();\r\n  const [extendedPrice, setExtendedPrice] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [selectedDropdown, setSelectedDropdown] = useState();\r\n  const [notFound, setNotFound] = useState(\"false\");\r\n  const [showPosState, setShowPosState] = useState({\r\n    item: \"\",\r\n    quantity: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    pos: \"\",\r\n    barcode: \"\",\r\n    posSku: \"\",\r\n    invoice: \"\",\r\n    size: \"\",\r\n    department: \"\",\r\n    unitCost: \"\",\r\n    unitPrice: \"\",\r\n  });\r\n  const [tableDataCopy, setTableDataCopy] = useState([]);\r\n  const [tableData, setTableData] = useState([\r\n    // {\r\n    //   barcode: \"894559000389\",\r\n    //   cost: \"2.0\",\r\n    //   cp: \"3.75\",\r\n    //   department: \"ROTI AND NAAN\",\r\n    //   description: \"TAZA TANDOORI NAAN JUMBO 8PCS X12 4.99\",\r\n    //   details: undefined,\r\n    //   extendedPrice: \"225.00\",\r\n    //   isReviewed: \"false\",\r\n    //   isUpdated: \"false\",\r\n    //   itemNo: \"TAZA TANDOORI NAAN JUMBO 8PCS X12 4.99\",\r\n    //   itemNoPresent: true,\r\n    //   linkingCorrect: \"false\",\r\n    //   margin: 49.500000000000014,\r\n    //   markup: 0,\r\n    //   pieces: \"12\",\r\n    //   posName: \"TANDOORI NAAN 5 PC\",\r\n    //   posSku: \"13051\",\r\n    //   price: \"45\",\r\n    //   priceIncrease: 1,\r\n    //   qty: \"5\",\r\n    //   sellingPrice: \"2.99\",\r\n    //   show: true,\r\n    //   size: \"425 GM ..\",\r\n    //   sku: undefined,\r\n    //   sp: \"3.75\",\r\n    //   unitPrice: \"45.00\",\r\n    // },\r\n    // {\r\n    //   barcode: \"894559000389\",\r\n    //   cost: \"2.0\",\r\n    //   cp: \"3.75\",\r\n    //   department: \"ROTI AND NAAN\",\r\n    //   description: \"TAZA TANDOORI NAAN JUMBO 8PCS X12 4.99\",\r\n    //   details: undefined,\r\n    //   extendedPrice: \"225.00\",\r\n    //   isReviewed: \"false\",\r\n    //   isUpdated: \"false\",\r\n    //   itemNo: \"TAZA TANDOORI NAAN JUMBO 8PCS X12 4.99\",\r\n    //   itemNoPresent: true,\r\n    //   linkingCorrect: \"false\",\r\n    //   margin: 49.500000000000014,\r\n    //   markup: 0,\r\n    //   pieces: \"12\",\r\n    //   posName: \"TANDOORI NAAN 5 PC\",\r\n    //   posSku: \"13051\",\r\n    //   price: \"45\",\r\n    //   priceIncrease: 1,\r\n    //   qty: \"5\",\r\n    //   sellingPrice: \"2.99\",\r\n    //   show: true,\r\n    //   size: \"425 GM ..\",\r\n    //   sku: undefined,\r\n    //   sp: \"3.75\",\r\n    //   unitPrice: \"45.00\",\r\n    // },\r\n  ]);\r\n  console.log(\"table_state_value : \", tableData);\r\n  // ************** Added by Deepanshu *****************\r\n\r\n  // function added by deepanshu\r\n  const saveDetails = async () => {\r\n    console.log(\"this is saveDetails\");\r\n  };\r\n\r\n  const [posProduct, setPosProduct] = useState({\r\n    isReviewed: \"\",\r\n    Item: \"\",\r\n    Quantity: \"\",\r\n    Description: \"\",\r\n    Price: \"\",\r\n    POS: \"\",\r\n    Barcode: \"\",\r\n    PosSKU: \"\",\r\n    Size: \"\",\r\n    Department: \"\",\r\n    SellerCost: \"\",\r\n    SellingPrice: \"\",\r\n  });\r\n\r\n  const apiLoader = useSelector((state) => state.loaders.apiLoader);\r\n  const loader = useSelector((state) => state.loaders.loader);\r\n\r\n  let posProducts = [];\r\n  let wooComProducts = [];\r\n  let singleItemData = [];\r\n  let gethandwrittenlog = [];\r\n  let updateSku = \"\";\r\n  let itemNo = \"\";\r\n\r\n  const header = [\r\n    \"Serial No.\",\r\n    \"Barcode\",\r\n    \"POS SKU\",\r\n    \"Qty Shipped\",\r\n    ,\r\n    \"Unit Cost\",\r\n    \"ITEM NO\",\r\n    \"Link Product\",\r\n\r\n    \"DESCRIPTION\",\r\n    \"Units in  Case\",\r\n    \"Case cost\",\r\n    \"Extended Price\",\r\n\r\n    \"Unit Price\",\r\n    \"Mark up (%)\",\r\n    \"Add Details\",\r\n    \"Tick to Delete\",\r\n    \"Update POS\",\r\n    \"Reverse POS Update\",\r\n    \"NO LINKING\",\r\n    \"Serial No.(2)\",\r\n  ];\r\n\r\n  //*********************************************************************POS UPDATE STARTS******************************************* */\r\n\r\n  //Function to fetch wooCom Prpducts.\r\n  async function getProducts() {\r\n    console.log(\"IN WOOCOM PRODUCTS\");\r\n    const items = await Promise.all(\r\n      singleItemData.map(async (row) => {\r\n        console.log(row.barcode);\r\n        try {\r\n          const res = await inventoryService.GetProductDetails(row.barcode);\r\n          console.log(res);\r\n          const {\r\n            id,\r\n            name,\r\n            regular_price,\r\n            price,\r\n            sku,\r\n            slug,\r\n            stock_quantity,\r\n            sale_price,\r\n          } = res[0];\r\n          console.log(\"res[0]\");\r\n          console.log(\"id : \", id);\r\n          console.log(\"name : \", name);\r\n          console.log(\"regular_price : \", regular_price);\r\n          console.log(\"price : \", price);\r\n          console.log(\"sku : \", sku);\r\n          console.log(\"slug : \", slug);\r\n          console.log(\"stock_quantity : \", stock_quantity);\r\n          console.log(\"sale_price : \", sale_price);\r\n          return {\r\n            id,\r\n            name,\r\n            regular_price,\r\n            price,\r\n            sku,\r\n            slug,\r\n            stock_quantity,\r\n            sale_price,\r\n            itemNo: row.itemNo,\r\n          };\r\n        } catch (error) {\r\n          // tempNotFoundProducts.push(row);\r\n          console.log(\"Couldn't fetch product from woodpress.\", row.itemNo);\r\n          return null;\r\n        }\r\n      })\r\n    );\r\n    // setLoader(false);\r\n    // dispatch({type: \"LOADER\"});\r\n    console.log(items);\r\n    wooComProducts = items;\r\n    // setWooComProducts(items.filter((ele) => ele !== null));\r\n    // setNotFoundProducts(tempNotFoundProducts);\r\n  }\r\n\r\n  //function to fetch POS products.\r\n  async function getPosProducts() {\r\n    console.log(\"IN POS PRODUCTS\");\r\n    // setLoader(true);\r\n    // dispatch({type: \"LOADER\"});\r\n    let hasErrorOccured = false;\r\n    const items = await Promise.all(\r\n      singleItemData.map(async (row) => {\r\n        console.log(row.barcode);\r\n        try {\r\n          const res = await inventoryService.GetPOSProductDetails(row.barcode);\r\n          console.log(res);\r\n          if (!Array.isArray(res)) {\r\n            alert(\"API not working\");\r\n            return;\r\n          }\r\n          console.log(\"fetched pos data\", res);\r\n          const { SKU, UPC, ITEMNAME, TOTALQTY, DEPNAME } = res[0];\r\n          console.log(SKU);\r\n          console.log(updateSku);\r\n          if (SKU == updateSku) {\r\n            console.log(SKU);\r\n            console.log(updateSku);\r\n            return {\r\n              ...row,\r\n              COST: row.cp,\r\n              // PRICE: newUnitPrice === \"\" ? row.sp : newUnitPrice,\r\n              PRICE: newUnitPrice === \"\" ? row.sellingPrice : newUnitPrice,\r\n              SKU,\r\n              UPC,\r\n              ITEMNAME,\r\n              TOTALQTY:\r\n                parseInt(row.qty) * parseInt(row.pieces) + parseInt(TOTALQTY),\r\n              itemNo: row.itemNo,\r\n              isNew: false,\r\n              BUYASCASE: 1,\r\n              CASEUNITS: row.pieces.toString(),\r\n              CASECOST: row.unitPrice.toString(),\r\n              DEPNAME,\r\n            };\r\n          } else {\r\n            alert(\"SKU mismatch!!\");\r\n          }\r\n        } catch (error) {\r\n          hasErrorOccured = true;\r\n          return {\r\n            ...row,\r\n            COST: row.cp,\r\n            PRICE: row.sp,\r\n            SKU: row.posSku,\r\n            UPC: row.barcode,\r\n            ITEMNAME: row.description,\r\n            TOTALQTY: parseInt(row.qty) * parseInt(row.pieces),\r\n            itemNo: row.itemNo,\r\n            isNew: true,\r\n            BUYASCASE: 1,\r\n            CASEUNITS: row.pieces.toString(),\r\n            CASECOST: row.unitPrice.toString(),\r\n            DEPNAME: \"\",\r\n          };\r\n        }\r\n      })\r\n    );\r\n    if (hasErrorOccured) {\r\n      alert(\"Couldn't fetch some data from POS\");\r\n    }\r\n    // setLoader(false);\r\n    // dispatch({type: \"LOADER\"});\r\n    console.log(items);\r\n    posProducts = items;\r\n    console.log(posProducts);\r\n    // setPosProducts(items.filter((ele) => ele !== null));\r\n  }\r\n\r\n  //PUSH TO WOOCOM.\r\n  const pushToWoocom = async (products) => {\r\n    // setLoader(true);\r\n    // dispatch({type: \"LOADER\"});\r\n    console.log(products);\r\n    const responses = await Promise.all(\r\n      products.map(async (product) => {\r\n        try {\r\n          const res = await inventoryService.UpdateProductDetails(product.id, {\r\n            regular_price: product.regular_price,\r\n            stock_quantity: product.stock_quantity,\r\n          });\r\n          const { id, name, regular_price, stock_quantity } = res;\r\n          return {\r\n            id,\r\n            name,\r\n            regular_price,\r\n            stock_quantity,\r\n            itemNo: product.itemNo,\r\n          };\r\n        } catch (error) {\r\n          console.log(error);\r\n          alert(\"Couldn't update product on website.\");\r\n          return null;\r\n        }\r\n      })\r\n    );\r\n\r\n    console.log(\"pushToWoocom_result : \", responses);\r\n    // setLoader(false);\r\n    // dispatch({type: \"LOADER\"});\r\n  };\r\n\r\n  //PUSH TO POS.\r\n  const pushToPOS = async (products) => {\r\n    // setLoader(true);\r\n    // dispatch({type: \"LOADER\"});\r\n    console.log(products);\r\n    const responses = await Promise.all(\r\n      products.map(async (product) => {\r\n        try {\r\n          const {\r\n            COST,\r\n            PRICE,\r\n            UPC,\r\n            TOTALQTY,\r\n            isNew,\r\n            ITEMNAME,\r\n            BUYASCASE,\r\n            CASEUNITS,\r\n            CASECOST,\r\n            SKU,\r\n            DEPNAME,\r\n            itemNo,\r\n          } = product;\r\n          console.log(\"product : \", product);\r\n\r\n          // SET ITEMNAME...\r\n          let codeOrSku = \"\";\r\n          console.log(product.itemNo);\r\n          console.log(ITEMNAME.indexOf(\"-\"));\r\n          let itemName = ITEMNAME;\r\n          console.log(\"pushToPos_ITEMNAME : \", ITEMNAME);\r\n          if (ITEMNAME.indexOf(\"-\") < 0) {\r\n            let itemNoPresent;\r\n            for (let i = 0; i < handwrittenInvoiceList.length; i++) {\r\n              console.log(selectedDropdown.slug);\r\n              if (handwrittenInvoiceList[i].slug === selectedDropdown.slug) {\r\n                itemNoPresent = false;\r\n                break;\r\n              } else {\r\n                itemNoPresent = true;\r\n                break;\r\n              }\r\n            }\r\n            console.log(itemNoPresent);\r\n            // if (itemNoPresent) {\r\n            //   codeOrSku = product.itemNo;\r\n            // } else {\r\n              codeOrSku = \"SKU\" + \" \" + product.posSku;\r\n            // }\r\n            itemName = ITEMNAME + \" \" + \"-\" + \" \" + codeOrSku;\r\n          }\r\n\r\n          const res = await inventoryService.UpdatePOSProducts(\r\n            JSON.stringify({\r\n              UPC,\r\n              ITEMNAME:itemName,\r\n              DESCRIPTION: \"\",\r\n              PRICE,\r\n              COST,\r\n              QTY: TOTALQTY,\r\n              SIZE: \"\",\r\n              PACK: \"\",\r\n              REPLACEQTY: 1,\r\n              DEPARTMENT: DEPNAME,\r\n              CATEGORY: \"\",\r\n              SUBCATEGORY: \"\",\r\n              ISFOODSTAMP: 1,\r\n              ISWEIGHTED: 0,\r\n              ISTAXABLE: 1,\r\n              VENDORNAME: selectedDropdown.slug,\r\n              VENDORCODE: itemNo,\r\n              VENDORCOST: \"\",\r\n              ISNEWITEM: isNew ? 1 : 0,\r\n              BUYASCASE,\r\n              CASEUNITS,\r\n              CASECOST,\r\n              COMPANYNAME: selectedDropdown.slug,\r\n              PRODUCTCODE: itemNo,\r\n              MODELNUM:\r\n                userEmail.slice(0, 4) + \" \" + new Date().toLocaleDateString(),\r\n              VINTAGE: \"ICMS\",\r\n            })\r\n          );\r\n          console.log(\"updated pos data\", res);\r\n          const data = {\r\n            UPC,\r\n            SKU,\r\n            Cost: COST,\r\n            ItemName: ITEMNAME,\r\n            Price: PRICE,\r\n            TotalQty: TOTALQTY,\r\n          };\r\n          //not needed as of now, parikshit.\r\n          // if (isNew) {\r\n          //   const response = await inventoryService.CreateDBProduct(data);\r\n          //   console.log(\"Created new product\", response);\r\n          // } else {\r\n          //   const response = await inventoryService.UpdateDBProduct({\r\n          //     count: parseInt(product.qty) * parseInt(product.pieces),\r\n          //     UPC,\r\n          //   });\r\n          //   console.log(\"updated existing product\", response);\r\n          // }\r\n\r\n          console.log(\"res from POS\", res);\r\n          return true;\r\n        } catch (error) {\r\n          console.log(error);\r\n          return null;\r\n        }\r\n      })\r\n    );\r\n    // setLoader(false);\r\n    // dispatch({type: \"LOADER\"});\r\n  };\r\n\r\n  const pushInventoryDetails2 = async () => {\r\n    console.log(posProducts);\r\n    // setLoader(true);\r\n    console.log(singleItemData);\r\n    let data = singleItemData.map((element) => {\r\n      return {\r\n        item: element.itemNo,\r\n        qty: parseInt(element.qty) * parseInt(element.pieces),\r\n        cp: element.unitPrice,\r\n        markup: element.markup,\r\n        sp: element.sellingPrice,\r\n        description: element.description,\r\n      };\r\n    });\r\n\r\n    console.log(data);\r\n\r\n    var duplicates = {};\r\n    for (var i = 0; i < data.length; i++) {\r\n      if (duplicates.hasOwnProperty(data[i].item)) {\r\n        console.log(\"true\");\r\n        duplicates[data[i].item].push(i);\r\n      } else if (data.lastIndexOf(data[i].item) !== i) {\r\n        console.log(\"false\");\r\n        console.log(data.lastIndexOf(data[i].item));\r\n        duplicates[data[i].item] = [i];\r\n      }\r\n    }\r\n\r\n    console.log(duplicates);\r\n\r\n    let tempData = Object.values(duplicates).filter((ele) => ele.length > 1);\r\n    console.log(tempData);\r\n    if (tempData.length > 0) {\r\n      tempData.forEach((index) => {\r\n        let temp = 0;\r\n        index.forEach((val) => {\r\n          if (data[val]) {\r\n            // console.log(\"data[val]\", data[val]);\r\n            temp += data[val].qty;\r\n            if (temp - data[val].qty !== 0) {\r\n              data[val] = null;\r\n            }\r\n          }\r\n        });\r\n        data[index[0]].qty = temp;\r\n      });\r\n    }\r\n    console.log(data);\r\n    data = data.filter((ele) => ele !== null);\r\n    console.log(data);\r\n    /**\r\n     * add the fileds of  data from the woocom & ocr\r\n     */\r\n    console.log(wooComProducts.length);\r\n    console.log(wooComProducts);\r\n    if (wooComProducts[0] != null) {\r\n      let updatedWoocomProducts = data\r\n        .map((product, index) => {\r\n          /**find index of the item in fetched woocom product list */\r\n          const wooIndex = wooComProducts.findIndex(\r\n            (wooProduct) => product.item === wooProduct.itemNo\r\n          );\r\n          console.log(\"wooIndex : \", wooIndex);\r\n          if (wooIndex !== -1) {\r\n            /**get the qty & other fileds of the woocom product */\r\n            let { id, stock_quantity } = wooComProducts[wooIndex];\r\n            stock_quantity += product.qty;\r\n            const regular_price = product.sp;\r\n            return { id, regular_price, stock_quantity, itemNo: product.item };\r\n          }\r\n          return null;\r\n        })\r\n        .filter((item) => item !== null);\r\n\r\n      await pushToWoocom(updatedWoocomProducts);\r\n    }\r\n\r\n    await pushToPOS(posProducts);\r\n\r\n    // setLoader(false);\r\n    // dispatch({type: \"LOADER\"});\r\n    // if (itemsNotPushed.length === 0) {\r\n    window.alert(\"Inventory updated successfully\");\r\n    // // setRedirect(true);\r\n    // } else {\r\n    //   window.alert(\"Inventory not updated\");\r\n    // }\r\n  };\r\n\r\n  function toConsoleState() {\r\n    console.log(wooComProducts);\r\n    console.log(posProducts);\r\n    console.log(singleItemData);\r\n  }\r\n\r\n  const pushSingleItemToInventory = async (index) => {\r\n    // setApiLoader(true);\r\n    // dispatch({type: \"API_LOADER\"});\r\n    const product = [];\r\n    console.log(\"posProduct : \", posProduct);\r\n    const tempTable = [];\r\n    product.push(posProduct);\r\n    console.log(product);\r\n    product.isUpdated = \"true\";\r\n    itemNo = product.itemNo;\r\n\r\n    // setLoader(false);\r\n    // dispatch({type: \"LOADER\"});\r\n    // console.log(tempTable);\r\n    // singleItemData = [posProduct];\r\n    // singleItemData[0].isUpdated = \"true\";\r\n    // setPushToInventory(true);\r\n\r\n    singleItemData = [tableData[index]];\r\n    console.log(singleItemData);\r\n    // const tempTable = [];\r\n    // product.forEach((element, index) => {\r\n    //   if (\r\n    //     !emptyColumn.includes(index) &&\r\n    //     element.show === true &&\r\n    //     element[\"isForReview\"] != true\r\n    //   ) {\r\n    //     let rowData = { index: index + 1, ...element };\r\n    //     tempTable.push(rowData);\r\n    //   }\r\n    // });\r\n    // singleItemData=tempTable;\r\n    updateSku = singleItemData[0].posSku;\r\n\r\n    await getProducts();\r\n    await getPosProducts();\r\n    console.log(posProducts);\r\n    if (posProducts[0] != undefined) {\r\n      await pushInventoryDetails2();\r\n      toConsoleState();\r\n      console.log(singleItemData);\r\n      console.log(singleItemData.itemNo);\r\n      // await inventoryService.UpdateInvoiceData(\r\n      //   inv,\r\n      //   num,\r\n      //   day,\r\n      //   singleItemData[0].itemNo\r\n      // );\r\n\r\n      //Update unit cost n price in db, after update POS.\r\n      let data1 = {\r\n        invoiceName: selectedDropdown.slug,\r\n        itemName: singleItemData[0].itemNo.toLowerCase(),\r\n        value: {\r\n          cost: singleItemData[0].cp,\r\n          sellingPrice: newUnitPrice,\r\n          isUpdated: \"true\",\r\n          isUpdatedDate:todayDate\r\n        },\r\n      };\r\n      console.log(data1);\r\n      await inventoryService.UpdateHandWrittenProductFields(data1);\r\n\r\n      //Log Generate.\r\n      console.log(\"PRODUCTT\");\r\n      console.log(singleItemData);\r\n      const log = {\r\n        InvoiceName: selectedDropdown.slug,\r\n        InvoiceDate: \"\",\r\n        ItemNo: singleItemData[0].itemNo,\r\n        InvoiceDescription: singleItemData[0].description,\r\n        PosDescription: singleItemData[0].posName,\r\n        OldUnitCost: singleItemData[0].cost,\r\n        OldUnitPrice: prevNewUnitPrice,\r\n        // OldMarkup: singleItemData[0].margin.toFixed(2).toString(),\r\n        OldMarkup: (\r\n          ((prevNewUnitPrice - singleItemData[0].cost) /\r\n            singleItemData[0].cost) *\r\n          100\r\n        )\r\n          .toFixed(2)\r\n          .toString(),\r\n\r\n        NewUnitCost: posProducts[0].COST,\r\n        NewUnitPrice: posProducts[0].PRICE,\r\n        // NewMarkup:( ((singleItemData[0].sp- singleItemData[0].cp)/ singleItemData[0].cp)*100).toFixed(2).toString(),\r\n        NewMarkup: (\r\n          ((posProducts[0].PRICE - posProducts[0].COST) / posProducts[0].COST) *\r\n          100\r\n        )\r\n          .toFixed(2)\r\n          .toString(),\r\n\r\n        UpdateDate: todayDate,\r\n        Person: userEmail,\r\n        TimeStamp: new Date().toTimeString().split(\" \")[0],\r\n        InvCaseCost: singleItemData[0].unitPrice,\r\n        InvUnitsInCase: singleItemData[0].pieces,\r\n        HandWritten: \"YES\",\r\n        SKU: singleItemData[0].posSku,\r\n      };\r\n      console.log(log);\r\n\r\n      const logUpdate = await inventoryService.handwrittenPosLogs(log);\r\n      console.log(logUpdate);\r\n      setProductsInTableNew(selectedDropdown);\r\n    } else {\r\n      alert(\"POS not updated!!\");\r\n      setProductsInTableNew(selectedDropdown);\r\n    }\r\n    // setApiLoader(false);\r\n    // dispatch({type: \"API_LOADER\"});\r\n  };\r\n  //*********************************************************************POS UPDATE ENDS******************************************* */\r\n\r\n  async function gethandwrittenLogs(){\r\n    console.log(\"GET HANDWRITTEN LOG\");\r\n    console.log(singleItemData);\r\n    const log = await Promise.all(\r\n      singleItemData.map(async (row)=>{\r\n        console.log(row.barcode);\r\n        const data = {\r\n          itemNo:row.itemNo,\r\n          invoicename:selectedDropdown.slug,\r\n          sku:row.posSku,\r\n          updatedate:row.isUpdatedDate\r\n        }\r\n        try{\r\n          const res = await inventoryService.gethandwrittenPosLogs(data);\r\n          console.log(res);\r\n          const {PosUnitCost,PosUnitPrice,NewUnitCost,NewUnitPrice} = res[0];\r\n          return {\r\n            PosUnitCost,PosUnitPrice,NewUnitCost,NewUnitPrice\r\n          }\r\n        }catch(error){\r\n          console.log(error);\r\n          alert(\"Previou Price Not Find\");\r\n        }\r\n      })\r\n    )\r\n\r\n    gethandwrittenlog = log;\r\n    console.log(gethandwrittenlog);\r\n  }\r\n\r\n  const reversePushInventoryDetails2 = async () => {\r\n    console.log(posProducts);\r\n    // setLoader(true);\r\n    console.log(singleItemData);\r\n    let data = singleItemData.map((element) => {\r\n      return {\r\n        item: element.itemNo,\r\n        qty: parseInt(element.qty) * parseInt(element.pieces),\r\n        cp: element.unitPrice,\r\n        markup: element.markup,\r\n        sp: element.sp,\r\n        description: element.description,\r\n      };\r\n    });\r\n\r\n    console.log(data);\r\n\r\n    var duplicates = {};\r\n    for (var i = 0; i < data.length; i++) {\r\n      if (duplicates.hasOwnProperty(data[i].item)) {\r\n        console.log(\"true\");\r\n        duplicates[data[i].item].push(i);\r\n      } else if (data.lastIndexOf(data[i].item) !== i) {\r\n        console.log(\"false\");\r\n        console.log(data.lastIndexOf(data[i].item));\r\n        duplicates[data[i].item] = [i];\r\n      }\r\n    }\r\n\r\n    console.log(duplicates);\r\n\r\n    let tempData = Object.values(duplicates).filter((ele) => ele.length > 1);\r\n    console.log(tempData);\r\n    if (tempData.length > 0) {\r\n      tempData.forEach((index) => {\r\n        let temp = 0;\r\n        index.forEach((val) => {\r\n          if (data[val]) {\r\n            // console.log(\"data[val]\", data[val]);\r\n            temp += data[val].qty;\r\n            if (temp - data[val].qty !== 0) {\r\n              data[val] = null;\r\n            }\r\n          }\r\n        });\r\n        data[index[0]].qty = temp;\r\n      });\r\n    }\r\n    console.log(data);\r\n    data = data.filter((ele) => ele !== null);\r\n    console.log(data);\r\n    /**\r\n     * add the fileds of  data from the woocom & ocr\r\n     */\r\n    console.log(wooComProducts.length);\r\n    console.log(wooComProducts);\r\n    if (wooComProducts[0] != null) {\r\n      let updatedWoocomProducts = data\r\n        .map((product, index) => {\r\n          /**find index of the item in fetched woocom product list */\r\n          const wooIndex = wooComProducts.findIndex(\r\n            (wooProduct) => product.item === wooProduct.itemNo\r\n          );\r\n          console.log(\"wooIndex : \", wooIndex);\r\n          if (wooIndex !== -1) {\r\n            /**get the qty & other fileds of the woocom product */\r\n            let { id, stock_quantity } = wooComProducts[wooIndex];\r\n            stock_quantity += product.qty;\r\n            const regular_price = product.sp;\r\n            return { id, regular_price, stock_quantity, itemNo: product.item };\r\n          }\r\n          return null;\r\n        })\r\n        .filter((item) => item !== null);\r\n\r\n      let updatedWoocomProducts2 = [{\r\n        ...updatedWoocomProducts[0],\r\n        regular_price:gethandwrittenlog[0].PosUnitPrice\r\n      }];\r\n      console.log(updatedWoocomProducts2);\r\n      await pushToWoocom(updatedWoocomProducts2);\r\n    }\r\n    let posProducts2 = [{\r\n      ...posProducts[0],\r\n      COST:gethandwrittenlog[0].PosUnitCost,\r\n      PRICE:gethandwrittenlog[0].PosUnitPrice\r\n    }]\r\n    await pushToPOS(posProducts2);\r\n\r\n    // setLoader(false);\r\n    // dispatch({type: \"LOADER\"});\r\n    // if (itemsNotPushed.length === 0) {\r\n    window.alert(\"Inventory updated successfully\");\r\n    // // setRedirect(true);\r\n    // } else {\r\n    //   window.alert(\"Inventory not updated\");\r\n    // }\r\n  };\r\n\r\n  const reversePOSUpdate = async (index) => {\r\n    console.log(\"reversePOSUpdate\");\r\n    // const response = await inventoryService.gethandwrittenPosLogs();\r\n\r\n    singleItemData = [tableData[index]];\r\n    console.log(singleItemData);\r\n\r\n    updateSku = singleItemData[0].posSku;\r\n\r\n    // await gethandwrittenLogs();\r\n    // await getProducts();\r\n    await getPosProducts();\r\n    console.log(posProducts);\r\n\r\n    if (posProducts[0] != undefined) {\r\n      // await reversePushInventoryDetails2();\r\n      // toConsoleState();\r\n      // console.log(singleItemData);\r\n      // console.log(singleItemData.itemNo);\r\n      // await inventoryService.UpdateInvoiceData(\r\n      //   inv,\r\n      //   num,\r\n      //   day,\r\n      //   singleItemData[0].itemNo\r\n      // );\r\n\r\n      //Update unit cost n price in db, after update POS.\r\n      let data1 = {\r\n        invoiceName: selectedDropdown.slug,\r\n        itemName: singleItemData[0].itemNo.toLowerCase(),\r\n        value: {\r\n          // cost: gethandwrittenlog[0].PosUnitCost,\r\n          // sellingPrice: gethandwrittenlog[0].PosUnitPrice,\r\n          isUpdated: \"false\",\r\n          // isUpdatedDate:todayDate\r\n        },\r\n      };\r\n      console.log(data1);\r\n      await inventoryService.UpdateHandWrittenProductFields(data1);\r\n\r\n      //Log Generate.\r\n      console.log(\"PRODUCTT\");\r\n      // console.log(singleItemData);\r\n      // const log = {\r\n      //   InvoiceName: selectedDropdown.slug,\r\n      //   InvoiceDate: \"\",\r\n      //   ItemNo: singleItemData[0].itemNo,\r\n      //   InvoiceDescription: singleItemData[0].description,\r\n      //   PosDescription: singleItemData[0].posName,\r\n      //   PosUnitCost: singleItemData[0].cost,\r\n      //   PosUnitPrice: singleItemData[0].sellingPrice,\r\n      //   // OldMarkup: singleItemData[0].margin.toFixed(2).toString(),\r\n      //   OldMarkup: (\r\n      //     ((singleItemData[0].sellingPrice - singleItemData[0].cost) /\r\n      //       singleItemData[0].cost) *\r\n      //     100\r\n      //   )\r\n      //     .toFixed(2)\r\n      //     .toString(),\r\n\r\n      //   NewUnitCost: posProducts[0].COST,\r\n      //   NewUnitPrice: posProducts[0].PRICE,\r\n      //   // NewMarkup:( ((singleItemData[0].sp- singleItemData[0].cp)/ singleItemData[0].cp)*100).toFixed(2).toString(),\r\n      //   NewMarkup: (\r\n      //     ((posProducts[0].PRICE - posProducts[0].COST) /\r\n      //       posProducts[0].COST) *\r\n      //     100\r\n      //   )\r\n      //     .toFixed(2)\r\n      //     .toString(),\r\n\r\n      //   UpdateDate: todayDate,\r\n      //   Person: userEmail,\r\n      //   TimeStamp: new Date().toTimeString().split(\" \")[0],\r\n      //   InvCaseCost: singleItemData[0].unitPrice,\r\n      //   InvUnitsInCase: singleItemData[0].pieces,\r\n      //   HandWritten: \"YES\",\r\n      //   SKU: singleItemData[0].posSku,\r\n      // };\r\n      // console.log(log);\r\n\r\n      // const logUpdate = await inventoryService.handwrittenPosLogs(log);\r\n      // console.log(logUpdate);\r\n      setProductsInTableNew(selectedDropdown);\r\n    } else {\r\n      alert(\"POS not updated!!\");\r\n      setProductsInTableNew(selectedDropdown);\r\n    }\r\n  };\r\n\r\n  const reverseUpdate = async (index) => {\r\n    console.log(index);\r\n    console.log(tableData);\r\n    console.log(tableData[index]);\r\n    let item = tableData[index];\r\n    let data = {\r\n      invoice: invoice.slug,\r\n      itemNo: item.itemNo,\r\n    };\r\n    const result = await inventoryService.reverseUpdate(data);\r\n    console.log(result);\r\n    if (result.ok == 1) {\r\n      setProductsInTable();\r\n    } else {\r\n      alert(\"Some error occured in updation\");\r\n    }\r\n  };\r\n\r\n  const linkManually = async (index) => {\r\n    console.log(index);\r\n    console.log(tableData);\r\n    console.log(tableData[index]);\r\n    let item = tableData[index];\r\n    console.log(item);\r\n    let data = {\r\n      invoice: invoice.slug,\r\n      itemNo: item.itemNo,\r\n    };\r\n    const result = await inventoryService.linkManually(data);\r\n    console.log(result);\r\n\r\n    //Update unit cost from excel.\r\n    // const skuData = {sku: item.posSku};\r\n    // const res = await inventoryService.fetchProductFromPosList(skuData);\r\n    // console.log(res);\r\n\r\n    //Log Generate.\r\n    const costChange = item.cp - item.cost;\r\n    const invError = item.cp >= 3 * item.cost ? \"YES\" : \"\";\r\n    console.log(invError);\r\n    let logState = {\r\n      InvoiceDescription: item.description,\r\n      PosDescription: item.posName,\r\n      SKU: item.posSku,\r\n      Barcode: item.barcode,\r\n      InvoiceName: invoice.slug,\r\n      ItemCode: item.itemNo,\r\n      LinkingDate: todayDate,\r\n      PersonName: userEmail,\r\n      Size: item.size,\r\n      PosUnitCost: item.cost,\r\n      PosUnitPrice: item.sellingPrice,\r\n      // InvoiceNo: num,\r\n      // InvoiceDate: day,\r\n      Department: item.department,\r\n      InvUnitCost: item.cp,\r\n      CostIncrease: invError == \"YES\" ? \"\" : costChange > 0 ? \"YES\" : \"\",\r\n      CostDecrease: invError == \"YES\" ? \"\" : costChange < 0 ? \"YES\" : \"\",\r\n      CostSame: invError == \"YES\" ? \"\" : costChange == 0 ? \"YES\" : \"\",\r\n      InvError: invError,\r\n    };\r\n    console.log(logState);\r\n    const logResult = await inventoryService.linkManuallyLog(logState);\r\n    console.log(logResult);\r\n\r\n    if (result.statusText == \"OK\") {\r\n      setProductsInTable();\r\n      // setProductsInTableNew(inv, num, day);\r\n    } else {\r\n      alert(\"Some error occured in updation\");\r\n      setProductsInTable();\r\n      // setProductsInTableNew(inv, num, day);\r\n    }\r\n  };\r\n\r\n  const updateUnits = async (index) => {\r\n    const item = tableData[index];\r\n    console.log(item);\r\n    const data = {\r\n      invoiceName: selectedDropdown.slug,\r\n      itemName: item.itemNo.toLowerCase(),\r\n      value: {\r\n        pieces: item.pieces,\r\n      },\r\n    };\r\n\r\n    console.log(\"updateUnits_data : \", data);\r\n    inventoryService\r\n      .UpdateHandWrittenProductFields(data)\r\n      .then((res) => {\r\n        if (!res) {\r\n          throw new Error(\"Product not updated\");\r\n        }\r\n        console.log(res);\r\n        alert(\"Successfully updated fields\");\r\n        // setStateUpdated(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Some error occuured in creating product\");\r\n      });\r\n    // .finally(setProductsInTable());\r\n    // console.log(res);\r\n  };\r\n\r\n  const updatePosDetails = async (index) => {\r\n    const item = tableData[index];\r\n    console.log(item);\r\n    const data = {\r\n      invoiceName: selectedDropdown.slug,\r\n      itemName: item.itemNo.toLowerCase(),\r\n      value: {\r\n        ...item,\r\n        barcode: posProduct.barcode,\r\n        department: posProduct.department,\r\n        posName: posProduct.pos,\r\n        posSku: posProduct.posSku,\r\n        size: posProduct.size,\r\n        sellingPrice: posProduct.sellingPrice,\r\n        cost: posProduct.sellerCost,\r\n        isUpdated: \"false\",\r\n      },\r\n    };\r\n\r\n    console.log(\"updatePosDetails : \", data);\r\n    inventoryService\r\n      .UpdateHandWrittenProductFields(data)\r\n      .then((res) => {\r\n        if (!res) {\r\n          throw new Error(\"Product not updated\");\r\n        }\r\n        console.log(res);\r\n        alert(\"Successfully updated fields\");\r\n        // setStateUpdated(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Some error occuured in creating product\");\r\n      })\r\n      .finally(() => {\r\n        setProductsInTableNew(selectedDropdown);\r\n        // renderTableData();\r\n      });\r\n    // console.log(res);\r\n  };\r\n\r\n  const linkingCorrect = async (index) => {\r\n    console.log(index);\r\n    console.log(tableData);\r\n    console.log(tableData[index]);\r\n    let item = tableData[index];\r\n    console.log(item);\r\n    let data = {\r\n      invoice: invoice.slug,\r\n      itemNo: item.itemNo,\r\n    };\r\n    console.log(data);\r\n    const res = await inventoryService.linkingCorrect(data);\r\n    console.log(res);\r\n    if (res.statusText == \"OK\") {\r\n      const costChange = item.cp - item.cost;\r\n      const invError = item.cp >= 3 * item.cost ? \"YES\" : \"\";\r\n\r\n      let logState = {\r\n        InvoiceDescription: item.description,\r\n        PosDescription: item.posName,\r\n        SKU: item.posSku,\r\n        Barcode: item.barcode,\r\n        InvoiceName: invoice.slug,\r\n        ItemCode: item.itemNo,\r\n        LinkingDate: todayDate,\r\n        PersonName: userEmail,\r\n        Size: item.size,\r\n        PosUnitCost: item.cost,\r\n        PosUnitPrice: item.sellingPrice,\r\n        // InvoiceNo: num,\r\n        // InvoiceDate: day,\r\n        Department: item.department,\r\n        InvUnitCost: item.cp,\r\n        CostIncrease: \"\",\r\n        CostDecrease: \"\",\r\n        CostSame: \"\",\r\n        Unidentified: \"YES\",\r\n        InvError: invError,\r\n      };\r\n      const res = await inventoryService.UnidentifiedLog(logState);\r\n      console.log(res);\r\n      alert(\"SUCCESS\");\r\n      setProductsInTable();\r\n    } else {\r\n      alert(\"Some error occured\");\r\n      setProductsInTable();\r\n    }\r\n  };\r\n\r\n  // const reversePOSUpdate = async(index) => {\r\n  //   console.log(index);\r\n  //   console.log(tableData);\r\n  //   console.log(tableData[index]);\r\n  //   let item = tableData[index];\r\n  //   const result = await inventoryService.reversePOSUpdate(inv, num, day, item.itemNo);\r\n  //   if(result.ok == 1){\r\n  //     setProductsInTable();\r\n  //   }else {\r\n  //     alert(\"Some error occured in updation\");\r\n  //   }\r\n\r\n  // }\r\n\r\n  const renderTableHeader = () => {\r\n    return header.map((key, index) => {\r\n      return (\r\n        <th\r\n          key={index}\r\n          style={{\r\n            position: \"sticky\",\r\n            top: \"70px\",\r\n            background: \"grey\",\r\n          }}\r\n        >\r\n          {key.toUpperCase()}\r\n        </th>\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderTableData = () => {\r\n    // dispatch({type: \"LOADER\"});\r\n    // setTableData(tableContant);\r\n    console.log(\"renderTableData_tableData : \", tableData);\r\n    // console.log(\"renderTableData_tableContant : \", tableContant);\r\n    console.log(\"renderTableData_showPosState : \", showPosState);\r\n\r\n    // hicksvilleDropdown(HicksData);\r\n    console.log(\"renderTableData_tableData : \", tableData);\r\n    if (tableData) {\r\n      console.log(tableData);\r\n      console.log(\"renderTableData_showPosState : \", showPosState);\r\n      // console.log(showPosIndex);\r\n      // console.log(tableData[0]);\r\n\r\n      let rows = tableData.map((element, index) => {\r\n        //fuzzwuzzSuggestion = getFuzzwuzzSuggestion(element.description);\r\n        let isEmpty =\r\n          element.qty === \"\" ||\r\n          element.itemNo === \"\" ||\r\n          !element.pieces ||\r\n          isNaN(element.unitPrice) ||\r\n          element.unitPrice === \"\" ||\r\n          isNaN(element.extendedPrice);\r\n        // if (isEmpty && element.show) {\r\n        //   let emptyColumn = [...emptyColumnList, index];\r\n        //   emptyColumnList = [...new Set(emptyColumn)];\r\n        // }\r\n        let isFree = element.qty != 0 && element.extendedPrice === \"0.00\";\r\n        // console.log(element.isUpdated);\r\n        console.log(\"renderTableData_element : \", element);\r\n        let margin =\r\n          ((element.sellingPrice - element.cost) / element.cost) * 100;\r\n\r\n        console.log(\"isEmpty : \", isEmpty);\r\n        console.log(\"isFree : \", isFree);\r\n        const isUpdated = \"true\";\r\n        const updateIndex = 1;\r\n        const costInc = \"true\";\r\n        const costDec = \"true\";\r\n        let hicksvilleData = [];\r\n        const deleteRow = () => {\r\n          console.log(\"deleteRow\");\r\n        };\r\n        const addRow = () => {\r\n          console.log(\"addRow\");\r\n        };\r\n\r\n       \r\n        const pushInventoryDetails = () => {\r\n          console.log(\"pushInventoryDetails\");\r\n        };\r\n\r\n        return (\r\n          <tr\r\n            key={index}\r\n            className={isEmpty ? styles.red : isFree ? styles.free : null}\r\n            // style={element.show ? { opacity: \"1\" } : { opacity: \"0.4\" }}\r\n            style={\r\n              element.linkingCorrect == \"false\"\r\n                ? { backgroundColor: \"pink\" }\r\n                : element.isUpdated === \"true\"\r\n                ? { backgroundColor: \"lightGreen\" }\r\n                : element.show\r\n                ? { opacity: \"1\" }\r\n                : { opacity: \"0.4\" }\r\n            }\r\n          >\r\n            <td> {index + 1} </td>\r\n\r\n            {/* <td>\r\n              <TextField\r\n                type=\"tel\"\r\n                value={element.details}\r\n                id=\"outlined-secondary\"\r\n                variant=\"outlined\"\r\n                onChange={(e) => {\r\n                  handleChange(index, \"details\", e.target.value);\r\n                }}\r\n                style={{ width: 100 }}\r\n              />\r\n            </td> */}\r\n            <td className={styles.element}>\r\n              <TextField\r\n                type=\"tel\"\r\n                value={\r\n                  showPosIndex === index\r\n                    ? showPosState.barcode\r\n                    : element.barcode\r\n                }\r\n                id=\"outlined-secondary\"\r\n                variant=\"outlined\"\r\n                onChange={(e) => {\r\n                  handleChange(index, \"barcode\", e.target.value);\r\n                }}\r\n                style={{ width: 150 }}\r\n              />\r\n              <IconButton\r\n                color=\"primary\"\r\n                aria-label=\"add to review\"\r\n                // onClick={() => addForReview(element, index)}\r\n              >\r\n                <InfoOutlinedIcon\r\n                  style={element.isReviewed === \"true\" ? { fill: \"red\" } : null}\r\n                />\r\n                {/* <AddShoppingCartIcon\r\n                  style={\r\n                    reviewItems.includes(index)\r\n                      ? { backgroundColor: \"green\" }\r\n                      : null\r\n                  }\r\n                /> */}\r\n              </IconButton>\r\n              <div\r\n                className={\r\n                  element.isReviewed === \"true\"\r\n                    ? styles.tooltipIsReviewed\r\n                    : styles.tooltip\r\n                }\r\n              >\r\n                <p>\r\n                  POS Product-{\" \"}\r\n                  {showPosIndex === index ? showPosState.pos : element.posName}\r\n                </p>\r\n                {/* <p>UPC- {showPosIndex === index ? showPosState.barcode : element.barcode}</p> */}\r\n                <p>\r\n                  Size-{\" \"}\r\n                  {showPosIndex === index ? showPosState.size : element.size}\r\n                </p>\r\n                <p>\r\n                  Department -{\" \"}\r\n                  {showPosIndex === index\r\n                    ? showPosState.department\r\n                    : element.department}\r\n                </p>\r\n                {/*<p>Margin(%) - {margin.toFixed(2)}</p>*/}\r\n                <p>Margin(%) - {showPosIndex === index ? (((showPosState.sellingPrice - showPosState.sellerCost)/showPosState.sellerCost)*100).toFixed(2) : margin.toFixed(2)}</p>\r\n                <p>\r\n                  Unit Cost-{\" \"}\r\n                  {showPosIndex === index\r\n                    ? showPosState.sellerCost\r\n                    : element.cost}\r\n                </p>\r\n                <p>\r\n                  Unit Price-{\" \"}\r\n                  {showPosIndex === index\r\n                    ? showPosState.sellingPrice\r\n                    : element.sellingPrice}\r\n                </p>\r\n                {/* <p>Price- {showPosIndex === index ? showPosState.price : element.price}</p> */}\r\n                <div>\r\n                  <button\r\n                    onClick={() => {\r\n                      if (notFounds === \"true\") {\r\n                        toggleModal(\"notfounds\");\r\n                      } else {\r\n                        updatePosDetails(index);\r\n                      }\r\n                    }}\r\n                    disabled={showPosIndex === index ? false : true}\r\n                    style={{\r\n                      backgroundColor: \"green\",\r\n                      border: \"none\",\r\n                      color: \"white\",\r\n                      padding: \"4px 8px\",\r\n                      textAlign: \"center\",\r\n                      textDecoration: \"none\",\r\n                      display: \"inline-block\",\r\n                      fontSize: \"14px\",\r\n                      align: \"left\",\r\n                    }}\r\n                  >\r\n                    Update Item\r\n                  </button>\r\n                </div>\r\n                <br />\r\n                <div>\r\n                  <button\r\n                    onClick={() => linkManually(index)}\r\n                    // disabled={showPosIndex === index ? false : true}\r\n                    style={{\r\n                      backgroundColor: \"blue\",\r\n                      border: \"none\",\r\n                      color: \"white\",\r\n                      padding: \"4px 8px\",\r\n                      textAlign: \"center\",\r\n                      textDecoration: \"none\",\r\n                      display: \"inline-block\",\r\n                      fontSize: \"14px\",\r\n                      align: \"left\",\r\n                    }}\r\n                  >\r\n                    Link Manually\r\n                  </button>\r\n                </div>\r\n                <br />\r\n                <div>\r\n                  <button\r\n                    onClick={() => reverseUpdate(index)}\r\n                    // disabled={showPosIndex === index ? false : true}\r\n                    style={{\r\n                      backgroundColor: \"red\",\r\n                      border: \"none\",\r\n                      color: \"white\",\r\n                      padding: \"4px 8px\",\r\n                      textAlign: \"center\",\r\n                      textDecoration: \"none\",\r\n                      display: \"inline-block\",\r\n                      fontSize: \"14px\",\r\n                      align: \"left\",\r\n                    }}\r\n                  >\r\n                    Reverse Update\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </td>\r\n            <td>\r\n              {showPosIndex === index ? showPosState.posSku : element.posSku}\r\n            </td>\r\n            <td>\r\n              <TextField\r\n                type=\"tel\"\r\n                value={element.qty}\r\n                id=\"outlined-secondary\"\r\n                variant=\"outlined\"\r\n                onChange={(e) => {\r\n                  handleChange(index, \"qty\", e.target.value);\r\n                }}\r\n                style={{ width: 100 }}\r\n              />\r\n            </td>\r\n            <td>{element.cp}</td>\r\n            <td>\r\n              <Autocomplete\r\n                value={element.itemNo}\r\n                onChange={(event, newValue) => {\r\n                  if (newValue) {\r\n                    handleChange(index, \"itemNo\", newValue);\r\n                  }\r\n                }}\r\n                id=\"combo-box\"\r\n                options={itemNoDropdown}\r\n                getOptionLabel={(option) => option}\r\n                style={{ width: 200 }}\r\n                renderInput={(params) => (\r\n                  <TextField {...params} variant=\"outlined\" />\r\n                )}\r\n              />\r\n            </td>\r\n            <td>\r\n              {/* {dropdownIndex == index ? fetchingOptions ? <Loading type=\"ThreeDots\" height={40} width={40} /> : null : null} */}\r\n              <Autocomplete\r\n                value={\r\n                  showPosIndex === index ? showPosState.item : element.itemNo\r\n                }\r\n                loading={true}\r\n                onInputChange={(event, value) => {\r\n                  console.log(\"ON INPUT CHANGE\");\r\n                  // event.toLowerCase();\r\n                  // value.toLowerCase();\r\n                  // console.log(event.target.value);\r\n                  // console.log(value);\r\n                  // searchDropdown(event, value);\r\n                  // setOptions([]);\r\n                  if (event != null) {\r\n                    setTimeout(() => {\r\n                      hicksvilleDropdownNew(event, value, index);\r\n                    }, 1500);\r\n                  }\r\n                  // hicksvilleDropdownNew(event, value, index);\r\n                }}\r\n                onChange={(event, newValue) => {\r\n                  // console.log(event.target.value);\r\n                  // console.log(newValue);\r\n                  if (newValue) {\r\n                    let newState = { ...showPosState };\r\n                    console.log(newValue);\r\n                    // newState.item = newValue.name;\r\n                    newState.item = element.itemNo;\r\n                    newState.description = newValue.name;\r\n                    newState.barcode = newValue.upc;\r\n                    newState.pos = newValue.name;\r\n                    newState.posSku = newValue.sku;\r\n                    newState.size = newValue.size;\r\n                    newState.department = newValue.department;\r\n                    newState.sellerCost = newValue.cost;\r\n                    newState.sellingPrice = newValue.price;\r\n                    // setShowPosState(newState);\r\n                    dispatch({ type: \"SET_POS_STATE\", data: newState });\r\n                    setShowPosIndex(index);\r\n                    setUnitCost(newValue.cost);\r\n                    setPosProduct(newState);\r\n                    setShowPosState(newState);\r\n                    // setStateUpdated(\"\");\r\n                    if (isEmpty) {\r\n                      // setNotFounds(\"true\");\r\n                      dispatch({ type: \"NOT_FOUNDS\", data: \"true\" });\r\n\r\n                      setRedState(\"false\");\r\n                    }\r\n                    //setDisabled(false);\r\n                    //updateOnHoverDetails(index);\r\n                    //setShowPosIndex(index);\r\n                    // console.log(newValue);\r\n                    console.log(newState);\r\n                    //console.log(showPosState);\r\n                  }\r\n                }}\r\n                id=\"combo-box\"\r\n                // options={element.fuzzSuggestion}\r\n                options={options}\r\n                // getOptionLabel={option => option.label}\r\n                getOptionLabel={(option) => option.label ?? element.itemNo}\r\n                // getOptionLabel={(option) => dropdownLoader ? <Spinner /> : option.label}\r\n                style={{ width: 400 }}\r\n                renderInput={(params) => (\r\n                  <TextField {...params} variant=\"outlined\" />\r\n                )}\r\n              />\r\n            </td>\r\n\r\n            <td>{element.description}</td>\r\n            {/* <td>{element.pieces}</td> */}\r\n            <td>\r\n              <TextField\r\n                type=\"tel\"\r\n                value={element.pieces}\r\n                variant=\"outlined\"\r\n                onChange={(e) => {\r\n                  handleChange(index, \"pieces\", e.target.value);\r\n                }}\r\n                style={{ width: 100 }}\r\n              />\r\n              <button\r\n                onClick={() => {\r\n                  updateUnits(index);\r\n                }}\r\n                style={{\r\n                  backgroundColor: \"#008CBA\",\r\n                  border: \"none\",\r\n                  color: \"white\",\r\n                  padding: \"5px 16px\",\r\n                  textAlign: \"center\",\r\n                  textDecoration: \"none\",\r\n                  display: \"inline-block\",\r\n                  fontSize: \"10px\",\r\n                  margin: \"4px 2px\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                Update Units\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <TextField\r\n                type=\"tel\"\r\n                value={element.unitPrice}\r\n                variant=\"outlined\"\r\n                onChange={(e) => {\r\n                  handleChange(index, \"unitPrice\", e.target.value);\r\n                }}\r\n                style={\r\n                  element.priceIncrease === 1\r\n                    ? { backgroundColor: \"#1a8cff\", width: 100 }\r\n                    : element.priceIncrease === -1\r\n                    ? { backgroundColor: \"#ffb31a\", width: 100 }\r\n                    : { width: 100 }\r\n                  // showPosIndex === index ? costInc===\"true\" ? { backgroundColor: \"#1a8cff\", width: 100 } : costDec===\"true\" ? { backgroundColor: \"#ffb31a\", width: 100 } : {width: 100}\r\n                  //   : element.priceIncrease === 1\r\n                  //       ? { backgroundColor: \"#1a8cff\", width: 100 }\r\n                  //       : element.priceIncrease === -1\r\n                  //       ? { backgroundColor: \"#ffb31a\", width: 100 }\r\n                  //       : { width: 100 }\r\n                }\r\n              />\r\n            </td>\r\n            <td>{element.extendedPrice}</td>\r\n\r\n            <td>\r\n              <TextField\r\n                type=\"tel\"\r\n                /*value={element.sp}*/\r\n                value={(showPosIndex === index\r\n                  ? showPosState.sellingPrice\r\n                  : element.sellingPrice)}\r\n                variant=\"outlined\"\r\n                onChange={(e) => {\r\n                  handleChange(index, \"sellingPrice\", e.target.value);\r\n                }}\r\n                style={{ width: 100 }}\r\n              />\r\n            </td>\r\n            <td>{element.markup}</td>\r\n            {/* <td>\r\n              <Checkbox\r\n                checked={!element.show}\r\n                onChange={(e) => handleChange(index, \"show\", e.target.value)}\r\n                inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n              />\r\n            </td> */}\r\n\r\n            <td className={styles.element}>\r\n              <IconButton\r\n                onClick={() => {\r\n                  toggleModal(\"details\");\r\n                  setDetailsIndex(index);\r\n                }}\r\n              >\r\n                <AddCircleIcon />\r\n              </IconButton>\r\n              <div className={styles.tooltip}>\r\n                <p>Details- {element.details}</p>\r\n              </div>\r\n            </td>\r\n\r\n            <td>\r\n              <Button\r\n                text={element.show ? \"Delete\" : \"Undo\"}\r\n                color=\"btn btn-info\"\r\n                type=\"submit\"\r\n                onClick={() => deleteRow(index)}\r\n              />\r\n            </td>\r\n            <td>\r\n              <Button\r\n                text=\"Update POS\"\r\n                color=\"btn btn-info\"\r\n                type=\"submit\"\r\n                onClick={() => {\r\n                  if(window.confirm(\"Do You Want to Update Data in POS\")){\r\n                    pushSingleItemToInventory(index)\r\n                  }\r\n                }}\r\n                style={{ width: 120 }}\r\n              />\r\n            </td>\r\n            <td>\r\n              <Button\r\n                text=\"Reverse POS\"\r\n                type=\"submit\"\r\n                onClick={() => reversePOSUpdate(index)}\r\n                style={{ width: 120, backgroundColor: \"red\", color: \"white\" }}\r\n              />\r\n            </td>\r\n            <td className={styles.element}>\r\n              <IconButton onClick={() => linkingCorrect(index)}>\r\n                <Cancel />\r\n              </IconButton>\r\n            </td>\r\n            <td>{index + 1}</td>\r\n            {/* <td>\r\n              <Button\r\n                text={element.show ? \"Delete\" : \"Undo\"}\r\n                color=\"btn btn-info\"\r\n                type=\"submit\"\r\n                onClick={() => deleteRow(index)}\r\n              />\r\n            </td> */}\r\n          </tr>\r\n        );\r\n      });\r\n      return (\r\n        <div style={{ marginTop: \"35px\" }}>\r\n          <table className=\"table table-hover table-responsive-sm\">\r\n            <tbody>\r\n              <tr>{renderTableHeader()}</tr>\r\n              {rows}\r\n              <tr>\r\n                <td>\r\n                  <Button\r\n                    text=\"Add cell\"\r\n                    color=\"btn btn-info\"\r\n                    onClick={() => console.log(\"addRow\")}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <div className={styles.divRow}>\r\n            <Button\r\n              text=\"Update Inventory\"\r\n              color=\"btn btn-info\"\r\n              type=\"submit\"\r\n              onClick={() => console.log(\"addRow\")}\r\n            />\r\n            {/* <Button\r\n              text=\"Save Invoice Data\"\r\n              color=\"btn btn-info\"\r\n              type=\"submit\"\r\n              onClick={toggleModal}\r\n            /> */}\r\n            <Button\r\n              text=\"Re upload\"\r\n              color=\"btn btn-info\"\r\n              type=\"submit\"\r\n              onClick={() => window.location.reload()}\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const updateItem = async (index) => {\r\n    console.log(\"updateItem_selectedDropdown : \", selectedDropdown);\r\n    console.log(\"updateItem_posProduct : \", posProduct);\r\n    console.log(\"updateItem_tableData[index] : \", tableData[index]);\r\n    console.log(\"updateItem_itemName : \", itemName);\r\n    const data = {\r\n      invoiceName: selectedDropdown.slug,\r\n      itemName: itemName,\r\n      value: {\r\n        barcode: posProduct.barcode,\r\n        department: posProduct.department,\r\n        posName: posProduct.pos,\r\n        posSku: posProduct.posSku,\r\n        size: posProduct.size,\r\n        cost: posProduct.sellerCost,\r\n        sellingPrice: posProduct.sellingPrice,\r\n        pieces: unitsInCase,\r\n        sellingCost: newUnitCost,\r\n        itemNo: itemName,\r\n        description: itemName,\r\n        price: caseCost === undefined ? price : caseCost,\r\n        sku: \"\",\r\n        details: \"\",\r\n        extendedPrice: (quantity * price).toFixed(2).toString(),\r\n        unitPrice: price,\r\n        isUpdated: \"\",\r\n        isUpdatedDate:\"\",\r\n        itemNoPresent: \"\",\r\n        linkingCorrect: \"\",\r\n        margin: \"\",\r\n        markup: \"\",\r\n        priceIncrease: \"\",\r\n        qty: quantity,\r\n        show: \"\",\r\n        isReviewed: \"true\",\r\n      },\r\n    };\r\n    console.log(data);\r\n\r\n    const result = await inventoryService.UpdateHandWrittenProductFields(data);\r\n    console.log(result);\r\n    setProductsInTableNew(selectedDropdown);\r\n    renderTableData();\r\n  };\r\n\r\n  const toggleModal = (x) => {\r\n    console.log(posProduct);\r\n    console.log(!showModal);\r\n    if (x === \"showModal\") {\r\n      setShowModal(!showModal);\r\n    } else {\r\n      setShowModal(!showModal);\r\n\r\n      // setDetailsModal(!detailsModal);\r\n    }\r\n  };\r\n\r\n  const handleChange = (index, key, val) => {\r\n    console.log(\"handleChange_key : \", key);\r\n    console.log(\"handleChange_val : \", val);\r\n    console.log(\"handleChange_index : \", index);\r\n    console.log(\"handleChange_setPosProduct : \", posProduct);\r\n    console.log(\"handleChange_tableData[index] : \", tableData[index]);\r\n    // setPosProduct({\r\n    //   ...posProduct,\r\n    //   [key]: val,\r\n    // });\r\n    // const tempData = [{...tableData[index], [key]:val }]\r\n\r\n    if (key === \"sellingPrice\") {\r\n      setNewUnitPrice(val);\r\n      setPrevNewUnitPrice(tableDataCopy[index].sellingPrice);\r\n      console.log(\"NewUnitPrice_value : \", val);\r\n      console.log(\"PrevNewUnitPrice_value : \", tableDataCopy[index].sellingPrice);\r\n    }\r\n\r\n    const tempTableData = {\r\n      ...tableData,\r\n      [index]: { ...tableData[index], [key]: val },\r\n    };\r\n    const propertyNames = Object.values(tempTableData);\r\n\r\n    console.log(\"propertyName : \", propertyNames);\r\n    console.log(\"handelChange_propertyNames[index] : \", propertyNames[index]);\r\n    setTableData(propertyNames);\r\n  };\r\n\r\n  const addProduct = () => {\r\n    setShowModal(!showModal);\r\n    console.log(posProduct);\r\n    const data = {\r\n      InvoiceName: invoice.slug,\r\n      ItemName: posProduct.itemName,\r\n      POS: posProduct.pos,\r\n      Barcode: posProduct.barcode,\r\n      PosSKU: posProduct.posSku,\r\n      Size: posProduct.size,\r\n      Department: posProduct.department,\r\n      SellerCost: posProduct.unitCost,\r\n      SellingPrice: posProduct.unitPrice,\r\n      NewUnitCost: posProduct.newUnitCost,\r\n      NewUnitPrice: posProduct.newUnitPrice,\r\n    };\r\n\r\n    inventoryService\r\n      .handwrittenLogs(data)\r\n      .then((res) => {\r\n        if (!res) {\r\n          throw new Error(\"Product not created\");\r\n        }\r\n        console.log(res);\r\n        alert(\"Successfully updated fields\");\r\n      })\r\n      .then()\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Some error occuured in creating product\");\r\n      })\r\n      .finally();\r\n  };\r\n\r\n  const hicksvilleDropdownNew = async (event, value, index) => {\r\n    console.log(event);\r\n    console.log(value);\r\n    console.log(value.length);\r\n    setOptions([]);\r\n\r\n    if (!isNaN(value) && value.length > 0) {\r\n      console.log(\"number\");\r\n      const res = await inventoryService.getHicksvilleData(value.toUpperCase());\r\n      const data = res;\r\n      console.log(data);\r\n\r\n      let productsString = \"\";\r\n      for (let i = 0; i < data.length; i++) {\r\n        productsString = productsString + data[i].name + \"$$$\";\r\n      }\r\n      let result = productsString.split(\"$$$\");\r\n\r\n      let newData = [];\r\n      for (let i = 0; i < result.length; i++) {\r\n        let s = result[i].split(\"@@@\");\r\n        let obj = {\r\n          sku: s[1] === \"nan\" ? null : s[1],\r\n          upc: s[0] === \"nan\" ? null : s[0],\r\n          altupc1: s[14] === \"nan\" ? null : s[14],\r\n          altupc2: s[15] === \"nan\" ? null : s[15],\r\n          name: s[2] === \"nan\" ? null : s[2],\r\n          vintage: s[8] === \"nan\" ? null : s[8],\r\n          totalQty: s[13] === \"nan\" ? null : s[13],\r\n          cost: s[4] === \"nan\" ? null : s[4],\r\n          pricea: s[10] === \"nan\" ? null : s[10],\r\n          priceb: s[11] === \"nan\" ? null : s[11],\r\n          pricec: s[12] === \"nan\" ? null : s[12],\r\n          department: s[9] === \"nan\" ? null : s[9],\r\n          salePrice: s[5] === \"nan\" ? null : s[5],\r\n          size: s[6] === \"nan\" ? null : s[6],\r\n          pack: s[7] === \"nan\" ? null : s[7],\r\n          price: s[3] === \"nan\" ? null : s[3],\r\n        };\r\n        newData.push(obj);\r\n      }\r\n      const filter = newData.map((element) => {\r\n        let obj = { ...element };\r\n        obj.label = `${element.name}--${element.price}--${element.upc}--${element.size}--${element.cost}--${element.sku}`;\r\n        //console.log(obj);\r\n        return obj;\r\n      });\r\n      setOptions(filter);\r\n    }\r\n\r\n    if (isNaN(value) && value != null && value.length >= 4) {\r\n      console.log(\"string\");\r\n      // setDropdownLoader(true);\r\n      // setFetchingOptions(true);\r\n      const res = await inventoryService.getHicksvilleData(value.toUpperCase());\r\n      const data = res;\r\n      console.log(data);\r\n\r\n      let productsString = \"\";\r\n      for (let i = 0; i < data.length; i++) {\r\n        productsString = productsString + data[i].name + \"$$$\";\r\n      }\r\n      let result = productsString.split(\"$$$\");\r\n\r\n      let newData = [];\r\n      for (let i = 0; i < result.length; i++) {\r\n        let s = result[i].split(\"@@@\");\r\n        let obj = {\r\n          sku: s[1] === \"nan\" ? null : s[1],\r\n          upc: s[0] === \"nan\" ? null : s[0],\r\n          altupc1: s[14] === \"nan\" ? null : s[14],\r\n          altupc2: s[15] === \"nan\" ? null : s[15],\r\n          name: s[2] === \"nan\" ? null : s[2],\r\n          vintage: s[8] === \"nan\" ? null : s[8],\r\n          totalQty: s[13] === \"nan\" ? null : s[13],\r\n          cost: s[4] === \"nan\" ? null : s[4],\r\n          pricea: s[10] === \"nan\" ? null : s[10],\r\n          priceb: s[11] === \"nan\" ? null : s[11],\r\n          pricec: s[12] === \"nan\" ? null : s[12],\r\n          department: s[9] === \"nan\" ? null : s[9],\r\n          salePrice: s[5] === \"nan\" ? null : s[5],\r\n          size: s[6] === \"nan\" ? null : s[6],\r\n          pack: s[7] === \"nan\" ? null : s[7],\r\n          price: s[3] === \"nan\" ? null : s[3],\r\n        };\r\n        newData.push(obj);\r\n      }\r\n      const filter = newData.map((element) => {\r\n        let obj = { ...element };\r\n        if (element.itemNo != \"undefined\") {\r\n          obj.label = `${element.name}--${element.price}--${element.upc}--${element.size}--${element.cost}--${element.sku}`;\r\n        }\r\n        //console.log(obj);\r\n        return obj;\r\n      });\r\n      setOptions(filter);\r\n    }\r\n  };\r\n\r\n  const getItems = async () => {\r\n    // const data = {\r\n    //   invoice: invoice.slug,\r\n    // }\r\n    const data = selectedDropdown;\r\n    console.log(data);\r\n    const res = await inventoryService.getItemForHandwrittenInvoice(data);\r\n    console.log(\"getItems_res : \", res);\r\n    return res;\r\n  };\r\n  const setProductsInTable = () => {\r\n    // setLoader(true);\r\n    dispatch({ type: \"LOADER\" });\r\n    // GetProductDetails function fetch data from invoice name collection\r\n    async function invoiceData() {\r\n      const products = await tesseractService.GetProductDetails(\r\n        selectedDropdown.slug\r\n        // inv\r\n      );\r\n      console.log(\"setProductsInTable_invoiceData() : \", products);\r\n      //console.log(props.selectedInvoice);\r\n      return products;\r\n    }\r\n    invoiceData();\r\n    getItems()\r\n      .then((products) => {\r\n        /**post processing the table data after returning from filter */\r\n        // function convertToUpperCase(obj) {\r\n        //   let newObj = {};\r\n        //   for (let key in obj) {\r\n        //     newObj[key.toUpperCase()] = obj[key];\r\n        //   }\r\n        //   return newObj;\r\n        // }\r\n        // products = convertToUpperCase(products);\r\n        console.log(\"setProductsInTable_getItems() : \", products);\r\n        // scanInvoiceData.InvoiceData = ocrData;\r\n        //   setOcrProducts(ocrData);\r\n\r\n        //   console.log(scanInvoiceData);\r\n        // scanInvoiceData.InvoiceData = ocrData;\r\n        //console.log(resScnInvDta);\r\n        //console.log(\"OCERDATa\", ocrData);\r\n        //console.log(products);\r\n        //console.log(scanInvoiceData);\r\n        let table = products.map((row) => {\r\n          /**For invoices which dont have item no, set description as item no */\r\n          if (row.itemNo === undefined) {\r\n            // row.itemNo = row.description.trim().toUpperCase();\r\n            // row.itemNo = row.Description.trim().toUpperCase();\r\n            row.itemNo = row.Description.trim();\r\n          }\r\n          // row.itemNo = row.itemNo.toString().toUpperCase();\r\n          // row.itemNo = row.Item.toString().toUpperCase();\r\n          row.itemNo = row.Item.toString();\r\n\r\n          row.description = row.Description;\r\n          // products[row.itemNo] !== undefined\r\n          //   ? products[row.itemNo].Description\r\n          //   : row.description;\r\n          row.pieces = row.Quantity;\r\n          // products[row.Item] !== undefined\r\n          //   ? products[row.Item].Quantity\r\n          //   : 0;\r\n          row.sku = row.sku;\r\n          // products[row.Item] !== undefined\r\n          //   ? products[row.Item].sku\r\n          //   : \"\";\r\n          row.barcode = row.Barcode;\r\n          // products[row.Item] !== undefined\r\n          //   ? products[row.Item].Barcode\r\n          //   : \"\";\r\n          row.posName = row.POS;\r\n          // products[row.Item] !== undefined\r\n          //   ? products[row.Item].POS\r\n          //   : \"\";\r\n          row.markup = 0;\r\n          row.show = true;\r\n          row.posSku = row.PosSKU;\r\n          // products[row.Item] !== undefined\r\n          //   ? products[row.Item].PosSKU\r\n          //   : \"\";\r\n          row.isReviewed = row.isReviewed;\r\n          // products[row.Item] !== undefined ? products[row.Item].isReviewed : \"\" ;\r\n          row.size = row.Size;\r\n          // products[row.Item] !== undefined ? products[row.Item].Size : \"\";\r\n          row.department = row.Department;\r\n          // products[row.Item] !== undefined ? products[row.Item].Department : \"\";\r\n          row.cost = row.SellerCost;\r\n          // products[row.Item] !== undefined ? products[row.Item].SellerCost : \"\";\r\n          row.sellingPrice = row.SellingPrice;\r\n          // products[row.Item] !== undefined ? products[row.Item].SellingPrice : \"\";\r\n          row.price = row.Price;\r\n          // products[row.Item] !== undefined ? products[row.Item].Price : \"\";\r\n          row.details = row.Details;\r\n          // products[row.Item] !== undefined ? products[row.Item].Details : \"\";\r\n          row.linkingCorrect = row.linkingCorrect;\r\n          // products[row.Item] !== undefined ? products[row.Item].LinkingCorrect : \"\";\r\n          // row.margin = products[row.Item] !== undefined ? ((products[row.Item].SellingPrice - products[row.Item].SellerCost)/ products[row.Item].SellerCost)*100 : \"\";\r\n          row.margin =\r\n            row.Item !== undefined\r\n              ? ((row.SellingPrice - row.SellerCost) / row.SellerCost) * 100\r\n              : \"\";\r\n          //console.log(\"department-\" + row.department + \"  cost-\" + row.cost + \"  price\" + row.sellingPrice);\r\n          let sp = 0;\r\n          let cp = 0;\r\n          // const barcode = products.Barcode\r\n          // if (parseInt(row.pieces)) {\r\n          //   sp = (parseFloat(row.unitPrice) / parseInt(row.pieces)).toFixed(\r\n          //     2\r\n          //   );\r\n          //   cp = sp;\r\n          // }\r\n          row.cp = \"\";\r\n          row.sp = \"\";\r\n          if (row.Item !== undefined) {\r\n            if (sp > row.sellerCost) {\r\n              row[\"priceIncrease\"] = 1;\r\n            } else if (sp < +row.sellerCost) {\r\n              row[\"priceIncrease\"] = -1;\r\n            } else if (sp == +row.sellerCost) {\r\n              row[\"priceIncrease\"] = 0;\r\n            }\r\n          } else {\r\n            row[\"priceIncrease\"] = 0;\r\n          }\r\n\r\n          return { ...row, sp, cp };\r\n        });\r\n        // setLoader(false);\r\n        dispatch({ type: \"LOADER\" });\r\n\r\n        setTableData(table.filter((data) => data !== null));\r\n        setItemNoDropdown(Object.keys(products));\r\n        setProductDetails(products);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error on mapping ocrdata\", err);\r\n        // setLoader(false);\r\n        dispatch({ type: \"LOADER\" });\r\n      });\r\n  };\r\n\r\n  // ************* Add by Deepanshu *****************\r\n  const fetchSavedData = async (invoice) => {\r\n    const data = await inventoryService.GethandwrittenLogs(invoice);\r\n    console.log(\"fetchSavedData_data : \", data);\r\n    if (data.length === 0) {\r\n      alert(\"Invoice doesnt Exist!!\");\r\n    } else return data;\r\n    // console.log(data);\r\n    // console.log(data[0].InvoiceData);\r\n  };\r\n\r\n  const no = \"2022-01-21\";\r\n\r\n  const setProductsInTableNew = (currentInvoice) => {\r\n    // setOpenInvoice(true);\r\n    // dispatch({type: \"OPEN_INVOICE\", data: true})\r\n    // console.log(invoiceOptions[index]);\r\n    // let invoice = invoiceOptions[index].InvoiceName;\r\n    // // setInv(invoice);\r\n    // dispatch({type: \"SET_INV\", data: invoice})\r\n    // let date =  invoiceOptions[index].SavedDate;\r\n    // // setDay(date);\r\n    // dispatch({type: \"SET_DAY\", data: date})\r\n    // let no = invoiceOptions[index].SavedInvoiceNo;\r\n    // // setNum(no);\r\n    // dispatch({type: \"SET_NUM\", data: no})\r\n    // // setLoader(true);\r\n    // dispatch({type: \"LOADER\"});\r\n\r\n    const invoice = currentInvoice;\r\n    // getProductDetails from their collection\r\n    console.log(\"setProductsInTableNew_invoice : \", invoice);\r\n    async function invoiceData() {\r\n      const resdata = await inventoryService.getItemForHandwrittenInvoice(\r\n        invoice\r\n      );\r\n      //console.log(props.selectedInvoice);\r\n      console.log(\"setProductsInTableNew_products : \", resdata);\r\n      return resdata;\r\n    }\r\n\r\n    invoiceData()\r\n      .then((invData) => {\r\n        console.log(\"fetchSavedData_handwrittenInvoiceData : \", invData);\r\n        const table = invData.map((row) => {\r\n          row.itemNoPresent = row.itemNo === undefined ? false : true;\r\n\r\n          if (row.itemNo === undefined) {\r\n            row.itemNo = row.description.trim().toUpperCase();\r\n          }\r\n\r\n          row.itemNo = row.itemNo.toString().toUpperCase();\r\n          row.description = row.description.toString().toUpperCase();\r\n\r\n          row.markup = 0;\r\n          row.show = true;\r\n\r\n          console.log(\"check here\");\r\n          let sp = 0;\r\n          let cp = 0;\r\n          // const barcode = products.Barcode\r\n          if (parseInt(row.pieces)) {\r\n            sp = (parseFloat(row.unitPrice) / parseInt(row.pieces)).toFixed(2);\r\n            cp = sp;\r\n          }\r\n\r\n          if (row.itemNo !== undefined) {\r\n            if (sp > +row.cost) {\r\n              row.priceIncrease = 1;\r\n            } else if (sp < row.cost) {\r\n              row.priceIncrease = -1;\r\n            } else if (sp == +row.cost) {\r\n              row.priceIncrease = 0;\r\n            }\r\n          } else {\r\n            row.priceIncrease = 0;\r\n          }\r\n\r\n          /**filter out the rows for which qty shipped & extendedPrice is zero */\r\n          if (row.qty == \"0\" && row.extendedPrice === \"0.00\") {\r\n            return null;\r\n          }\r\n          /**Calulate qty for which qty is not read/scanned by textract */\r\n          if (!row.qty) {\r\n            row.qty = (\r\n              parseFloat(row.extendedPrice) / parseFloat(row.unitPrice)\r\n            ).toFixed(0);\r\n          }\r\n          row.margin =\r\n            row.itemNo !== undefined\r\n              ? ((row.SellingPrice - row.cost) / row.cost) * 100\r\n              : \"\";\r\n          return { ...row, sp, cp };\r\n        });\r\n\r\n        setTableData(table.filter((data) => data !== null));\r\n        setTableDataCopy(table.filter((data) => data !== null));\r\n        console.log(\"fetchSavedData_tableData : \", tableData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error on mapping ocrdata\", err);\r\n        // setLoader(false);\r\n        // dispatch({type: \"LOADER\"});\r\n      });\r\n  };\r\n\r\n  // ************* Add by Deepanshu *****************\r\n  useEffect(() => {\r\n    const curDate = new Date();\r\n    console.log(curDate);\r\n    let date =\r\n      curDate.getFullYear() +\r\n      \"-\" +\r\n      (curDate.getMonth() + 1) +\r\n      \"-\" +\r\n      curDate.getDate();\r\n    console.log(date);\r\n    setTodayDate(date);\r\n\r\n    firebase.auth().onAuthStateChanged(function (user) {\r\n      if (user) {\r\n        // setUserEmail(user.email);\r\n        setUserEmail(user.email);\r\n        console.log(\"This is the user: \", user);\r\n        console.log(\"This is the user: \", user.email);\r\n      } else {\r\n        // No user is signed in.\r\n        console.log(\"There is no logged in user\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <Paper className={classes.root}>\r\n        <Grid style={{ display: \"flex\" }}>\r\n          {/* <ul>\r\n                  <li> */}\r\n          <Autocomplete\r\n            value={selectedDropdown}\r\n            onChange={async (event, newValue) => {\r\n              console.log(\"newValue\", newValue);\r\n              if (newValue) {\r\n                console.log(\"setSelectedDropdown :\", newValue);\r\n                setSelectedDropdown(newValue);\r\n                // const getInvoiceData = async(invoice)=>{\r\n                //   console.log(\"setSelectedDropdown_invoice :\",invoice);\r\n                //   const resdata = await inventoryService.getItemForHandwrittenInvoice(\r\n                //     invoice\r\n                //   );\r\n                //   return resdata;\r\n                // }\r\n                // const restableData = await getInvoiceData(newValue)\r\n                // console.log(\"restableData : \",restableData);\r\n                // setTableData(restableData);\r\n                setProductsInTableNew(newValue);\r\n                // setInvoice(newValue);\r\n                // setTimeout(()=> {}, 1000);\r\n                // invoice = newValue;\r\n                // console.log(invoice);\r\n                // setProductsInTable();\r\n              }\r\n              // getInvoices(newValue);\r\n            }}\r\n            id=\"combo-box\"\r\n            options={handwrittenInvoiceList}\r\n            getOptionLabel={(option) => option.value}\r\n            style={{ width: 200 }}\r\n            autoHighlight\r\n            renderInput={(params) => (\r\n              <TextField {...params} label={dropdownLabel} variant=\"outlined\" />\r\n            )}\r\n          />\r\n          {/* </li> */}\r\n          <br />\r\n\r\n          {/* <li> */}\r\n          <TextField\r\n            label=\"Item Name\"\r\n            variant=\"outlined\"\r\n            value={itemName}\r\n            onChange={(event) => {\r\n              // handleChange(\"Item\", event.target.value);\r\n              setItemName(event.target.value);\r\n            }}\r\n          />\r\n          <TextField\r\n            label=\"Quantity\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            name=\"quantity\"\r\n            value={quantity}\r\n            onChange={(event) => {\r\n              // setInvoiceNo(event.target.value);\r\n              setQuantity(event.target.value);\r\n              console.log(\"setInvoiceNo_quantity : \", quantity);\r\n            }}\r\n          />\r\n\r\n          <TextField\r\n            label=\"Price\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            name=\"price\"\r\n            value={price}\r\n            onChange={(event) => {\r\n              setPrice(event.target.value);\r\n              console.log(\"setInvoiceNo_price : \", price);\r\n            }}\r\n          />\r\n          <TextField\r\n            disabled\r\n            label=\"Extended Price\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            name=\"extendedprice\"\r\n            value={(quantity * price).toFixed(2)}\r\n            onChange={(event) => {\r\n              setExtendedPrice(event.target.value);\r\n              console.log(\"setInvoiceNo_extendedprice : \", extendedPrice);\r\n            }}\r\n          />\r\n          {/* </li> */}\r\n          <br />\r\n          {/* <li> */}\r\n          <Autocomplete\r\n            value={posProduct.POS}\r\n            loading={true}\r\n            onInputChange={(event, value) => {\r\n              console.log(\"ON INPUT CHANGE\");\r\n              // event.toLowerCase();\r\n              // value.toLowerCase();\r\n              // console.log(event.target.value);\r\n              // console.log(value);\r\n              // searchDropdown(event, value);\r\n              // setOptions([]);\r\n              if (event != null) {\r\n                setTimeout(() => {\r\n                  hicksvilleDropdownNew(event, value);\r\n                }, 1500);\r\n              }\r\n              // hicksvilleDropdownNew(event, value, index);\r\n            }}\r\n            onChange={(event, newValue) => {\r\n              // console.log(event.target.value);\r\n              // console.log(newValue);\r\n              if (newValue) {\r\n                let newState = { ...posProduct };\r\n                console.log(\"newValue : \", newValue);\r\n                newState.item = itemName;\r\n                newState.isReviewed = \"true\";\r\n                // newState.item = element.itemNo\r\n                newState.description = newValue.name;\r\n                newState.barcode = newValue.upc;\r\n                newState.pos = newValue.name;\r\n                newState.posSku = newValue.sku;\r\n                newState.size = newValue.size;\r\n                newState.department = newValue.department;\r\n                newState.sellerCost = newValue.cost;\r\n                newState.sellingPrice = newValue.price;\r\n                // setShowPosState(newState);\r\n                // setShowPosIndex(index);\r\n                // setUnitCost(newValue.cost);\r\n                // setStateUpdated(\"\");\r\n\r\n                setPosProduct(newState);\r\n                console.log(\"setPosProduct : \", newState);\r\n                singleItemData = [];\r\n\r\n                //setDisabled(false);\r\n                //updateOnHoverDetails(index);\r\n                //setShowPosIndex(index);\r\n                // console.log(newValue);\r\n                console.log(newState);\r\n                //console.log(showPosState);\r\n                // toggleModal();\r\n              }\r\n            }}\r\n            id=\"combo-box\"\r\n            // options={element.fuzzSuggestion}\r\n            options={options}\r\n            // getOptionLabel={option => option.label}\r\n            getOptionLabel={(option) => option.label ?? posProduct.item}\r\n            // getOptionLabel={(option) => dropdownLoader ? <Spinner /> : option.label}\r\n            style={{ width: 400 }}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"POS Product\" variant=\"outlined\" />\r\n            )}\r\n          />\r\n          <button\r\n            style={{\r\n              backgroundColor: \"green\",\r\n              height: \"50px\",\r\n              border: \"none\",\r\n              color: \"white\",\r\n              padding: \"4px 8px\",\r\n              textAlign: \"center\",\r\n              textDecoration: \"none\",\r\n              display: \"inline-block\",\r\n              fontSize: \"14px\",\r\n              align: \"left\",\r\n              marginLeft: 20,\r\n            }}\r\n            // onClick={setProductsInTable}\r\n            onClick={() => toggleModal(\"showModal\")}\r\n          >\r\n            Add New Product\r\n          </button>\r\n          {/* </li >\r\n                </ul> */}\r\n        </Grid>\r\n      </Paper>\r\n      <p>{`Invoice-- ${\r\n        selectedDropdown === undefined ? \"\" : selectedDropdown.value\r\n      }`}</p>\r\n\r\n      <div>{renderTableData()}</div>\r\n\r\n      <CModal show={showModal} onClose={() => toggleModal(\"showModal\")}>\r\n        <CModalHeader closeButton>{modalLabel}</CModalHeader>\r\n        <CModalBody>\r\n          <CContainer fluid>\r\n            <CRow>\r\n              <CCol sm=\"12\">\r\n                <CRow>\r\n                  <CCol sm=\"6\">\r\n                    <CFormGroup>\r\n                      <CLabel htmlFor=\"type\">Barcode</CLabel>\r\n                      <CInput\r\n                        disabled\r\n                        type=\"text\"\r\n                        name=\"type\"\r\n                        value={posProduct.barcode}\r\n                        onChange={(event) =>\r\n                          handleChange(\"barcode\", event.target.value)\r\n                        }\r\n                      />\r\n                    </CFormGroup>\r\n                  </CCol>\r\n                  <CCol sm=\"6\">\r\n                    <CFormGroup>\r\n                      <CLabel htmlFor=\"short_description\">POS SKU</CLabel>\r\n                      <CInput\r\n                        disabled\r\n                        type=\"text\"\r\n                        name=\"short_description\"\r\n                        value={posProduct.posSku}\r\n                        onChange={(event) =>\r\n                          handleChange(\"posSku\", event.target.value)\r\n                        }\r\n                      />\r\n                    </CFormGroup>\r\n                  </CCol>\r\n                </CRow>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"regular_price\">POS Name</CLabel>\r\n                  <CInput\r\n                    disabled\r\n                    type=\"text\"\r\n                    name=\"regular_price\"\r\n                    value={posProduct.pos}\r\n                    onChange={(event) =>\r\n                      handleChange(\"pos\", event.target.value)\r\n                    }\r\n                  />\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"size\">POS Size</CLabel>\r\n                  <CInput\r\n                    disabled\r\n                    type=\"text\"\r\n                    name=\"size\"\r\n                    value={posProduct.size}\r\n                    onChange={(event) =>\r\n                      handleChange(\"size\", event.target.value)\r\n                    }\r\n                  />\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"department\">Department</CLabel>\r\n                  <CInput\r\n                    disabled\r\n                    type=\"text\"\r\n                    name=\"department\"\r\n                    value={posProduct.department}\r\n                    onChange={(event) =>\r\n                      handleChange(\"department\", event.target.value)\r\n                    }\r\n                  />\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"unitsInCase\">Units In Case</CLabel>\r\n                  <CInput\r\n                    type=\"text\"\r\n                    name=\"unitsInCase\"\r\n                    value={unitsInCase}\r\n                    onChange={(event) => setUnitsInCase(event.target.value)}\r\n                  />\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"caseCost\">Case Cost</CLabel>\r\n                  <CInput\r\n                    type=\"text\"\r\n                    name=\"caseCost\"\r\n                    value={caseCost === undefined ? price : caseCost}\r\n                    onChange={(event) => setCaseCost(event.target.value)}\r\n                  />\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"unitPrice\">POS Unit Price</CLabel>\r\n                  <CInput\r\n                    disabled\r\n                    type=\"text\"\r\n                    name=\"unitPrice\"\r\n                    value={posProduct.sellingPrice}\r\n                    onChange={(event) =>\r\n                      handleChange(\"SellingPrice\", event.target.value)\r\n                    }\r\n                  />\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"unitCost\">POS Unit Cost</CLabel>\r\n                  <CInput\r\n                    disabled\r\n                    type=\"text\"\r\n                    name=\"unitCost\"\r\n                    value={posProduct.sellerCost}\r\n                    onChange={(event) =>\r\n                      handleChange(\"SellerCost\", event.target.value)\r\n                    }\r\n                  />\r\n                </CFormGroup>\r\n                {/* <CFormGroup>\r\n                  <CLabel htmlFor=\"newUnitCost\">New POS Unit Cost</CLabel>\r\n                  <CInput\r\n                    type=\"text\"\r\n                    name=\"newUnitCost\"\r\n                    value={newUnitCost}\r\n                    onChange={(event) => setNewUnitCost(event.target.value)}\r\n                  />\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"newUnitPrice\">New POS Unit Price</CLabel>\r\n                  <CInput\r\n                    type=\"text\"\r\n                    name=\"newUnitPrice\"\r\n                    value={newUnitPrice}\r\n                    onChange={(event) => setNewUnitPrice(event.target.value)}\r\n                  />\r\n                </CFormGroup>*/}\r\n              </CCol>\r\n            </CRow>\r\n          </CContainer>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          {/* <CButton color=\"primary\" onClick={() => addProduct()}> */}\r\n          <CButton\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              updateItem();\r\n              toggleModal(\"details\");\r\n            }}\r\n          >\r\n            Add\r\n          </CButton>{\" \"}\r\n          <CButton color=\"secondary\" onClick={toggleModal}>\r\n            Cancel\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n\r\n      <CModal show={detailsModal} onClose={() => toggleModal(\"details\")}>\r\n        <CModalHeader closeButton>Save Invoice Data</CModalHeader>\r\n        <CModalBody>\r\n          <CContainer fluid>\r\n            <CRow>\r\n              <CCol sm=\"6\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"invoiceNo\">Invoice No.</CLabel>\r\n                  <CInput\r\n                    type=\"text\"\r\n                    name=\"invoiceNo\"\r\n                    value={invoiceNo}\r\n                    onChange={(event) => setInvoiceNo(event.target.value)}\r\n                  />\r\n                  <CLabel htmlFor=\"date\">Date</CLabel>\r\n                  <CInput\r\n                    type=\"date\"\r\n                    name=\"date\"\r\n                    value={date}\r\n                    onChange={(event) => setDate(event.target.value)}\r\n                  />\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CRow>\r\n          </CContainer>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"primary\">Save Invoice</CButton>{\" \"}\r\n          <CButton color=\"secondary\" onClick={toggleModal}>\r\n            Cancel\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HandwrittenInvoice;\r\n"],"sourceRoot":""}