{"version":3,"sources":["services/InventoryService.js","services/Api.js","components/Pos/Pos.js"],"names":["InventoryService","productSKU","a","WordpressAxios","get","params","sku","response","data","productId","put","res","post","upc","itemName","Axios","appendURL","Api","name","type","console","log","POS","inventoryService","api","useState","queue","setQueue","loader","setLoader","showModal","setShowModal","setContent","setHeader","fuzzSuggestion","setFuzzSuggestion","selectedItemNo","setSelectedItemNo","modalLabel","setModalLabel","item","quantity","description","price","pos","barcode","posSku","invoice","state","setState","handleChange","key","val","toggleModal","useEffect","firebase","database","ref","on","snapshot","Object","values","deleteAddedProducts","remove","filetered","filter","product","itemNo","error","style","marginTop","className","map","q","i","padding","border","margin","marginBottom","onClick","o","header","prop","prototype","hasOwnProperty","call","push","newState","posName","invoiceName","GetFuzz","then","result","element","obj","label","catch","err","setContentExtra","show","onClose","closeButton","fluid","sm","htmlFor","value","onChange","event","newValue","id","options","getOptionLabel","option","paddingTop","renderInput","variant","size","target","color","Barcode","PosSKU","isReviewed","UpdateProductFields","Error","alert","finally","addProduct","to"],"mappings":"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","file":"static/js/9.cf2c5dc0.chunk.js","sourcesContent":["import { POSAxios, WordpressAxios } from \"./axios\";\nimport Axios from \"./axios\";\nconst appendURL = process.env.NODE_ENV === \"production\" ? \"/server\" : \"\";\n\nexport class InventoryService {\n  async GetProductDetails(productSKU) {\n    const response = await WordpressAxios.get(`/products/`, {\n      params: { sku: productSKU },\n    });\n    return response.data;\n  }\n\n  async UpdateProductDetails(productId, data) {\n    const res = await WordpressAxios.put(`/products/${productId}`, data);\n    return res.data;\n  }\n  async getAllProducts() {\n    const res = await WordpressAxios.get(\"products\");\n    return res.data;\n  }\n  async createProduct(data) {\n    const res = await WordpressAxios.post(\"products\", data);\n    return res.data;\n  }\n\n  async GetPOSProductDetails(upc, itemName = \"\") {\n    const response = await Axios.get(appendURL + \"/api/getPOSProduct\", {\n      params: { upc, itemName },\n    });\n    return response.data;\n  }\n  async UpdatePOSProducts(data) {\n    const res = await Axios.post(\n      appendURL + \"/api/pos/Product/ManageItem\",\n      data\n    );\n    return res.data;\n  }\n  async SyncInventory() {\n    const res = await Axios.get(appendURL + \"/api/sync\");\n    return res.data;\n  }\n  async UpdateProductFields(data) {\n    /**\n     ***** data format\n     * data = {invoiceName: \"chetak\", itemName:\"CAS 123\", value:{\"Description\": \"jnckwc\", \"Price\": \"44\"}}\n     */\n    const res = await Axios.put(\n      appendURL + \"/api/invoice/product/update\",\n      data\n    );\n    return res.data;\n  }\n\n  async CreateNotFoundItems(data) {\n    /**\n     * data format\n     * {Item:String,Description:String,Quantity:String,Price:String,sku:String,Barcode:String,PosSKU:String,InvoiceName:String}\n     */\n    const res = await Axios.post(appendURL + \"/api/invoice/notfound\", data);\n    return res.data;\n  }\n\n  async UpdateDBProduct(data) {\n    const res = await Axios.put(appendURL + \"/api/invoice/pos/update\", data);\n    return res.data;\n  }\n  async CreateDBProduct(data) {\n    const res = await Axios.post(appendURL + \"/api/invoice/pos/create\", data);\n    return res.data;\n  }\n\n  async getInitialSyncedData() {\n    const res = await Axios.get(appendURL + \"/api/invoice/pos\");\n    return res.data;\n  }\n}\n","import Axios from \"./axios\";\nconst appendURL=process.env.NODE_ENV===\"production\"?\"/server\":\"\";\nexport class Api {\n    async GetFuzz(name,type){\n      console.log(name,type);\n      var res=await Axios.get(appendURL+`/api/fuzzwuzz`,{params:{name:name,type:type}});\n      /* var res=await Axios.get(appendURL+`/api/fuzzwuzz`); */\n      console.log(res);\n      return res.data\n    }\n}\n\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { InventoryService } from \"../../services/InventoryService\";\nimport { Api } from \"../../services/Api\";\nimport {\n  CModal,\n  CModalBody,\n  CModalHeader,\n  CModalFooter,\n  CButton,\n  CContainer,\n  CCol,\n  CRow,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CDropdown,\n  CDropdownToggle,\n  CDropdownMenu,\n  CDropdownItem,\n} from \"@coreui/react\";\nimport firebase from \"../../firebase\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\nconst POS = () => {\n  const inventoryService = new InventoryService();\n  const api = new Api();\n  const [queue, setQueue] = useState([]);\n  const [loader, setLoader] = useState(true);\n  const [categoryArray, setCategoryArray] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [content, setContent] = useState(null);\n  const [header, setHeader] = useState([]);\n  const [fuzzSuggestion, setFuzzSuggestion] = useState([]);\n  const [selectedItemNo, setSelectedItemNo] = useState(\"\");\n  const [modalLabel, setModalLabel] = useState(\"\");\n  const [state, setState] = useState({\n    item: \"\",\n    quantity: \"\",\n    description: \"\",\n    price: \"\",\n    pos: \"\",\n    barcode: \"\",\n    posSku: \"\",\n    invoice: \"\",\n  });\n  const handleChange = (key, val) => {\n    setState({\n      ...state,\n      [key]: val,\n    });\n  };\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n  useEffect(() => {\n    const ref = firebase.database().ref(\"/review\");\n    ref.on(\"value\", (snapshot) => {\n      if (snapshot.val()) {\n        const data = Object.values(snapshot.val());\n        setQueue(data);\n        setLoader(false);\n      }\n    });\n  }, []);\n  const setContentExtra = (o) => {\n    setContent(o);\n    let header = [];\n    for (var prop in o) {\n      if (Object.prototype.hasOwnProperty.call(o, prop)) {\n        header.push(prop);\n      }\n    }\n    setHeader(header);\n    let newState = {\n      item: o.itemNo,\n      description: o.description,\n      pos: o.posName,\n      barcode: o.barcode,\n      posSku: o.posSku || \"\",\n      invoice: o.invoiceName,\n    };\n    setState(newState);\n    api\n      .GetFuzz(o.description, \"pos\")\n      .then((res) => {\n        const filter = res.result.map((element) => {\n          let obj = { ...element };\n          obj.label = `${element.name}- ${element.price}- ${element.upc}`;\n          console.log(obj);\n          return obj;\n          \n        });\n        setFuzzSuggestion(filter);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const changeDropdown = () => {\n    api\n      .GetFuzz(\"\", \"pos\")\n      .then((res) => {\n        const filter = res.result.map((element) => {\n          let obj = { ...element };\n          obj.label = `${element.name}- ${element.price}- ${element.upc}`;\n          console.log(obj);\n          return obj;\n          \n        });\n        setFuzzSuggestion(filter);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const addProduct = () => {\n    console.log(selectedItemNo);\n    setShowModal(!showModal);\n    const data = {\n      invoiceName: state.invoice,\n      itemName: state.item,\n      value: { POS: state.pos, Barcode: state.barcode, PosSKU: state.posSku, isReviewed: \"true\" },\n    };\n    \n    setLoader(true);\n    inventoryService\n      .UpdateProductFields(data)\n      .then((res) => {\n        if (!res) {\n          throw new Error(\"Product not created\")\n        }\n        console.log(res);\n        alert(\"Successfully updated fields\");\n      })\n      .then(() => deleteAddedProducts(selectedItemNo))\n      .catch((err) => {\n        console.log(err);\n        alert(\"Some error occuured in creating product\");\n      })\n      .finally(() => setLoader(false));\n  };\n\n  const deleteAddedProducts = (item) => {\n    try {\n      firebase.database().ref(`/review/${item}`).remove();\n      let temp = [...queue];\n      const filetered = temp.filter((product) => product.itemNo !== item);\n      setQueue(filetered);\n      return true;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  };\n  if (loader) {\n    return <Spinner />;\n  }\n\n  return (\n    <div style={{ marginTop: \"90px\" }}>\n      <div className=\"row\">\n        {queue.map((q, i) => (\n          <div className=\"col-md-4\" key={q.itemNo} style={{ padding: \"10px\" }}>\n            <div style={{ border: \"1px solid grey\", margin: \"10px\" }}>\n              <div className=\"text-center bg-secondary\">{q.itemNo}</div>\n              <br />\n              <div className=\"text-center\">{q.description}</div>\n              <br />\n              <div className=\"row\" style={{ marginBottom: \"10px\" }}>\n                <div className=\"col-md-9\"></div>\n                <div className=\"col-md-3\">\n                  <button\n                    className=\"btn btn-sm btn-primary\"\n                    onClick={() => {\n                      setShowModal(true);\n                      setModalLabel(q.itemNo);\n                      setSelectedItemNo(q.itemNo);\n                      setContentExtra(q);\n                    }}\n                  >\n                    Details\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n      <CModal show={showModal} onClose={toggleModal}>\n        <CModalHeader closeButton>{modalLabel}</CModalHeader>\n        <CModalBody>\n          <CContainer fluid>\n            <CRow>\n              <CCol sm=\"12\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"name\">Name</CLabel>\n                  <Autocomplete\n                    value={state.item}\n                    onChange={(event, newValue) => {\n                      if (newValue) {\n                        let newState = { ...state };\n                        console.log(newValue);\n                        // newState.item = newValue.name;\n                        newState.description = newValue.name;\n                        newState.barcode = newValue.upc;\n                        newState.pos = newValue.name;\n                        newState.posSku = newValue.sku;\n                        setState(newState);\n                      }\n                    }}\n                    id=\"combo-box\"\n                    options={fuzzSuggestion}\n                    getOptionLabel={(option) => option.label ?? state.item}\n                    style={{ paddingTop: 4 }}\n                    renderInput={(params) => (\n                      <TextField {...params} variant=\"outlined\" size=\"small\" />\n                    )}\n                  />\n                </CFormGroup>\n                <CRow>\n                  <CCol sm=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"type\">Barcode</CLabel>\n                      <CInput\n                        type=\"text\"\n                        name=\"type\"\n                        value={state.barcode}\n                        onChange={(event) =>\n                          handleChange(\"barcode\", event.target.value)\n                        }\n                      />\n                    </CFormGroup>\n                  </CCol>\n                  <CCol sm=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"short_description\">POS SKU</CLabel>\n                      <CInput\n                        type=\"text\"\n                        name=\"short_description\"\n                        value={state.posSku}\n                        onChange={(event) =>\n                          handleChange(\"posSku\", event.target.value)\n                        }\n                      />\n                    </CFormGroup>\n                  </CCol>\n                </CRow>\n                <CFormGroup>\n                  <CLabel htmlFor=\"description\">Invoice Description</CLabel>\n                  <CInput\n                    type=\"text\"\n                    name=\"description\"\n                    value={state.description}\n                    onChange={(event) =>\n                      handleChange(\"description\", event.target.value)\n                    }\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"regular_price\">POS Name</CLabel>\n                  <CInput\n                    type=\"text\"\n                    name=\"regular_price\"\n                    value={state.pos}\n                    onChange={(event) =>\n                      handleChange(\"pos\", event.target.value)\n                    }\n                  />\n                </CFormGroup>\n                {/* <CRow>\n                  <CCol sm=\"3\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"categories\">Category</CLabel>\n                      <CDropdown name=\"categories\" className=\"mt-2\">\n                        <CDropdownToggle caret>\n                          {state.categories.length === 0\n                            ? \"Select a Category\"\n                            : state.categories[0].id}\n                        </CDropdownToggle>\n                        <CDropdownMenu>\n                          {categoryArray.map((e, i) => (\n                            <CDropdownItem\n                              key={i}\n                              name=\"categories\"\n                              onClick={(event) => handleChange(event, e)}\n                            >\n                              {e}\n                            </CDropdownItem>\n                          ))}\n                        </CDropdownMenu>\n                      </CDropdown>\n                    </CFormGroup>\n                  </CCol>\n                  <CCol sm=\"9\"></CCol>\n                </CRow> */}\n              </CCol>\n            </CRow>\n          </CContainer>\n        </CModalBody>\n        <CModalFooter>\n        {/* <button onClick={() => changeDropdown()} \n          style={{backgroundColor: \"green\",\n          border: \"none\",\n          color: \"white\",\n          padding: \"4px 8px\",\n          textAlign: \"center\",\n          textDecoration: \"none\",\n          display: \"inline-block\",\n          fontSize: \"14px\",\n          align: \"left\"}} >\n            Change Dropdown\n          </button> */}\n          <CButton color=\"primary\" onClick={() => addProduct()}>\n            Add\n          </CButton>{\" \"}\n          <CButton color=\"secondary\" onClick={toggleModal}>\n            Cancel\n          </CButton>\n        </CModalFooter>\n      </CModal>\n      <div className=\"row\" style={{ marginTop: \"40px\" }}>\n        <div className=\"col-md-2\">\n          <Link className=\"btn btn-lg btn-info\" to=\"/invoice\">\n            Back\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default POS;\n"],"sourceRoot":""}