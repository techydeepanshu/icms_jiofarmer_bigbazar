{"version":3,"sources":["services/InventoryService.js","services/Api.js","components/Pos/Pos.js"],"names":["InventoryService","productSKU","a","WordpressAxios","get","params","sku","response","data","productId","put","res","post","upc","itemName","Axios","appendURL","console","log","dateObj","Api","name","type","POS","inventoryService","api","useState","queue","setQueue","loader","setLoader","showModal","setShowModal","setContent","setHeader","fuzzSuggestion","setFuzzSuggestion","selectedItemNo","setSelectedItemNo","modalLabel","setModalLabel","item","quantity","description","price","pos","barcode","posSku","invoice","size","department","unitCost","unitPrice","state","setState","handleChange","key","val","toggleModal","useEffect","firebase","database","ref","on","snapshot","Object","values","deleteAddedProducts","remove","filetered","filter","product","itemNo","error","style","marginTop","className","map","q","i","padding","border","margin","marginBottom","onClick","o","header","prop","prototype","hasOwnProperty","call","push","prdctSize","fuzzwuzzResult","dprtmnt","untCst","untPrce","newState","posName","invoiceName","GetFuzz","then","result","element","obj","label","length","cost","catch","err","setContentExtra","show","onClose","closeButton","fluid","sm","htmlFor","value","onChange","event","newValue","id","options","getOptionLabel","option","paddingTop","renderInput","variant","disabled","target","color","Barcode","PosSKU","isReviewed","Size","Department","SellerCost","SellingPrice","UpdateProductFields","Error","alert","finally","addProduct","to"],"mappings":"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","file":"static/js/9.44d0a41c.chunk.js","sourcesContent":["import { POSAxios, WordpressAxios } from \"./axios\";\nimport Axios from \"./axios\";\nconst appendURL = process.env.NODE_ENV === \"production\" ? \"/server\" : \"\";\n\nexport class InventoryService {\n  async GetProductDetails(productSKU) {\n    const response = await WordpressAxios.get(`/products/`, {\n      params: { sku: productSKU },\n    });\n    return response.data;\n  }\n\n  async UpdateProductDetails(productId, data) {\n    const res = await WordpressAxios.put(`/products/${productId}`, data);\n    return res.data;\n  }\n  async getAllProducts() {\n    const res = await WordpressAxios.get(\"products\");\n    return res.data;\n  }\n  async createProduct(data) {\n    const res = await WordpressAxios.post(\"products\", data);\n    return res.data;\n  }\n\n  async GetPOSProductDetails(upc, itemName = \"\") {\n    const response = await Axios.get(appendURL + \"/api/getPOSProduct\", {\n      params: { upc, itemName },\n    });\n    return response.data;\n  }\n  async UpdatePOSProducts(data) {\n    const res = await Axios.post(\n      appendURL + \"/api/pos/Product/ManageItem\",\n      data\n    );\n    return res.data;\n  }\n  async SyncInventory() {\n    const res = await Axios.get(appendURL + \"/api/sync\");\n    console.log(res.data);\n    return res.data;\n  }\n  async UpdateProductFields(data) {\n    /**\n     ***** data format\n     * data = {invoiceName: \"chetak\", itemName:\"CAS 123\", value:{\"Description\": \"jnckwc\", \"Price\": \"44\"}}\n     */\n     console.log(data);\n    const res = await Axios.put(\n      appendURL + \"/api/invoice/product/update\",\n      data\n    );\n    return res.data;\n  }\n\n  async CreateNotFoundItems(data) {\n    /**\n     * data format\n     * {Item:String,Description:String,Quantity:String,Price:String,sku:String,Barcode:String,PosSKU:String,InvoiceName:String}\n     */\n    const res = await Axios.post(appendURL + \"/api/invoice/notfound\", data);\n    return res.data;\n  }\n\n  async CreateScanInvoiceData(data){\n    //console.log(\"IN INVENTORY SERVICE\");\n    //console.log(data);\n    const res = await Axios.post(appendURL + \"/api/invoice/scaninvoicedata\", data);\n    return res.data;\n  }\n\n  async UpdateDBProduct(data) {\n    const res = await Axios.put(appendURL + \"/api/invoice/pos/update\", data);\n    return res.data;\n  }\n  async CreateDBProduct(data) {\n    const res = await Axios.post(appendURL + \"/api/invoice/pos/create\", data);\n    return res.data;\n  }\n\n  async getInitialSyncedData(dateObj) {\n    console.log(\"In inventory service\");\n    console.log(dateObj);\n    const res = await Axios.get(appendURL + \"/api/invoice/pos\",dateObj);\n    console.log(res);\n    return res.data;\n  }\n}\n","import Axios from \"./axios\";\nconst appendURL=process.env.NODE_ENV===\"production\"?\"/server\":\"\";\nexport class Api {\n    async GetFuzz(name,type){\n      console.log(name,type);\n      var res=await Axios.get(appendURL+`/api/fuzzwuzz`,{params:{name:name,type:type}});\n      /* var res=await Axios.get(appendURL+`/api/fuzzwuzz`); */\n      console.log(res);\n      return res.data\n    }\n}\n\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { InventoryService } from \"../../services/InventoryService\";\nimport { Api } from \"../../services/Api\";\nimport {\n  CModal,\n  CModalBody,\n  CModalHeader,\n  CModalFooter,\n  CButton,\n  CContainer,\n  CCol,\n  CRow,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CDropdown,\n  CDropdownToggle,\n  CDropdownMenu,\n  CDropdownItem,\n} from \"@coreui/react\";\nimport firebase from \"../../firebase\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\nimport { stat } from \"fs\";\nconst POS = () => {\n  const inventoryService = new InventoryService();\n  const api = new Api();\n  const [queue, setQueue] = useState([]);\n  const [loader, setLoader] = useState(true);\n  const [categoryArray, setCategoryArray] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [content, setContent] = useState(null);\n  const [header, setHeader] = useState([]);\n  const [fuzzSuggestion, setFuzzSuggestion] = useState([]);\n  const [selectedItemNo, setSelectedItemNo] = useState(\"\");\n  const [modalLabel, setModalLabel] = useState(\"\");\n  const [state, setState] = useState({\n    item: \"\",\n    quantity: \"\",\n    description: \"\",\n    price: \"\",\n    pos: \"\",\n    barcode: \"\",\n    posSku: \"\",\n    invoice: \"\",\n    size: \"\",\n    department: \"\",\n    unitCost: \"\",\n    unitPrice: \"\"\n  });\n  const handleChange = (key, val) => {\n    setState({\n      ...state,\n      [key]: val,\n    });\n  };\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n  useEffect(() => {\n    const ref = firebase.database().ref(\"/review\");\n    ref.on(\"value\", (snapshot) => {\n      if (snapshot.val()) {\n        const data = Object.values(snapshot.val());\n        console.log(data);\n        setQueue(data);\n        setLoader(false);\n      }\n    });\n  }, []);\n  const setContentExtra = (o) => {\n    setContent(o);\n    let header = [];\n    for (var prop in o) {\n      if (Object.prototype.hasOwnProperty.call(o, prop)) {\n        header.push(prop);\n      }\n    }\n    setHeader(header);\n    let newState = {\n      item: o.itemNo,\n      description: o.description,\n      pos: o.posName,\n      barcode: o.barcode,\n      posSku: o.posSku || \"\",\n      invoice: o.invoiceName,\n      size: \"loading...\",\n      department: \"loading...\",\n      unitCost: \"loading...\",\n      unitPrice: \"loading...\"\n\n    };\n    setState(newState);\n\n    let prdctSize;\n    let fuzzwuzzResult;\n    let dprtmnt;\n    let untCst;\n    let untPrce;\n    api\n      .GetFuzz(o.description, \"pos\")\n      .then((res) => {\n        fuzzwuzzResult = res.result;\n        const filter = res.result.map((element) => {\n          let obj = { ...element };\n          obj.label = `${element.name}- ${element.price}- ${element.upc} - ${element.size}`;\n          console.log(obj);\n          return obj;\n          \n        });\n        \n        for(let i=0;i<fuzzwuzzResult.length;i++){\n          if(o.posSku == fuzzwuzzResult[i].sku){\n            prdctSize = fuzzwuzzResult[i].size !== null ? fuzzwuzzResult[i].size : \"NOT AVAILABLE\";\n            dprtmnt = fuzzwuzzResult[i].department !== null ? fuzzwuzzResult[i].department : \"NOT AVAILABLE\";\n            untCst = fuzzwuzzResult[i].cost !== null ? fuzzwuzzResult[i].cost : \"NOT AVAILABLE\";\n            untPrce = fuzzwuzzResult[i].price !== null ? fuzzwuzzResult[i].price : \"NOT AVAILABLE\";\n            break;\n          }\n        }\n        console.log(dprtmnt + untCst + untPrce+\"$\"+prdctSize);\n       \n        newState = {\n          item: o.itemNo,\n          description: o.description,\n          pos: o.posName,\n          barcode: o.barcode,\n          posSku: o.posSku || \"\",\n          invoice: o.invoiceName,\n          size: prdctSize,\n          department: dprtmnt,\n          unitCost: untCst,\n          unitPrice: untPrce,\n        };\n        setState(newState);\n        setFuzzSuggestion(filter);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  /* const changeDropdown = () => {\n    api\n      .GetFuzz(\"\", \"pos\")\n      .then((res) => {\n        const filter = res.result.map((element) => {\n          let obj = { ...element };\n          obj.label = `${element.name}- ${element.price}- ${element.upc} - ${element.size} }`;\n          console.log(obj);\n          return obj;\n          \n        });\n        setFuzzSuggestion(filter);\n      })\n      .catch((err) => console.log(err));\n  };\n */\n  const addProduct = () => {\n    console.log(selectedItemNo);\n    setShowModal(!showModal);\n    console.log(state);\n    const data = {\n      invoiceName: state.invoice,\n      itemName: state.item,\n      value: { POS: state.pos, \n        Barcode: state.barcode, \n        PosSKU: state.posSku, \n        isReviewed: \"true\",\n        Size: state.size, \n        Department: state.department,\n        SellerCost: state.unitCost,\n        SellingPrice: state.unitPrice\n      },\n    };\n    \n    setLoader(true);\n    inventoryService\n      .UpdateProductFields(data)\n      .then((res) => {\n        if (!res) {\n          throw new Error(\"Product not created\")\n        }\n        console.log(res);\n        alert(\"Successfully updated fields\");\n      })\n      .then(() => deleteAddedProducts(selectedItemNo))\n      .catch((err) => {\n        console.log(err);\n        alert(\"Some error occuured in creating product\");\n      })\n      .finally(() => setLoader(false));\n  };\n\n  const deleteAddedProducts = (item) => {\n    try {\n      firebase.database().ref(`/review/${item}`).remove();\n      let temp = [...queue];\n      const filetered = temp.filter((product) => product.itemNo !== item);\n      setQueue(filetered);\n      return true;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  };\n  if (loader) {\n    return <Spinner />;\n  }\n\n  return (\n    <div style={{ marginTop: \"90px\" }}>\n      <div className=\"row\">\n        {queue.map((q, i) => (\n          <div className=\"col-md-4\" key={q.itemNo} style={{ padding: \"10px\" }}>\n            <div style={{ border: \"1px solid grey\", margin: \"10px\" }}>\n              <div className=\"text-center bg-secondary\">{q.itemNo}</div>\n              <br />\n              <div className=\"text-center\">{q.description}</div>\n              <br />\n              <div className=\"row\" style={{ marginBottom: \"10px\" }}>\n                <div className=\"col-md-9\"></div>\n                <div className=\"col-md-3\">\n                  <button\n                    className=\"btn btn-sm btn-primary\"\n                    onClick={() => {\n                      setShowModal(true);\n                      setModalLabel(q.itemNo);\n                      setSelectedItemNo(q.itemNo);\n                      setContentExtra(q);\n                    }}\n                  >\n                    Details\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n      <CModal show={showModal} onClose={toggleModal}>\n        <CModalHeader closeButton>{modalLabel}</CModalHeader>\n        <CModalBody>\n          <CContainer fluid>\n            <CRow>\n              <CCol sm=\"12\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"name\">Name</CLabel>\n                  <Autocomplete\n                    value={state.item}\n                    onChange={(event, newValue) => {\n                      if (newValue) {\n                        let newState = { ...state };\n                        console.log(newValue);\n                        // newState.item = newValue.name;\n                        newState.description = newValue.name;\n                        newState.barcode = newValue.upc;\n                        newState.pos = newValue.name;\n                        newState.posSku = newValue.sku;\n                        newState.size = newValue.size;\n                        newState.department = newValue.department;\n                        newState.unitCost = newValue.cost;\n                        newState.unitPrice = newValue.price;\n                        setState(newState);\n                        console.log(newValue);\n                        console.log(newState);\n                        console.log(state);\n                      }\n                    }}\n                    id=\"combo-box\"\n                    options={fuzzSuggestion}\n                    getOptionLabel={(option) => option.label ?? state.item}\n                    style={{ paddingTop: 4 }}\n                    renderInput={(params) => (\n                      <TextField {...params} variant=\"outlined\" size=\"small\" />\n                    )}\n                  />\n                </CFormGroup>\n                <CRow>\n                  <CCol sm=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"type\">Barcode</CLabel>\n                      <CInput \n                        disabled\n                        type=\"text\"\n                        name=\"type\"\n                        value={state.barcode}\n                        onChange={(event) =>\n                          handleChange(\"barcode\", event.target.value)\n                        }\n                      />\n                    </CFormGroup>\n                  </CCol>\n                  <CCol sm=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"short_description\">POS SKU</CLabel>\n                      <CInput\n                        disabled\n                        type=\"text\"\n                        name=\"short_description\"\n                        value={state.posSku}\n                        onChange={(event) =>\n                          handleChange(\"posSku\", event.target.value)\n                        }\n                      />\n                    </CFormGroup>\n                  </CCol>\n                </CRow>\n                <CFormGroup>\n                  <CLabel htmlFor=\"description\">Invoice Description</CLabel>\n                  <CInput\n                    disabled\n                    type=\"text\"\n                    name=\"description\"\n                    value={state.description}\n                    onChange={(event) =>\n                      handleChange(\"description\", event.target.value)\n                    }\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"regular_price\">POS Name</CLabel>\n                  <CInput\n                    disabled\n                    type=\"text\"\n                    name=\"regular_price\"\n                    value={state.pos}\n                    onChange={(event) =>\n                      handleChange(\"pos\", event.target.value)\n                    }\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"size\">POS Size</CLabel>\n                  <CInput\n                    disabled\n                    type=\"text\"\n                    name=\"size\"\n                    value={state.size}\n                    onChange={(event) =>\n                      handleChange(\"size\", event.target.value)\n                    }\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"department\">Department</CLabel>\n                  <CInput\n                    disabled\n                    type=\"text\"\n                    name=\"department\"\n                    value={state.department}\n                    onChange={(event) =>\n                      handleChange(\"department\", event.target.value)\n                    }\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"unitPrice\">POS Unit Price</CLabel>\n                  <CInput\n                    disabled\n                    type=\"text\"\n                    name=\"unitPrice\"\n                    value={state.unitPrice}\n                    onChange={(event) =>\n                      handleChange(\"unitPrice\", event.target.value)\n                    }\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"unitCost\">POS Unit Cost</CLabel>\n                  <CInput\n                    disabled\n                    type=\"text\"\n                    name=\"unitCost\"\n                    value={state.unitCost}\n                    onChange={(event) =>\n                      handleChange(\"unitCost\", event.target.value)\n                    }\n                  />\n                </CFormGroup>\n                {/* <CRow>\n                  <CCol sm=\"3\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"categories\">Category</CLabel>\n                      <CDropdown name=\"categories\" className=\"mt-2\">\n                        <CDropdownToggle caret>\n                          {state.categories.length === 0\n                            ? \"Select a Category\"\n                            : state.categories[0].id}\n                        </CDropdownToggle>\n                        <CDropdownMenu>\n                          {categoryArray.map((e, i) => (\n                            <CDropdownItem\n                              key={i}\n                              name=\"categories\"\n                              onClick={(event) => handleChange(event, e)}\n                            >\n                              {e}\n                            </CDropdownItem>\n                          ))}\n                        </CDropdownMenu>\n                      </CDropdown>\n                    </CFormGroup>\n                  </CCol>\n                  <CCol sm=\"9\"></CCol>\n                </CRow> */}\n              </CCol>\n            </CRow>\n          </CContainer>\n        </CModalBody>\n        <CModalFooter>\n        {/* <button onClick={() => changeDropdown()} \n          style={{backgroundColor: \"green\",\n          border: \"none\",\n          color: \"white\",\n          padding: \"4px 8px\",\n          textAlign: \"center\",\n          textDecoration: \"none\",\n          display: \"inline-block\",\n          fontSize: \"14px\",\n          align: \"left\"}} >\n            Change Dropdown\n          </button> */}\n          <CButton color=\"primary\" onClick={() => addProduct()}>\n            Add\n          </CButton>{\" \"}\n          <CButton color=\"secondary\" onClick={toggleModal}>\n            Cancel\n          </CButton>\n        </CModalFooter>\n      </CModal>\n      <div className=\"row\" style={{ marginTop: \"40px\" }}>\n        <div className=\"col-md-2\">\n          <Link className=\"btn btn-lg btn-info\" to=\"/invoice\">\n            Back\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default POS;\n"],"sourceRoot":""}