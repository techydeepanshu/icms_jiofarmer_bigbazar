{"version":3,"sources":["../node_modules/@material-ui/core/esm/utils/requirePropFactory.js","../node_modules/@material-ui/core/esm/utils/unsupportedProp.js","../node_modules/@material-ui/core/esm/utils/deprecatedPropType.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@material-ui/icons/InfoOutlined.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/@babel/runtime/helpers/interopRequireWildcard.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@material-ui/icons/utils/createSvgIcon.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@material-ui/core/esm/styles/makeStyles.js","../node_modules/@material-ui/core/esm/Grid/Grid.js","components/SaveInvoiceData/SaveInvoiceData.js"],"names":["requirePropFactory","componentNameInError","unsupportedProp","props","propName","componentName","location","propFullName","deprecatedPropType","validator","reason","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","React","_default","createElement","d","module","obj","__esModule","_typeof","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","constructor","enumerable","_utils","createSvgIcon","_objectWithoutProperties","source","excluded","target","sourceKeys","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","makeStyles","stylesOrCreator","options","arguments","undefined","makeStylesWithoutDefault","_extends","defaultTheme","SPACINGS","GRID_SIZES","getOffset","val","div","parse","parseFloat","concat","String","replace","Grid","ref","_props$alignContent","alignContent","_props$alignItems","alignItems","classes","classNameProp","className","_props$component","component","Component","_props$container","container","_props$direction","direction","_props$item","item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","zeroMinWidth","other","clsx","root","StyledGrid","withStyles","theme","boxSizing","display","flexWrap","width","margin","minWidth","flexDirection","justifyContent","breakpoint","styles","forEach","themeSpacing","padding","generateGutter","breakpoints","reduce","accumulator","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","name","useStyles","paddingTop","maxHeight","marginTop","table","fontWeight","fontSize","backgroundColor","cursor","emptyColumnList","SaveInvoiceData","tesseractService","TesseractService","useState","date","setDate","dropdownOptions","invoice","setInvoice","invoiceNo","setInvoiceNo","dropdownLabel","hicksvilleData","Api","tableData","setTableData","emptyColumn","setEmptyColumn","productDetails","setProductDetails","pushToInventory","setPushToInventory","inventoryData","setInventoryData","itemNoDropdown","setItemNoDropdown","loader","setLoader","reviewItems","showPosIndex","setShowPosIndex","inventoryService","InventoryService","showModal","setShowModal","stateUpdated","setStateUpdated","costInc","setCostInc","costDec","setCostDec","unitCost","setUnitCost","isUpdated","setIsUpdated","updateIndex","setUpdateIndex","posProducts","wooComProducts","singleItemData","notFounds","setNotFounds","unitsInCase","setUnitsInCase","price","setPrice","setRedState","updateSku","header","quantity","description","pos","barcode","posSku","department","unitPrice","showPosState","setShowPosState","getProducts","a","console","log","Promise","all","map","row","GetProductDetails","res","id","regular_price","sku","slug","stock_quantity","sale_price","itemNo","items","getPosProducts","hasErrorOccured","GetPOSProductDetails","alert","SKU","UPC","ITEMNAME","TOTALQTY","DEPNAME","COST","cp","PRICE","sp","parseInt","qty","pieces","isNew","BUYASCASE","CASEUNITS","toString","CASECOST","pushToWoocom","products","product","UpdateProductDetails","pushToPOS","UpdatePOSProducts","JSON","stringify","DESCRIPTION","QTY","SIZE","PACK","REPLACEQTY","DEPARTMENT","CATEGORY","SUBCATEGORY","ISFOODSTAMP","ISWEIGHTED","ISTAXABLE","VENDORNAME","VENDORCODE","VENDORCOST","ISNEWITEM","COMPANYNAME","PRODUCTCODE","data","Cost","ItemName","Price","TotalQty","CreateDBProduct","response","UpdateDBProduct","count","pushInventoryDetails2","element","markup","duplicates","push","lastIndexOf","tempData","values","filter","ele","index","temp","updatedWoocomProducts","wooIndex","findIndex","wooProduct","window","pushSingleItemToInventory","notFoundItems","tempTable","includes","show","rowData","Item","Description","Quantity","Barcode","PosSKU","InvoiceName","CreateNotFoundItems","error","priceIncreasedProducts","priceIncrease","invoiceName","itemName","UpdateProductFields","UpdateInvoiceData","data1","cost","UpdateDBafterPosUpdate","setProductsInTable","fetchSavedData","GetSavedInvoiceData","InvoiceData","then","ocrData","invoiceData","toUpperCase","convertToUpperCase","trim","posName","POS","isReviewed","Size","Department","SellerCost","sellingPrice","SellingPrice","toFixed","extendedPrice","catch","toggleModal","updateItem","ocrCost","Error","finally","addRow","tempTableData","showPOS","pushInventoryDetails","mergeDuplicates","handleChange","splice","isNaN","arr","Map","newArr","x","useEffect","style","onChange","event","newValue","getOptionLabel","option","autoHighlight","renderInput","params","label","variant","marginLeft","type","InputLabelProps","shrink","border","color","textAlign","textDecoration","align","onClick","newInventoryData","goBack","productsString","result","split","newData","upc","altupc1","altupc2","vintage","totalQty","pricea","priceb","pricec","salePrice","pack","hicksvilleDropdown","HicksData","rows","isEmpty","Set","isFree","red","free","opacity","aria-label","tooltipIsReviewed","tooltip","disabled","newState","text","confirm","deleteRow","position","top","background","divRow","reload","renderTableData","onClose","closeButton","fluid","htmlFor"],"mappings":"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","file":"static/js/6.2f95bc48.chunk.js","sourcesContent":["export default function requirePropFactory(componentNameInError) {\n  if (process.env.NODE_ENV === 'production') {\n    return function () {\n      return null;\n    };\n  }\n\n  var requireProp = function requireProp(requiredProp) {\n    return function (props, propName, componentName, location, propFullName) {\n      var propFullNameSafe = propFullName || propName;\n\n      if (typeof props[propName] !== 'undefined' && !props[requiredProp]) {\n        return new Error(\"The prop `\".concat(propFullNameSafe, \"` of \") + \"`\".concat(componentNameInError, \"` must be used on `\").concat(requiredProp, \"`.\"));\n      }\n\n      return null;\n    };\n  };\n\n  return requireProp;\n}","export default function unsupportedProp(props, propName, componentName, location, propFullName) {\n  if (process.env.NODE_ENV === 'production') {\n    return null;\n  }\n\n  var propFullNameSafe = propFullName || propName;\n\n  if (typeof props[propName] !== 'undefined') {\n    return new Error(\"The prop `\".concat(propFullNameSafe, \"` is not supported. Please remove it.\"));\n  }\n\n  return null;\n}","export default function deprecatedPropType(validator, reason) {\n  if (process.env.NODE_ENV === 'production') {\n    return function () {\n      return null;\n    };\n  }\n\n  return function (props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    if (typeof props[propName] !== 'undefined') {\n      return new Error(\"The \".concat(location, \" `\").concat(propFullNameSafe, \"` of \") + \"`\".concat(componentNameSafe, \"` is deprecated. \").concat(reason));\n    }\n\n    return null;\n  };\n}","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 7h2v2h-2zm0 4h2v6h-2zm1-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'InfoOutlined');\n\nexports.default = _default;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var _typeof = require(\"@babel/runtime/helpers/typeof\")[\"default\"];\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nmodule.exports = _interopRequireWildcard;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.createSvgIcon;\n  }\n});\n\nvar _utils = require(\"@material-ui/core/utils\");","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { dropdownOptions } from \"../../utils/invoiceList\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TesseractService } from \"../../services/TesseractService\";\n\nimport { InventoryService } from \"../../services/InventoryService\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport { Api } from \"../../services/Api\";\nimport HicksData from \"../DisplayData/Hicksville.json\";\nimport { CContainer, CModalHeader, CCol, CFormGroup, CInput, CButton, CLabel, CModal, CModalBody, CModalFooter, CRow } from \"@coreui/react\";\nimport Button from \"../../UI/Button\";\nimport styles from \"../DisplayData/DisplayData.module.css\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport UpdateInventory from \"../Update/UpdateInventory\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\n\nconst useStyles = makeStyles({\n        root: {\n        width: \"100%\",\n        paddingTop: 50,\n        },\n        container: {\n            maxHeight: \"80vh\",\n            marginTop: 10,\n          },\n          table: {\n            \"& thead th\": {\n              fontWeight: \"600\",\n              fontSize: 20,\n              backgroundColor: \"grey\",\n            },\n            \"& tbody td\": {\n              fontWeight: \"300\",\n            },\n            \"& tbody tr:hover\": {\n              backgroundColor: \"#fffbf2\",\n              cursor: \"pointer\",\n            },\n          },\n    });\nlet emptyColumnList = [];\n\nconst SaveInvoiceData = () => {\n\n    const tesseractService = new TesseractService();\n    const classes = useStyles();\n    const [date, setDate] = useState(\"\");\n    const [invoice, setInvoice] = useState(dropdownOptions[0]);\n    const [invoiceNo, setInvoiceNo] = useState(\"\");\n    const numOfCollections = dropdownOptions.length;\n    const dropdownLabel = \"Select Invoice(\"+   numOfCollections   + \")\";\n\n    //Following for display data functionalities.\n    let hicksvilleData = [];\n    let saveInvoiceFlag  = 1;\n    const api = new Api();\n    const [tableData, setTableData] = useState([]);\n    const [emptyColumn, setEmptyColumn] = useState([]);\n    const [productDetails, setProductDetails] = useState([]);\n    const [pushToInventory, setPushToInventory] = useState(false);\n    const [inventoryData, setInventoryData] = useState([]);\n    const [itemNoDropdown, setItemNoDropdown] = useState([]);\n    const [loader, setLoader] = useState(false);\n    const [reviewItems, setReviewItems] = useState([]);\n    const [showPosIndex, setShowPosIndex] = useState(-1);\n    const inventoryService = new InventoryService();\n    const [showModal, setShowModal] = useState(false);\n    const [stateUpdated, setStateUpdated] = useState(\"false\");\n    const [costInc, setCostInc] = useState(\"false\");\n    const [costDec, setCostDec] = useState(\"false\");\n    const [unitCost, setUnitCost] = useState(\"\");\n    const [isUpdated, setIsUpdated] = useState(\"false\");\n    const [updateIndex, setUpdateIndex] = useState(-1);\n    let posProducts = []\n    let wooComProducts = [];\n    let singleItemData = [];\n    let itemNo = \"\";\n    // const [posProducts, setPosProducts] = useState([]);\n\n    const [notFounds, setNotFounds] = useState(\"false\");\n    const [unitsInCase, setUnitsInCase] = useState(\"\");\n    const [price, setPrice] = useState(\"\");\n    const [redState, setRedState] = useState(\"true\");\n    let updateSku = \"\";\n    \n    const header = [\n        \"Serial No.\",\n        \"Barcode\",\n        \"POS SKU\",\n        \"Qty Shipped\",\n        \"ITEM NO\",\n        \"Link Product\",\n        \n        \"DESCRIPTION\",\n        \"Units in  Case\",\n        \"Case cost\",\n        \"Extended Price\",\n        \"Unit Cost \",\n        \"Unit Price\",\n        \"Mark up (%)\",\n        \"Tick to Delete\",\n        \"Update POS\",\n        \"Serial No.(2)\"\n    ];\n\n    const [showPosState, setShowPosState] = useState({\n        item: \"\",\n        quantity: \"\",\n        description: \"\",\n        price: \"\",\n        pos: \"\",\n        barcode: \"\",\n        posSku: \"\",\n        invoice: \"\",\n        size: \"\",\n        department: \"\",\n        unitCost: \"\",\n        unitPrice: \"\",\n    });\n\n//***************  INDIVIDUAL ITEM UPDATE FUNCTIONALITY STARTS*******************************************.\n\n    //Function to fetch wooCom Prpducts.\n    async function getProducts() {\n      console.log(\"IN WOOCOM PRODUCTS\");\n      const items = await Promise.all(\n        singleItemData.map(async (row) => {\n          console.log(row.barcode);\n          try {\n            const res = await inventoryService.GetProductDetails(row.barcode);\n            console.log(res);\n            const {\n              id,\n              name,\n              regular_price,\n              price,\n              sku,\n              slug,\n              stock_quantity,\n              sale_price,\n            } = res[0];\n            return {\n              id,\n              name,\n              regular_price,\n              price,\n              sku,\n              slug,\n              stock_quantity,\n              sale_price,\n              itemNo: row.itemNo,\n            };\n          } catch (error) {\n            // tempNotFoundProducts.push(row);\n            console.log(\"Couldn't fetch product from woodpress.\", row.itemNo);\n            return null;\n          }\n        })\n      );\n      setLoader(false);\n      console.log(items);\n      wooComProducts = items;\n      // setWooComProducts(items.filter((ele) => ele !== null));\n      // setNotFoundProducts(tempNotFoundProducts);\n    }\n\n    //function to fetch POS products.\n    async function getPosProducts() {\n      console.log(\"IN POS PRODUCTS\");\n      setLoader(true);\n      let hasErrorOccured = false;\n      const items = await Promise.all(\n        singleItemData\n          .map(async (row) => {\n            console.log(row.barcode);\n            try {\n              const res = await inventoryService.GetPOSProductDetails(\n                row.barcode\n              );\n              if(!Array.isArray(res)){\n                alert(\"API not working\");\n                return;\n              }\n              console.log(\"fetched pos data\", res);\n              const { SKU, UPC, ITEMNAME, TOTALQTY, DEPNAME } = res[0];\n              console.log(SKU);\n              console.log(updateSku);\n              if(SKU == updateSku){\n                console.log(SKU);\n                console.log(updateSku);\n                return {\n                  ...row,\n                  COST: row.cp,\n                  PRICE: row.sp,\n                  SKU,\n                  UPC,\n                  ITEMNAME,\n                  TOTALQTY:\n                    parseInt(row.qty) * parseInt(row.pieces) + parseInt(TOTALQTY),\n                  itemNo: row.itemNo,\n                  isNew: false,\n                  BUYASCASE: 1,\n                  CASEUNITS: row.pieces.toString(),\n                  CASECOST: row.unitPrice.toString(),\n                  DEPNAME,\n                };\n              } else {\n                alert(\"SKU mismatch!!\");\n              }\n\n              \n              \n            } catch (error) {\n              hasErrorOccured = true;\n              return {\n                ...row,\n                COST: row.cp,\n                PRICE: row.sp,\n                SKU: row.posSku,\n                UPC: row.barcode,\n                ITEMNAME: row.description,\n                TOTALQTY: parseInt(row.qty) * parseInt(row.pieces),\n                itemNo: row.itemNo,\n                isNew: true,\n                BUYASCASE: 1,\n                CASEUNITS: row.pieces.toString(),\n                CASECOST: row.unitPrice.toString(),\n                DEPNAME: \"\",\n              };\n            }\n          })\n      );\n      if (hasErrorOccured) {\n        alert(\"Couldn't fetch some data from POS\");\n      }\n      setLoader(false);\n      console.log(items);\n      posProducts = items;\n      console.log(posProducts);\n      // setPosProducts(items.filter((ele) => ele !== null));\n    }\n\n    //PUSH TO WOOCOM.\n    const pushToWoocom = async (products) => {\n      setLoader(true);\n      const responses = await Promise.all(\n        products.map(async (product) => {\n          try {\n            const res = await inventoryService.UpdateProductDetails(product.id, {\n              regular_price: product.regular_price,\n              stock_quantity: product.stock_quantity,\n            });\n            const { id, name, regular_price, stock_quantity } = res;\n            return {\n              id,\n              name,\n              regular_price,\n              stock_quantity,\n              itemNo: product.itemNo,\n            };\n          } catch (error) {\n            console.log(error);\n            alert(\"Couldn't update product on website.\");\n            return null;\n          }\n        })\n      );\n      setLoader(false);\n    };\n\n     //PUSH TO POS.\n     const pushToPOS = async (products) => {\n      setLoader(true);\n      console.log(products);\n      const responses = await Promise.all(\n        products.map(async (product) => {\n          try {\n            const {\n              COST,\n              PRICE,\n              UPC,\n              TOTALQTY,\n              isNew,\n              ITEMNAME,\n              BUYASCASE,\n              CASEUNITS,\n              CASECOST,\n              SKU,\n              DEPNAME,\n              itemNo\n            } = product;\n            const res = await inventoryService.UpdatePOSProducts(\n              JSON.stringify({\n                UPC,\n                ITEMNAME,\n                DESCRIPTION: \"\",\n                PRICE,\n                COST,\n                QTY: TOTALQTY,\n                SIZE: \"\",\n                PACK: \"\",\n                REPLACEQTY: 1,\n                DEPARTMENT: DEPNAME,\n                CATEGORY: \"\",\n                SUBCATEGORY: \"\",\n                ISFOODSTAMP: 1,\n                ISWEIGHTED: 0,\n                ISTAXABLE: 1,\n                VENDORNAME: invoice.slug,\n                VENDORCODE: itemNo,\n                VENDORCOST: \"\",\n                ISNEWITEM: isNew ? 1 : 0,\n                BUYASCASE,\n                CASEUNITS,\n                CASECOST,\n                COMPANYNAME: invoice.slug,\n                PRODUCTCODE: itemNo,\n              })\n            );\n            console.log(\"updated pos data\", res);\n            const data = {\n              UPC,\n              SKU,\n              Cost: COST,\n              ItemName: ITEMNAME,\n              Price: PRICE,\n              TotalQty: TOTALQTY,\n            };\n            if (isNew) {\n              const response = await inventoryService.CreateDBProduct(data);\n              console.log(\"Created new product\", response);\n            } else {\n              const response = await inventoryService.UpdateDBProduct({\n                count: parseInt(product.qty) * parseInt(product.pieces),\n                UPC,\n              });\n              console.log(\"updated existing product\", response);\n            }\n  \n            console.log(\"res from POS\", res);\n            return true;\n          } catch (error) {\n            console.log(error);\n            return null;\n          }\n        })\n      );\n      setLoader(false);\n    };\n\n    const pushInventoryDetails2 = async () => {\n      console.log(posProducts);\n      setLoader(true);\n      let data = singleItemData.map((element) => {\n        return {\n          item: element.itemNo,\n          qty: parseInt(element.qty) * parseInt(element.pieces),\n          cp: element.unitPrice,\n          markup: element.markup,\n          sp: element.sp,\n          description: element.description,\n        };\n      });\n  \n      var duplicates = {};\n      for (var i = 0; i < data.length; i++) {\n        if (duplicates.hasOwnProperty(data[i].item)) {\n          duplicates[data[i].item].push(i);\n        } else if (data.lastIndexOf(data[i].item) !== i) {\n          duplicates[data[i].item] = [i];\n        }\n      }\n  \n      let tempData = Object.values(duplicates).filter((ele) => ele.length > 1);\n      if (tempData.length > 0) {\n        tempData.forEach((index) => {\n          let temp = 0;\n          index.forEach((val) => {\n            if (data[val]) {\n              // console.log(\"data[val]\", data[val]);\n              temp += data[val].qty;\n              if (temp - data[val].qty !== 0) {\n                data[val] = null;\n              }\n            }\n          });\n          data[index[0]].qty = temp;\n        });\n      }\n      data = data.filter((ele) => ele !== null);\n  \n      /**\n       * add the fileds of  data from the woocom & ocr\n      */\n     console.log(wooComProducts.length);\n      if(wooComProducts[0] != null){\n        let updatedWoocomProducts = data\n          .map((product, index) => {\n            /**find index of the item in fetched woocom product list */\n            const wooIndex = wooComProducts.findIndex(\n              (wooProduct) => product.item === wooProduct.itemNo\n            );\n            if (wooIndex !== -1) {\n              /**get the qty & other fileds of the woocom product */\n              let { id, stock_quantity } = wooComProducts[wooIndex];\n              stock_quantity += product.qty;\n              const regular_price = product.sp;\n              return { id, regular_price, stock_quantity, itemNo: product.item };\n            }\n            return null;\n          })\n          .filter((item) => item !== null);\n\n        console.log(updatedWoocomProducts); \n        await pushToWoocom(updatedWoocomProducts);\n        }\n      await pushToPOS(posProducts);\n  \n      setLoader(false);\n      // if (itemsNotPushed.length === 0) {\n      window.alert(\"Inventory updated successfully\");\n      // setRedirect(true);\n      // } else {\n      //   window.alert(\"Inventory not updated\");\n      // }\n    };\n\n    function toConsoleState() {\n      console.log(wooComProducts);\n      console.log(posProducts);\n      console.log(singleItemData);\n    }\n\n  const pushSingleItemToInventory = async (index) =>{\n    \n    \n    console.log(tableData);\n    const product = [];\n    const notFoundItems = emptyColumn.map((i) => tableData[i]);\n    const tempTable = [];\n    product.push(tableData[index]);\n    console.log(product);\n    product.isUpdated = \"true\";\n    itemNo = product.itemNo;\n    \n    product.forEach((element, index) => {\n      if (\n        !emptyColumn.includes(index) &&\n        element.show === true &&\n        element[\"isForReview\"] != true\n      ) {\n        let rowData = { index: index + 1, ...element };\n        tempTable.push(rowData);\n      }\n    });\n    // console.log(\"notFoundItems\", notFoundItems);\n    console.log(tempTable);\n\n    if (emptyColumn.length !== 0) {\n      /**api to push  to not found list*/\n      setLoader(true);\n      const responses = await Promise.all(\n        notFoundItems.map(async (product) => {\n          try {\n            const data = {\n              Item: product.itemNo,\n              Description: product.description,\n              Quantity: product.qty,\n              Price: product.unitPrice,\n              sku: product.sku,\n              Barcode: product.barcode,\n              PosSKU: product.posSku,\n              InvoiceName: invoice.slug,\n            };\n            await inventoryService.CreateNotFoundItems(data);\n            return true;\n          } catch (error) {\n            console.log(\n              \"Couldn't create not found product\",\n              product.description,\n              { error }\n            );\n            alert(\"Couldn't create product on website.\");\n            return null;\n          }\n        })\n      );\n      setLoader(false);\n    }\n    const priceIncreasedProducts = tempTable.filter(\n      (product) => product.priceIncrease !== 0\n    );\n    setLoader(true);\n    const res = await Promise.all(\n      priceIncreasedProducts.map(async (product) => {\n        try {\n          const data = {\n            invoiceName: invoice.slug,\n            itemName: product.itemNo,\n            value: { Price: product.unitPrice },\n          };\n          console.log(data)\n          await inventoryService.UpdateProductFields(data);\n          \n          \n        } catch (error) {\n          console.log(`couldn't update price for product ${product.itemNo}`);\n        }\n      })\n    );\n    setLoader(false);\n    // console.log(tempTable);\n    tempTable[0].isUpdated = \"true\";\n    singleItemData = tempTable;\n    // setPushToInventory(true);\n    console.log(singleItemData);\n    \n    updateSku = singleItemData[0].posSku;\n\n\n    await getProducts();\n    await getPosProducts();\n    console.log(posProducts);\n    if(posProducts[0] != undefined ){\n      await pushInventoryDetails2();\n      toConsoleState();\n      setIsUpdated(\"true\");\n      setUpdateIndex(index);\n      console.log(singleItemData);\n      console.log(singleItemData.itemNo);\n      await inventoryService.UpdateInvoiceData(invoice.slug, invoiceNo, date, singleItemData[0].itemNo); \n\n      //Update unit cost n price in db, after update POS.\n      let data1 = {\n        cost: singleItemData[0].cp,\n        price: singleItemData[0].sp,\n        item: singleItemData[0].itemNo,\n        invoice: invoice.slug\n      }\n      await inventoryService.UpdateDBafterPosUpdate(data1);\n      setProductsInTable();\n    } else {\n      alert(\"POS not updated!!\");\n      setProductsInTable();\n    }\n\n    \n    \n  }\n//***************************INDIVIDUAL ITEM UPDATE FUNCTIONALITY ENDS*****************************************.\n\n    const fetchSavedData = async() => {\n        const data =  await tesseractService.GetSavedInvoiceData(invoice.slug, invoiceNo, date);\n        console.log(data);\n        if(data.length === 0) {\n          alert(\"INvoice doesnt Exist!!\");\n        }else return data[0].InvoiceData;\n        // console.log(data);\n        // console.log(data[0].InvoiceData);\n        \n    };\n\n    const setProductsInTable = () => {\n      setLoader(true);\n      async function invoiceData() {\n        const products = await tesseractService.GetProductDetails(\n          invoice.slug\n        );\n        //console.log(props.selectedInvoice);\n        return products;\n      }\n\n      fetchSavedData().then((ocrData) => {\n        invoiceData()\n          .then((products) => {\n            /**post processing the table data after returning from filter */\n            function convertToUpperCase(obj) {\n              let newObj = {};\n              for (let key in obj) {\n                newObj[key.toUpperCase()] = obj[key];\n              }\n              return newObj;\n            }\n            products = convertToUpperCase(products);\n            console.log(products);\n            // scanInvoiceData.InvoiceData = ocrData;\n          //   setOcrProducts(ocrData);\n            \n          //   console.log(scanInvoiceData);\n            // scanInvoiceData.InvoiceData = ocrData;\n            //console.log(resScnInvDta);\n            //console.log(\"OCERDATa\", ocrData);\n            //console.log(products);\n            //console.log(scanInvoiceData);\n            let table = ocrData.map((row) => {\n              /**For invoices which dont have item no, set description as item no */\n              if (row.itemNo === undefined) {\n                row.itemNo = row.description.trim().toUpperCase();\n              }\n              row.itemNo = row.itemNo.toString().toUpperCase();\n  \n              row.description =\n                products[row.itemNo] !== undefined\n                  ? products[row.itemNo].Description\n                  : row.description;\n              row.pieces =\n                products[row.itemNo] !== undefined\n                  ? products[row.itemNo].Quantity\n                  : 0;\n              row.sku =\n                products[row.itemNo] !== undefined\n                  ? products[row.itemNo].sku\n                  : \"\";\n              row.barcode =\n                products[row.itemNo] !== undefined\n                  ? products[row.itemNo].Barcode\n                  : \"\";\n              row.posName =\n                products[row.itemNo] !== undefined\n                  ? products[row.itemNo].POS\n                  : \"\";\n              row.markup = 0;\n              row.show = true;\n              row.posSku =\n                products[row.itemNo] !== undefined\n                  ? products[row.itemNo].PosSKU\n                  : \"\";\n              row.isReviewed = \n                products[row.itemNo] !== undefined ? products[row.itemNo].isReviewed : \"\" ;\n              row.size = \n                products[row.itemNo] !== undefined ? products[row.itemNo].Size : \"\";\n              row.department = \n                products[row.itemNo] !== undefined ? products[row.itemNo].Department : \"\";\n              row.cost = \n                products[row.itemNo] !== undefined ? products[row.itemNo].SellerCost : \"\";\n              row.sellingPrice = \n                products[row.itemNo] !== undefined ? products[row.itemNo].SellingPrice : \"\";\n                row.price = \n                products[row.itemNo] !== undefined ? products[row.itemNo].Price : \"\";\n              //console.log(\"department-\" + row.department + \"  cost-\" + row.cost + \"  price\" + row.sellingPrice);\n              let sp = 0;\n              let cp = 0;\n              // const barcode = products.Barcode\n              if (parseInt(row.pieces)) {\n                sp = (parseFloat(row.unitPrice) / parseInt(row.pieces)).toFixed(\n                  2\n                );\n                cp = sp;\n              }\n              if (products[row.itemNo] !== undefined) {\n                if (sp > +products[row.itemNo].SellerCost) {\n                  row[\"priceIncrease\"] = 1;\n                } else if (sp < +products[row.itemNo].SellerCost) {\n                  row[\"priceIncrease\"] = -1;\n                } else if (sp == +products[row.itemNo].SellerCost) {\n                  row[\"priceIncrease\"] = 0;\n                }\n              } else {\n                row[\"priceIncrease\"] = 0;\n              }\n  \n              /**filter out the rows for which qty shipped & extendedPrice is zero */\n              if (row.qty == \"0\" && row.extendedPrice === \"0.00\") {\n                return null;\n              }\n              /**Calulate qty for which qty is not read/scanned by textract */\n              if (!row.qty) {\n                row.qty = (\n                  parseFloat(row.extendedPrice) / parseFloat(row.unitPrice)\n                ).toFixed(0);\n              }\n            return { ...row, sp, cp };\n            });\n            setLoader(false);\n            setTableData(table.filter((data) => data !== null));\n            setItemNoDropdown(Object.keys(products));\n            setProductDetails(products);\n          })\n          .catch((err) => {\n            console.log(\"error on mapping ocrdata\", err)\n            setLoader(false);\n          });\n      });\n    }\n\n    const toggleModal = () => {\n        setShowModal(!showModal);\n        // setDate(\"\");\n        // setInvNo(\"\");\n      };\n    \n    const hicksvilleDropdown = (data) => {\n        let productsString = \"\";\n        for(let i=0;i<data.length;i++){\n          productsString = productsString + data[i].name + '$$$';\n        } \n        let result = productsString.split(\"$$$\");\n      \n        let newData = [];\n        for (let i = 0; i < result.length; i++) {\n          let s = result[i].split(\"@@@\");\n          let obj =\n            {\n              // sku: s[0] === \"nan\" ? null : s[0],\n              // upc: s[1] === \"nan\" ? null : s[1],\n              // altupc1: s[2] === \"nan\" ? null : s[2],\n              // altupc2: s[3] === \"nan\" ? null : s[3],\n              // name: s[4] === \"nan\" ? null : s[4],\n              // vintage: s[5] === \"nan\" ? null : s[5],\n              // totalQty: s[6] === \"nan\" ? null : s[6],\n              // cost: s[7] === \"nan\" ? null : s[7],\n              // pricea: s[8] === \"nan\" ? null : s[8],\n              // priceb: s[9] === \"nan\" ? null : s[9],\n              // pricec: s[10] === \"nan\" ? null : s[10],\n              // department: s[11] === \"nan\" ? null : s[11],\n              // salePrice: s[12] === \"nan\" ? null : s[12],\n              // size: s[13] === \"nan\" ? null : s[13],\n              // pack: s[14] === \"nan\" ? null : s[14],\n              // price: s[15] === \"nan\" ? null : s[15],\n              sku: s[1] === \"nan\" ? null : s[1],\n              upc: s[0] === \"nan\" ? null : s[0],\n              altupc1: s[14] === \"nan\" ? null : s[14],\n              altupc2: s[15] === \"nan\" ? null : s[15],\n              name: s[2] === \"nan\" ? null : s[2],\n              vintage: s[8] === \"nan\" ? null : s[8],\n              totalQty: s[13] === \"nan\" ? null : s[13],\n              cost: s[4] === \"nan\" ? null : s[4],\n              pricea: s[10] === \"nan\" ? null : s[10],\n              priceb: s[11] === \"nan\" ? null : s[11],\n              pricec: s[12] === \"nan\" ? null : s[12],\n              department: s[9] === \"nan\" ? null : s[9],\n              salePrice: s[5] === \"nan\" ? null : s[5],\n              size: s[6] === \"nan\" ? null : s[6],\n              pack: s[7] === \"nan\" ? null : s[7],\n              price: s[3] === \"nan\" ? null : s[3],\n            }\n          newData.push(obj);\n        }\n        const filter = newData.map((element) => {\n          let obj = { ...element };\n          obj.label = `${element.name}- ${element.price}- ${element.upc} - ${element.size}-${element.cost}`;\n          //console.log(obj);\n          return obj; \n        });\n        hicksvilleData = filter;\n          // console.log(hicksvilleData);\n    }\n\n    const updateItemOld = (ocrCost) => {\n        //console.log(showPosState);\n        const data = {\n          invoiceName: invoice.slug,\n          itemName: showPosState.item,\n          value: { \n            POS: showPosState.pos, \n            Barcode: showPosState.barcode, \n            PosSKU: showPosState.posSku, \n            isReviewed: \"true\",\n            Size: showPosState.size, \n            Department: showPosState.department,\n            //SellerCost: showPosState.unitCost,\n            SellingPrice: showPosState.unitPrice\n          },\n        };\n    \n        inventoryService\n        .UpdateProductFields(data)\n        .then((res) => {\n          if (!res) {\n            throw new Error(\"Product not created\")\n          }\n          console.log(res);\n          alert(\"Successfully updated fields\");\n        })\n        .catch((err) => {\n          console.log(err);\n          alert(\"Some error occuured in creating product\");\n        })\n        .finally(() => { \n          setLoader(false)\n          setStateUpdated(\"true\");\n          //  console.log(ocrCost);\n          //  console.log(unitCost);\n           if(ocrCost>unitCost){\n             setCostInc(\"true\");\n             setCostDec(\"\");\n           }\n           if(ocrCost<unitCost){\n             setCostDec(\"true\");\n             setCostInc(\"\");\n           }\n        });\n    \n    }\n\n    const updateItem = (props, ocrCost) => {\n      let data;\n      //console.log(showPosState);\n      if(notFounds === \"true\"){\n        // console.log(props.selectedInvoice);\n        console.log(\"notfoundstrue\");\n        data = {\n          invoiceName: invoice.slug,\n          itemName: showPosState.item,\n          value: { \n            POS: showPosState.pos, \n            Barcode: showPosState.barcode, \n            PosSKU: showPosState.posSku, \n            isReviewed: \"true\",\n            Description: showPosState.description,\n            Size: showPosState.size, \n            Department: showPosState.department,\n            SellerCost: showPosState.unitCost,\n            SellingPrice: showPosState.unitPrice,\n            Quantity: unitsInCase,\n            Price: price\n          },\n        };\n  \n        toggleModal();\n      \n      }else{\n        data = {\n          invoiceName: invoice.slug,\n          itemName: showPosState.item,\n          value: { \n            POS: showPosState.pos, \n            Barcode: showPosState.barcode, \n            PosSKU: showPosState.posSku, \n            isReviewed: \"true\",\n            Size: showPosState.size, \n            Department: showPosState.department,\n            SellerCost: showPosState.unitCost,\n            SellingPrice: showPosState.unitPrice\n          },\n        };\n      }\n  \n      console.log(data)\n      inventoryService\n      .UpdateProductFields(data)\n      .then((res) => {\n        if (!res) {\n          throw new Error(\"Product not created\")\n        }\n        console.log(res);\n        alert(\"Successfully updated fields\");\n        setStateUpdated(true);\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"Some error occuured in creating product\");\n      })\n      .finally(() => { setLoader(false);\n                     setStateUpdated(\"true\");\n                    //  console.log(ocrCost);\n                    //  console.log(unitCost);\n                    if(ocrCost>unitCost){\n                      setCostInc(\"true\");\n                      setCostDec(\"\");\n                    }\n                    if(ocrCost<unitCost){\n                      setCostDec(\"true\");\n                      setCostInc(\"\");\n                    }\n                    if(notFounds === \"true\"){\n                      setNotFounds(\"false\");\n                      setProductsInTable(); \n                    }\n              });\n  \n    }\n\n    const addRow = () => {\n        let tempTableData = [...tableData];\n        tempTableData.push({\n          qty: 0,\n          itemNo: \"\",\n          description: \"\",\n          pieces: 0,\n          unitPrice: 0.0,\n          extendedPrice: \"\",\n          markup: 0,\n          sp: 0,\n          show: true,\n          showPOS: \"\"\n        });\n        emptyColumnList.push(tempTableData.length - 1);\n        setEmptyColumn(emptyColumnList);\n        setTableData(tempTableData);\n    };\n    const deleteRow = (index) => {\n        let tempTableData = [...tableData];\n        // console.log(emptyColumnList.length, \"before\");\n        if (tableData[index][\"show\"]) {\n          if (window.confirm(\"Delete the item?\")) {\n            tempTableData[index][\"show\"] = false;\n            const i = emptyColumnList.indexOf(index);\n            if (i > -1) {\n              emptyColumnList.splice(i, 1);\n            }\n          }\n        } else {\n          tempTableData[index][\"show\"] = true;\n          if (\n            tempTableData[index][\"qty\"] !== \"\" &&\n            tempTableData[index][\"itemNo\"] !== \"\" &&\n            tempTableData[index][\"unitPrice\"] !== \"\"\n          ) {\n            const i = emptyColumnList.indexOf(index);\n            if (i > -1) {\n              emptyColumnList.splice(i, 1);\n            }\n          } else {\n            emptyColumnList.push(index);\n          }\n        }\n        setTableData(tempTableData);\n        setEmptyColumn(emptyColumnList);\n    };\n\n    const renderTableHeader = () => {\n        return header.map((key, index) => {\n          return (\n            <th\n              key={index}\n              style={{\n                position: \"sticky\",\n                top: \"70px\",\n                background: \"grey\",\n              }}\n            >\n              {key.toUpperCase()}\n            </th>\n          );\n        });\n    };\n\n    const renderTableData = () => {\n        hicksvilleDropdown(HicksData);\n    \n        if (tableData) {\n          console.log(tableData);\n    \n          // console.log(showPosIndex);\n          // console.log(tableData[0]);\n          \n          let rows = tableData.map((element, index) => {\n            //fuzzwuzzSuggestion = getFuzzwuzzSuggestion(element.description);\n            let isEmpty =\n              element.qty === \"\" ||\n              element.itemNo === \"\" ||\n              !element.pieces ||\n              isNaN(element.unitPrice) ||\n              element.unitPrice === \"\" ||\n              isNaN(element.extendedPrice);\n            if (isEmpty && element.show) {\n              let emptyColumn = [...emptyColumnList, index];\n              emptyColumnList = [...new Set(emptyColumn)];\n            }\n            let isFree = element.qty != 0 && element.extendedPrice === \"0.00\";\n            // console.log(element.isUpdated);\n    \n            return (\n              <tr\n                key={index}\n                className={isEmpty ? styles.red : isFree ? styles.free : null}\n                // style={element.show ? { opacity: \"1\" } : { opacity: \"0.4\" }}\n                style={element.isUpdated === \"true\" || (isUpdated === \"true\" && updateIndex === index) ? {backgroundColor: \"lightGreen\"}\n                  : element.show ? { opacity: \"1\" } : { opacity: \"0.4\" }}\n              >\n                <td>{index + 1}</td>\n                <td className={styles.element}>\n                  <TextField\n                    type=\"tel\"\n                    value={showPosIndex === index ? showPosState.barcode : element.barcode}\n                    id=\"outlined-secondary\"\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      handleChange(index, \"barcode\", e.target.value);\n                    }}\n                    style={{ width: 150 }}\n                  />\n                  <IconButton\n                    color=\"primary\"\n                    aria-label=\"add to review\"\n                    // onClick={() => addForReview(element, index)}\n                  >\n                    <InfoOutlinedIcon\n                      style={\n                        reviewItems.includes(index)\n                          ? { backgroundColor: \"green\" }\n                          : null\n                      }\n                    /> \n                    {/* <AddShoppingCartIcon\n                      style={\n                        reviewItems.includes(index)\n                          ? { backgroundColor: \"green\" }\n                          : null\n                      }\n                    /> */}\n                  </IconButton>\n                  <div className={element.isReviewed  === \"true\" || (showPosIndex === index && stateUpdated === \"true\") ? styles.tooltipIsReviewed: styles.tooltip} >\n                    <p>POS Product- {showPosIndex === index ? showPosState.pos : element.posName }</p>\n                    {/* <p>UPC- {showPosIndex === index ? showPosState.barcode : element.barcode}</p> */}\n                    <p>Size- {showPosIndex === index ? showPosState.size : element.size}</p>\n                    <p>Department - {showPosIndex === index ? showPosState.department : element.department}</p>\n                    <p>Unit Cost- {showPosIndex === index ? showPosState.unitCost : element.cost}</p> \n                    <p>Unit Price- {showPosIndex === index ? showPosState.unitPrice : element.sellingPrice}</p>\n                    <p>Price- {showPosIndex === index ? showPosState.price : element.price}</p>\n                    <div >\n                    <button onClick={() => {\n                            if(notFounds === \"true\"){\n                              toggleModal();\n                            }else{\n                              updateItem(invoice.slug, (parseFloat(element.unitPrice) / parseInt(element.pieces)).toFixed(2))\n                            }\n                          } } \n                      disabled={showPosIndex === index ? false : true}\n                      style={{backgroundColor: \"green\",\n                      border: \"none\",\n                      color: \"white\",\n                      padding: \"4px 8px\",\n                      textAlign: \"center\",\n                      textDecoration: \"none\",\n                      display: \"inline-block\",\n                      fontSize: \"14px\",\n                      align: \"left\"}} >\n                      Update Item\n                    </button>\n                    </div> \n                  </div>\n                </td>\n                <td>{showPosIndex === index ? showPosState.posSku : element.posSku}</td>\n                <td>\n                  <TextField\n                    type=\"tel\"\n                    value={element.qty}\n                    id=\"outlined-secondary\"\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      handleChange(index, \"qty\", e.target.value);\n                    }}\n                    style={{ width: 100 }}\n                  />\n                </td>\n                <td>\n                  <Autocomplete\n                    value={element.itemNo}\n                    onChange={(event, newValue) => {\n                      if (newValue) {\n                        handleChange(index, \"itemNo\", newValue);\n                      }\n                    }}\n                    id=\"combo-box\"\n                    options={itemNoDropdown}\n                    getOptionLabel={(option) => option}\n                    style={{ width: 200 }}\n                    renderInput={(params) => (\n                      <TextField {...params} variant=\"outlined\" />\n                    )}\n                  />\n                </td>\n                <td>\n                  <Autocomplete\n                    value={showPosIndex  === index ? showPosState.item : element.itemNo }\n                    onChange={(event, newValue) => {\n                      if (newValue) {\n                        let newState = { ...showPosState };\n                        //console.log(newValue);\n                        // newState.item = newValue.name;\n                        newState.item = element.itemNo\n                        newState.description = newValue.name;\n                        newState.barcode = newValue.upc;\n                        newState.pos = newValue.name;\n                        newState.posSku = newValue.sku;\n                        newState.size = newValue.size;\n                        newState.department = newValue.department;\n                        newState.unitCost = newValue.cost;\n                        newState.unitPrice = newValue.price;\n                        setShowPosState(newState);\n                        setShowPosIndex(index);\n                        setUnitCost(newValue.cost);\n                        setStateUpdated(\"\");\n                        if(isEmpty){\n                          setNotFounds(\"true\");\n                          setRedState(\"false\");\n                        }\n                        //setDisabled(false);\n                        //updateOnHoverDetails(index);\n                        //setShowPosIndex(index);\n                        // console.log(newValue);\n                        console.log(newState);\n                        //console.log(showPosState);\n                        \n                      }\n                    }}\n                    id=\"combo-box\"\n                    // options={element.fuzzSuggestion}\n                    options={hicksvilleData}\n                    getOptionLabel={(option) => option.label ?? element.itemNo}\n                    style={{ width: 400 }}\n                    renderInput={(params) => (\n                      <TextField {...params} variant=\"outlined\" />\n                    )}\n                  />\n                </td>\n                \n                <td>{element.description}</td>\n                <td>{element.pieces}</td>\n                <td>\n                  <TextField\n                    type=\"tel\"\n                    value={element.unitPrice}\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      handleChange(index, \"unitPrice\", e.target.value);\n                    }}\n                    style={\n                      // element.priceIncrease === 1\n                      //   ? { backgroundColor: \"#1a8cff\", width: 100 }\n                      //   : element.priceIncrease === -1\n                      //   ? { backgroundColor: \"#ffb31a\", width: 100 }\n                      //   : { width: 100 }\n                      showPosIndex === index ? costInc===\"true\" ? { backgroundColor: \"#1a8cff\", width: 100 } : costDec===\"true\" ? { backgroundColor: \"#ffb31a\", width: 100 } : {width: 100}\n                        : element.priceIncrease === 1 \n                            ? { backgroundColor: \"#1a8cff\", width: 100 }\n                            : element.priceIncrease === -1 \n                            ? { backgroundColor: \"#ffb31a\", width: 100 }\n                            : { width: 100 }\n                    }\n                  />\n                </td>\n                <td>{element.extendedPrice}</td>\n                <td>{element.cp}</td>\n                <td>\n                  <TextField\n                    type=\"tel\"\n                    value={element.sp}\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      handleChange(index, \"sp\", e.target.value);\n                    }}\n                    style={{ width: 100 }}\n                  />\n                </td>\n                <td>{element.markup}</td>\n                {/* <td>\n                  <Checkbox\n                    checked={!element.show}\n                    onChange={(e) => handleChange(index, \"show\", e.target.value)}\n                    inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                  />\n                </td> */}\n                <td>\n              <Button\n                text={element.show ? \"Delete\" : \"Undo\"}\n                color=\"btn btn-info\"\n                type=\"submit\"\n                onClick={() => deleteRow(index)}\n              />\n            </td>\n                <td>\n                <Button \n                    text=\"Update POS\"\n                    color=\"btn btn-info\"\n                    type=\"submit\"\n                    onClick={() => pushSingleItemToInventory(index)}\n                    style={{ width: 120 }}\n                  />\n                      \n                </td>\n                <td>{index + 1}</td>\n                {/* <td>\n                  <Button\n                    text={element.show ? \"Delete\" : \"Undo\"}\n                    color=\"btn btn-info\"\n                    type=\"submit\"\n                    onClick={() => deleteRow(index)}\n                  />\n                </td> */}\n              </tr>\n            );\n          });\n          return (\n            <div style={{ marginTop: \"70px\" }}>\n              <table className=\"table table-hover table-responsive-sm\">\n                <tbody>\n                  <tr>{renderTableHeader()}</tr>\n                  {rows}\n                  <tr>\n                    <td>\n                      <Button\n                        text=\"Add cell\"\n                        color=\"btn btn-info\"\n                        onClick={addRow}\n                      />\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n              <div className={styles.divRow}>\n                <Button\n                  text=\"Update Inventory\"\n                  color=\"btn btn-info\"\n                  type=\"submit\"\n                  onClick={pushInventoryDetails}\n                />\n                {/* <Button\n                  text=\"Save Invoice Data\"\n                  color=\"btn btn-info\"\n                  type=\"submit\"\n                  onClick={toggleModal}\n                /> */}\n                <Button\n                  text=\"Re upload\"\n                  color=\"btn btn-info\"\n                  type=\"submit\"\n                  onClick={() => window.location.reload()}\n                />\n              </div>\n            </div>\n          );\n        }\n    };\n\n    const pushInventoryDetails = async () => {\n        const notFoundItems = emptyColumn.map((i) => tableData[i]);\n        const tempTable = [];\n        tableData.forEach((element, index) => {\n          if (\n            !emptyColumn.includes(index) &&\n            element.show === true &&\n            element[\"isForReview\"] != true\n          ) {\n            let rowData = { index: index + 1, ...element };\n            tempTable.push(rowData);\n          }\n        });\n        // console.log(\"notFoundItems\", notFoundItems);\n        // console.log(\"final table data\", tempTable);\n    \n        if (emptyColumn.length !== 0) {\n          /**api to push  to not found list*/\n          setLoader(true);\n          const responses = await Promise.all(\n            notFoundItems.map(async (product) => {\n              try {\n                const data = {\n                  Item: product.itemNo,\n                  Description: product.description,\n                  Quantity: product.qty,\n                  Price: product.unitPrice,\n                  sku: product.sku,\n                  Barcode: product.barcode,\n                  PosSKU: product.posSku,\n                  InvoiceName: invoice,\n                };\n                await inventoryService.CreateNotFoundItems(data);\n                return true;\n              } catch (error) {\n                console.log(\n                  \"Couldn't create not found product\",\n                  product.description,\n                  { error }\n                );\n                alert(\"Couldn't create product on website.\");\n                return null;\n              }\n            })\n          );\n          setLoader(false);\n        }\n        const priceIncreasedProducts = tempTable.filter(\n          (product) => product.priceIncrease !== 0\n        );\n        setLoader(true);\n        const res = await Promise.all(\n          priceIncreasedProducts.map(async (product) => {\n            try {\n              const data = {\n                invoiceName: invoice,\n                itemName: product.itemNo,\n                value: { Price: product.unitPrice },\n              };\n              await inventoryService.UpdateProductFields(data);\n            } catch (error) {\n              console.log(`couldn't update price for product ${product.itemNo}`);\n            }\n          })\n        );\n        setLoader(false);\n        setInventoryData(mergeDuplicates(tempTable));\n        setPushToInventory(true);\n    };\n\n    const handleChange = async (row, key, value) => {\n        let tempTableData = [...tableData];\n        tempTableData[row][key] = value;\n        const { itemNo } = tempTableData[row];\n        if (\n          tempTableData[row][\"qty\"] !== \"\" &&\n          tempTableData[row][\"itemNo\"] !== \"\" &&\n          tempTableData[row][\"unitPrice\"] !== \"\"\n        ) {\n          const index = emptyColumnList.indexOf(row);\n          if (index > -1) {\n            emptyColumnList.splice(index, 1);\n          }\n        } else {\n          emptyColumnList.push(row);\n        }\n        setEmptyColumn(emptyColumnList);\n        if (key === \"itemNo\") {\n          tempTableData[row][\"description\"] = productDetails[value].Description;\n          tempTableData[row][\"pieces\"] = productDetails[value].Quantity;\n          tempTableData[row][\"sku\"] = productDetails[value].sku;\n          /**auto populate barcode & other pos fields*/\n          tempTableData[row][\"barcode\"] = productDetails[value].Barcode;\n          tempTableData[row][\"posName\"] = productDetails[value].POS;\n          tempTableData[row][\"posSku\"] = productDetails[value].PosSKU;\n        }\n    \n        if (key === \"unitPrice\" || key === \"sp\" || key === \"itemNo\") {\n          let cp = parseFloat(tempTableData[row][\"cp\"]);\n          let sp = parseFloat(tempTableData[row][\"sp\"]);\n          let markup = ((sp - cp) / cp) * 100;\n          let cost =\n            parseFloat(tempTableData[row][\"unitPrice\"]) /\n            tempTableData[row][\"pieces\"];\n          // let sp = cp + (cp * markup) / 100;\n          // if (tempTableData[row][\"pieces\"]) {\n          //   sp = sp / tempTableData[row][\"pieces\"];\n          // }\n          tempTableData[row][\"markup\"] = isNaN(markup) ? 0 : markup.toFixed(2);\n          tempTableData[row][\"cp\"] = isNaN(cost) ? 0 : cost.toFixed(2);\n        }\n    \n        if (key === \"qty\" || key === \"unitPrice\") {\n          const extendedPrice =\n            parseFloat(tempTableData[row][\"qty\"]) *\n            parseFloat(tempTableData[row][\"unitPrice\"]);\n          const cp = tempTableData[row][\"unitPrice\"] / tempTableData[row][\"pieces\"];\n          if (!isNaN(extendedPrice)) {\n            tempTableData[row][\"extendedPrice\"] = extendedPrice.toFixed(2);\n          }\n          if (!isNaN(cp)) {\n            tempTableData[row][\"cp\"] = cp.toFixed(2);\n          }\n        }\n        if (itemNo) {\n          if (+tempTableData[row][\"unitPrice\"] > +productDetails[itemNo].Price) {\n            tempTableData[row][\"priceIncrease\"] = 1;\n          } else if (\n            +tempTableData[row][\"unitPrice\"] < +productDetails[itemNo].Price\n          ) {\n            tempTableData[row][\"priceIncrease\"] = -1;\n          } else if (\n            +tempTableData[row][\"unitPrice\"] == +productDetails[itemNo].Price\n          ) {\n            tempTableData[row][\"priceIncrease\"] = 0;\n          }\n        }\n    \n        if (key === \"barcode\") {\n          tempTableData[row][\"barcode\"] = value;\n        }\n        setTableData(tempTableData);\n    };\n\n    const mergeDuplicates = (a) => {\n        let arr = [...a];\n        let map = new Map();\n        for (let i = 0; i < arr.length; i++) {\n          if (!map.has(arr[i].itemNo)) map.set(arr[i].itemNo, arr[i]);\n          else {\n            let obj = { ...map.get(arr[i].itemNo) };\n            obj[\"qty\"] = (\n              parseFloat(obj[\"qty\"]) + parseFloat(arr[i].qty)\n            ).toString();\n            map.set(arr[i].itemNo, obj);\n          }\n        }\n        let newArr = [];\n        for (let x of map.values()) newArr.push(x);\n        return newArr;\n    };\n\n    useEffect(() => {\n    \n\n\n        /**Fetch the data from the aws textract for the image */\n        // async function fetchOCRData() {\n        //   // return chetak();\n    \n        //   setLoader(true);\n        //   const ocrData = [];\n\n\n\n        //   let newData = [];\n        //   ocrData.forEach((data) => (newData = [...newData, ...data]));\n        //   return newData;\n        // }\n    \n        // async function invoiceData() {\n        //   const products = await tesseractService.GetProductDetails(\n        //     invoice\n        //   );\n        //   //console.log(props.selectedInvoice);\n        //   return products;\n        // }\n\n        // fetchOCRData().then((ocrData) => {\n        //   invoiceData()\n        //     .then((products) => {\n        //       /**post processing the table data after returning from filter */\n        //       function convertToUpperCase(obj) {\n        //         let newObj = {};\n        //         for (let key in obj) {\n        //           newObj[key.toUpperCase()] = obj[key];\n        //         }\n        //         return newObj;\n        //       }\n        //       products = convertToUpperCase(products);\n        //       console.log(products);\n        //       // scanInvoiceData.InvoiceData = ocrData;\n        //     //   setOcrProducts(ocrData);\n              \n        //     //   console.log(scanInvoiceData);\n        //       // scanInvoiceData.InvoiceData = ocrData;\n        //       //console.log(resScnInvDta);\n        //       //console.log(\"OCERDATa\", ocrData);\n        //       //console.log(products);\n        //       //console.log(scanInvoiceData);\n        //       let table = ocrData.map((row) => {\n        //         /**For invoices which dont have item no, set description as item no */\n        //         if (row.itemNo === undefined) {\n        //           row.itemNo = row.description.trim().toUpperCase();\n        //         }\n        //         row.itemNo = row.itemNo.toString().toUpperCase();\n    \n        //         row.description =\n        //           products[row.itemNo] !== undefined\n        //             ? products[row.itemNo].Description\n        //             : row.description;\n        //         row.pieces =\n        //           products[row.itemNo] !== undefined\n        //             ? products[row.itemNo].Quantity\n        //             : 0;\n        //         row.sku =\n        //           products[row.itemNo] !== undefined\n        //             ? products[row.itemNo].sku\n        //             : \"\";\n        //         row.barcode =\n        //           products[row.itemNo] !== undefined\n        //             ? products[row.itemNo].Barcode\n        //             : \"\";\n        //         row.posName =\n        //           products[row.itemNo] !== undefined\n        //             ? products[row.itemNo].POS\n        //             : \"\";\n        //         row.markup = 0;\n        //         row.show = true;\n        //         row.posSku =\n        //           products[row.itemNo] !== undefined\n        //             ? products[row.itemNo].PosSKU\n        //             : \"\";\n        //         row.isReviewed = \n        //           products[row.itemNo] !== undefined ? products[row.itemNo].isReviewed : \"\" ;\n        //         row.size = \n        //           products[row.itemNo] !== undefined ? products[row.itemNo].Size : \"\";\n        //         row.department = \n        //           products[row.itemNo] !== undefined ? products[row.itemNo].Department : \"\";\n        //         row.cost = \n        //           products[row.itemNo] !== undefined ? products[row.itemNo].SellerCost : \"\";\n        //         row.sellingPrice = \n        //           products[row.itemNo] !== undefined ? products[row.itemNo].SellingPrice : \"\";\n        //         //console.log(\"department-\" + row.department + \"  cost-\" + row.cost + \"  price\" + row.sellingPrice);\n        //         let sp = 0;\n        //         let cp = 0;\n        //         // const barcode = products.Barcode\n        //         if (parseInt(row.pieces)) {\n        //           sp = (parseFloat(row.unitPrice) / parseInt(row.pieces)).toFixed(\n        //             2\n        //           );\n        //           cp = sp;\n        //         }\n        //         if (products[row.itemNo] !== undefined) {\n        //           if (+row.unitPrice > +products[row.itemNo].Price) {\n        //             row[\"priceIncrease\"] = 1;\n        //           } else if (+row.unitPrice < +products[row.itemNo].Price) {\n        //             row[\"priceIncrease\"] = -1;\n        //           } else if (+row.unitPrice == +products[row.itemNo].Price) {\n        //             row[\"priceIncrease\"] = 0;\n        //           }\n        //         } else {\n        //           row[\"priceIncrease\"] = 0;\n        //         }\n    \n        //         /**filter out the rows for which qty shipped & extendedPrice is zero */\n        //         if (row.qty == \"0\" && row.extendedPrice === \"0.00\") {\n        //           return null;\n        //         }\n        //         /**Calulate qty for which qty is not read/scanned by textract */\n        //         if (!row.qty) {\n        //           row.qty = (\n        //             parseFloat(row.extendedPrice) / parseFloat(row.unitPrice)\n        //           ).toFixed(0);\n        //         }\n        //       return { ...row, sp, cp };\n        //       });\n        //       setLoader(false);\n        //       setTableData(table.filter((data) => data !== null));\n        //       setItemNoDropdown(Object.keys(products));\n        //       setProductDetails(products);\n        //     })\n        //     .catch((err) => {\n        //       console.log(\"error on mapping ocrdata\", err)\n        //       setLoader(false);\n        //     });\n        // });\n    }, []);\n\n    \n    if (loader) {\n      return <Spinner />;\n    }\n    return(\n        <div className=\"container-fluid\">\n            <Paper className={classes.root}>\n                <Grid style={{ display: \"flex\" }}>\n                    <Autocomplete\n                        value={invoice}\n                        onChange={(event, newValue) => {\n                            // console.log(\"new value\", newValue)\n                            if (newValue) {\n                            setInvoice(newValue);\n                            }\n                        }}\n                        id=\"combo-box\"\n                        options={dropdownOptions}\n                        getOptionLabel={(option) => option.value}\n                        style={{ width: 300 }}\n                        autoHighlight\n                        renderInput={(params) => (\n                            <TextField {...params} label={dropdownLabel} variant=\"outlined\" />\n                        )}\n                    />\n                    <TextField\n                        label=\"Invoice No.\"\n                        variant=\"outlined\"\n                        value={invoiceNo}\n                        style={{ marginLeft: 20 }}\n                        onChange={(e) => setInvoiceNo(e.target.value)}\n                    />\n                    <TextField\n                        id=\"date\"\n                        label=\"Date\"\n                        type=\"date\"\n                        value={date}\n                        style={{ marginLeft: 20 }}          \n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        onChange={(event) => setDate(event.target.value)}          \n                    />\n                    <button  style={{backgroundColor: \"green\",\n                        border: \"none\",\n                        color: \"white\",\n                        padding: \"4px 8px\",\n                        textAlign: \"center\",\n                        textDecoration: \"none\",\n                        display: \"inline-block\",\n                        fontSize: \"14px\",\n                        align: \"left\",\n                        marginLeft: 20}}\n                        onClick={setProductsInTable}>\n                            Fetch Invoice Data\n                    </button>\n                </Grid>\n            </Paper>\n        \n            {pushToInventory ? (\n            <UpdateInventory\n                newInventoryData={inventoryData}\n                header={header}\n                goBack={setPushToInventory}\n                invoice={invoice}\n            />\n            ) : (\n            renderTableData()\n            )}\n\n            <CModal show={showModal} onClose={toggleModal}>\n        <CModalHeader closeButton>Add Red Products</CModalHeader>\n        <CModalBody>\n          <CContainer fluid>\n            <CRow>\n              <CCol sm=\"6\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"invoiceNo\">Units In Case</CLabel>\n                  <CInput\n                    type=\"text\"\n                    name=\"unitsInCase\"\n                    value={unitsInCase}\n                    onChange={(event) => setUnitsInCase(event.target.value)}\n                    />\n                  <CLabel htmlFor=\"date\">Price</CLabel>\n                  <CInput\n                    type=\"text\"\n                    name=\"price\"\n                    value={price}\n                    onChange={(event) => setPrice(event.target.value)}\n                    />\n                </CFormGroup>\n              </CCol>\n            </CRow>\n          </CContainer>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"primary\" onClick={updateItem}>\n            ADD\n          </CButton>{\" \"}\n          <CButton color=\"secondary\" onClick={toggleModal}>\n            Cancel\n          </CButton>\n        </CModalFooter>\n      </CModal>\n        </div>\n\n    );\n}\n\nexport default SaveInvoiceData;"],"sourceRoot":""}