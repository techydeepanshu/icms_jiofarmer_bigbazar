{"version":3,"sources":["Images/logo.png","UI/LoginPage.js","containers/Auth/Auth.js"],"names":["LoginPage","className","src","logo","alt","type","onChange","e","props","setUsername","target","value","name","setPassword","onClick","this","submitHandler","React","Component","Auth","state","username","password","event","preventDefault","authHandler","alert","loading","Spinner","redirect","isAuthenticated","to","val","setState","connect","error","auth","token","dispatch","email"],"mappings":"4MAAe,G,OAAA,IAA0B,kC,OCInCA,E,4JACF,WAAU,IAAD,OACL,OACI,qBAAKC,UAAU,6BAAf,SACI,qBAAKA,UAAU,+BAAf,SACI,sBAAKA,UAAU,0CAAf,UACI,qBAAKA,UAAU,WAAWC,IAAKC,EAAMC,IAAI,eACzC,sBAAKH,UAAU,gBAAf,UACI,oBAAIA,UAAU,OAAd,qCACA,oBAAIA,UAAU,MAAd,uBACA,uBAAOA,UAAU,eAAeI,KAAK,QAASC,SAAU,SAACC,GACrD,EAAKC,MAAMC,YAAaF,EAAEG,OAAOC,UAErC,oBAAIV,UAAU,OAAd,uBACA,uBAAOA,UAAU,eAAeW,KAAK,WAAWP,KAAK,WAAYC,SAAU,SAACC,GACxE,EAAKC,MAAMK,YAAYN,EAAEG,OAAOC,UAEpC,8BACI,wBAAQV,UAAU,SAAWa,QAASC,KAAKP,MAAMQ,cAAjD,sC,GAlBRC,IAAMC,WA6BflB,I,QCzBTmB,E,4MACFC,MAAQ,CACJC,SAAU,GACVC,SAAU,I,EAEdN,cAAgB,SAACO,GACT,EAAKH,MAAMC,UAAY,EAAKD,MAAME,UAClCC,EAAMC,iBACN,EAAKhB,MAAMiB,YAAY,EAAKL,MAAMC,SAAU,EAAKD,MAAME,WAEvDI,MAAM,iC,4CAGd,WAAU,IAAD,OAEL,GAAIX,KAAKP,MAAMmB,QACX,OAAO,cAAEC,EAAA,EAAF,IAEX,IAAIC,EAAW,KAIf,OAHGd,KAAKP,MAAMsB,kBACVD,EAAW,cAAC,IAAD,CAAUE,GAAK,cAG1B,gCACKF,EACD,cAAC,EAAD,CACAb,cAAeD,KAAKC,cACpBP,YAAa,SAACuB,GAAD,OAAS,EAAKC,SAAS,CAAEZ,SAAUW,KAChDnB,YAAa,SAACmB,GAAD,OAAS,EAAKC,SAAS,CAAEX,SAAUU,c,GA5B7Cd,aA+CJgB,uBAbS,SAACd,GACvB,MAAO,CACLe,MAAOf,EAAMgB,KAAKD,MAClBR,QAASP,EAAMgB,KAAKT,QACpBG,gBAAsC,OAArBV,EAAMgB,KAAKC,UAGL,SAACC,GAC1B,MAAO,CACLb,YAAa,SAACc,EAAOjB,GAAR,OAAqBgB,EAASF,YAAKG,EAAOjB,QAI5CY,CAA6Cf","file":"static/js/13.41bef9fa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.fc16259f.png\";","import React from \"react\";\nimport './LoginPage.css'\nimport logo from \"../Images/logo.png\"\n\nclass LoginPage extends React.Component {\n    render() {\n        return (\n            <div className=\"container-fluid background\">\n                <div className=\"row  justify-content-center \">\n                    <div className=\" margin_top col-sm-6 col-md-6 col-lg-4 \">\n                        <img className=\"image_1 \" src={logo} alt=\"background\" />\n                        <div className=\" custom-card \">\n                            <h1 className='text'>Sign in to your account</h1>\n                            <h6 className='txt' > Username</h6>\n                            <input className='form-control' type=\" text\"  onChange={(e) => {\n                                this.props.setUsername( e.target.value)\n                            }} />\n                            <h6 className='mt-3' > Password</h6>\n                            <input className='form-control' name=\"password\" type='password'  onChange={(e) => {\n                                this.props.setPassword(e.target.value)\n                            }} />\n                            <div>\n                                <button className=\"button\"   onClick={this.props.submitHandler} >Continue</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default LoginPage;","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { auth } from '../../store/action/actionAuth';\nimport LoginPage from '../../UI/LoginPage'\nimport Spinner from '../../UI/Spinner/Spinner';\n\n\nclass Auth extends Component {\n    state = {\n        username: \"\",\n        password: \"\",\n    }\n    submitHandler = (event) => {\n        if (this.state.username && this.state.password) {\n            event.preventDefault();\n            this.props.authHandler(this.state.username, this.state.password);\n        } else {\n            alert('Please fill all the details.')\n        }\n    }\n    render() {\n        // console.log('usernme', this.state.username)\n        if (this.props.loading) {\n            return < Spinner />\n        }\n        let redirect = null\n        if(this.props.isAuthenticated) {\n            redirect = <Redirect to = '/invoice' />\n        }\n        return (\n            <div>\n                {redirect}\n                <LoginPage\n                submitHandler={this.submitHandler}\n                setUsername={(val) => this.setState({ username: val })}\n                setPassword={(val) => this.setState({ password: val })}\n                />\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n  return {\n    error: state.auth.error,\n    loading: state.auth.loading,\n    isAuthenticated: state.auth.token !== null,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    authHandler: (email, password) => dispatch(auth(email, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth)\n"],"sourceRoot":""}