{"version":3,"sources":["services/InventoryService.js","services/Api.js","services/TesseractService.js","UI/Button.js","utils/invoiceList.js","components/Update/UpdateInventory.js","components/DisplayData/DisplayData.module.css"],"names":["InventoryService","productSKU","a","WordpressAxios","get","params","sku","response","data","productId","put","res","post","upc","itemName","Axios","appendURL","console","log","invoiceName","invoiceNo","date","itemNo","dateObj","Api","name","type","TesseractService","image","FormData","append","filename","Button","this","props","color","text","others","className","React","Component","dropdownOptions","value","slug","jsonName","emptyColumn","databaseName","jsonNaseame","UpdateInventory","useState","newInventoryData","posProducts","setPosProducts","redirect","setRedirect","loader","setLoader","wooComProducts","setWooComProducts","inventoryService","header","pushInventoryDetails","map","element","item","qty","parseInt","pieces","cp","unitPrice","markup","sp","description","duplicates","i","length","hasOwnProperty","push","lastIndexOf","tempData","Object","values","filter","ele","forEach","index","temp","val","updatedWoocomProducts","product","wooIndex","findIndex","wooProduct","id","stock_quantity","regular_price","pushToWoocom","pushToPOS","window","alert","products","Promise","all","UpdateProductDetails","COST","PRICE","UPC","TOTALQTY","isNew","ITEMNAME","BUYASCASE","CASEUNITS","CASECOST","SKU","DEPNAME","UpdatePOSProducts","JSON","stringify","DESCRIPTION","QTY","SIZE","PACK","REPLACEQTY","DEPARTMENT","CATEGORY","SUBCATEGORY","ISFOODSTAMP","ISWEIGHTED","ISTAXABLE","VENDORNAME","invoice","VENDORCODE","VENDORCOST","ISNEWITEM","COMPANYNAME","PRODUCTCODE","Cost","ItemName","Price","TotalQty","CreateDBProduct","UpdateDBProduct","count","useEffect","row","GetProductDetails","barcode","price","sale_price","items","hasErrorOccured","isForReview","GetPOSProductDetails","toString","posSku","getProducts","getPosProducts","to","rows","extendedPrice","style","marginTop","key","position","top","background","toUpperCase","onClick","goBack","renderTableData","module","exports"],"mappings":"yLAIaA,EAAb,wIACE,WAAwBC,GAAxB,eAAAC,EAAA,sEACyBC,IAAeC,IAAf,aAAiC,CACtDC,OAAQ,CAAEC,IAAKL,KAFnB,cACQM,EADR,yBAISA,EAASC,MAJlB,2CADF,gIAQE,WAA2BC,EAAWD,GAAtC,eAAAN,EAAA,sEACoBC,IAAeO,IAAf,oBAAgCD,GAAaD,GADjE,cACQG,EADR,yBAESA,EAAIH,MAFb,2CARF,4HAYE,4BAAAN,EAAA,sEACoBC,IAAeC,IAAI,YADvC,cACQO,EADR,yBAESA,EAAIH,MAFb,2CAZF,wHAgBE,WAAoBA,GAApB,eAAAN,EAAA,sEACoBC,IAAeS,KAAK,WAAYJ,GADpD,cACQG,EADR,yBAESA,EAAIH,MAFb,2CAhBF,gIAqBE,WAA2BK,GAA3B,6BAAAX,EAAA,6DAAgCY,EAAhC,+BAA2C,GAA3C,SACyBC,IAAMX,IAAIY,4BAAkC,CACjEX,OAAQ,CAAEQ,MAAKC,cAFnB,cACQP,EADR,yBAISA,EAASC,MAJlB,2CArBF,6HA2BE,WAAwBA,GAAxB,eAAAN,EAAA,6DACEe,QAAQC,IAAIV,GADd,SAEoBO,IAAMH,KACtBI,qCACAR,GAJJ,cAEQG,EAFR,yBAMSA,EAAIH,MANb,2CA3BF,yHAmCE,4BAAAN,EAAA,sEACoBa,IAAMX,IAAIY,oBAD9B,cACQL,EADR,OAEEM,QAAQC,IAAIP,EAAIH,MAFlB,kBAGSG,EAAIH,MAHb,2CAnCF,8HAwCE,WAA0BA,GAA1B,eAAAN,EAAA,sEAMoBa,IAAML,IACtBM,qCACAR,GARJ,cAMQG,EANR,yBAUSA,EAAIH,MAVb,2CAxCF,+HAqDE,WAA0BA,GAA1B,eAAAN,EAAA,sEAKoBa,IAAMH,KAAKI,+BAAqCR,GALpE,cAKQG,EALR,yBAMSA,EAAIH,MANb,2CArDF,iIA8DE,WAA4BA,GAA5B,eAAAN,EAAA,sEAGoBa,IAAMH,KAAKI,sCAA4CR,GAH3E,cAGQG,EAHR,yBAISA,EAAIH,MAJb,2CA9DF,6HAoEE,WAAwBW,EAAaC,EAAWC,EAAMC,GAAtD,eAAApB,EAAA,6DACEe,QAAQC,IAAIC,GACZF,QAAQC,IAAIE,GACZH,QAAQC,IAAII,GACZL,QAAQC,IAAIG,GAJd,SAKoBN,IAAMH,KAAKI,wCAA8C,CAACX,OAAO,CAAEc,YAAaA,EAAaC,UAAWA,EAAUC,KAAMA,EAAMC,OAAQA,KAL1J,cAKQX,EALR,yBAMSA,EAAIH,MANb,2CApEF,wIA6EE,WAA6BA,GAA7B,eAAAN,EAAA,6DACEe,QAAQC,IAAIV,GADd,SAEoBO,IAAMH,KAAKI,6CAAmDR,GAFlF,OAEQG,EAFR,OAGEM,QAAQC,IAAIP,GAHd,2CA7EF,2HAoFE,WAAsBH,GAAtB,eAAAN,EAAA,6DACEe,QAAQC,IAAIV,GADd,SAEoBO,IAAML,IAAIM,iCAAuCR,GAFrE,cAEQG,EAFR,yBAGSA,EAAIH,MAHb,2CApFF,2HAyFE,WAAsBA,GAAtB,eAAAN,EAAA,sEACoBa,IAAMH,KAAKI,iCAAuCR,GADtE,cACQG,EADR,yBAESA,EAAIH,MAFb,2CAzFF,gIA8FE,WAA2Be,GAA3B,eAAArB,EAAA,6DACEe,QAAQC,IAAI,wBACZD,QAAQC,IAAIK,GAFd,SAGoBR,IAAMX,IAAIY,0BAA+BO,GAH7D,cAGQZ,EAHR,OAIEM,QAAQC,IAAIP,GAJd,kBAKSA,EAAIH,MALb,2CA9FF,+D,wHCFagB,EAAb,8HACI,WAAcC,EAAKC,GAAnB,eAAAxB,EAAA,6DACEe,QAAQC,IAAIO,EAAKC,GADnB,SAEgBX,IAAMX,IAAIY,uBAA0B,CAACX,OAAO,CAACoB,KAAKA,EAAKC,KAAKA,KAF5E,cAEMf,EAFN,OAIEM,QAAQC,IAAIP,GAJd,kBAKSA,EAAIH,MALb,2CADJ,iE,wHCAamB,EAAb,gIACI,WAAgBC,GAAhB,iBAAA1B,EAAA,6DACUM,EAAO,IAAIqB,UACZC,OAAO,OAAQF,GAFxB,SAGoBb,IAAMH,KAAKI,2BAA+BR,GAH9D,cAGQG,EAHR,yBAIWA,EAAIH,MAJf,2CADJ,6HAQI,WAAwBW,GAAxB,eAAAjB,EAAA,sEACoBa,IAAMX,IAAIY,uBAA2B,CACnDX,OAAQ,CAAEc,YAAaA,KAF7B,cACQR,EADR,yBAIWA,EAAIH,MAJf,2CARJ,sHAeI,WAAiBuB,GAAjB,eAAA7B,EAAA,sEACoBa,IAAMH,KAAKI,kBAAsB,CAAER,KAAM,CAACuB,cAD9D,cACQpB,EADR,OAEIM,QAAQC,IAAIP,GAFhB,kBAGWA,EAAIH,MAHf,2CAfJ,+HAqBI,WAA0BW,EAAaC,EAAWC,GAAlD,eAAAnB,EAAA,6DACIe,QAAQC,IAAI,wBADhB,SAEoBH,IAAMX,IAAIY,0CAAgD,CAACX,OAAO,CAAEc,YAAaA,EAAaC,UAAWA,EAAUC,KAAMA,KAF7I,cAEQV,EAFR,OAGIM,QAAQC,IAAIP,GAHhB,kBAIWA,EAAIH,MAJf,2CArBJ,mE,gICDMwB,E,4JAEF,WACE,MAIIC,KAAKC,MAHPC,EADF,EACEA,MACAC,EAFF,EAEEA,KACGC,EAHL,iBAMA,OACE,gDAAQC,UAAWH,GAAWE,GAA9B,aACGD,S,GAXUG,IAAMC,WAkBVR,O,iCCnBjB,kCAAO,IAAMS,EAAkB,CAC7B,CACEC,MAAO,SACPC,KAAM,SACNC,SAAU,uBACVC,aAAa,EACbC,aAAc,kBAEhB,CACEJ,MAAO,gBACPC,KAAM,gBACNC,SAAU,iBACVC,aAAa,EACbC,aAAc,cAEhB,CACEJ,MAAO,gBACPC,KAAM,gBACNC,SAAU,qBACVC,aAAa,EACbC,aAAc,iBAEhB,CACEJ,MAAO,gBACPC,KAAM,gBACNC,SAAU,qBACVC,aAAa,EACbC,aAAc,gBAEhB,CACEJ,MAAO,WACPC,KAAM,WACNC,SAAU,gBACVC,aAAa,EACbC,aAAc,YAEhB,CACEJ,MAAO,UACPC,KAAM,UACNC,SAAU,eACVC,aAAa,EACbC,aAAc,YAEhB,CACEJ,MAAO,qBACPC,KAAM,qBACNC,SAAU,0BACVC,aAAa,EACbC,aAAc,sBAEhB,CACEJ,MAAO,iBACPC,KAAM,iBACNC,SAAU,sBACVC,aAAa,EACbC,aAAc,iBAEhB,CACEJ,MAAO,aACPC,KAAM,aACNC,SAAU,kBACVC,aAAa,EACbC,aAAc,aAEhB,CACEJ,MAAO,kBACPC,KAAM,kBACNC,SAAU,uBACVC,aAAa,EACbC,aAAc,kBAEhB,CACEJ,MAAO,qBACPC,KAAM,qBACNC,SAAU,0BACVC,aAAa,EACbC,aAAc,oBAEhB,CACEJ,MAAO,kBACPC,KAAM,kBACNC,SAAU,uBACVC,aAAa,EACbC,aAAc,iBAEhB,CACEJ,MAAO,mBACPC,KAAM,mBACNC,SAAU,wBACVC,aAAa,EACbC,aAAc,kBAEhB,CACEJ,MAAO,iBACPC,KAAM,iBACNC,SAAU,sBACVC,aAAa,EACbC,aAAc,iBAEhB,CACEJ,MAAO,cACPC,KAAM,cACNC,SAAU,aACVC,aAAa,EACbC,aAAc,UAEhB,CACEJ,MAAO,gBACPC,KAAM,gBACNC,SAAU,qBACVC,aAAa,EACbC,aAAc,gBAEhB,CACEJ,MAAO,cACPC,KAAM,cACNC,SAAU,mBACVC,aAAa,EACbC,aAAc,eAEhB,CACEJ,MAAO,gBACPC,KAAM,iBACNC,SAAU,eACVC,aAAa,EACbC,aAAc,YAEhB,CACEJ,MAAO,UACPC,KAAM,UACNC,SAAU,eACVC,aAAa,EACbC,aAAc,aAGhB,CACEJ,MAAO,WACPC,KAAM,WACNC,SAAU,gBACVC,aAAa,EACbC,aAAc,aAGhB,CACEJ,MAAO,aACPC,KAAM,aACNC,SAAU,kBACVC,aAAa,EACbC,aAAc,aAGhB,CACEJ,MAAO,YACPC,KAAM,YACNC,SAAU,YACVC,aAAa,EACbC,aAAc,SAEhB,CACEJ,MAAO,YACPC,KAAM,YACNC,SAAU,iBACVC,aAAa,EACbC,aAAc,aAGhB,CACEJ,MAAO,uBACPC,KAAM,uBACNC,SAAU,4BACVC,aAAa,EACbC,aAAc,wBAEhB,CACEJ,MAAO,iBACPC,KAAM,iBACNC,SAAU,sBACVC,aAAa,EACbC,aAAc,gBAEhB,CACEJ,MAAO,gBACPC,KAAM,eACNC,SAAU,qBACVC,aAAa,EACbC,aAAc,gBAEhB,CACEJ,MAAO,aACPC,KAAM,aACNC,SAAU,kBACVC,aAAa,EACbC,aAAc,aAEhB,CACEJ,MAAO,WACPC,KAAM,WACNC,SAAU,gBACVC,aAAa,EACbC,aAAc,YAEhB,CACEJ,MAAO,wBACPC,KAAM,wBACNC,SAAU,6BACVC,aAAa,EACbC,aAAc,uBAEhB,CACEJ,MAAO,cACPC,KAAM,cACNC,SAAU,mBACVC,aAAa,EACbC,aAAc,eAEhB,CACEJ,MAAO,aACPC,KAAM,aACNC,SAAU,kBACVC,aAAa,EACbC,aAAc,cAEhB,CACEJ,MAAO,qBACPC,KAAM,qBACNC,SAAU,0BACVC,aAAa,EACbC,aAAc,qBAEhB,CACEJ,MAAO,gBACPC,KAAM,QACNC,SAAU,uBACVC,aAAa,EACbC,aAAc,mBAEhB,CACEJ,MAAO,yBACPC,KAAM,yBACNC,SAAU,8BACVC,aAAa,EACbC,aAAc,wBAEhB,CACEJ,MAAO,cACPC,KAAM,cACNC,SAAU,iBACVC,aAAa,EACbC,aAAc,aAEhB,CACEJ,MAAO,cACPC,KAAM,cACNC,SAAU,kBACVC,aAAa,EACbC,aAAc,eAEhB,CACEJ,MAAO,WACPC,KAAM,WACNC,SAAU,gBACVC,aAAa,EACbC,aAAc,aAEhB,CACEJ,MAAO,qBACPC,KAAM,qBACNC,SAAU,0BACVC,aAAa,EACbC,aAAc,qBAEjB,CACGJ,MAAO,eACPC,KAAM,eACNC,SAAU,oBACVC,aAAa,EACbC,aAAc,gBAEhB,CACEJ,MAAO,yBACPC,KAAM,yBACNC,SAAU,8BACVC,aAAa,EACbC,aAAc,wBAEhB,CACEJ,MAAO,gBACPC,KAAM,gBACNC,SAAU,qBACVC,aAAa,EACbC,aAAc,gBAEhB,CACEJ,MAAO,iBACPC,KAAM,iBACNC,SAAU,sBACVC,aAAa,EACbC,aAAc,gBAEhB,CACEJ,MAAO,oBACPC,KAAM,oBACNC,SAAU,yBACVC,aAAa,EACbC,aAAc,mBAEhB,CACEJ,MAAO,wBACPC,KAAM,wBACNC,SAAU,6BACVC,aAAa,EACbC,aAAc,uBAEhB,CACEJ,MAAO,oBACPC,KAAM,oBACNC,SAAU,uBACVC,aAAa,EACbC,aAAc,kBAEhB,CACEJ,MAAO,uBACPC,KAAM,uBACNC,SAAU,4BACVC,aAAa,EACbC,aAAc,sBAEhB,CACEJ,MAAO,iBACPC,KAAM,iBACNC,SAAU,sBACVC,aAAa,EACbC,aAAc,gBAEhB,CACEJ,MAAO,kBACPC,KAAM,kBACNC,SAAU,oBACVC,aAAa,EACbC,aAAc,eAEhB,CACEJ,MAAO,uBACPC,KAAM,yBACNC,SAAU,yBACVC,aAAa,EACbC,aAAc,mBAEhB,CACEJ,MAAO,iBACPC,KAAM,iBACNC,SAAU,sBACVC,aAAa,EACbC,aAAc,kBAEhB,CACEJ,MAAO,eACPC,KAAM,kBACNC,SAAU,uBACVC,aAAa,EACbC,aAAc,iBAEhB,CACEJ,MAAO,gBACPC,KAAM,gBACNC,SAAU,qBACVC,aAAa,EACbC,aAAc,eAEhB,CACEJ,MAAO,YACPC,KAAM,YACNC,SAAU,iBACVC,aAAa,EACbC,aAAc,aAEhB,CACEJ,MAAO,gBACPC,KAAM,gBACNC,SAAU,qBACVC,aAAa,EACbC,aAAc,gBAEhB,CACEJ,MAAO,eACPC,KAAM,eACNC,SAAU,oBACVC,aAAa,EACbC,aAAc,eAEhB,CACEJ,MAAO,uBACPC,KAAM,uBACNC,SAAU,4BACVC,aAAa,EACbC,aAAc,uBAEhB,CACEJ,MAAO,UACPC,KAAM,UACNC,SAAU,mBACVC,aAAa,EACbC,aAAc,cAEhB,CACEJ,MAAO,oBACPC,KAAM,oBACNC,SAAU,iBACVC,aAAa,EACbC,aAAc,aAEhB,CACEJ,MAAO,kBACPC,KAAM,kBACNC,SAAU,eACVC,aAAa,EACbC,aAAc,YAEhB,CACEJ,MAAO,cACPC,KAAM,wBACNC,SAAU,kBACVC,aAAa,EACbC,aAAc,cAGhB,CACEJ,MAAO,oBACPC,KAAM,qBACNC,SAAU,yBACVC,aAAa,EACbC,aAAc,mBAEhB,CACEJ,MAAO,UACPC,KAAM,eACNC,SAAU,eACVC,aAAa,EACbC,aAAc,WAEhB,CACEJ,MAAO,kBACPC,KAAM,sBACNC,SAAU,mBACVC,aAAa,EACbC,aAAc,cAShB,CACEJ,MAAO,kBACPC,KAAM,kBACNC,SAAU,uBACVC,aAAa,EACbC,aAAc,kBAEhB,CACEJ,MAAO,oBACPC,KAAM,oBACNC,SAAU,yBACVC,aAAa,EACbC,aAAc,oBAEhB,CACEJ,MAAO,oBACPC,KAAM,mBACNC,SAAU,wBACVC,aAAa,EACbC,aAAc,mBAEhB,CACEJ,MAAO,aACPC,KAAM,aACNC,SAAU,kBACVC,aAAa,EACbC,aAAc,aAEhB,CACEJ,MAAO,oBACPC,KAAM,oBACNC,SAAU,yBACVC,aAAa,EACbC,aAAc,oBAEhB,CACEJ,MAAO,YACPC,KAAM,YACNC,SAAU,iBACVC,aAAa,EACbC,aAAc,aAEhB,CACEJ,MAAO,2BACPC,KAAM,2BACNC,SAAU,gCACVC,aAAa,EACbC,aAAc,yBAEhB,CACEJ,MAAO,gBACPC,KAAM,gBACNC,SAAU,qBACVC,aAAa,EACbC,aAAc,eAEhB,CACEJ,MAAO,aACPC,KAAM,aACNC,SAAU,kBACVC,aAAa,EACbC,aAAc,aAEhB,CACEJ,MAAO,oBACPC,KAAM,oBACNC,SAAU,yBACVC,aAAa,EACbC,aAAc,mBAEhB,CACEJ,MAAO,gBACPC,KAAM,gBACNC,SAAU,qBACVC,aAAa,EACbC,aAAc,eAEhB,CACEJ,MAAO,wBACPC,KAAM,yBACNC,SAAU,8BACVC,aAAa,EACbC,aAAc,yBAEhB,CACEJ,MAAO,2BACPC,KAAM,2BACNC,SAAU,gCACVC,aAAa,EACbC,aAAc,yBAEhB,CACEJ,MAAO,0BACPC,KAAM,2BACNC,SAAU,+BACVC,aAAa,EACbC,aAAc,yBAEhB,CACEJ,MAAO,SACPC,KAAM,SACNC,SAAU,oBACVC,aAAa,EACbC,aAAc,eAEhB,CACEJ,MAAO,gBACPC,KAAM,gBACNC,SAAU,qBACVC,aAAa,EACbC,aAAc,iBAEhB,CACEJ,MAAO,oBACPC,KAAM,oBACNC,SAAU,yBACVC,aAAa,EACbC,aAAc,mBAEhB,CACEJ,MAAO,eACPC,KAAM,eACNI,YAAa,mBACbF,aAAa,EACbC,aAAc,cAEhB,CACEJ,MAAO,gBACPC,KAAM,oBACNC,SAAU,8BACVC,aAAa,EACbC,aAAc,wBAGhB,CACEJ,MAAO,eACPC,KAAM,eACNC,SAAU,cACVC,aAAa,EACbC,aAAc,WAEhB,CACEJ,MAAO,iBACPC,KAAM,iBACNC,SAAU,qBACVC,aAAa,EACbC,aAAc,iBAEhB,CACEJ,MAAO,eACPC,KAAM,eACNC,SAAU,oBACVC,aAAa,EACbC,aAAc,eAEhB,CACEJ,MAAO,WACPC,KAAM,WACNC,SAAU,gBACVC,aAAa,EACbC,aAAc,YAEhB,CACEJ,MAAO,cACPC,KAAM,cACNC,SAAU,mBACVC,aAAa,EACbC,aAAc,cAEhB,CACEJ,MAAO,uBACPC,KAAM,uBACNC,SAAU,4BACVC,aAAa,EACbC,aAAc,sBAEhB,CACEJ,MAAO,0BACPC,KAAM,0BACNC,SAAU,gBACVC,aAAa,EACbC,aAAc,aAEhB,CACEJ,MAAO,qBACPC,KAAM,qBACNC,SAAU,eACVC,aAAa,EACbC,aAAc,YAGhB,CACEJ,MAAO,iBACPC,KAAM,iBACNC,SAAU,oBACVC,aAAa,EACbC,aAAc,gBAEhB,CACEJ,MAAO,YACPC,KAAM,YACNC,SAAU,oBACVC,aAAa,EACbC,aAAc,gBAEhB,CACEJ,MAAO,YACPC,KAAM,YACNC,SAAU,iBACVC,aAAa,EACbC,aAAc,aAGhB,CACEJ,MAAO,eACPC,KAAM,eACNC,SAAU,cACVC,aAAa,EACbC,aAAc,WAEhB,CACEJ,MAAO,kBACPC,KAAM,kBACNC,SAAU,uBACVC,aAAa,EACbC,aAAc,kBAEhB,CACEJ,MAAO,uBACPC,KAAM,uBACNC,SAAU,oBACVC,aAAa,EACbC,aAAc,gBAEhB,CACEJ,MAAO,qBACPC,KAAM,qBACNC,SAAU,0BACVC,aAAa,EACbC,aAAc,qBAEhB,CACEJ,MAAO,yBACPC,KAAM,yBACNC,SAAU,8BACVC,aAAa,EACbC,aAAc,wBAEhB,CACEJ,MAAO,aACPC,KAAM,aACNC,SAAU,iBACVC,aAAa,EACbC,aAAc,aAEhB,CACEJ,MAAO,gBACPC,KAAM,gBACNC,SAAU,aACVC,aAAa,EACbC,aAAc,UAEhB,CACEJ,MAAO,eACPC,KAAM,eACNC,SAAU,wBACVC,aAAa,EACbC,aAAc,kBAEhB,CACEJ,MAAO,uBACPC,KAAM,uBACNC,SAAU,cACVC,aAAa,EACbC,aAAc,WAEhB,CACEJ,MAAO,eACPC,KAAM,eACNC,SAAU,eACVC,aAAa,EACbC,aAAc,YAEhB,CACEJ,MAAO,iBACPC,KAAM,iBACNC,SAAU,YACVC,aAAa,EACbC,aAAc,QAEhB,CACEJ,MAAO,aACPC,KAAM,YACNC,SAAU,aACVC,aAAa,EACbC,aAAc,UAEhB,CACEJ,MAAO,YACPC,KAAM,YACNC,SAAU,iBACVC,aAAa,EACbC,aAAc,aAEhB,CACEJ,MAAO,qBACPC,KAAM,oBACNC,SAAU,0BACVC,aAAa,EACbC,aAAc,sBAEhB,CACEJ,MAAO,cACPC,KAAM,cACNC,SAAU,uBACVC,aAAa,EACbC,aAAc,kBAEhB,CACEJ,MAAO,iBACPC,KAAM,iBACNC,SAAU,sBACVC,aAAa,EACbC,aAAc,iBAEhB,CACEJ,MAAM,YACNC,KAAK,YACLC,SAAS,iBACTC,aAAY,EACZC,aAAa,aAEf,CACEJ,MAAO,qBACPC,KAAM,qBACNC,SAAU,mBACVC,aAAa,EACbC,aAAc,eAEhB,CACEJ,MAAO,eACPC,KAAM,cACNC,SAAU,oBACVC,aAAa,EACbC,aAAc,eAEhB,CACEJ,MAAO,aACPC,KAAM,aACNC,SAAU,kBACVC,aAAa,EACbC,aAAc,aAEhB,CACEJ,MAAO,aACPC,KAAM,YACNC,SAAU,kBACVC,aAAa,EACbC,aAAc,cAEhB,CACEJ,MAAO,mBACPC,KAAM,kBACNC,SAAU,wBACVC,aAAa,EACbC,aAAc,mBAIhB,CACEJ,MAAO,eACPC,KAAM,eACNC,SAAU,oBACVC,aAAa,EACbC,aAAc,iBAEhB,CACEJ,MAAO,qBACPC,KAAM,qBACNC,SAAU,0BACVC,aAAa,EACbC,aAAc,qBAEhB,CACEJ,MAAO,YACPC,KAAM,YACNC,SAAU,iBACVC,aAAa,EACbC,aAAc,YAEhB,CACEJ,MAAO,8BACPC,KAAM,8BACNC,SAAU,mCACVC,aAAa,EACbC,aAAc,6BAEhB,CACEJ,MAAO,qBACPC,KAAM,qBACNC,SAAU,0BACVC,aAAa,EACbC,aAAc,oBAEhB,CACEJ,MAAO,gBACPC,KAAM,gBACNC,SAAU,qBACVC,aAAa,EACbC,aAAc,gBAEhB,CACEJ,MAAO,aACPC,KAAM,aACNC,SAAU,kBACVC,aAAa,EACbC,aAAc,aAGhB,CACEJ,MAAO,SACPC,KAAM,SACNC,SAAU,cACVC,aAAa,EACbC,aAAc,WAEhB,CACEJ,MAAO,WACPC,KAAM,WACNC,SAAU,eACVC,aAAa,EACbC,aAAc,YAEhB,CACEJ,MAAO,eACPC,KAAM,mBACNC,SAAU,cACVC,aAAa,EACbC,aAAc,WAEhB,CACEJ,MAAO,gBACPC,KAAM,gBACNC,SAAU,aACVC,aAAa,EACbC,aAAc,UAEhB,CACEJ,MAAO,yBACPC,KAAM,yBACNC,SAAU,8BACVC,aAAa,EACbC,aAAc,yBAGhB,CACEJ,MAAO,cACPC,KAAM,cACNC,SAAU,aACVC,aAAa,EACbC,aAAc,UAEhB,CACEJ,MAAO,cACPC,KAAM,cACNC,SAAU,mBACVC,aAAa,EACbC,aAAc,cAEhB,CACEJ,MAAO,UACPC,KAAM,UACNC,SAAU,eACVC,aAAa,EACbC,aAAc,YAGhB,CACEJ,MAAO,kBACPC,KAAM,kBACNC,SAAU,uBACVC,aAAa,EACbC,aAAc,mBAEhB,CACEJ,MAAO,cACPC,KAAM,cACNC,SAAU,mBACVC,aAAa,EACbC,aAAc,eAEhB,CACEJ,MAAO,cACPC,KAAM,cACNC,SAAU,mBACVC,aAAa,EACbC,aAAc,eAEhB,CACEJ,MAAO,SACPC,KAAM,SACNC,SAAU,cACVC,aAAa,EACbC,aAAc,WAEhB,CACEJ,MAAO,oBACPC,KAAM,oBACNC,SAAU,yBACVC,aAAa,EACbC,aAAc,qBAEhB,CACEJ,MAAO,qBACPC,KAAM,qBACNC,SAAU,aACVC,aAAa,EACbC,aAAc,UAEhB,CACEJ,MAAO,eACPC,KAAM,eACNC,SAAU,eACVC,aAAa,EACbC,aAAc,YAEhB,CACEJ,MAAO,wBACPC,KAAM,wBACNC,SAAU,6BACVC,aAAa,EACbC,aAAc,wBAEhB,CACEJ,MAAO,kBACPC,KAAM,kBACNC,SAAU,uBACVC,aAAa,EACbC,aAAc,mBAEhB,CACEJ,MAAO,aACPC,KAAM,kBACNC,SAAU,uBACVC,aAAa,EACbC,aAAc,kBAEhB,CACEJ,MAAO,YACPC,KAAM,kBACNC,SAAU,iBACVC,aAAa,EACbC,aAAc,aAEhB,CACEJ,MAAO,UACPC,KAAM,UACNC,SAAU,eACVC,aAAa,EACbC,aAAc,YAEhB,CACEJ,MAAO,qBACPC,KAAM,qBACNC,SAAU,eACVC,aAAa,EACbC,aAAc,YAEhB,CACEJ,MAAO,SACPC,KAAM,SACNC,SAAU,cACVC,aAAa,EACbC,aAAc,UAEhB,CACEJ,MAAO,mBACPC,KAAM,aACNC,SAAU,wBACVC,aAAa,EACbC,aAAc,kBAEhB,CACEJ,MAAO,eACPC,KAAM,eACNC,SAAU,eACVC,aAAa,EACbC,aAAc,c,6HCrpBHE,IAtXS,SAACd,GAEvB,MAAgDe,mBAC9Cf,EAAMgB,kBADR,mBAAOA,EAAP,KAGA,GAHA,KAGsCD,mBAAS,KAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KACA,EAA4BL,oBAAS,GAArC,mBAAOM,EAAP,KAAeC,EAAf,KACA,EAA4CP,mBAAS,IAArD,mBAAOQ,EAAP,KAAuBC,EAAvB,KACMC,EAAmB,IAAI3D,IACvB4D,EAAS,CACb,aACA,UACA,UACA,cACA,UACA,cACA,iBACA,YACA,iBACA,aACA,aACA,eAoEIC,EAAoB,uCAAG,oCAAA3D,EAAA,sDAc3B,IAbAsD,GAAU,GACNhD,EAAO0C,EAAiBY,KAAI,SAACC,GAC/B,MAAO,CACLC,KAAMD,EAAQzC,OACd2C,IAAKC,SAASH,EAAQE,KAAOC,SAASH,EAAQI,QAC9CC,GAAIL,EAAQM,UACZC,OAAQP,EAAQO,OAChBC,GAAIR,EAAQQ,GACZC,YAAaT,EAAQS,gBAIrBC,EAAa,GACRC,EAAI,EAAGA,EAAIlE,EAAKmE,OAAQD,IAC3BD,EAAWG,eAAepE,EAAKkE,GAAGV,MACpCS,EAAWjE,EAAKkE,GAAGV,MAAMa,KAAKH,GACrBlE,EAAKsE,YAAYtE,EAAKkE,GAAGV,QAAUU,IAC5CD,EAAWjE,EAAKkE,GAAGV,MAAQ,CAACU,IAlBL,OAsBvBK,EAAWC,OAAOC,OAAOR,GAAYS,QAAO,SAACC,GAAD,OAASA,EAAIR,OAAS,MACzDA,OAAS,GACpBI,EAASK,SAAQ,SAACC,GAChB,IAAIC,EAAO,EACXD,EAAMD,SAAQ,SAACG,GACT/E,EAAK+E,KAEPD,GAAQ9E,EAAK+E,GAAKtB,KACPzD,EAAK+E,GAAKtB,MAAQ,IAC3BzD,EAAK+E,GAAO,SAIlB/E,EAAK6E,EAAM,IAAIpB,IAAMqB,KAGzB9E,EAAOA,EAAK0E,QAAO,SAACC,GAAD,OAAiB,OAARA,KAKxBK,EAAwBhF,EACzBsD,KAAI,SAAC2B,EAASJ,GAEb,IAAMK,EAAWjC,EAAekC,WAC9B,SAACC,GAAD,OAAgBH,EAAQzB,OAAS4B,EAAWtE,UAE9C,IAAkB,IAAdoE,EAAiB,CAEnB,MAA6BjC,EAAeiC,GAAtCG,EAAN,EAAMA,GAAIC,EAAV,EAAUA,eAGV,OAFAA,GAAkBL,EAAQxB,IAEnB,CAAE4B,KAAIE,cADSN,EAAQlB,GACFuB,iBAAgBxE,OAAQmE,EAAQzB,MAE9D,OAAO,QAERkB,QAAO,SAAClB,GAAD,OAAmB,OAATA,KA1DO,UA4DrBgC,EAAaR,GA5DQ,yBA6DrBS,EAAU9C,GA7DW,QA+D3BK,GAAU,GAEV0C,OAAOC,MAAM,kCACb7C,GAAY,GAlEe,4CAAH,qDAwEpB0C,EAAY,uCAAG,WAAOI,GAAP,SAAAlG,EAAA,6DACnBsD,GAAU,GADS,SAEK6C,QAAQC,IAC9BF,EAAStC,IAAT,uCAAa,WAAO2B,GAAP,uBAAAvF,EAAA,+EAESyD,EAAiB4C,qBAAqBd,EAAQI,GAAI,CAClEE,cAAeN,EAAQM,cACvBD,eAAgBL,EAAQK,iBAJjB,cAEHnF,EAFG,OAMDkF,EAA4ClF,EAA5CkF,GAAIpE,EAAwCd,EAAxCc,KAAMsE,EAAkCpF,EAAlCoF,cAAeD,EAAmBnF,EAAnBmF,eANxB,kBAOF,CACLD,KACApE,OACAsE,gBACAD,iBACAxE,OAAQmE,EAAQnE,SAZT,uCAeTL,QAAQC,IAAR,MACAiF,MAAM,uCAhBG,kBAiBF,MAjBE,yDAAb,wDAHiB,cAwBnB3C,GAAU,GAxBS,2CAAH,sDA2BZyC,EAAS,uCAAG,WAAOG,GAAP,SAAAlG,EAAA,6DAChBsD,GAAU,GACVvC,QAAQC,IAAIkF,GAFI,SAGQC,QAAQC,IAC9BF,EAAStC,IAAT,uCAAa,WAAO2B,GAAP,6CAAAvF,EAAA,sEAGPsG,EAYEf,EAZFe,KACAC,EAWEhB,EAXFgB,MACAC,EAUEjB,EAVFiB,IACAC,EASElB,EATFkB,SACAC,EAQEnB,EARFmB,MACAC,EAOEpB,EAPFoB,SACAC,EAMErB,EANFqB,UACAC,EAKEtB,EALFsB,UACAC,EAIEvB,EAJFuB,SACAC,EAGExB,EAHFwB,IACAC,EAEEzB,EAFFyB,QACA5F,EACEmE,EADFnE,OAdO,SAgBSqC,EAAiBwD,kBACjCC,KAAKC,UAAU,CACbX,MACAG,WACAS,YAAa,GACbb,QACAD,OACAe,IAAKZ,EACLa,KAAM,GACNC,KAAM,GACNC,WAAY,EACZC,WAAYT,EACZU,SAAU,GACVC,YAAa,GACbC,YAAa,EACbC,WAAY,EACZC,UAAW,EACXC,WAAY/F,EAAMgG,QAClBC,WAAY7G,EACZ8G,WAAY,GACZC,UAAWzB,EAAQ,EAAI,EACvBE,YACAC,YACAC,WACAsB,YAAapG,EAAMgG,QACnBK,YAAajH,KAzCR,UAgBHX,EAhBG,OA4CTM,QAAQC,IAAI,mBAAoBP,GAC1BH,EAAO,CACXkG,MACAO,MACAuB,KAAMhC,EACNiC,SAAU5B,EACV6B,MAAOjC,EACPkC,SAAUhC,IAERC,EArDK,kCAsDgBjD,EAAiBiF,gBAAgBpI,GAtDjD,QAsDDD,EAtDC,OAuDPU,QAAQC,IAAI,sBAAuBX,GAvD5B,yCAyDgBoD,EAAiBkF,gBAAgB,CACtDC,MAAO5E,SAASuB,EAAQxB,KAAOC,SAASuB,EAAQtB,QAChDuC,QA3DK,QAyDDnG,EAzDC,OA6DPU,QAAQC,IAAI,2BAA4BX,GA7DjC,eAgETU,QAAQC,IAAI,eAAgBP,GAhEnB,mBAiEF,GAjEE,yCAmETM,QAAQC,IAAR,MAnES,kBAoEF,MApEE,0DAAb,wDAJc,cA4EhBsC,GAAU,GA5EM,2CAAH,sDAgLf,OAlGAuF,qBAAU,WAAM,4CACd,4BAAA7I,EAAA,sEACsBmG,QAAQC,IAC1BpD,EAAiBY,IAAjB,uCAAqB,WAAOkF,GAAP,iCAAA9I,EAAA,+EAECyD,EAAiBsF,kBAAkBD,EAAIE,SAFxC,cAEXvI,EAFW,SAYbA,EAAI,GARNkF,EAJe,EAIfA,GACApE,EALe,EAKfA,KACAsE,EANe,EAMfA,cACAoD,EAPe,EAOfA,MACA7I,EARe,EAQfA,IACAqC,EATe,EASfA,KACAmD,EAVe,EAUfA,eACAsD,EAXe,EAWfA,WAXe,kBAaV,CACLvD,KACApE,OACAsE,gBACAoD,QACA7I,MACAqC,OACAmD,iBACAsD,aACA9H,OAAQ0H,EAAI1H,SAtBG,uCA0BjBL,QAAQC,IAAI,yCAA0C8H,EAAI1H,QA1BzC,kBA2BV,MA3BU,yDAArB,wDAFJ,OACQ+H,EADR,OAiCE7F,GAAU,GACVE,EAAkB2F,EAAMnE,QAAO,SAACC,GAAD,OAAiB,OAARA,MAlC1C,4CADc,kEAuCd,8BAAAjF,EAAA,6DACEsD,GAAU,GACN8F,GAAkB,EAFxB,SAGsBjD,QAAQC,IAC1BpD,EACGgC,QAAO,SAAC8D,GAAD,OAAUA,EAAIO,eACrBzF,IAFH,uCAEO,WAAOkF,GAAP,2BAAA9I,EAAA,+EAEiByD,EAAiB6F,qBACjCR,EAAIE,SAHL,cAEKvI,EAFL,OAKDM,QAAQC,IAAI,mBAAoBP,GAL/B,EAMiDA,EAAI,GAA9CsG,EANP,EAMOA,IAAKP,EANZ,EAMYA,IAAKG,EANjB,EAMiBA,SAAUF,EAN3B,EAM2BA,SAAUO,EANrC,EAMqCA,QANrC,6CAQI8B,GARJ,IASCxC,KAAMwC,EAAI5E,GACVqC,MAAOuC,EAAIzE,GACX0C,MACAP,MACAG,WACAF,SACEzC,SAAS8E,EAAI/E,KAAOC,SAAS8E,EAAI7E,QAAUD,SAASyC,GACtDrF,OAAQ0H,EAAI1H,OACZsF,OAAO,EACPE,UAAW,EACXC,UAAWiC,EAAI7E,OAAOsF,WACtBzC,SAAUgC,EAAI3E,UAAUoF,WACxBvC,aArBD,uCAwBDoC,GAAkB,EAxBjB,6CA0BIN,GA1BJ,IA2BCxC,KAAMwC,EAAI5E,GACVqC,MAAOuC,EAAIzE,GACX0C,IAAK+B,EAAIU,OACThD,IAAKsC,EAAIE,QACTrC,SAAUmC,EAAIxE,YACdmC,SAAUzC,SAAS8E,EAAI/E,KAAOC,SAAS8E,EAAI7E,QAC3C7C,OAAQ0H,EAAI1H,OACZsF,OAAO,EACPE,UAAW,EACXC,UAAWiC,EAAI7E,OAAOsF,WACtBzC,SAAUgC,EAAI3E,UAAUoF,WACxBvC,QAAS,MAtCV,yDAFP,wDAJJ,OAGQmC,EAHR,OAiDMC,GACFnD,MAAM,qCAER3C,GAAU,GACVJ,EAAeiG,EAAMnE,QAAO,SAACC,GAAD,OAAiB,OAARA,MArDvC,4CAvCc,uBAAC,WAAD,wBA8FdwE,GA9Fc,mCA+FdC,KACC,IAECvG,EACK,cAAC,IAAD,CAAUwG,GAAG,MAElBtG,EACK,cAAC,IAAD,IAEF,8BA1UiB,WACtB,IAAIuG,EAAO5G,EAAiBY,KAAI,SAACC,EAASsB,GACxC,OACE,+BAGE,6BAAKA,EAAQ,IACb,6BAAKtB,EAAQmF,UACb,6BAAKnF,EAAQ2F,SACb,6BAAK3F,EAAQE,MACb,6BAAKF,EAAQzC,SACb,6BAAKyC,EAAQS,cACb,6BAAKT,EAAQI,SACb,6BAAKJ,EAAQM,YACb,6BAAKN,EAAQgG,gBACb,6BAAKhG,EAAQK,KACb,6BAAKL,EAAQQ,KACb,6BAAKR,EAAQO,WAbRe,MAiBX,OACE,sBAAK2E,MAAO,CAAEC,UAAW,QAAzB,UACE,uBAAO3H,UAAU,wCAAjB,SACE,kCACE,6BAxCDsB,EAAOE,KAAI,SAACoG,EAAK7E,GACtB,OACE,oBAEE2E,MAAO,CACLG,SAAU,SACVC,IAAK,OACLC,WAAY,QALhB,SAQGH,EAAII,eAPAjF,QAsCFyE,OAGL,qBAAKxH,UAAU,+BAAf,SACE,cAAC,IAAD,CACEF,KAAK,OACLD,MAAM,eACNT,KAAK,SACL6I,QAAS,kBAAMrI,EAAMsI,QAAO,QAGhC,qBAAKlI,UAAU,gCAAf,SACE,cAAC,IAAD,CACEF,KAAK,SACLD,MAAM,eACNT,KAAK,SACL6I,QAAS1G,SAgSN4G,O,oBCxXfC,EAAOC,QAAU,CAAC,KAAO,0BAA0B,OAAS,4BAA4B,MAAQ,2BAA2B,UAAY,+BAA+B,UAAY,+BAA+B,UAAY,+BAA+B,QAAU,6BAA6B,IAAM,yBAAyB,MAAQ,2BAA2B,OAAS,4BAA4B,QAAU,6BAA6B,kBAAoB,uCAAuC,QAAU,6BAA6B,KAAO,0BAA0B,aAAe,kCAAkC,OAAS,8B","file":"static/js/2.8ae1bd2d.chunk.js","sourcesContent":["import { POSAxios, WordpressAxios } from \"./axios\";\nimport Axios from \"./axios\";\nconst appendURL = process.env.NODE_ENV === \"production\" ? \"/server\" : \"\";\n\nexport class InventoryService {\n  async GetProductDetails(productSKU) {\n    const response = await WordpressAxios.get(`/products/`, {\n      params: { sku: productSKU },\n    });\n    return response.data;\n  }\n\n  async UpdateProductDetails(productId, data) {\n    const res = await WordpressAxios.put(`/products/${productId}`, data);\n    return res.data;\n  }\n  async getAllProducts() {\n    const res = await WordpressAxios.get(\"products\");\n    return res.data;\n  }\n  async createProduct(data) {\n    const res = await WordpressAxios.post(\"products\", data);\n    return res.data;\n  }\n\n  async GetPOSProductDetails(upc, itemName = \"\") {\n    const response = await Axios.get(appendURL + \"/api/getPOSProduct\", {\n      params: { upc, itemName },\n    });\n    return response.data;\n  }\n  async UpdatePOSProducts(data) {\n    console.log(data);\n    const res = await Axios.post(\n      appendURL + \"/api/pos/Product/ManageItem\",\n      data\n    );\n    return res.data;\n  }\n  async SyncInventory() {\n    const res = await Axios.get(appendURL + \"/api/sync\");\n    console.log(res.data);\n    return res.data;\n  }\n  async UpdateProductFields(data) {\n    /**\n     ***** data format\n     * data = {invoiceName: \"chetak\", itemName:\"CAS 123\", value:{\"Description\": \"jnckwc\", \"Price\": \"44\"}}\n     */\n    //  console.log(data);\n    const res = await Axios.put(\n      appendURL + \"/api/invoice/product/update\",\n      data\n    );\n    return res.data;\n  }\n\n  async CreateNotFoundItems(data) {\n    /**\n     * data format\n     * {Item:String,Description:String,Quantity:String,Price:String,sku:String,Barcode:String,PosSKU:String,InvoiceName:String}\n     */\n    const res = await Axios.post(appendURL + \"/api/invoice/notfound\", data);\n    return res.data;\n  }\n\n  async CreateScanInvoiceData(data){\n    //console.log(\"IN INVENTORY SERVICE\");\n    //console.log(data);\n    const res = await Axios.post(appendURL + \"/api/invoice/scaninvoicedata\", data);\n    return res.data;\n  }\n  async UpdateInvoiceData(invoiceName, invoiceNo, date, itemNo) {\n    console.log(invoiceName);\n    console.log(invoiceNo);\n    console.log(itemNo);\n    console.log(date);\n    const res = await Axios.post(appendURL + \"/api/invoice/updateinvoicedata\", {params:{ invoiceName: invoiceName, invoiceNo: invoiceNo,date: date, itemNo: itemNo}});\n    return res.data;\n  }\n\n  async UpdateDBafterPosUpdate(data){\n    console.log(data);\n    const res = await Axios.post(appendURL + \"/api/invoice/updatedbafterposupdate\", data);\n    console.log(res);\n\n  }\n\n  async UpdateDBProduct(data) {\n    console.log(data);\n    const res = await Axios.put(appendURL + \"/api/invoice/pos/update\", data);\n    return res.data;\n  }\n  async CreateDBProduct(data) {\n    const res = await Axios.post(appendURL + \"/api/invoice/pos/create\", data);\n    return res.data;\n  }\n\n  async getInitialSyncedData(dateObj) {\n    console.log(\"In inventory service\");\n    console.log(dateObj);\n    const res = await Axios.get(appendURL + \"/api/invoice/pos\",dateObj);\n    console.log(res);\n    return res.data;\n  }\n}\n","import Axios from \"./axios\";\nconst appendURL=process.env.NODE_ENV===\"production\"?\"/server\":\"\";\nexport class Api {\n    async GetFuzz(name,type){\n      console.log(name,type);\n      var res=await Axios.get(appendURL+`/api/fuzzwuzz`,{params:{name:name,type:type}});\n      /* var res=await Axios.get(appendURL+`/api/fuzzwuzz`); */\n      console.log(res);\n      return res.data\n    }\n}\n\n","import Axios from \"./axios\";\nconst appendURL=process.env.NODE_ENV===\"production\"?\"/server\":\"\";\nexport class TesseractService {\n    async PostImage(image) {\n        const data = new FormData();\n        data.append(\"file\", image);\n        var res = await Axios.post(appendURL+`/api/upload-image`, data);\n        return res.data\n    }\n\n    async GetProductDetails(invoiceName) {\n        var res = await Axios.get(appendURL+`/api/product/`, {\n          params: { invoiceName: invoiceName },\n        });\n        return res.data\n    }\n\n    async GetOCRData(filename) {\n        var res = await Axios.post(appendURL+`/api/ocr`, { data: {filename} });\n        console.log(res);\n        return res.data\n    }\n\n    async GetSavedInvoiceData(invoiceName, invoiceNo, date) {\n        console.log(\"IN TESSERACT SERVICE\");\n        var res = await Axios.get(appendURL + \"/api/invoice/getsaveinvoicedata/\", {params:{ invoiceName: invoiceName, invoiceNo: invoiceNo,date: date}});\n        console.log(res);\n        return res.data;\n    }\n}","import React from \"react\";\nclass Button extends React.Component {\n\n    render() {\n      const { \n        color,\n        text,\n        ...others\n      } = this.props;\n      \n      return (\n        <button className={color} {...others}>\n          {text}\n        </button>\n      )\n    }\n  }\n  \n\n  export default Button;","export const dropdownOptions = [\n  {\n    value: \"Chetak\",\n    slug: \"chetak\",\n    jsonName: \"chetak-products.json\",\n    emptyColumn: true,\n    databaseName: \"chetakproducts\",\n  },\n  {\n    value: \"Aahubarah USA\",\n    slug: \"aahubarah-usa\",\n    jsonName: \"aahubarah.json\",\n    emptyColumn: false,\n    databaseName: \"aahubarahs\",\n  }, \n  {\n    value: \"Adelman foods\",\n    slug: \"adelman-foods\",\n    jsonName: \"adelaman-food.json\",\n    emptyColumn: false,\n    databaseName: \"adelamanfoods\",\n  },\n  {\n    value: \"Advance Foods\",\n    slug: \"advance-foods\",\n    jsonName: \"advance-foods.json\",\n    emptyColumn: false,\n    databaseName: \"advancefoods\",\n  },\n  {\n    value: \"Aliments\",\n    slug: \"aliments\",\n    jsonName: \"aliments.json\",\n    emptyColumn: false,\n    databaseName: \"aliments\",\n  }, \n  {\n    value: \"Amtrade\",\n    slug: \"amtrade\",\n    jsonName: \"amtrade.json\",\n    emptyColumn: false,\n    databaseName: \"amtrades\",\n  }, \n  {\n    value: \"Anmol distributors\",\n    slug: \"anmol-distributors\",\n    jsonName: \"anmol-distribution.json\",\n    emptyColumn: false,\n    databaseName: \"anmoldistributions\",\n  },\n  {\n    value: \"Anns eco store\",\n    slug: \"anns-eco-store\",\n    jsonName: \"anns-eco-store.json\",\n    emptyColumn: false,\n    databaseName: \"annsecostores\",\n  },\n  {\n    value: \"Gurme Guru\",\n    slug: \"gurme-guru\",\n    jsonName: \"gurme-guru.json\",\n    emptyColumn: true,\n    databaseName: \"gurmeguru\",\n  },\n  {\n    value: \"Katzman Produce\",\n    slug: \"katzman-produce\",\n    jsonName: \"katzman-produce.json\",\n    emptyColumn: false,\n    databaseName: \"katzmanproduce\",\n  }, \n  {\n    value: \"Katzman Berry Corp\",\n    slug: \"katzman-beery-corp\",\n    jsonName: \"katzman-berry-corp.json\",\n    emptyColumn: true,\n    databaseName: \"katzmanberrycorp\",\n  }, \n  {\n    value: \"UYT Imports NYC\",\n    slug: \"uyt-imports-nyc\",\n    jsonName: \"uyt-imports-nyc.json\",\n    emptyColumn: false,\n    databaseName: \"uytimportsnyc\",\n  }, \n  {\n    value: \"Dava West Indian\",\n    slug: \"dava-west-indian\",\n    jsonName: \"dava-west-indian.json\",\n    emptyColumn: false,\n    databaseName: \"davawestindian\",\n  }, \n  {\n    value: \"Soko Packaging\",\n    slug: \"soko-packaging\",\n    jsonName: \"soko-packaging.json\",\n    emptyColumn: false,\n    databaseName: \"sokopackaging\",\n  },\n  {\n    value: \"Babco foods\",\n    slug: \"babco-foods\",\n    jsonName: \"babco.json\",\n    emptyColumn: false,\n    databaseName: \"babcos\",\n  }, \n  {\n    value: \"Karison Foods\",\n    slug: \"karison-foods\",\n    jsonName: \"karison-foods.json\",\n    emptyColumn: true,\n    databaseName: \"karisonfoods\",\n  }, \n  {\n    value: \"Baraka cold\",\n    slug: \"baraka-cold\",\n    jsonName: \"baraka-cold.json\",\n    emptyColumn: false,\n    databaseName: \"barakacolds\",\n  },\n  {\n    value: \"Barlett dairy\",\n    slug: \"bartlett-dairy\",\n    jsonName: \"barlett.json\",\n    emptyColumn: false,\n    databaseName: \"barletts\",\n  },\n  {\n    value: \"Baroody\",\n    slug: \"baroody\",\n    jsonName: \"baroody.json\",\n    emptyColumn: true,\n    databaseName: \"baroodies\",\n  }, \n// {value:'',slug:'',jsonName:'bartlett.json',emptyColumn:false,databaseName:'bartletts'},\n  {\n    value: \"Bedessee\",\n    slug: \"bedessee\",\n    jsonName: \"bedessee.json\",\n    emptyColumn: false,\n    databaseName: \"bedessees\",\n  },\n  // {value:'',slug:'',jsonName:'Best-food-1.json',emptyColumn:false,databaseName:'bestfood1'},\n  {\n    value: \"Best Foods\",\n    slug: \"best-foods\",\n    jsonName: \"best-foods.json\",\n    emptyColumn: true,\n    databaseName: \"bestfoods\",\n  },\n\n  {\n    value: \"Dara food\",\n    slug: \"dara-food\",\n    jsonName: \"dara.json\",\n    emptyColumn: false,\n    databaseName: \"daras\",\n  }, \n  {\n    value: \"Dawn food\",\n    slug: \"dawn-food\",\n    jsonName: \"dawn-food.json\",\n    emptyColumn: false,\n    databaseName: \"dawnfoods\",\n  },\n  \n  {\n    value: \"Delight distribution\",\n    slug: \"delight-distribution\",\n    jsonName: \"delight-distrubution.json\",\n    emptyColumn: false,\n    databaseName: \"delightdistrubutions\",\n  }, \n  {\n    value: \"HJA Sales Corp\",\n    slug: \"hja-sales-corp\",\n    jsonName: \"hja-sales-corp.json\",\n    emptyColumn: false,\n    databaseName: \"hjasalescorp\",\n  }, \n  {\n    value: \"Delight foods\",\n    slug: \"delight-food\",\n    jsonName: \"delight-foods.json\",\n    emptyColumn: true,\n    databaseName: \"delightfoods\",\n  },\n  {\n    value: \"Dsa snacks\",\n    slug: \"dsa-snacks\",\n    jsonName: \"dsa-snacks.json\",\n    emptyColumn: false,\n    databaseName: \"dsasnacks\",\n  }, \n  {\n    value: \"East end\",\n    slug: \"east-end\",\n    jsonName: \"east-end.json\",\n    emptyColumn: false,\n    databaseName: \"eastends\",\n  },\n  {\n    value: \"Empire food importers\",\n    slug: \"empire-food-importers\",\n    jsonName: \"empire-food-importers.json\",\n    emptyColumn: false,\n    databaseName: \"empirefoodimporters\",\n  },\n  {\n    value: \"Family five\",\n    slug: \"family-five\",\n    jsonName: \"family-five.json\",\n    emptyColumn: false,\n    databaseName: \"familyfives\",\n  }, \n  {\n    value: \"Gaint Farm\",\n    slug: \"gaint-farm\",\n    jsonName: \"gaint-farm.json\",\n    emptyColumn: true,\n    databaseName: \"gaint-farm\",\n  }, \n  {\n    value: \"Hellenic Treasures\",\n    slug: \"hellenic-treasures\",\n    jsonName: \"hellenic-treasures.json\",\n    emptyColumn: false,\n    databaseName: \"hellenictreasures\",\n  }, \n  {\n    value: \"Galil imports\",\n    slug: \"galil\",\n    jsonName: \"galil-importing.json\",\n    emptyColumn: false,\n    databaseName: \"galilimportings\",\n  },\n  {\n    value: \"Musco Food Corporation\",\n    slug: \"musco-food-corporation\",\n    jsonName: \"musco-food-corporation.json\",\n    emptyColumn: false,\n    databaseName: \"muscofoodcorporation\",\n  },\n  {\n    value: \"Goyal group\",\n    slug: \"goyal-group\",\n    jsonName: \"goyal-grp.json\",\n    emptyColumn: true,\n    databaseName: \"goyalgrps\",\n  },\n  {\n    value: \"Grocer mill\",\n    slug: \"grocer-mill\",\n    jsonName: \"grocermill.json\",\n    emptyColumn: true,\n    databaseName: \"grocermills\",\n  },\n  {\n    value: \"Hellenic\",\n    slug: \"hellenic\",\n    jsonName: \"hellenic.json\",\n    emptyColumn: false,\n    databaseName: \"hellenics\",\n  }, \n  {\n    value: \"Hellenic Treasures\",\n    slug: \"hellenic-treasures\",\n    jsonName: \"hellenic-treasures.json\",\n    emptyColumn: false,\n    databaseName: \"hellenictreasures\",\n  }, \n {\n    value: \"Cream O Land\",\n    slug: \"cream-o-land\",\n    jsonName: \"cream-o-land.json\",\n    emptyColumn: true,\n    databaseName: \"cream-o-land\",\n  }, \n  {\n    value: \"Big Apple Distributors\",\n    slug: \"big-apple-distributors\",\n    jsonName: \"big-apple-distributors.json\",\n    emptyColumn: false,\n    databaseName: \"bigappledistributors\",\n  }, \n  {\n    value: \"K&S Wholesale\",\n    slug: \"k&s-wholesale\",\n    jsonName: \"k&s-wholesale.json\",\n    emptyColumn: false,\n    databaseName: \"k&swholesale\",\n  }, \n  {\n    value: \"Los Olivos Ltd\",\n    slug: \"los-olivos-ltd\",\n    jsonName: \"los-olivos-ltd.json\",\n    emptyColumn: false,\n    databaseName: \"losolivosltd\",\n  }, \n  {\n    value: \"Sirob Imports Inc\",\n    slug: \"sirob-imports-inc\",\n    jsonName: \"sirob-imports-inc.json\",\n    emptyColumn: false,\n    databaseName: \"sirobimportsinc\",\n  }, \n  {\n    value: \"AZ Metro Distribution\",\n    slug: \"az-metro-distribution\",\n    jsonName: \"az-metro-distribution.json\",\n    emptyColumn: false,\n    databaseName: \"azmetrodistribution\",\n  }, \n  {\n    value: \"Duty Free Produce\",\n    slug: \"duty-free-produce\",\n    jsonName: \"chetak-products.json\",\n    emptyColumn: false,\n    databaseName: \"chetakproducts\",\n  },\n  {\n    value: \"Farmers Choice Dairy\",\n    slug: \"farmers-choice-dairy\",\n    jsonName: \"farmers-choice-dairy.json\",\n    emptyColumn: false,\n    databaseName: \"farmerschoicedairy\",\n  }, \n  {\n    value: \"Hill top farms\",\n    slug: \"hill-top-farms\",\n    jsonName: \"hill-top-farms.json\",\n    emptyColumn: false,\n    databaseName: \"hilltopfarms\",\n  }, \n  {\n    value: \"House of spices\",\n    slug: \"house-of-spices\",\n    jsonName: \"house-spices.json\",\n    emptyColumn: false,\n    databaseName: \"housespices\",\n  },\n  {\n    value: \"Indian food & spices\",\n    slug: \"indian-food-and-spices\",\n    jsonName: \"india-food-spices.json\",\n    emptyColumn: false,\n    databaseName: \"indiafoodspices\",\n  },\n  {\n    value: \"M SY Marketing\",\n    slug: \"m-sy-marketing\",\n    jsonName: \"m-sy-marketing.json\",\n    emptyColumn: false,\n    databaseName: \"m-sy-marketing\",\n  }, \n  {\n    value: \"Concept Food\",\n    slug: \"concept-food-us\",\n    jsonName: \"concept-food-us.json\",\n    emptyColumn: false,\n    databaseName: \"conceptfoodus\",\n  }, \n  {\n    value: \"Good Luck Int\",\n    slug: \"good-luck-int\",\n    jsonName: \"good-luck-int.json\",\n    emptyColumn: false,\n    databaseName: \"goodluckint\",\n  }, \n  {\n    value: \"Tropicana\",\n    slug: \"tropicana\",\n    jsonName: \"tropicana.json\",\n    emptyColumn: false,\n    databaseName: \"tropicana\",\n  }, \n  {\n    value: \"Lucky Traders\",\n    slug: \"lucky-traders\",\n    jsonName: \"lucky-traders.json\",\n    emptyColumn: false,\n    databaseName: \"luckytraders\",\n  }, \n  {\n    value: \"Trading Corp\",\n    slug: \"trading-corp\",\n    jsonName: \"trading-corp.json\",\n    emptyColumn: false,\n    databaseName: \"tradingcorp\",\n  }, \n  {\n    value: \"Indian spice trading\",\n    slug: \"indian-spice-trading\",\n    jsonName: \"indian-spice-trading.json\",\n    emptyColumn: true,\n    databaseName: \"indianspicetradings\",\n  }, \n  {\n    value: \"I sifol\",\n    slug: \"i-sifol\",\n    jsonName: \"I-sifol-llc.json\",\n    emptyColumn: false,\n    databaseName: \"isifolllcs\",\n  }, \n  {\n    value: \"Jaan distributors\",\n    slug: \"jaan-distributors\",\n    jsonName: \"jaan-dist.json\",\n    emptyColumn: false,\n    databaseName: \"jaandists\",\n  }, \n  {\n    value: \"Jalaram produce\",\n    slug: \"jalaram-produce\",\n    jsonName: \"jalaram.json\",\n    emptyColumn: false,\n    databaseName: \"jalarams\",\n  }, \n  {\n    value: \"JCW imports\",\n    slug: \"jcw-import-and-export\",\n    jsonName: \"jcw-import.json\",\n    emptyColumn: false,\n    databaseName: \"jcwimports\",\n  }, \n  // {value:'',slug:'',jsonName:'joy-foods.json',emptyColumn:false,databaseName:'joyfoods'},\n  {\n    value: \"Joy gourmet foods\",\n    slug: \"joy-gourment-foods\",\n    jsonName: \"joy-gourmet-foods.json\",\n    emptyColumn: true,\n    databaseName: \"joygourmetfoods\",\n  },\n  {\n    value: \"Katzman\",\n    slug: \"katzam-foods\",\n    jsonName: \"katzman.json\",\n    emptyColumn: false,\n    databaseName: \"katzman\",\n  }, \n  {\n    value: \"KM Distribution\",\n    slug: \"km-distribution-usa\",\n    jsonName: \"km-dist-usa.json\",\n    emptyColumn: false,\n    databaseName: \"kmdistusas\",\n  }, \n  // {\n  //   value: \"Tuscan\",\n  //   slug: \"tuscan\",\n  //   jsonName: \"tuscan.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"tuscan\",\n  // },   //not complete\n  {\n    value: \"SA Distribution\",\n    slug: \"sa-distribution\",\n    jsonName: \"sa-distribution.json\",\n    emptyColumn: false,\n    databaseName: \"sadistribution\",\n  }, \n  {\n    value: \"Triboro Wholesale\",\n    slug: \"triboro-wholesale\",\n    jsonName: \"triboro-wholesale.json\",\n    emptyColumn: false,\n    databaseName: \"triborowholesale\",\n  }, \n  {\n    value: \"North East Banana\",\n    slug: \"northeast-banana\",\n    jsonName: \"northeast-banana.json\",\n    emptyColumn: false,\n    databaseName: \"northeastbanana\",\n  }, \n  {\n    value: \"Lezza Food\",\n    slug: \"lezza-food\",\n    jsonName: \"lezza-food.json\",\n    emptyColumn: false,\n    databaseName: \"lezzafood\",\n  },\n  {\n    value: \"Hamd Distribution\",\n    slug: \"hamd-distribution\",\n    jsonName: \"hamd-distribution.json\",\n    emptyColumn: false,\n    databaseName: \"hamddistribution\",\n  }, \n  {\n    value: \"Baawarchi\",\n    slug: \"baawarchi\",\n    jsonName: \"baawarchi.json\",\n    emptyColumn: false,\n    databaseName: \"baawarchi\",\n  }, \n  {\n    value: \"Mfried Store Fixture Inc\",\n    slug: \"mfried-store-fixture-inc\",\n    jsonName: \"mfried-store-fixture-inc.json\",\n    emptyColumn: false,\n    databaseName: \"mfriedstorefixtureinc\",\n  }, \n  {\n    value: \"Crown of East\",\n    slug: \"crown-of-east\",\n    jsonName: \"crown-of-east.json\",\n    emptyColumn: false,\n    databaseName: \"crownofeast\",\n  }, \n  {\n    value: \"Guru Nanak\",\n    slug: \"guru-nanak\",\n    jsonName: \"guru-nanak.json\",\n    emptyColumn: false,\n    databaseName: \"gurunanak\",\n  }, \n  {\n    value: \"Valente Yeast Inc\",\n    slug: \"valente-yeast-inc\",\n    jsonName: \"valente-yeast-inc.json\",\n    emptyColumn: false,\n    databaseName: \"valenteyeastinc\",\n  }, \n  {\n    value: \"Online Mr Inc\",\n    slug: \"online-mr-inc\",\n    jsonName: \"online-mr-inc.json\",\n    emptyColumn: false,\n    databaseName: \"onlinemrinc\",\n  }, \n  {\n    value: \"Busines International\",\n    slug: \"business-international\",\n    jsonName: \"business-international.json\",\n    emptyColumn: false,\n    databaseName: \"businessinternational\",\n  }, \n  {\n    value: \"Bhavani Fruit Vegetables\",\n    slug: \"bhavani-fruit-vegetables\",\n    jsonName: \"bhavani-fruit-vegetables.json\",\n    emptyColumn: false,\n    databaseName: \"bhavanifruitvegatbles\",\n  }, \n  {\n    value: \"Best Cakes Distribution\",\n    slug: \"best-cakes-distribution \",\n    jsonName: \"best-cakes-distribution.json\",\n    emptyColumn: false,\n    databaseName: \"bestcakesdistribution\",\n  }, \n  {\n    value: \"Koryeo\",\n    slug: \"koryeo\",\n    jsonName: \"koryeo-foods.json\",\n    emptyColumn: false,\n    databaseName: \"koryeofoods\",\n  },\n  {\n    value: \"Krishna Aahar\",\n    slug: \"krishna-aahar\",\n    jsonName: \"krishna-aahar.json\",\n    emptyColumn: true,\n    databaseName: \"krishna-aahar\",\n  },\n  {\n    value: \"Krishna Food Corp\",\n    slug: \"krishna-food-corp\",\n    jsonName: \"krishna-food-corp.json\",\n    emptyColumn: true,\n    databaseName: \"krishnafoodcorp\",\n  }, \n  {\n    value: \"Krinos foods\",\n    slug: \"krinos-foods\",\n    jsonNaseame: \"krino-foods.json\",\n    emptyColumn: false,\n    databaseName: \"krinofoods\",\n  },\n  {\n    value: \"Krishna Foods\",\n    slug: \"krishna-food-corp\",\n    jsonName: \"krishna-foods-products.json\",\n    emptyColumn: true,\n    databaseName: \"krishnafoodsproducts\",\n  },\n  // {value:'',slug:'',jsonName:'krishna.json',emptyColumn:false,databaseName:'krishnas'},\n  {\n    value: \"Leblon foods\",\n    slug: \"leblon-foods\",\n    jsonName: \"leblon.json\",\n    emptyColumn: false,\n    databaseName: \"leblons\",\n  },\n  {\n    value: \"Loumidis foods\",\n    slug: \"loumidis-foods\",\n    jsonName: \"loumidis-food.json\",\n    emptyColumn: false,\n    databaseName: \"loumidisfoods\",\n  }, \n  {\n    value: \"Rajbhog Food\",\n    slug: \"rajbhog-food\",\n    jsonName: \"rajbhog-food.json\",\n    emptyColumn: false,\n    databaseName: \"rajbhogfood\",\n  }, \n  {\n    value: \"Bakemark\",\n    slug: \"bakemark\",\n    jsonName: \"balemark.json\",\n    emptyColumn: false,\n    databaseName: \"bakemark\",\n  }, \n  {\n    value: \"Solid Trade\",\n    slug: \"solid-trade\",\n    jsonName: \"solid-trade.json\",\n    emptyColumn: true,\n    databaseName: \"solidtrade\",\n  }, \n  {\n    value: \"Raja Food Vegetables\",\n    slug: \"raja-food-vegetables\",\n    jsonName: \"raja-food-vegetables.json\",\n    emptyColumn: false,\n    databaseName: \"rajafoodvegetables\",\n  }, \n  {\n    value: \"Maharaja food importers\",\n    slug: \"maharaja-food-importers\",\n    jsonName: \"maharaja.json\",\n    emptyColumn: false,\n    databaseName: \"maharajas\",\n  },\n  {\n    value: \"Meenaxi enterprise\",\n    slug: \"meenaxi-enterprise\",\n    jsonName: \"meenaxi.json\",\n    emptyColumn: true,\n    databaseName: \"meenaxis\",\n  },\n  \n  {\n    value: \"Mels ice-cream\",\n    slug: \"mels-ice-cream\",\n    jsonName: \"mel-icecream.json\",\n    emptyColumn: false,\n    databaseName: \"melicecreams\",\n  }, \n  {\n    value: \"Moda food\",\n    slug: \"moda-food\",\n    jsonName: \"moda-food-ny.json\",\n    emptyColumn: false,\n    databaseName: \"modafoodnies\",\n  }, \n  {\n    value: \"Mr pickle\",\n    slug: \"mr-pickle\",\n    jsonName: \"mr-pickle.json\",\n    emptyColumn: false,\n    databaseName: \"mrpickles\",\n  }, \n  // {value:'',slug:'',jsonName:'my-baby-ev.json',emptyColumn:false,databaseName:'mybabyevs'},\n  {\n    value: \"Nassau candy\",\n    slug: \"nassau-candy\",\n    jsonName: \"nassau.json\",\n    emptyColumn: false,\n    databaseName: \"nassaus\",\n  },\n  {\n    value: \"Crestwood Farms\",\n    slug: \"crestwood-farms\",\n    jsonName: \"crestwood-farms.json\",\n    emptyColumn: false,\n    databaseName: \"crestwoodfarms\",\n  }, \n  {\n    value: \"New reliance traders\",\n    slug: \"new-reliance-traders\",\n    jsonName: \"new-reliance.json\",\n    emptyColumn: true,\n    databaseName: \"newreliances\",\n  },\n  {\n    value: \"New york wholesale\",\n    slug: \"new-york-wholesale\",\n    jsonName: \"new-york-wholesale.json\",\n    emptyColumn: false,\n    databaseName: \"newyorkwholesales\",\n  },\n  {\n    value: \"Nirav Indian groceries\",\n    slug: \"nirav-indian-groceries\",\n    jsonName: \"nirav-indian-groceries.json\",\n    emptyColumn: false,\n    databaseName: \"niravindiangroceries\",\n  }, \n  {\n    value: \"Grace Lafe\",\n    slug: \"grace-lafe\",\n    jsonName: \"grace-lef.json\",\n    emptyColumn: false,\n    databaseName: \"gracelafe\",\n  }, \n  {\n    value: \"Nupur trading\",\n    slug: \"nupur-trading\",\n    jsonName: \"nupur.json\",\n    emptyColumn: false,\n    databaseName: \"nupurs\",\n  },\n  {\n    value: \"NY zara food\",\n    slug: \"ny-zara-food\",\n    jsonName: \"ny-zara-food-inc.json\",\n    emptyColumn: false,\n    databaseName: \"nyzarafoodincs\",\n  },\n  {\n    value: \"On time distribution\",\n    slug: \"on-time-distribution\",\n    jsonName: \"ontime.json\",\n    emptyColumn: false,\n    databaseName: \"ontimes\",\n  }, \n  {\n    value: \"Optima foods\",\n    slug: \"optima-foods\",\n    jsonName: \"optimal.json\",\n    emptyColumn: false,\n    databaseName: \"optimals\",\n  },\n  {\n    value: \"Pams creations\",\n    slug: \"pams-creations\",\n    jsonName: \"pams.json\",\n    emptyColumn: false,\n    databaseName: \"pams\",\n  }, \n  {\n    value: \"Pexco INC.\",\n    slug: \"pexco-inc\",\n    jsonName: \"pexco.json\",\n    emptyColumn: false,\n    databaseName: \"pexcos\",\n  }, \n  {\n    value: \"PGL trade\",\n    slug: \"pgl-trade\",\n    jsonName: \"pgl-trade.json\",\n    emptyColumn: false,\n    databaseName: \"pgltrades\",\n  }, \n  {\n    value: \"Preferred beverage\",\n    slug: \"referred-beverage\",\n    jsonName: \"preferred-beverage.json\",\n    emptyColumn: false,\n    databaseName: \"preferredbeverages\",\n  },\n  {\n    value: \"Priya foods\",\n    slug: \"priya-foods\",\n    jsonName: \"priya-foods-usa.json\",\n    emptyColumn: true,\n    databaseName: \"priyafoodsusas\",\n  },\n  {\n    value: \"Produce n More\",\n    slug: \"produce-n-more\",\n    jsonName: \"produce-n-more.json\",\n    emptyColumn: false,\n    databaseName: \"producenmores\",\n  }, \n  {\n    value:'Pure Ghee',\n    slug:'pure-ghee',\n    jsonName:'pure-ghee.json',\n    emptyColumn:false,\n    databaseName:'pureghees'\n  }, \n  {\n    value: \"Putul distributors\",\n    slug: \"putul-distributors\",\n    jsonName: \"putull-dist.json\",\n    emptyColumn: false,\n    databaseName: \"putulldists\",\n  },\n  {\n    value: \"Radhey foods\",\n    slug: \"radhey-food\",\n    jsonName: \"radhey-foods.json\",\n    emptyColumn: false,\n    databaseName: \"radheyfoods\",\n  } ,\n  {\n    value: \"Raja foods\",\n    slug: \"raja-foods\",\n    jsonName: \"raja-foods.json\",\n    emptyColumn: false,\n    databaseName: \"rajafoods\",\n  }, \n  {\n    value: \"Rane music\",\n    slug: \"ranemusic\",\n    jsonName: \"rane-music.json\",\n    emptyColumn: false,\n    databaseName: \"ranemusics\",\n  },\n  {\n    value: \"Rite source corp\",\n    slug: \"ritesource-corp\",\n    jsonName: \"rite-source-corp.json\",\n    emptyColumn: false,\n    databaseName: \"ritesourcecorps\",\n  }, \n  // {value:'',slug:'',jsonName:'rite-source.json',emptyColumn:false,databaseName:'ritesources'},\n  // {value:'',slug:'',jsonName:'riya.json',emptyColumn:false,databaseName:'riyas'},\n  {\n    value: \"Rollin dairy\",\n    slug: \"rollin-dairy\",\n    jsonName: \"rollin-diary.json\",\n    emptyColumn: false,\n    databaseName: \"rollindiaries\",\n  }, \n  {\n    value: \"Arya International\",\n    slug: \"arya-international\",\n    jsonName: \"arya-international.json\",\n    emptyColumn: false,\n    databaseName: \"aryainternational\",\n  }, \n  {\n    value: \"Ron foods\",\n    slug: \"ron-foods\",\n    jsonName: \"ron-foods.json\",\n    emptyColumn: false,\n    databaseName: \"ronfoods\",\n  },\n  {\n    value: \"Kadakia International Group\",\n    slug: \"kadakia-international-group\",\n    jsonName: \"kadakia-international-group.json\",\n    emptyColumn: false,\n    databaseName: \"kadakiainternationalgroup\",\n  }, \n  {\n    value: \"Samar Trading Corp\",\n    slug: \"samar-trading-corp\",\n    jsonName: \"samar-trading-corp.json\",\n    emptyColumn: false,\n    databaseName: \"samartradingcorp\",\n  }, \n  {\n    value: \"Aroma Flavour\",\n    slug: \"aroma-flavour\",\n    jsonName: \"aroma-flavour.json\",\n    emptyColumn: false,\n    databaseName: \"aromaflavour\",\n  }, \n  {\n    value: \"Apna Bazar\",\n    slug: \"apna-bazar\",\n    jsonName: \"apna-bazar.json\",\n    emptyColumn: false,\n    databaseName: \"apnabazar\",\n  }, \n  // {value:'',slug:'',jsonName:'ron.json',emptyColumn:false,databaseName:'rons'},\n  {\n    value: \"Sankaj\",\n    slug: \"sankaj\",\n    jsonName: \"sankaj.json\",\n    emptyColumn: false,\n    databaseName: \"sankajs\",\n  }, \n  {\n    value: \"Sea mark\",\n    slug: \"sea-mark\",\n    jsonName: \"seamark.json\",\n    emptyColumn: false,\n    databaseName: \"seamarks\",\n  }, \n  {\n    value: \"Shakti group\",\n    slug: \"shakti-group-usa\",\n    jsonName: \"shakti.json\",\n    emptyColumn: false,\n    databaseName: \"shaktis\",\n  }, \n  {\n    value: \"Shata traders\",\n    slug: \"shata-traders\",\n    jsonName: \"shata.json\",\n    emptyColumn: true,\n    databaseName: \"shatas\",\n  }, \n  {  \n    value: \"Himalaya International\",\n    slug: \"himalaya-international\",\n    jsonName: \"himalaya-international.json\",\n    emptyColumn: false,\n    databaseName: \"himalayainternational\",\n  }, \n  \n  {\n    value: \"Shine foods\",\n    slug: \"shine-foods\",\n    jsonName: \"shine.json\",\n    emptyColumn: false,\n    databaseName: \"shines\",\n  }, \n  {\n    value: \"Shreeji Jay\",\n    slug: \"shreeji-jay\",\n    jsonName: \"shreeji-jay.json\",\n    emptyColumn: false,\n    databaseName: \"shreejijay\",\n  }, \n  {\n    value: \"Shreeji\",\n    slug: \"shreeji\",\n    jsonName: \"shreeji.json\",\n    emptyColumn: false,\n    databaseName: \"shreejis\",\n  }, \n  // {value:'',slug:'',jsonName:'singh-and-singh.json',emptyColumn:false,databaseName:'singhandsinghs'},\n  {\n    value: \"Slaughter house\",\n    slug: \"slaughter-house\",\n    jsonName: \"slaughter-house.json\",\n    emptyColumn: false,\n    databaseName: \"slaughterhouses\",\n  }, \n  {\n    value: \"Spicy sense\",\n    slug: \"spicy-sense\",\n    jsonName: \"spicy-sense.json\",\n    emptyColumn: false,\n    databaseName: \"spicysenses\",\n  }, \n  {\n    value: \"Spicy world\",\n    slug: \"spicy-world\",\n    jsonName: \"spicy-world.json\",\n    emptyColumn: false,\n    databaseName: \"spicyworlds\",\n  },\n  {\n    value: \"Surati\",\n    slug: \"surati\",\n    jsonName: \"surati.json\",\n    emptyColumn: false,\n    databaseName: \"suratis\",\n  }, \n  {\n    value: \"Symco distributor\",\n    slug: \"symco-distributor\",\n    jsonName: \"symco-distributor.json\",\n    emptyColumn: false,\n    databaseName: \"symcodistributors\",\n  },\n  {\n    value: \"Temin distribution\",\n    slug: \"temin-distribution\",\n    jsonName: \"temin.json\",\n    emptyColumn: false,\n    databaseName: \"temins\",\n  }, \n  {\n    value: \"Turkana food\",\n    slug: \"turkana-food\",\n    jsonName: \"turkana.json\",\n    emptyColumn: false,\n    databaseName: \"turkanas\",\n  }, \n  {\n    value: \"Two brother wholesale\",\n    slug: \"two-brother-wholesale\",\n    jsonName: \"two-brother-wholesale.json\",\n    emptyColumn: false,\n    databaseName: \"twobrotherwholesales\",\n  },\n  {\n    value: \"Unique importer\",\n    slug: \"unique-importer\",\n    jsonName: \"unique-importer.json\",\n    emptyColumn: false,\n    databaseName: \"uniqueimporters\",\n  }, \n  {\n    value: \"US gourmet\",\n    slug: \"us-gourmet-food\",\n    jsonName: \"us-gourmet-food.json\",\n    emptyColumn: false,\n    databaseName: \"usgourmetfoods\",\n  }, \n  {\n    value: \"USA Halal\",\n    slug: \"usa-halal-foods\",\n    jsonName: \"usa-halal.json\",\n    emptyColumn: false,\n    databaseName: \"usahalals\",\n  }, \n  {\n    value: \"Vadilal\",\n    slug: \"vadilal\",\n    jsonName: \"vadilal.json\",\n    emptyColumn: false,\n    databaseName: \"vadilals\",\n  }, \n  {\n    value: \"Vibrant enterprise\",\n    slug: \"vibrant-enterprise\",\n    jsonName: \"vibrant.json\",\n    emptyColumn: false,\n    databaseName: \"vibrants\",\n  }, \n  {\n    value: \"Vidyas\",\n    slug: \"vidyas\",\n    jsonName: \"vidyas.json\",\n    emptyColumn: false,\n    databaseName: \"vidyas\",\n  },\n  {\n    value: \"Vijay home foods\",\n    slug: \"vijay-food\",\n    jsonName: \"vijay-home-foods.json\",\n    emptyColumn: false,\n    databaseName: \"vijayhomefoods\",\n  }, \n  {\n    value: \"Vintage food\",\n    slug: \"vintage-food\",\n    jsonName: \"vintage.json\",\n    emptyColumn: false,\n    databaseName: \"vintages\",\n  },\n  // {value:'',slug:'',jsonName:'wave-ron-foods.json',emptyColumn:false,databaseName:'waveronfoods'}\n];\n","import React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { InventoryService } from \"../../services/InventoryService\";\nimport Button from \"../../UI/Button\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\n\nconst UpdateInventory = (props) => {\n  // const header = props.header;\n  const [newInventoryData, setNewInventoryData] = useState(\n    props.newInventoryData\n  );\n  const [posProducts, setPosProducts] = useState([]);\n  const [redirect, setRedirect] = useState(false);\n  const [loader, setLoader] = useState(true);\n  const [wooComProducts, setWooComProducts] = useState([]);\n  const inventoryService = new InventoryService();\n  const header = [\n    \"Serial No.\",\n    \"Barcode\",\n    \"POS SKU\",\n    \"Qty Shipped\",\n    \"ITEM NO\",\n    \"DESCRIPTION\",\n    \"Units in  Case\",\n    \"Case cost\",\n    \"Extended Price\",\n    \"Unit Cost \",\n    \"Unit Price\",\n    \"Mark up (%)\"\n  ];\n\n  const renderTableHeader = () => {\n    return header.map((key, index) => {\n      return (\n        <th\n          key={index}\n          style={{\n            position: \"sticky\",\n            top: \"70px\",\n            background: \"grey\",\n          }}\n        >\n          {key.toUpperCase()}\n        </th>\n      );\n    });\n  };\n  const renderTableData = () => {\n    let rows = newInventoryData.map((element, index) => {\n      return (\n        <tr\n          key={index}\n        >\n          <td>{index + 1}</td>\n          <td>{element.barcode}</td>\n          <td>{element.posSku}</td>\n          <td>{element.qty}</td>\n          <td>{element.itemNo}</td>\n          <td>{element.description}</td>\n          <td>{element.pieces}</td>\n          <td>{element.unitPrice}</td>\n          <td>{element.extendedPrice}</td>\n          <td>{element.cp}</td>\n          <td>{element.sp}</td>\n          <td>{element.markup}</td>\n        </tr>\n      );\n    });\n    return (\n      <div style={{ marginTop: \"70px\" }}>\n        <table className=\"table table-hover table-responsive-sm\">\n          <tbody>\n            <tr>{renderTableHeader()}</tr>\n            {rows}\n          </tbody>\n        </table>\n        <div className=\"d-flex justify-content-start\">\n          <Button\n            text=\"Back\"\n            color=\"btn btn-info\"\n            type=\"submit\"\n            onClick={() => props.goBack(false)}\n          />\n        </div>\n        <div className=\"d-flex justify-content-center\">\n          <Button\n            text=\"Submit\"\n            color=\"btn btn-info\"\n            type=\"submit\"\n            onClick={pushInventoryDetails}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const pushInventoryDetails = async () => {\n    setLoader(true);\n    let data = newInventoryData.map((element) => {\n      return {\n        item: element.itemNo,\n        qty: parseInt(element.qty) * parseInt(element.pieces),\n        cp: element.unitPrice,\n        markup: element.markup,\n        sp: element.sp,\n        description: element.description,\n      };\n    });\n\n    var duplicates = {};\n    for (var i = 0; i < data.length; i++) {\n      if (duplicates.hasOwnProperty(data[i].item)) {\n        duplicates[data[i].item].push(i);\n      } else if (data.lastIndexOf(data[i].item) !== i) {\n        duplicates[data[i].item] = [i];\n      }\n    }\n\n    let tempData = Object.values(duplicates).filter((ele) => ele.length > 1);\n    if (tempData.length > 0) {\n      tempData.forEach((index) => {\n        let temp = 0;\n        index.forEach((val) => {\n          if (data[val]) {\n            // console.log(\"data[val]\", data[val]);\n            temp += data[val].qty;\n            if (temp - data[val].qty !== 0) {\n              data[val] = null;\n            }\n          }\n        });\n        data[index[0]].qty = temp;\n      });\n    }\n    data = data.filter((ele) => ele !== null);\n\n    /**\n     * add the fileds of  data from the woocom & ocr\n     */\n    let updatedWoocomProducts = data\n      .map((product, index) => {\n        /**find index of the item in fetched woocom product list */\n        const wooIndex = wooComProducts.findIndex(\n          (wooProduct) => product.item === wooProduct.itemNo\n        );\n        if (wooIndex !== -1) {\n          /**get the qty & other fileds of the woocom product */\n          let { id, stock_quantity } = wooComProducts[wooIndex];\n          stock_quantity += product.qty;\n          const regular_price = product.sp;\n          return { id, regular_price, stock_quantity, itemNo: product.item };\n        }\n        return null;\n      })\n      .filter((item) => item !== null);\n\n    await pushToWoocom(updatedWoocomProducts);\n    await pushToPOS(posProducts);\n\n    setLoader(false);\n    // if (itemsNotPushed.length === 0) {\n    window.alert(\"Inventory updated successfully\");\n    setRedirect(true);\n    // } else {\n    //   window.alert(\"Inventory not updated\");\n    // }\n  };\n\n  const pushToWoocom = async (products) => {\n    setLoader(true);\n    const responses = await Promise.all(\n      products.map(async (product) => {\n        try {\n          const res = await inventoryService.UpdateProductDetails(product.id, {\n            regular_price: product.regular_price,\n            stock_quantity: product.stock_quantity,\n          });\n          const { id, name, regular_price, stock_quantity } = res;\n          return {\n            id,\n            name,\n            regular_price,\n            stock_quantity,\n            itemNo: product.itemNo,\n          };\n        } catch (error) {\n          console.log(error);\n          alert(\"Couldn't update product on website.\");\n          return null;\n        }\n      })\n    );\n    setLoader(false);\n  };\n\n  const pushToPOS = async (products) => {\n    setLoader(true);\n    console.log(products);\n    const responses = await Promise.all(\n      products.map(async (product) => {\n        try {\n          const {\n            COST,\n            PRICE,\n            UPC,\n            TOTALQTY,\n            isNew,\n            ITEMNAME,\n            BUYASCASE,\n            CASEUNITS,\n            CASECOST,\n            SKU,\n            DEPNAME,\n            itemNo\n          } = product;\n          const res = await inventoryService.UpdatePOSProducts(\n            JSON.stringify({\n              UPC,\n              ITEMNAME,\n              DESCRIPTION: \"\",\n              PRICE,\n              COST,\n              QTY: TOTALQTY,\n              SIZE: \"\",\n              PACK: \"\",\n              REPLACEQTY: 1,\n              DEPARTMENT: DEPNAME,\n              CATEGORY: \"\",\n              SUBCATEGORY: \"\",\n              ISFOODSTAMP: 1,\n              ISWEIGHTED: 0,\n              ISTAXABLE: 1,\n              VENDORNAME: props.invoice,\n              VENDORCODE: itemNo,\n              VENDORCOST: \"\",\n              ISNEWITEM: isNew ? 1 : 0,\n              BUYASCASE,\n              CASEUNITS,\n              CASECOST,\n              COMPANYNAME: props.invoice,\n              PRODUCTCODE: itemNo,\n            })\n          );\n          console.log(\"updated pos data\", res);\n          const data = {\n            UPC,\n            SKU,\n            Cost: COST,\n            ItemName: ITEMNAME,\n            Price: PRICE,\n            TotalQty: TOTALQTY,\n          };\n          if (isNew) {\n            const response = await inventoryService.CreateDBProduct(data);\n            console.log(\"Created new product\", response);\n          } else {\n            const response = await inventoryService.UpdateDBProduct({\n              count: parseInt(product.qty) * parseInt(product.pieces),\n              UPC,\n            });\n            console.log(\"updated existing product\", response);\n          }\n\n          console.log(\"res from POS\", res);\n          return true;\n        } catch (error) {\n          console.log(error);\n          return null;\n        }\n      })\n    );\n    setLoader(false);\n  };\n  useEffect(() => {\n    async function getProducts() {\n      const items = await Promise.all(\n        newInventoryData.map(async (row) => {\n          try {\n            const res = await inventoryService.GetProductDetails(row.barcode);\n            const {\n              id,\n              name,\n              regular_price,\n              price,\n              sku,\n              slug,\n              stock_quantity,\n              sale_price,\n            } = res[0];\n            return {\n              id,\n              name,\n              regular_price,\n              price,\n              sku,\n              slug,\n              stock_quantity,\n              sale_price,\n              itemNo: row.itemNo,\n            };\n          } catch (error) {\n            // tempNotFoundProducts.push(row);\n            console.log(\"Couldn't fetch product from woodpress.\", row.itemNo);\n            return null;\n          }\n        })\n      );\n      setLoader(false);\n      setWooComProducts(items.filter((ele) => ele !== null));\n      // setNotFoundProducts(tempNotFoundProducts);\n    }\n\n    async function getPosProducts() {\n      setLoader(true);\n      let hasErrorOccured = false;\n      const items = await Promise.all(\n        newInventoryData\n          .filter((row) => !row.isForReview)\n          .map(async (row) => {\n            try {\n              const res = await inventoryService.GetPOSProductDetails(\n                row.barcode\n              );\n              console.log(\"fetched pos data\", res);\n              const { SKU, UPC, ITEMNAME, TOTALQTY, DEPNAME } = res[0];\n              return {\n                ...row,\n                COST: row.cp,\n                PRICE: row.sp,\n                SKU,\n                UPC,\n                ITEMNAME,\n                TOTALQTY:\n                  parseInt(row.qty) * parseInt(row.pieces) + parseInt(TOTALQTY),\n                itemNo: row.itemNo,\n                isNew: false,\n                BUYASCASE: 1,\n                CASEUNITS: row.pieces.toString(),\n                CASECOST: row.unitPrice.toString(),\n                DEPNAME,\n              };\n            } catch (error) {\n              hasErrorOccured = true;\n              return {\n                ...row,\n                COST: row.cp,\n                PRICE: row.sp,\n                SKU: row.posSku,\n                UPC: row.barcode,\n                ITEMNAME: row.description,\n                TOTALQTY: parseInt(row.qty) * parseInt(row.pieces),\n                itemNo: row.itemNo,\n                isNew: true,\n                BUYASCASE: 1,\n                CASEUNITS: row.pieces.toString(),\n                CASECOST: row.unitPrice.toString(),\n                DEPNAME: \"\",\n              };\n            }\n          })\n      );\n      if (hasErrorOccured) {\n        alert(\"Couldn't fetch some data from POS\");\n      }\n      setLoader(false);\n      setPosProducts(items.filter((ele) => ele !== null));\n    }\n    getProducts();\n    getPosProducts();\n  }, []);\n\n  if (redirect) {\n    return <Redirect to=\"/\" />;\n  }\n  if (loader) {\n    return <Spinner />;\n  }\n  return <div>{renderTableData()}</div>;\n};\n\nexport default UpdateInventory;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"DisplayData_main__3dZaC\",\"Filter\":\"DisplayData_Filter__1u_nu\",\"Apply\":\"DisplayData_Apply__GjHhP\",\"container\":\"DisplayData_container__2MkRT\",\"HeadStyle\":\"DisplayData_HeadStyle__PCmCu\",\"TableText\":\"DisplayData_TableText__hhvZ2\",\"records\":\"DisplayData_records__1Gi0X\",\"red\":\"DisplayData_red__24S03\",\"image\":\"DisplayData_image__3STA7\",\"button\":\"DisplayData_button__GadqQ\",\"tooltip\":\"DisplayData_tooltip__fXq_c\",\"tooltipIsReviewed\":\"DisplayData_tooltipIsReviewed__29ewR\",\"element\":\"DisplayData_element__3jIVP\",\"free\":\"DisplayData_free__1jKz9\",\"tablewrapper\":\"DisplayData_tablewrapper__AuFC6\",\"divRow\":\"DisplayData_divRow__1M_V6\"};"],"sourceRoot":""}