{"version":3,"sources":["services/InventoryService.js","services/Api.js","components/Queue/Queue.js"],"names":["InventoryService","productSKU","a","WordpressAxios","get","params","sku","response","data","productId","put","res","post","upc","itemName","Axios","appendURL","console","log","invoiceName","invoiceNo","date","itemNo","dateObj","Api","name","type","Queue","inventoryService","api","useState","queue","setQueue","loader","setLoader","categoryArray","setCategoryArray","showModal","setShowModal","setContent","setHeader","fuzzSuggestion","setFuzzSuggestion","modalLabel","setModalLabel","selectedItemNo","setSelectedItemNo","regular_price","description","short_description","categories","images","label","state","setState","handleChange","event","val","newState","target","value","o","id","src","push","toggleModal","useEffect","firebase","database","ref","on","snapshot","Object","values","c","getAllProducts","then","map","d","Set","catch","err","deleteAddedProducts","item","remove","filetered","filter","product","error","style","marginTop","className","q","i","padding","border","margin","marginBottom","onClick","header","prop","prototype","hasOwnProperty","call","cp","GetFuzz","result","element","obj","price","setContentExtra","show","onClose","closeButton","fluid","sm","htmlFor","onChange","newValue","options","getOptionLabel","option","paddingTop","renderInput","variant","size","caret","length","e","color","createProduct","alert","to"],"mappings":"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","file":"static/js/11.6d94be43.chunk.js","sourcesContent":["import { POSAxios, WordpressAxios } from \"./axios\";\nimport Axios from \"./axios\";\nconst appendURL = process.env.NODE_ENV === \"production\" ? \"/server\" : \"\";\n\nexport class InventoryService {\n  async GetProductDetails(productSKU) {\n    const response = await WordpressAxios.get(`/products/`, {\n      params: { sku: productSKU },\n    });\n    return response.data;\n  }\n\n  async UpdateProductDetails(productId, data) {\n    const res = await WordpressAxios.put(`/products/${productId}`, data);\n    return res.data;\n  }\n  async getAllProducts() {\n    const res = await WordpressAxios.get(\"products\");\n    return res.data;\n  }\n  async createProduct(data) {\n    const res = await WordpressAxios.post(\"products\", data);\n    return res.data;\n  }\n\n  async GetPOSProductDetails(upc, itemName = \"\") {\n    const response = await Axios.get(appendURL + \"/api/getPOSProduct\", {\n      params: { upc, itemName },\n    });\n    return response.data;\n  }\n  async UpdatePOSProducts(data) {\n    console.log(data);\n    const res = await Axios.post(\n      appendURL + \"/api/pos/Product/ManageItem\",\n      data\n    );\n    return res.data;\n  }\n  async SyncInventory() {\n    const res = await Axios.get(appendURL + \"/api/sync\");\n    console.log(res.data);\n    return res.data;\n  }\n  async UpdateProductFields(data) {\n    /**\n     ***** data format\n     * data = {invoiceName: \"chetak\", itemName:\"CAS 123\", value:{\"Description\": \"jnckwc\", \"Price\": \"44\"}}\n     */\n    //  console.log(data);\n    const res = await Axios.put(\n      appendURL + \"/api/invoice/product/update\",\n      data\n    );\n    return res.data;\n  }\n\n  async CreateNotFoundItems(data) {\n    /**\n     * data format\n     * {Item:String,Description:String,Quantity:String,Price:String,sku:String,Barcode:String,PosSKU:String,InvoiceName:String}\n     */\n    const res = await Axios.post(appendURL + \"/api/invoice/notfound\", data);\n    return res.data;\n  }\n\n  async CreateScanInvoiceData(data){\n    //console.log(\"IN INVENTORY SERVICE\");\n    //console.log(data);\n    const res = await Axios.post(appendURL + \"/api/invoice/scaninvoicedata\", data);\n    return res.data;\n  }\n  async UpdateInvoiceData(invoiceName, invoiceNo, date, itemNo) {\n    console.log(invoiceName);\n    console.log(invoiceNo);\n    console.log(itemNo);\n    console.log(date);\n    const res = await Axios.post(appendURL + \"/api/invoice/updateinvoicedata\", {params:{ invoiceName: invoiceName, invoiceNo: invoiceNo,date: date, itemNo: itemNo}});\n    return res.data;\n  }\n\n  async UpdateDBafterPosUpdate(data){\n    console.log(data);\n    const res = await Axios.post(appendURL + \"/api/invoice/updatedbafterposupdate\", data);\n    console.log(res);\n\n  }\n\n  async UpdateDBProduct(data) {\n    console.log(data);\n    const res = await Axios.put(appendURL + \"/api/invoice/pos/update\", data);\n    return res.data;\n  }\n  async CreateDBProduct(data) {\n    const res = await Axios.post(appendURL + \"/api/invoice/pos/create\", data);\n    return res.data;\n  }\n\n  async getInitialSyncedData(dateObj) {\n    console.log(\"In inventory service\");\n    console.log(dateObj);\n    const res = await Axios.get(appendURL + \"/api/invoice/pos\",dateObj);\n    console.log(res);\n    return res.data;\n  }\n}\n","import Axios from \"./axios\";\nconst appendURL=process.env.NODE_ENV===\"production\"?\"/server\":\"\";\nexport class Api {\n    async GetFuzz(name,type){\n      console.log(name,type);\n      var res=await Axios.get(appendURL+`/api/fuzzwuzz`,{params:{name:name,type:type}});\n      /* var res=await Axios.get(appendURL+`/api/fuzzwuzz`); */\n      console.log(res);\n      return res.data\n    }\n}\n\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { InventoryService } from \"../../services/InventoryService\";\nimport { Api } from \"../../services/Api\";\nimport {\n  CModal,\n  CModalBody,\n  CModalHeader,\n  CModalFooter,\n  CButton,\n  CContainer,\n  CCol,\n  CRow,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CDropdown,\n  CDropdownToggle,\n  CDropdownMenu,\n  CDropdownItem,\n} from \"@coreui/react\";\nimport firebase from \"../../firebase\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\nconst Queue = () => {\n  const inventoryService = new InventoryService();\n  const api = new Api();\n  const [queue, setQueue] = useState([]);\n  const [loader, setLoader] = useState(true);\n  const [categoryArray, setCategoryArray] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [content, setContent] = useState(null);\n  const [header, setHeader] = useState([]);\n  const [fuzzSuggestion, setFuzzSuggestion] = useState([]);\n  const [modalLabel, setModalLabel] = useState(\"\");\n  const [selectedItemNo, setSelectedItemNo] = useState(\"\")\n  const [state, setState] = useState({\n    name: \"\",\n    type: \"\",\n    regular_price: \"\",\n    description: \"\",\n    short_description: \"\",\n    categories: [],\n    images: [],\n    label: \"\",\n  });\n  const handleChange = (event, val) => {\n    let newState = { ...state };\n    if (event.target.name !== \"categories\" && event.target.name !== \"images\")\n      newState[event.target.name] = event.target.value;\n    else {\n      let o = null;\n      if (event.target.name === \"categories\") {\n        o = { id: val };\n        newState[event.target.name] = [o];\n      } else {\n        o = { src: val };\n        newState[event.target.name].push(o);\n      }\n    }\n    setState(newState);\n  };\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n  useEffect(() => {\n    const ref = firebase.database().ref(\"/queue\");\n    ref.on(\"value\", (snapshot) => {\n      if (snapshot.val()) {\n        const data = Object.values(snapshot.val());\n        setQueue(data);\n        setLoader(false);\n      }\n    });\n    let c = [];\n    inventoryService\n      .getAllProducts()\n      .then((res) => {\n        c = res.map((d) => d.categories[0].id);\n        setCategoryArray([...new Set(c)]);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n  const setContentExtra = (o) => {\n    setContent(o);\n    let header = [];\n    for (var prop in o) {\n      if (Object.prototype.hasOwnProperty.call(o, prop)) {\n        header.push(prop);\n      }\n    }\n    setHeader(header);\n    let newState = {\n      name: o.description,\n      type: \"simple\",\n      regular_price: o.cp,\n      description: o.description,\n      short_description: o.description,\n      categories: [],\n      images: [],\n      label: o.description,\n    };\n    setState(newState);\n    api\n      .GetFuzz(o.description, \"queue\")\n      .then((res) => {\n        const filter = res.result.map((element) => {\n          let obj = { ...element };\n          obj.label = `${element.name}- ${element.price}- ${element.upc}`;\n          return obj;\n        });\n        setFuzzSuggestion(filter);\n      })\n      .catch((err) => console.log(err));\n  };\n  const addProduct = () => {\n    console.log(selectedItemNo)\n    setShowModal(!showModal);\n    inventoryService\n      .createProduct(state)\n      .then(() => deleteAddedProducts(selectedItemNo))\n      .then((res) => alert(\"Successfully created a product\"))\n      .catch((err) => alert(\"Some error occuured in creating product\"));\n  };\n\n  const deleteAddedProducts = (item) => {\n    console.log('item to be deleted', item)\n    try {\n      firebase.database().ref(`/queue/${item}`).remove();\n      let temp = [...queue];\n      const filetered = temp.filter((product) => product.itemNo !== item)\n      setQueue(filetered);\n      return true;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  };\n  if (loader) {\n    return <Spinner />;\n  }\n\n  return (\n    <div style={{ marginTop: \"90px\" }}>\n      <div className=\"row\">\n        {queue.map((q, i) => (\n          <div className=\"col-md-4\" key={q.sku} style={{ padding: \"10px\" }}>\n            <div style={{ border: \"1px solid grey\", margin: \"10px\" }}>\n              <div className=\"text-center bg-secondary\">{q.itemNo}</div>\n              <br />\n              <div className=\"text-center\">{q.description}</div>\n              <br />\n              <div className=\"row\" style={{ marginBottom: \"10px\" }}>\n                <div className=\"col-md-9\"></div>\n                <div className=\"col-md-3\">\n                  <button\n                    className=\"btn btn-sm btn-primary\"\n                    onClick={() => {\n                      setShowModal(true);\n                      setModalLabel(q.description);\n                      setSelectedItemNo(q.itemNo)\n                      setContentExtra(q);\n                    }}\n                  >\n                    Details\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n      <CModal show={showModal} onClose={toggleModal}>\n        <CModalHeader closeButton>{modalLabel}</CModalHeader>\n        <CModalBody>\n          <CContainer fluid>\n            <CRow>\n              <CCol sm=\"12\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"name\">Name</CLabel>\n                  <Autocomplete\n                    value={state}\n                    onChange={(event, newValue) => {\n                      if (newValue) {\n                        let newState = { ...state };\n                        console.log(newValue);\n                        newState.name = newValue.name;\n                        newState.short_description = newValue.name;\n                        newState.description = newValue.name;\n                        newState.regular_price = newValue.price;\n                        newState.label = newValue.name;\n                        setState(newState);\n                      }\n                    }}\n                    id=\"combo-box\"\n                    options={fuzzSuggestion}\n                    getOptionLabel={(option) => option.label ?? option.name}\n                    style={{ paddingTop: 4 }}\n                    renderInput={(params) => (\n                      <TextField {...params} variant=\"outlined\" size=\"small\" />\n                    )}\n                  />\n                </CFormGroup>\n                <CRow>\n                  <CCol sm=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"type\">Type</CLabel>\n                      <CInput\n                        type=\"text\"\n                        name=\"type\"\n                        value={state.type}\n                        onChange={(event) => handleChange(event, \"\")}\n                      />\n                    </CFormGroup>\n                  </CCol>\n                  <CCol sm=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"regular_price\">Regular Price</CLabel>\n                      <CInput\n                        type=\"text\"\n                        name=\"regular_price\"\n                        value={state.regular_price}\n                        onChange={(event) => handleChange(event, \"\")}\n                      />\n                    </CFormGroup>\n                  </CCol>\n                </CRow>\n                <CFormGroup>\n                  <CLabel htmlFor=\"description\">Description</CLabel>\n                  <CInput\n                    type=\"text\"\n                    name=\"description\"\n                    value={state.description}\n                    onChange={(event) => handleChange(event, \"\")}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"short_description\">Short Description</CLabel>\n                  <CInput\n                    type=\"text\"\n                    name=\"short_description\"\n                    value={state.short_description}\n                    onChange={(event) => handleChange(event, \"\")}\n                  />\n                </CFormGroup>\n                <CRow>\n                  <CCol sm=\"3\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"categories\">Category</CLabel>\n                      <CDropdown name=\"categories\" className=\"mt-2\">\n                        <CDropdownToggle caret>\n                          {state.categories.length === 0\n                            ? \"Select a Category\"\n                            : state.categories[0].id}\n                        </CDropdownToggle>\n                        <CDropdownMenu>\n                          {categoryArray.map((e, i) => (\n                            <CDropdownItem\n                              key={i}\n                              name=\"categories\"\n                              onClick={(event) => handleChange(event, e)}\n                            >\n                              {e}\n                            </CDropdownItem>\n                          ))}\n                        </CDropdownMenu>\n                      </CDropdown>\n                    </CFormGroup>\n                  </CCol>\n                  <CCol sm=\"9\"></CCol>\n                </CRow>\n              </CCol>\n            </CRow>\n          </CContainer>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"primary\" onClick={() => addProduct()}>\n            Add\n          </CButton>{\" \"}\n          <CButton color=\"secondary\" onClick={toggleModal}>\n            Cancel\n          </CButton>\n        </CModalFooter>\n      </CModal>\n      <div className=\"row\" style={{ marginTop: \"40px\" }}>\n        <div className=\"col-md-2\">\n          <Link className=\"btn btn-lg btn-info\" to=\"/invoice\">\n            Back\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Queue;\n"],"sourceRoot":""}