{"version":3,"sources":["../node_modules/@material-ui/core/esm/utils/requirePropFactory.js","../node_modules/@material-ui/core/esm/utils/deprecatedPropType.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/@babel/runtime/helpers/interopRequireWildcard.js","../node_modules/@material-ui/icons/utils/createSvgIcon.js","../node_modules/@material-ui/core/esm/utils/unsupportedProp.js","../node_modules/@material-ui/icons/InfoOutlined.js","../node_modules/@material-ui/icons/Cancel.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@material-ui/core/esm/styles/makeStyles.js","../node_modules/@material-ui/icons/AddCircle.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js","../../index.ts","components/SaveInvoiceData/SaveInvoiceData.js"],"names":["requirePropFactory","componentNameInError","deprecatedPropType","validator","reason","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","module","exports","obj","__esModule","_typeof","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","enumerable","_utils","createSvgIcon","require","unsupportedProp","props","propName","componentName","location","propFullName","_interopRequireDefault","_interopRequireWildcard","default","React","_default","createElement","d","_objectWithoutProperties","source","excluded","target","sourceKeys","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","makeStyles","stylesOrCreator","options","arguments","undefined","makeStylesWithoutDefault","_extends","defaultTheme","constructor","SIZE","CircularProgress","ref","classes","className","_props$color","color","_props$disableShrink","disableShrink","_props$size","size","style","_props$thickness","thickness","_props$value","_props$variant","variant","other","circleStyle","rootStyle","rootProps","circumference","Math","PI","strokeDasharray","toFixed","round","strokeDashoffset","concat","transform","clsx","root","capitalize","determinate","indeterminate","static","width","height","role","svg","viewBox","circle","circleDisableShrink","circleDeterminate","circleIndeterminate","circleStatic","cx","cy","r","fill","strokeWidth","withStyles","theme","display","transition","transitions","create","animation","colorPrimary","palette","primary","main","colorSecondary","secondary","stroke","transformOrigin","name","flip","registerVersion","useStyles","paddingTop","container","maxHeight","marginTop","table","fontWeight","fontSize","backgroundColor","cursor","emptyColumnList","SaveInvoiceData","tesseractService","TesseractService","useState","invoice","setInvoice","dropdownLabel","dropdownOptions","inv","setInv","num","setNum","day","setDay","apiLoader","setApiLoader","setHicksvilleData","Api","tableData","setTableData","emptyColumn","setEmptyColumn","productDetails","setProductDetails","pushToInventory","setPushToInventory","inventoryData","setInventoryData","itemNoDropdown","setItemNoDropdown","loader","setLoader","reviewItems","showPosIndex","setShowPosIndex","inventoryService","InventoryService","showModal","setShowModal","setStateUpdated","setCostInc","setCostDec","unitCost","setUnitCost","setIsUpdated","setUpdateIndex","posProducts","wooComProducts","singleItemData","notFounds","setNotFounds","unitsInCase","setUnitsInCase","price","setPrice","setRedState","updateSku","setOptions","detailsModal","setDetailsModal","invoiceOptions","setInvoiceOptions","details","setDetails","detailsIndex","setDetailsIndex","userEmail","setUserEmail","todayDate","setTodayDate","openInvoice","setOpenInvoice","setFetchingOptions","setDropwdownIndex","invoiceHeader","header","item","quantity","description","pos","barcode","posSku","department","unitPrice","showPosState","setShowPosState","getProducts","a","console","log","Promise","all","map","row","GetProductDetails","res","id","regular_price","sku","slug","stock_quantity","sale_price","itemNo","items","getPosProducts","hasErrorOccured","GetPOSProductDetails","alert","SKU","UPC","ITEMNAME","TOTALQTY","DEPNAME","COST","cp","PRICE","sp","parseInt","qty","pieces","isNew","BUYASCASE","CASEUNITS","toString","CASECOST","pushToWoocom","products","product","UpdateProductDetails","pushToPOS","UpdatePOSProducts","JSON","stringify","DESCRIPTION","QTY","PACK","REPLACEQTY","DEPARTMENT","CATEGORY","SUBCATEGORY","ISFOODSTAMP","ISWEIGHTED","ISTAXABLE","ISNEWITEM","COMPANYNAME","PRODUCTCODE","data","Cost","ItemName","Price","TotalQty","CreateDBProduct","response","UpdateDBProduct","count","pushInventoryDetails2","element","markup","duplicates","push","lastIndexOf","tempData","values","filter","ele","forEach","index","temp","val","updatedWoocomProducts","wooIndex","findIndex","wooProduct","window","pushSingleItemToInventory","notFoundItems","tempTable","isUpdated","includes","show","rowData","Item","Description","Quantity","Barcode","PosSKU","InvoiceName","CreateNotFoundItems","error","priceIncreasedProducts","priceIncrease","invoiceName","itemName","UpdateProductFields","UpdateInvoiceData","data1","cost","UpdateDBafterPosUpdate","setProductsInTable","saveDetails","toggleModal","getInvoices","getSavedInvoices","reverseUpdate","result","ok","reversePOSUpdate","linkingCorrect","statusText","logState","PosName","posName","ItemCode","LinkingDate","PersonName","Size","UnitCost","UnitPrice","sellingPrice","InvoiceNo","InvoiceDate","Department","InvoiceUnitCost","CostIncrease","CostDecrease","CostSame","Unidentified","UnidentifiedLog","linkManually","linkManuallyLog","logResult","fetchSavedData","no","date","GetSavedInvoiceData","InvoiceData","then","ocrData","invoiceData","toUpperCase","convertToUpperCase","trim","POS","isReviewed","SellerCost","SellingPrice","Details","LinkingCorrect","parseFloat","extendedPrice","catch","x","hicksvilleDropdownNew","event","isNaN","getHicksvilleData","productsString","split","newData","upc","altupc1","altupc2","vintage","totalQty","pricea","priceb","pricec","salePrice","pack","label","updateItem","ocrCost","Error","finally","costChange","b","c","generateLog","addRow","tempTableData","showPOS","setProductsInTableNew","SavedDate","SavedInvoiceNo","pushInventoryDetails","mergeDuplicates","handleChange","splice","arr","Map","newArr","useEffect","curDate","Date","getFullYear","getMonth","getDate","firebase","auth","onAuthStateChanged","user","email","Spinner","marginLeft","Paper","Grid","Autocomplete","onChange","newValue","getOptionLabel","option","autoHighlight","renderInput","params","TextField","border","padding","textAlign","textDecoration","align","onClick","UpdateInventory","newInventoryData","goBack","rows","isEmpty","Set","isFree","styles","red","free","opacity","IconButton","tooltip","type","aria-label","tooltipIsReviewed","disabled","loading","onInputChange","setTimeout","newState","Button","text","confirm","deleteRow","position","top","background","divRow","reload","renderTableData","invoiceList","margin","renderInvoiceTable","onClose","closeButton","fluid","sm","htmlFor","TextareaAutosize","placeholder"],"mappings":"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","file":"static/js/6.083709dd.chunk.js","sourcesContent":["export default function requirePropFactory(componentNameInError) {\n  if (process.env.NODE_ENV === 'production') {\n    return function () {\n      return null;\n    };\n  }\n\n  var requireProp = function requireProp(requiredProp) {\n    return function (props, propName, componentName, location, propFullName) {\n      var propFullNameSafe = propFullName || propName;\n\n      if (typeof props[propName] !== 'undefined' && !props[requiredProp]) {\n        return new Error(\"The prop `\".concat(propFullNameSafe, \"` of \") + \"`\".concat(componentNameInError, \"` must be used on `\").concat(requiredProp, \"`.\"));\n      }\n\n      return null;\n    };\n  };\n\n  return requireProp;\n}","export default function deprecatedPropType(validator, reason) {\n  if (process.env.NODE_ENV === 'production') {\n    return function () {\n      return null;\n    };\n  }\n\n  return function (props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    if (typeof props[propName] !== 'undefined') {\n      return new Error(\"The \".concat(location, \" `\").concat(propFullNameSafe, \"` of \") + \"`\".concat(componentNameSafe, \"` is deprecated. \").concat(reason));\n    }\n\n    return null;\n  };\n}","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var _typeof = require(\"@babel/runtime/helpers/typeof\")[\"default\"];\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nmodule.exports = _interopRequireWildcard;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.createSvgIcon;\n  }\n});\n\nvar _utils = require(\"@material-ui/core/utils\");","export default function unsupportedProp(props, propName, componentName, location, propFullName) {\n  if (process.env.NODE_ENV === 'production') {\n    return null;\n  }\n\n  var propFullNameSafe = propFullName || propName;\n\n  if (typeof props[propName] !== 'undefined') {\n    return new Error(\"The prop `\".concat(propFullNameSafe, \"` is not supported. Please remove it.\"));\n  }\n\n  return null;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 7h2v2h-2zm0 4h2v6h-2zm1-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'InfoOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\n\nexports.default = _default;","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddCircle');\n\nexports.default = _default;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar SIZE = 44;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block'\n    },\n\n    /* Styles applied to the root element if `variant=\"static\"`. */\n    static: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: '$circular-rotate 1.4s linear infinite'\n    },\n\n    /* Styles applied to the root element if `variant=\"determinate\"`. */\n    determinate: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {\n      display: 'block' // Keeps the progress centered\n\n    },\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n    circleStatic: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: '$circular-dash 1.4s ease-in-out infinite',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"determinate\"`. */\n    circleDeterminate: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n    '@keyframes circular-rotate': {\n      '0%': {\n        // Fix IE 11 wobbly\n        transformOrigin: '50% 50%'\n      },\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], {\n      'determinate': classes.determinate,\n      'indeterminate': classes.indeterminate,\n      'static': classes.static\n    }[variant]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), /*#__PURE__*/React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'determinate': classes.circleDeterminate,\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, function (props) {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: chainPropTypes(PropTypes.oneOf(['determinate', 'indeterminate', 'static']), function (props) {\n    var variant = props.variant;\n\n    if (variant === 'static') {\n      throw new Error('Material-UI: `variant=\"static\"` was deprecated. Use `variant=\"determinate\"` instead.');\n    }\n\n    return null;\n  })\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport { name, version } from '../package.json';\n\nfirebase.registerVersion(name, version, 'app');\n\nexport default firebase;\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { dropdownOptions } from \"../../utils/invoiceList\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TesseractService } from \"../../services/TesseractService\";\n\nimport { InventoryService } from \"../../services/InventoryService\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport { Api } from \"../../services/Api\";\nimport HicksData from \"../DisplayData/Hicksville.json\";\nimport { CContainer, CModalHeader, CCol, CFormGroup, CInput, CButton, CLabel, CModal, CModalBody, CModalFooter, CRow } from \"@coreui/react\";\nimport Button from \"../../UI/Button\";\nimport styles from \"../DisplayData/DisplayData.module.css\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport UpdateInventory from \"../Update/UpdateInventory\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport  CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport Cancel from \"@material-ui/icons/Cancel\";\n// import CircularProgress from '@material/circular-progress';\n// import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n// import Loading from 'react-loader-spinner';\n\n\nconst useStyles = makeStyles({\n        root: {\n        width: \"100%\",\n        paddingTop: 50,\n        },\n        container: {\n            maxHeight: \"80vh\",\n            marginTop: 10,\n          },\n          table: {\n            \"& thead th\": {\n              fontWeight: \"600\",\n              fontSize: 20,\n              backgroundColor: \"grey\",\n            },\n            \"& tbody td\": {\n              fontWeight: \"300\",\n            },\n            \"& tbody tr:hover\": {\n              backgroundColor: \"#fffbf2\",\n              cursor: \"pointer\",\n            },\n          },\n    });\nlet emptyColumnList = [];\n\nconst SaveInvoiceData = () => {\n\n    const tesseractService = new TesseractService();\n    const classes = useStyles();\n    const [date, setDate] = useState(\"\");\n    const [invoice, setInvoice] = useState({});\n    const [invoiceNo, setInvoiceNo] = useState(\"\");\n    const numOfCollections = dropdownOptions.length;\n    const dropdownLabel = \"Select Invoice(\"+   numOfCollections   + \")\";\n    const [inv, setInv] = useState(\"\");\n    const [ num, setNum] = useState(\"\");\n    const [day, setDay] = useState(\"\");\n    const [apiLoader, setApiLoader] = useState(false);\n\n    \n\n    //Following for display data functionalities.\n    const [hicksvilleData, setHicksvilleData] = useState([]);\n    let saveInvoiceFlag  = 1;\n    const api = new Api();\n    const [tableData, setTableData] = useState([]);\n    const [emptyColumn, setEmptyColumn] = useState([]);\n    const [productDetails, setProductDetails] = useState([]);\n    const [pushToInventory, setPushToInventory] = useState(false);\n    const [inventoryData, setInventoryData] = useState([]);\n    const [itemNoDropdown, setItemNoDropdown] = useState([]);\n    const [loader, setLoader] = useState(false);\n    const [reviewItems, setReviewItems] = useState([]);\n    const [showPosIndex, setShowPosIndex] = useState(-1);\n    const inventoryService = new InventoryService();\n    const [showModal, setShowModal] = useState(false);\n    const [stateUpdated, setStateUpdated] = useState(\"false\");\n    const [costInc, setCostInc] = useState(\"false\");\n    const [costDec, setCostDec] = useState(\"false\");\n    const [unitCost, setUnitCost] = useState(\"\");\n    const [isUpdated, setIsUpdated] = useState(\"false\");\n    const [updateIndex, setUpdateIndex] = useState(-1);\n    let posProducts = []\n    let wooComProducts = [];\n    let singleItemData = [];\n    let itemNo = \"\";\n    // const [posProducts, setPosProducts] = useState([]);\n\n    const [notFounds, setNotFounds] = useState(\"false\");\n    const [unitsInCase, setUnitsInCase] = useState(\"\");\n    const [price, setPrice] = useState(\"\");\n    const [redState, setRedState] = useState(\"true\");\n    let updateSku = \"\";\n    const [searchVal, setSearchVal] = useState(\"\");\n    const [options, setOptions] = useState([]);\n    const [detailsModal, setDetailsModal] = useState(false);\n    const [invoiceOptions, setInvoiceOptions] = useState([]);\n    const [details, setDetails] = useState(\"\");\n    const [detailsIndex, setDetailsIndex] = useState(-1);\n    const [userEmail, setUserEmail] = useState(\"\");\n    const [todayDate, setTodayDate] = useState(\"\");\n    const [openInvoice, setOpenInvoice] = useState(false);\n    const[dropdownLoader, setDropdownLoader] = useState(false);\n    const [fetchingOptions, setFetchingOptions] = useState(false);\n    const [dropdownIndex, setDropwdownIndex] = useState(-1);\n\n    const invoiceHeader = [\n      \"Sr.No.\",\n      \"Invoice\",\n      \"Invoice No.\",\n      \"Invoice Date\",\n      \"Open Invoice\"\n    ]\n\n    \n    const header = [\n        \"Serial No.\",\n        \"Add Details\",\n        \"Barcode\",\n        \"POS SKU\",\n        \"Qty Shipped\",\n        \"ITEM NO\",\n        \"Link Product\",\n        \n        \"DESCRIPTION\",\n        \"Units in  Case\",\n        \"Case cost\",\n        \"Extended Price\",\n       \n        \"Unit Cost \",\n        \"Unit Price\",\n        \"Mark up (%)\",\n        \"Tick to Delete\",\n        \"Update POS\",\n        \"Reverse POS Update\",\n        \"NO LINKING\",\n        \"Serial No.(2)\"\n    ];\n\n    const [showPosState, setShowPosState] = useState({\n        item: \"\",\n        quantity: \"\",\n        description: \"\",\n        price: \"\",\n        pos: \"\",\n        barcode: \"\",\n        posSku: \"\",\n        invoice: \"\",\n        size: \"\",\n        department: \"\",\n        unitCost: \"\",\n        unitPrice: \"\",\n    });\n\n//***************  INDIVIDUAL ITEM UPDATE FUNCTIONALITY STARTS*******************************************.\n\n    //Function to fetch wooCom Prpducts.\n    async function getProducts() {\n      console.log(\"IN WOOCOM PRODUCTS\");\n      const items = await Promise.all(\n        singleItemData.map(async (row) => {\n          console.log(row.barcode);\n          try {\n            const res = await inventoryService.GetProductDetails(row.barcode);\n            console.log(res);\n            const {\n              id,\n              name,\n              regular_price,\n              price,\n              sku,\n              slug,\n              stock_quantity,\n              sale_price,\n            } = res[0];\n            return {\n              id,\n              name,\n              regular_price,\n              price,\n              sku,\n              slug,\n              stock_quantity,\n              sale_price,\n              itemNo: row.itemNo,\n            };\n          } catch (error) {\n            // tempNotFoundProducts.push(row);\n            console.log(\"Couldn't fetch product from woodpress.\", row.itemNo);\n            return null;\n          }\n        })\n      );\n      setLoader(false);\n      console.log(items);\n      wooComProducts = items;\n      // setWooComProducts(items.filter((ele) => ele !== null));\n      // setNotFoundProducts(tempNotFoundProducts);\n    }\n\n    //function to fetch POS products.\n    async function getPosProducts() {\n      console.log(\"IN POS PRODUCTS\");\n      setLoader(true);\n      let hasErrorOccured = false;\n      const items = await Promise.all(\n        singleItemData\n          .map(async (row) => {\n            console.log(row.barcode);\n            try {\n              const res = await inventoryService.GetPOSProductDetails(\n                row.barcode\n              );\n              console.log(res);\n              if(!Array.isArray(res)){\n                alert(\"API not working\");\n                return;\n              }\n              console.log(\"fetched pos data\", res);\n              const { SKU, UPC, ITEMNAME, TOTALQTY, DEPNAME } = res[0];\n              console.log(SKU);\n              console.log(updateSku);\n              if(SKU == updateSku){\n                console.log(SKU);\n                console.log(updateSku);\n                return {\n                  ...row,\n                  COST: row.cp,\n                  PRICE: row.sp,\n                  SKU,\n                  UPC,\n                  ITEMNAME,\n                  TOTALQTY:\n                    parseInt(row.qty) * parseInt(row.pieces) + parseInt(TOTALQTY),\n                  itemNo: row.itemNo,\n                  isNew: false,\n                  BUYASCASE: 1,\n                  CASEUNITS: row.pieces.toString(),\n                  CASECOST: row.unitPrice.toString(),\n                  DEPNAME,\n                };\n              } else {\n                alert(\"SKU mismatch!!\");\n              }\n\n              \n              \n            } catch (error) {\n              hasErrorOccured = true;\n              return {\n                ...row,\n                COST: row.cp,\n                PRICE: row.sp,\n                SKU: row.posSku,\n                UPC: row.barcode,\n                ITEMNAME: row.description,\n                TOTALQTY: parseInt(row.qty) * parseInt(row.pieces),\n                itemNo: row.itemNo,\n                isNew: true,\n                BUYASCASE: 1,\n                CASEUNITS: row.pieces.toString(),\n                CASECOST: row.unitPrice.toString(),\n                DEPNAME: \"\",\n              };\n            }\n          })\n      );\n      if (hasErrorOccured) {\n        alert(\"Couldn't fetch some data from POS\");\n      }\n      setLoader(false);\n      console.log(items);\n      posProducts = items;\n      console.log(posProducts);\n      // setPosProducts(items.filter((ele) => ele !== null));\n    }\n\n    //PUSH TO WOOCOM.\n    const pushToWoocom = async (products) => {\n      setLoader(true);\n      const responses = await Promise.all(\n        products.map(async (product) => {\n          try {\n            const res = await inventoryService.UpdateProductDetails(product.id, {\n              regular_price: product.regular_price,\n              stock_quantity: product.stock_quantity,\n            });\n            const { id, name, regular_price, stock_quantity } = res;\n            return {\n              id,\n              name,\n              regular_price,\n              stock_quantity,\n              itemNo: product.itemNo,\n            };\n          } catch (error) {\n            console.log(error);\n            alert(\"Couldn't update product on website.\");\n            return null;\n          }\n        })\n      );\n      setLoader(false);\n    };\n\n     //PUSH TO POS.\n     const pushToPOS = async (products) => {\n      setLoader(true);\n      console.log(products);\n      const responses = await Promise.all(\n        products.map(async (product) => {\n          try {\n            const {\n              COST,\n              PRICE,\n              UPC,\n              TOTALQTY,\n              isNew,\n              ITEMNAME,\n              BUYASCASE,\n              CASEUNITS,\n              CASECOST,\n              SKU,\n              DEPNAME,\n              itemNo\n            } = product;\n            const res = await inventoryService.UpdatePOSProducts(\n              JSON.stringify({\n                UPC,\n                ITEMNAME,\n                DESCRIPTION: \"\",\n                PRICE,\n                COST,\n                QTY: TOTALQTY,\n                SIZE: \"\",\n                PACK: \"\",\n                REPLACEQTY: 1,\n                DEPARTMENT: DEPNAME,\n                CATEGORY: \"\",\n                SUBCATEGORY: \"\",\n                ISFOODSTAMP: 1,\n                ISWEIGHTED: 0,\n                ISTAXABLE: 1,\n                // VENDORNAME: invoice.slug,\n                // VENDORCODE: itemNo,\n                // VENDORCOST: \"\",\n                ISNEWITEM: isNew ? 1 : 0,\n                BUYASCASE,\n                CASEUNITS,\n                CASECOST,\n                COMPANYNAME: invoice.slug,\n                PRODUCTCODE: itemNo,\n              })\n            );\n            console.log(\"updated pos data\", res);\n            const data = {\n              UPC,\n              SKU,\n              Cost: COST,\n              ItemName: ITEMNAME,\n              Price: PRICE,\n              TotalQty: TOTALQTY,\n            };\n            //not needed as of now, parikshit.\n            if (isNew) {\n              const response = await inventoryService.CreateDBProduct(data);\n              console.log(\"Created new product\", response);\n            } else {\n              const response = await inventoryService.UpdateDBProduct({\n                count: parseInt(product.qty) * parseInt(product.pieces),\n                UPC,\n              });\n              console.log(\"updated existing product\", response);\n            }\n  \n            console.log(\"res from POS\", res);\n            return true;\n          } catch (error) {\n            console.log(error);\n            return null;\n          }\n        })\n      );\n      setLoader(false);\n    };\n\n    const pushInventoryDetails2 = async () => {\n      console.log(posProducts);\n      setLoader(true);\n      let data = singleItemData.map((element) => {\n        return {\n          item: element.itemNo,\n          qty: parseInt(element.qty) * parseInt(element.pieces),\n          cp: element.unitPrice,\n          markup: element.markup,\n          sp: element.sp,\n          description: element.description,\n        };\n      });\n  \n      var duplicates = {};\n      for (var i = 0; i < data.length; i++) {\n        if (duplicates.hasOwnProperty(data[i].item)) {\n          duplicates[data[i].item].push(i);\n        } else if (data.lastIndexOf(data[i].item) !== i) {\n          duplicates[data[i].item] = [i];\n        }\n      }\n  \n      let tempData = Object.values(duplicates).filter((ele) => ele.length > 1);\n      if (tempData.length > 0) {\n        tempData.forEach((index) => {\n          let temp = 0;\n          index.forEach((val) => {\n            if (data[val]) {\n              // console.log(\"data[val]\", data[val]);\n              temp += data[val].qty;\n              if (temp - data[val].qty !== 0) {\n                data[val] = null;\n              }\n            }\n          });\n          data[index[0]].qty = temp;\n        });\n      }\n      data = data.filter((ele) => ele !== null);\n  \n      /**\n       * add the fileds of  data from the woocom & ocr\n      */\n     console.log(wooComProducts.length);\n      if(wooComProducts[0] != null){\n        let updatedWoocomProducts = data\n          .map((product, index) => {\n            /**find index of the item in fetched woocom product list */\n            const wooIndex = wooComProducts.findIndex(\n              (wooProduct) => product.item === wooProduct.itemNo\n            );\n            if (wooIndex !== -1) {\n              /**get the qty & other fileds of the woocom product */\n              let { id, stock_quantity } = wooComProducts[wooIndex];\n              stock_quantity += product.qty;\n              const regular_price = product.sp;\n              return { id, regular_price, stock_quantity, itemNo: product.item };\n            }\n            return null;\n          })\n          .filter((item) => item !== null);\n\n        console.log(updatedWoocomProducts); \n        await pushToWoocom(updatedWoocomProducts);\n        }\n      await pushToPOS(posProducts);\n  \n      setLoader(false);\n      // if (itemsNotPushed.length === 0) {\n      window.alert(\"Inventory updated successfully\");\n      // setRedirect(true);\n      // } else {\n      //   window.alert(\"Inventory not updated\");\n      // }\n    };\n\n    function toConsoleState() {\n      console.log(wooComProducts);\n      console.log(posProducts);\n      console.log(singleItemData);\n    }\n\n  const pushSingleItemToInventory = async (index) =>{\n    setApiLoader(true);\n    console.log(index);\t\n    setShowPosIndex(-1);\n    \n    \n    console.log(tableData);\n    const product = [];\n    const notFoundItems = emptyColumn.map((i) => tableData[i]);\n    const tempTable = [];\n    product.push(tableData[index]);\n    console.log(product);\n    product.isUpdated = \"true\";\n    itemNo = product.itemNo;\n    \n    product.forEach((element, index) => {\n      if (\n        !emptyColumn.includes(index) &&\n        element.show === true &&\n        element[\"isForReview\"] != true\n      ) {\n        let rowData = { index: index + 1, ...element };\n        tempTable.push(rowData);\n      }\n    });\n    // console.log(\"notFoundItems\", notFoundItems);\n    console.log(tempTable);\n\n    if (emptyColumn.length !== 0) {\n      /**api to push  to not found list*/\n      setLoader(true);\n      const responses = await Promise.all(\n        notFoundItems.map(async (product) => {\n          try {\n            const data = {\n              Item: product.itemNo,\n              Description: product.description,\n              Quantity: product.qty,\n              Price: product.unitPrice,\n              sku: product.sku,\n              Barcode: product.barcode,\n              PosSKU: product.posSku,\n              InvoiceName: invoice.slug,\n            };\n            await inventoryService.CreateNotFoundItems(data);\n            return true;\n          } catch (error) {\n            console.log(\n              \"Couldn't create not found product\",\n              product.description,\n              { error }\n            );\n            alert(\"Couldn't create product on website.\");\n            return null;\n          }\n        })\n      );\n      setLoader(false);\n    }\n    const priceIncreasedProducts = tempTable.filter(\n      (product) => product.priceIncrease !== 0\n    );\n    setLoader(true);\n    const res = await Promise.all(\n      priceIncreasedProducts.map(async (product) => {\n        try {\n          const data = {\n            invoiceName: invoice.slug,\n            itemName: product.itemNo,\n            value: { Price: product.unitPrice },\n          };\n          console.log(data)\n          await inventoryService.UpdateProductFields(data);\n          \n          \n        } catch (error) {\n          console.log(`couldn't update price for product ${product.itemNo}`);\n        }\n      })\n    );\n    setLoader(false);\n    // console.log(tempTable);\n    tempTable[0].isUpdated = \"true\";\n    singleItemData = tempTable;\n    // setPushToInventory(true);\n    console.log(singleItemData);\n    \n    updateSku = singleItemData[0].posSku;\n\n\n    await getProducts();\n    await getPosProducts();\n    console.log(posProducts);\n    if(posProducts[0] != undefined ){\n      await pushInventoryDetails2();\n      toConsoleState();\n      setIsUpdated(\"true\");\n      setUpdateIndex(index);\n      console.log(singleItemData);\n      console.log(singleItemData.itemNo);\n      await inventoryService.UpdateInvoiceData(inv, num, day, singleItemData[0].itemNo); \n\n      //Update unit cost n price in db, after update POS.\n      let data1 = {\n        cost: singleItemData[0].cp,\n        price: singleItemData[0].sp,\n        item: singleItemData[0].itemNo,\n        invoice: invoice.slug\n      }\n      console.log(data1)\n      await inventoryService.UpdateDBafterPosUpdate(data1);\n      setProductsInTable();\n    } else {\n      alert(\"POS not updated!!\");\n      setProductsInTable();\n    }\n    setApiLoader(false);\n\n    \n    \n  }\n//***************************INDIVIDUAL ITEM UPDATE FUNCTIONALITY ENDS*****************************************.\n\n  const saveDetails = async () => {\n    console.log(detailsIndex);\n    console.log(details);\n    const item = tableData[detailsIndex];\n    console.log(item);\n    const data = {\n      invoice: invoice.slug,\n      itemNo: item.itemNo,\n      details: details\n    }\n    const res = await inventoryService.saveDetails(data);\n    console.log(res);\n    if(res === \"s\"){\n      alert(\"Details added successfully\");\n      setDetails(\"\");\n      setDetailsIndex(-1);\n      toggleModal(\"details\");\n      setProductsInTable();\n    }else {\n      alert(\"Some error Occured.\");\n      setDetailsIndex(-1);\n      setDetails(\"\");\n      toggleModal(\"details\");\n    }\n\n  }\n\n  const getInvoices = async () => {\n    setApiLoader(true);\n    setOpenInvoice(false);\n    console.log(invoice);\n    const res = await inventoryService.getSavedInvoices(invoice);\n    console.log(res);\n    // let array = [];\n    // res.map(item => {\n    //   array.push(item.SavedInvoiceNo);\n    // })\n    console.log(res);\n    setInvoiceOptions(res);\n    \n    setApiLoader(false);\n\n  }\n\n    const reverseUpdate = async(index) => {\n      console.log(index);\n      console.log(tableData);\n      console.log(tableData[index]);\n      let item = tableData[index];\n      let data = {\n        invoice: invoice.slug,\n        itemNo: item.itemNo,\n      }\n      const result = await inventoryService.reverseUpdate(data);\n      console.log(result);\n      if(result.ok == 1){\n        setProductsInTable();\n      }else {\n        alert(\"Some error occured in updation\");\n      }\n    }\n    \n\n    const reversePOSUpdate = async(index) => {\n      console.log(index);\n      console.log(tableData);\n      console.log(tableData[index]);\n      let item = tableData[index];\n      const result = await inventoryService.reversePOSUpdate(inv, num, day, item.itemNo);\n      if(result.ok == 1){\n        setProductsInTable();\n      }else {\n        alert(\"Some error occured in updation\");\n      }\n\n    }\n\n    const linkingCorrect = async (index) => {\n      console.log(index);\n      console.log(tableData);\n      console.log(tableData[index]);\n      let item = tableData[index];\n      console.log(item)\n      let data = {\n        invoice: inv,\n        itemNo: item.itemNo,\n      }\n      console.log(data);\n      const res = await inventoryService.linkingCorrect(data);\n      console.log(res);\n      if(res.statusText == \"OK\") {\n        alert(\"SUCCESS\");\n        let logState = {\n          Description: item.description,\n          PosName: item.posName,\n          SKU: item.posSku,\n          Barcode: item.barcode,\n          InvoiceName: inv,\n          ItemCode: item.itemNo,\n          LinkingDate: todayDate,\n          PersonName: userEmail,\n          Size: item.size,\n          UnitCost: item.cost,\n          UnitPrice: item.sellingPrice,\n          InvoiceNo: num,\n          InvoiceDate: day,\n          Department: item.department,\n          InvoiceUnitCost: item.cp,\n          CostIncrease: item.priceIncrease == 1 ? \"YES\" : \"\",\n          CostDecrease: item.priceIncrease == -1 ? \"YES\" : \"\",\n          CostSame: item.priceIncrease == 0 ? \"YES\" : \"\",\n          Unidentified: \"YES\"  \n        }\n        const res = await inventoryService.UnidentifiedLog(logState);\n        console.log(res);\n\n\n        setProductsInTable();\n      }else {\n        alert(\"Some error occured\");\n        setProductsInTable();\n      }\n    }\n\n    const linkManually = async(index) => {\n      console.log(index);\n      console.log(tableData);\n      console.log(tableData[index]);\n      let item = tableData[index];\n      console.log(item)\n      let data = {\n        invoice: inv,\n        itemNo: item.itemNo,\n      }\n      const result = await inventoryService.linkManually(data);\n      console.log(result);\n\n      let logState = {\n        Description: item.description,\n        PosName: item.posName,\n        SKU: item.posSku,\n        Barcode: item.barcode,\n        InvoiceName: inv,\n        ItemCode: item.itemNo,\n        LinkingDate: todayDate,\n        PersonName: userEmail,\n        Size: item.size,\n        UnitCost: item.cost,\n        UnitPrice: item.sellingPrice,\n        InvoiceNo: num,\n        InvoiceDate: day,\n        Department: item.department,\n        InvoiceUnitCost: item.cp,\n        CostIncrease: item.priceIncrease == 1 ? \"YES\" : \"\",\n        CostDecrease: item.priceIncrease == -1 ? \"YES\" : \"\",\n        CostSame: item.priceIncrease == 0 ? \"YES\" : \"\"\n\n      }\n\n      console.log(logState);\n      const logResult = await inventoryService.linkManuallyLog(logState);\n      console.log(logResult);\n      \n      \n      if(result.statusText == \"OK\"){\n        setProductsInTable();\n        // setProductsInTableNew(inv, num, day);\n      }else {\n        alert(\"Some error occured in updation\");\n        setProductsInTable();\n        // setProductsInTableNew(inv, num, day);\n      }\n\n\n    }\n\n    const fetchSavedData = async(invoice = inv, no = num, date = day) => {\n        const data =  await tesseractService.GetSavedInvoiceData(invoice, no, date);\n        console.log(data);\n        if(data.length === 0) {\n          alert(\"Invoice doesnt Exist!!\");\n        }else return data[0].InvoiceData;\n        // console.log(data);\n        // console.log(data[0].InvoiceData);\n        \n    };\n\n    const setProductsInTable = () => {\n      setLoader(true);\n      async function invoiceData() {\n        const products = await tesseractService.GetProductDetails(\n          // invoice.slug\n          inv\n        );\n        //console.log(props.selectedInvoice);\n        return products;\n      }\n\n      fetchSavedData().then((ocrData) => {\n        invoiceData()\n          .then((products) => {\n            /**post processing the table data after returning from filter */\n            function convertToUpperCase(obj) {\n              let newObj = {};\n              for (let key in obj) {\n                newObj[key.toUpperCase()] = obj[key];\n              }\n              return newObj;\n            }\n            products = convertToUpperCase(products);\n            console.log(products);\n            // scanInvoiceData.InvoiceData = ocrData;\n          //   setOcrProducts(ocrData);\n            \n          //   console.log(scanInvoiceData);\n            // scanInvoiceData.InvoiceData = ocrData;\n            //console.log(resScnInvDta);\n            //console.log(\"OCERDATa\", ocrData);\n            //console.log(products);\n            //console.log(scanInvoiceData);\n            let table = ocrData.map((row) => {\n              /**For invoices which dont have item no, set description as item no */\n              if (row.itemNo === undefined) {\n                row.itemNo = row.description.trim().toUpperCase();\n              }\n              row.itemNo = row.itemNo.toString().toUpperCase();\n  \n              row.description = row.description;\n                // products[row.itemNo] !== undefined\n                //   ? products[row.itemNo].Description\n                //   : row.description;\n              row.pieces =\n                products[row.itemNo] !== undefined\n                  ? products[row.itemNo].Quantity\n                  : 0;\n              row.sku =\n                products[row.itemNo] !== undefined\n                  ? products[row.itemNo].sku\n                  : \"\";\n              row.barcode =\n                products[row.itemNo] !== undefined\n                  ? products[row.itemNo].Barcode\n                  : \"\";\n              row.posName =\n                products[row.itemNo] !== undefined\n                  ? products[row.itemNo].POS\n                  : \"\";\n              row.markup = 0;\n              row.show = true;\n              row.posSku =\n                products[row.itemNo] !== undefined\n                  ? products[row.itemNo].PosSKU\n                  : \"\";\n              row.isReviewed = \n                products[row.itemNo] !== undefined ? products[row.itemNo].isReviewed : \"\" ;\n              row.size = \n                products[row.itemNo] !== undefined ? products[row.itemNo].Size : \"\";\n              row.department = \n                products[row.itemNo] !== undefined ? products[row.itemNo].Department : \"\";\n              row.cost = \n                products[row.itemNo] !== undefined ? products[row.itemNo].SellerCost : \"\";\n              row.sellingPrice = \n                products[row.itemNo] !== undefined ? products[row.itemNo].SellingPrice : \"\";\n              row.price = \n                products[row.itemNo] !== undefined ? products[row.itemNo].Price : \"\";\n              row.details = \n                products[row.itemNo] !== undefined ? products[row.itemNo].Details : \"\";\n              row.linkingCorrect = \n                products[row.itemNo] !== undefined ? products[row.itemNo].LinkingCorrect : \"\";\n              //console.log(\"department-\" + row.department + \"  cost-\" + row.cost + \"  price\" + row.sellingPrice);\n              let sp = 0;\n              let cp = 0;\n              // const barcode = products.Barcode\n              if (parseInt(row.pieces)) {\n                sp = (parseFloat(row.unitPrice) / parseInt(row.pieces)).toFixed(\n                  2\n                );\n                cp = sp;\n              }\n              if (products[row.itemNo] !== undefined) {\n                if (sp > +products[row.itemNo].SellerCost) {\n                  row[\"priceIncrease\"] = 1;\n                } else if (sp < +products[row.itemNo].SellerCost) {\n                  row[\"priceIncrease\"] = -1;\n                } else if (sp == +products[row.itemNo].SellerCost) {\n                  row[\"priceIncrease\"] = 0;\n                }\n              } else {\n                row[\"priceIncrease\"] = 0;\n              }\n  \n              /**filter out the rows for which qty shipped & extendedPrice is zero */\n              if (row.qty == \"0\" && row.extendedPrice === \"0.00\") {\n                return null;\n              }\n              /**Calulate qty for which qty is not read/scanned by textract */\n              if (!row.qty) {\n                row.qty = (\n                  parseFloat(row.extendedPrice) / parseFloat(row.unitPrice)\n                ).toFixed(0);\n              }\n            return { ...row, sp, cp };\n            });\n            setLoader(false);\n            setTableData(table.filter((data) => data !== null));\n            setItemNoDropdown(Object.keys(products));\n            setProductDetails(products);\n          })\n          .catch((err) => {\n            console.log(\"error on mapping ocrdata\", err)\n            setLoader(false);\n          });\n      });\n    }\n\n    const toggleModal = (x) => {\n      if(x == \"notfounds\"){\n        setShowModal(!showModal);\n      }else {\n        setDetailsModal(!detailsModal);\n      }\n        // setDate(\"\");\n        // setInvNo(\"\");\n      };\n\n    const hicksvilleDropdown = async (data) => {\n          // const res = await inventoryService.getHicksvilleData(value);\n          // const data = res[0].List;\n          console.log(data);\n  \n  \n          let productsString = \"\";\n          for(let i=0;i<data.length;i++){\n            productsString = productsString + data[i].name + '$$$';\n          } \n          let result = productsString.split(\"$$$\");\n        \n          let newData = [];\n          for (let i = 0; i < result.length; i++) {\n            let s = result[i].split(\"@@@\");\n            let obj =\n              {\n                // sku: s[0] === \"nan\" ? null : s[0],\n                // upc: s[1] === \"nan\" ? null : s[1],\n                // altupc1: s[2] === \"nan\" ? null : s[2],\n                // altupc2: s[3] === \"nan\" ? null : s[3],\n                // name: s[4] === \"nan\" ? null : s[4],\n                // vintage: s[5] === \"nan\" ? null : s[5],\n                // totalQty: s[6] === \"nan\" ? null : s[6],\n                // cost: s[7] === \"nan\" ? null : s[7],\n                // pricea: s[8] === \"nan\" ? null : s[8],\n                // priceb: s[9] === \"nan\" ? null : s[9],\n                // pricec: s[10] === \"nan\" ? null : s[10],\n                // department: s[11] === \"nan\" ? null : s[11],\n                // salePrice: s[12] === \"nan\" ? null : s[12],\n                // size: s[13] === \"nan\" ? null : s[13],\n                // pack: s[14] === \"nan\" ? null : s[14],\n                // price: s[15] === \"nan\" ? null : s[15],\n                sku: s[1] === \"nan\" ? null : s[1],\n                upc: s[0] === \"nan\" ? null : s[0],\n                altupc1: s[14] === \"nan\" ? null : s[14],\n                altupc2: s[15] === \"nan\" ? null : s[15],\n                name: s[2] === \"nan\" ? null : s[2],\n                vintage: s[8] === \"nan\" ? null : s[8],\n                totalQty: s[13] === \"nan\" ? null : s[13],\n                cost: s[4] === \"nan\" ? null : s[4],\n                pricea: s[10] === \"nan\" ? null : s[10],\n                priceb: s[11] === \"nan\" ? null : s[11],\n                pricec: s[12] === \"nan\" ? null : s[12],\n                department: s[9] === \"nan\" ? null : s[9],\n                salePrice: s[5] === \"nan\" ? null : s[5],\n                size: s[6] === \"nan\" ? null : s[6],\n                pack: s[7] === \"nan\" ? null : s[7],\n                price: s[3] === \"nan\" ? null : s[3],\n              }\n            newData.push(obj);\n          }\n          const filter = newData.map((element) => {\n            let obj = { ...element };\n            obj.label = `${element.name}--${element.price}--${element.upc}--${element.size}--${element.cost}--${element.sku}`;\n            //console.log(obj);\n            return obj; \n          });\n          setHicksvilleData(filter);\n        \n      }\n    \n    const hicksvilleDropdownNew = async (event, value, index) => {\n      console.log(event);\n      console.log(value);\n      console.log(value.length);\n      console.log(tableData[index].itemNo);\n      setDropwdownIndex(index);\n      setOptions([]);\n\n      if(!isNaN(value) && value.length>0 && value != tableData[index].itemNo){\n        console.log(\"number\");\n        // setDropdownLoader(true);\n        setFetchingOptions(true);\n        const res = await inventoryService.getHicksvilleData(value.toUpperCase());\n        const data = res;\n        console.log(data);\n\n\n        let productsString = \"\";\n        for(let i=0;i<data.length;i++){\n          productsString = productsString + data[i].name + '$$$';\n        } \n        let result = productsString.split(\"$$$\");\n      \n        let newData = [];\n        for (let i = 0; i < result.length; i++) {\n          let s = result[i].split(\"@@@\");\n          let obj =\n            {\n              // sku: s[0] === \"nan\" ? null : s[0],\n              // upc: s[1] === \"nan\" ? null : s[1],\n              // altupc1: s[2] === \"nan\" ? null : s[2],\n              // altupc2: s[3] === \"nan\" ? null : s[3],\n              // name: s[4] === \"nan\" ? null : s[4],\n              // vintage: s[5] === \"nan\" ? null : s[5],\n              // totalQty: s[6] === \"nan\" ? null : s[6],\n              // cost: s[7] === \"nan\" ? null : s[7],\n              // pricea: s[8] === \"nan\" ? null : s[8],\n              // priceb: s[9] === \"nan\" ? null : s[9],\n              // pricec: s[10] === \"nan\" ? null : s[10],\n              // department: s[11] === \"nan\" ? null : s[11],\n              // salePrice: s[12] === \"nan\" ? null : s[12],\n              // size: s[13] === \"nan\" ? null : s[13],\n              // pack: s[14] === \"nan\" ? null : s[14],\n              // price: s[15] === \"nan\" ? null : s[15],\n              sku: s[1] === \"nan\" ? null : s[1],\n              upc: s[0] === \"nan\" ? null : s[0],\n              altupc1: s[14] === \"nan\" ? null : s[14],\n              altupc2: s[15] === \"nan\" ? null : s[15],\n              name: s[2] === \"nan\" ? null : s[2],\n              vintage: s[8] === \"nan\" ? null : s[8],\n              totalQty: s[13] === \"nan\" ? null : s[13],\n              cost: s[4] === \"nan\" ? null : s[4],\n              pricea: s[10] === \"nan\" ? null : s[10],\n              priceb: s[11] === \"nan\" ? null : s[11],\n              pricec: s[12] === \"nan\" ? null : s[12],\n              department: s[9] === \"nan\" ? null : s[9],\n              salePrice: s[5] === \"nan\" ? null : s[5],\n              size: s[6] === \"nan\" ? null : s[6],\n              pack: s[7] === \"nan\" ? null : s[7],\n              price: s[3] === \"nan\" ? null : s[3],\n            }\n          newData.push(obj);\n        }\n        const filter = newData.map((element) => {\n          let obj = { ...element };\n          obj.label = `${element.name}--${element.price}--${element.upc}--${element.size}--${element.cost}--${element.sku}`;\n          //console.log(obj);\n          return obj; \n        });\n        setHicksvilleData(filter);\n        setOptions(filter);\n\n      }\n\n      if(isNaN(value) && value != null && value.length>=4 && value != tableData[index].itemNo){\n        console.log(\"string\");\n        // setDropdownLoader(true);\n        setFetchingOptions(true);\n        const res = await inventoryService.getHicksvilleData(value.toUpperCase());\n        const data = res;\n        console.log(data);\n\n\n        let productsString = \"\";\n        for(let i=0;i<data.length;i++){\n          productsString = productsString + data[i].name + '$$$';\n        } \n        let result = productsString.split(\"$$$\");\n      \n        let newData = [];\n        for (let i = 0; i < result.length; i++) {\n          let s = result[i].split(\"@@@\");\n          let obj =\n            {\n              // sku: s[0] === \"nan\" ? null : s[0],\n              // upc: s[1] === \"nan\" ? null : s[1],\n              // altupc1: s[2] === \"nan\" ? null : s[2],\n              // altupc2: s[3] === \"nan\" ? null : s[3],\n              // name: s[4] === \"nan\" ? null : s[4],\n              // vintage: s[5] === \"nan\" ? null : s[5],\n              // totalQty: s[6] === \"nan\" ? null : s[6],\n              // cost: s[7] === \"nan\" ? null : s[7],\n              // pricea: s[8] === \"nan\" ? null : s[8],\n              // priceb: s[9] === \"nan\" ? null : s[9],\n              // pricec: s[10] === \"nan\" ? null : s[10],\n              // department: s[11] === \"nan\" ? null : s[11],\n              // salePrice: s[12] === \"nan\" ? null : s[12],\n              // size: s[13] === \"nan\" ? null : s[13],\n              // pack: s[14] === \"nan\" ? null : s[14],\n              // price: s[15] === \"nan\" ? null : s[15],\n              sku: s[1] === \"nan\" ? null : s[1],\n              upc: s[0] === \"nan\" ? null : s[0],\n              altupc1: s[14] === \"nan\" ? null : s[14],\n              altupc2: s[15] === \"nan\" ? null : s[15],\n              name: s[2] === \"nan\" ? null : s[2],\n              vintage: s[8] === \"nan\" ? null : s[8],\n              totalQty: s[13] === \"nan\" ? null : s[13],\n              cost: s[4] === \"nan\" ? null : s[4],\n              pricea: s[10] === \"nan\" ? null : s[10],\n              priceb: s[11] === \"nan\" ? null : s[11],\n              pricec: s[12] === \"nan\" ? null : s[12],\n              department: s[9] === \"nan\" ? null : s[9],\n              salePrice: s[5] === \"nan\" ? null : s[5],\n              size: s[6] === \"nan\" ? null : s[6],\n              pack: s[7] === \"nan\" ? null : s[7],\n              price: s[3] === \"nan\" ? null : s[3],\n            }\n          newData.push(obj);\n        }\n        const filter = newData.map((element) => {\n          let obj = { ...element };\n          if(element.itemNo != \"undefined\"){\n          obj.label = `${element.name}--${element.price}--${element.upc}--${element.size}--${element.cost}--${element.sku}`;\n          }\n          //console.log(obj);\n          return obj; \n        });\n        setHicksvilleData(filter);\n        setOptions(filter);\n      }\n      setFetchingOptions(false);\n    }\n\n    const searchDropdown = (target, value) =>  {\n      console.log(target);\n      console.log(value);\n      const options  = hicksvilleData.filter((item) => {\n        if(item.name){\n          let name = item.name;\n          name = name.toLowerCase();\n          value = value.toLowerCase();\n          // console.log(name)\n          return name.search(value) != -1;\n        }\n      })\n      console.log(options);\n      setOptions(options);\n      setFetchingOptions(false);\n\n    }\n\n    const updateItemOld = (ocrCost) => {\n        //console.log(showPosState);\n        const data = {\n          invoiceName: invoice.slug,\n          itemName: showPosState.item,\n          value: { \n            POS: showPosState.pos, \n            Barcode: showPosState.barcode, \n            PosSKU: showPosState.posSku, \n            isReviewed: \"true\",\n            Size: showPosState.size, \n            Department: showPosState.department,\n            //SellerCost: showPosState.unitCost,\n            SellingPrice: showPosState.unitPrice\n          },\n        };\n    \n        inventoryService\n        .UpdateProductFields(data)\n        .then((res) => {\n          if (!res) {\n            throw new Error(\"Product not created\")\n          }\n          console.log(res);\n          alert(\"Successfully updated fields\");\n        })\n        .catch((err) => {\n          console.log(err);\n          alert(\"Some error occuured in creating product\");\n        })\n        .finally(() => { \n          setLoader(false)\n          setStateUpdated(\"true\");\n          //  console.log(ocrCost);\n          //  console.log(unitCost);\n           if(ocrCost>unitCost){\n             setCostInc(\"true\");\n             setCostDec(\"\");\n           }\n           if(ocrCost<unitCost){\n             setCostDec(\"true\");\n             setCostInc(\"\");\n           }\n        });\n    \n    }\n\n    const updateItem = (props, ocrCost) => {\n      let data;\n      //console.log(showPosState);\n      if(notFounds === \"true\"){\n        // console.log(props.selectedInvoice);\n        console.log(\"notfoundstrue\");\n        data = {\n          invoiceName: inv,\n          itemName: showPosState.item,\n          value: { \n            POS: showPosState.pos, \n            Barcode: showPosState.barcode, \n            PosSKU: showPosState.posSku, \n            isReviewed: \"true\",\n            Description: showPosState.description,\n            Size: showPosState.size, \n            Department: showPosState.department,\n            SellerCost: showPosState.unitCost,\n            SellingPrice: showPosState.unitPrice,\n            Quantity: unitsInCase,\n            Price: price,\n            LinkingCorrect: \"true\"\n          },\n        };\n  \n        toggleModal(\"notfounds\");\n      \n      }else{\n        data = {\n          invoiceName: inv,\n          itemName: showPosState.item,\n          value: { \n            POS: showPosState.pos, \n            Barcode: showPosState.barcode, \n            PosSKU: showPosState.posSku, \n            isReviewed: \"true\",\n            Size: showPosState.size, \n            Department: showPosState.department,\n            SellerCost: showPosState.unitCost,\n            SellingPrice: showPosState.unitPrice,\n            LinkingCorrect: \"true\"\n          },\n        };\n      }\n  \n      console.log(data)\n      inventoryService\n      .UpdateProductFields(data)\n      .then((res) => {\n        if (!res) {\n          throw new Error(\"Product not created\")\n        }\n        console.log(res);\n        alert(\"Successfully updated fields\");\n        setStateUpdated(true);\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"Some error occuured in creating product\");\n      })\n      .finally(async () => { setLoader(false);\n                     setStateUpdated(\"true\");\n                    //  console.log(ocrCost);\n                    //  console.log(unitCost);\n                    if(ocrCost>unitCost){\n                      setCostInc(\"true\");\n                      setCostDec(\"\");\n                    }\n                    if(ocrCost<unitCost){\n                      setCostDec(\"true\");\n                      setCostInc(\"\");\n                    }\n                    if(notFounds === \"true\"){\n                      setNotFounds(\"false\");\n                      setUnitsInCase(\"\");\n                      setPrice(\"\");\n                    }\n                    console.log(userEmail);\n                    console.log(tableData[showPosIndex]);\n                    const description = tableData[showPosIndex].description;\n                    const costChange = tableData[showPosIndex].priceIncrease;\n                    let a = \"\", b = \"\", c = \"\";\n                    if(costChange == 1) a = \"YES\";\n                    if(costChange == -1) b = \"YES\";\n                    if(costChange == 0) c = \"YES\"\n                    console.log(costChange);\n                    console.log(description);\n                    console.log(todayDate);\n                    console.log(day);\n                    console.log(num);\n                    const logState = data;\n                    delete logState.value.isReviewed;\n                    logState.Description = description;\n                    logState.PersonName = userEmail;\n                    logState.LinkingDate = todayDate;\n                    logState.InvoiceDate = day;\n                    logState.InvoiceNo = num;\n                    logState.CostIncrease = a;                     \n                    logState.CostDecrease = b; \n                    logState.CostSame = c;\n                    logState.InvoiceUnitCost = tableData[showPosIndex].cp;                   \n                    console.log(logState);\n                    \n\n                    const res = await inventoryService.generateLog(logState);\n                    console.log(res);\n                    setProductsInTable(); \n              });\n      \n  \n    }\n\n    const addRow = () => {\n        let tempTableData = [...tableData];\n        tempTableData.push({\n          qty: 0,\n          itemNo: \"\",\n          description: \"\",\n          pieces: 0,\n          unitPrice: 0.0,\n          extendedPrice: \"\",\n          markup: 0,\n          sp: 0,\n          show: true,\n          showPOS: \"\"\n        });\n        emptyColumnList.push(tempTableData.length - 1);\n        setEmptyColumn(emptyColumnList);\n        setTableData(tempTableData);\n    };\n    const deleteRow = (index) => {\n        let tempTableData = [...tableData];\n        // console.log(emptyColumnList.length, \"before\");\n        if (tableData[index][\"show\"]) {\n          if (window.confirm(\"Delete the item?\")) {\n            tempTableData[index][\"show\"] = false;\n            const i = emptyColumnList.indexOf(index);\n            if (i > -1) {\n              emptyColumnList.splice(i, 1);\n            }\n          }\n        } else {\n          tempTableData[index][\"show\"] = true;\n          if (\n            tempTableData[index][\"qty\"] !== \"\" &&\n            tempTableData[index][\"itemNo\"] !== \"\" &&\n            tempTableData[index][\"unitPrice\"] !== \"\"\n          ) {\n            const i = emptyColumnList.indexOf(index);\n            if (i > -1) {\n              emptyColumnList.splice(i, 1);\n            }\n          } else {\n            emptyColumnList.push(index);\n          }\n        }\n        setTableData(tempTableData);\n        setEmptyColumn(emptyColumnList);\n    };\n\n    const renderInvoiceHeader = () => {\n      return invoiceHeader.map((key, index) => {\n        return (\n          <th\n            key={index}\n            style={{\n              position: \"sticky\",\n              top: \"70px\",\n              background: \"grey\",\n            }}\n          >\n            {key.toUpperCase()}\n          </th>\n        );\n      });\n   };\n\n   const setProductsInTableNew = (index) => {\n    console.log(index);\n    setOpenInvoice(true);\n    console.log(invoiceOptions[index]);\n    let invoice = invoiceOptions[index].InvoiceName;\n    setInv(invoice);\n    let date =  invoiceOptions[index].SavedDate;\n    setDay(date);\n    let no = invoiceOptions[index].SavedInvoiceNo;\n    setNum(no);\n    setLoader(true);\n    async function invoiceData() {\n      const products = await tesseractService.GetProductDetails(\n        invoice\n      );\n      //console.log(props.selectedInvoice);\n      return products;\n    }\n\n    fetchSavedData(invoice, no, date).then((ocrData) => {\n      invoiceData()\n        .then((products) => {\n          /**post processing the table data after returning from filter */\n          function convertToUpperCase(obj) {\n            let newObj = {};\n            for (let key in obj) {\n              newObj[key.toUpperCase()] = obj[key];\n            }\n            return newObj;\n          }\n          products = convertToUpperCase(products);\n          console.log(products);\n          // scanInvoiceData.InvoiceData = ocrData;\n        //   setOcrProducts(ocrData);\n          \n        //   console.log(scanInvoiceData);\n          // scanInvoiceData.InvoiceData = ocrData;\n          //console.log(resScnInvDta);\n          //console.log(\"OCERDATa\", ocrData);\n          //console.log(products);\n          //console.log(scanInvoiceData);\n          let table = ocrData.map((row) => {\n            /**For invoices which dont have item no, set description as item no */\n            if (row.itemNo === undefined) {\n              row.itemNo = row.description.trim().toUpperCase();\n            }\n            row.itemNo = row.itemNo.toString().toUpperCase();\n\n            row.description = row.description;\n              // products[row.itemNo] !== undefined\n              //   ? products[row.itemNo].Description\n              //   : row.description;\n            row.pieces =\n              products[row.itemNo] !== undefined\n                ? products[row.itemNo].Quantity\n                : 0;\n            row.sku =\n              products[row.itemNo] !== undefined\n                ? products[row.itemNo].sku\n                : \"\";\n            row.barcode =\n              products[row.itemNo] !== undefined\n                ? products[row.itemNo].Barcode\n                : \"\";\n            row.posName =\n              products[row.itemNo] !== undefined\n                ? products[row.itemNo].POS\n                : \"\";\n            row.markup = 0;\n            row.show = true;\n            row.posSku =\n              products[row.itemNo] !== undefined\n                ? products[row.itemNo].PosSKU\n                : \"\";\n            row.isReviewed = \n              products[row.itemNo] !== undefined ? products[row.itemNo].isReviewed : \"\" ;\n            row.size = \n              products[row.itemNo] !== undefined ? products[row.itemNo].Size : \"\";\n            row.department = \n              products[row.itemNo] !== undefined ? products[row.itemNo].Department : \"\";\n            row.cost = \n              products[row.itemNo] !== undefined ? products[row.itemNo].SellerCost : \"\";\n            row.sellingPrice = \n              products[row.itemNo] !== undefined ? products[row.itemNo].SellingPrice : \"\";\n            row.price = \n              products[row.itemNo] !== undefined ? products[row.itemNo].Price : \"\";\n            row.details = \n              products[row.itemNo] !== undefined ? products[row.itemNo].Details : \"\";\n            row.linkingCorrect = \n              products[row.itemNo] !== undefined ? products[row.itemNo].LinkingCorrect : \"\";\n            //console.log(\"department-\" + row.department + \"  cost-\" + row.cost + \"  price\" + row.sellingPrice);\n            let sp = 0;\n            let cp = 0;\n            // const barcode = products.Barcode\n            if (parseInt(row.pieces)) {\n              sp = (parseFloat(row.unitPrice) / parseInt(row.pieces)).toFixed(\n                2\n              );\n              cp = sp;\n            }\n            if (products[row.itemNo] !== undefined) {\n              if (sp > +products[row.itemNo].SellerCost) {\n                row[\"priceIncrease\"] = 1;\n              } else if (sp < +products[row.itemNo].SellerCost) {\n                row[\"priceIncrease\"] = -1;\n              } else if (sp == +products[row.itemNo].SellerCost) {\n                row[\"priceIncrease\"] = 0;\n              }\n            } else {\n              row[\"priceIncrease\"] = 0;\n            }\n\n            /**filter out the rows for which qty shipped & extendedPrice is zero */\n            if (row.qty == \"0\" && row.extendedPrice === \"0.00\") {\n              return null;\n            }\n            /**Calulate qty for which qty is not read/scanned by textract */\n            if (!row.qty) {\n              row.qty = (\n                parseFloat(row.extendedPrice) / parseFloat(row.unitPrice)\n              ).toFixed(0);\n            }\n          return { ...row, sp, cp };\n          });\n          setLoader(false);\n          setTableData(table.filter((data) => data !== null));\n          setItemNoDropdown(Object.keys(products));\n          setProductDetails(products);\n        })\n        .catch((err) => {\n          console.log(\"error on mapping ocrdata\", err)\n          setLoader(false);\n        });\n    });\n  }\n\n   const renderInvoiceTable = () => {   \n    const invoiceList = invoiceOptions.map((element, index) => {\n      return (\n        <tr key={index}>\n          <td>{index+1}</td>\n          <td>{element.InvoiceName}</td>\n          <td>{element.SavedInvoiceNo}</td>\n          <td>{element.SavedDate}</td>\n          <td>\n            <button \n              style={{\n                backgroundColor: \"#4CAF50\",\n                border: \"none\",\n                color: \"white\",\n                padding: \"15px 32px\",\n                textAlign: \"center\",\n                textDecoration: \"none\",\n                display: \"inline-block\",\n                fontSize: \"12px\",\n                margin: \"4px 2px\",\n                cursor: \"pointer\"\n              }}\n              onClick={() => {\n                setProductsInTableNew(index)\n              }}\n            >Show Invoice\n            </button>\n          </td>\n        </tr>\n        );\n      })\n    return (\n      <div style={{ marginTop: \"35px\" }}>\n        <table className=\"table table-hover table-responsive-sm\">\n          <tbody>\n            <tr>{renderInvoiceHeader()}</tr>\n            {invoiceList}\n          </tbody>\n        </table>\n      </div>\n    );     \n  }\n\n    const renderTableHeader = () => {\n        return header.map((key, index) => {\n          return (\n            <th\n              key={index}\n              style={{\n                position: \"sticky\",\n                top: \"70px\",\n                background: \"grey\",\n              }}\n            >\n              {key.toUpperCase()}\n            </th>\n          );\n        });\n    };\n\n    const renderTableData = () => {\n        // hicksvilleDropdown(HicksData);\n    \n        if (tableData) {\n          console.log(tableData);\n    \n          // console.log(showPosIndex);\n          // console.log(tableData[0]);\n          \n          let rows = tableData.map((element, index) => {\n            //fuzzwuzzSuggestion = getFuzzwuzzSuggestion(element.description);\n            let isEmpty =\n              element.qty === \"\" ||\n              element.itemNo === \"\" ||\n              !element.pieces ||\n              isNaN(element.unitPrice) ||\n              element.unitPrice === \"\" ||\n              isNaN(element.extendedPrice);\n            if (isEmpty && element.show) {\n              let emptyColumn = [...emptyColumnList, index];\n              emptyColumnList = [...new Set(emptyColumn)];\n            }\n            let isFree = element.qty != 0 && element.extendedPrice === \"0.00\";\n            // console.log(element.isUpdated);\n    \n            return (\n              <tr\n                key={index}\n                className={isEmpty ? styles.red : isFree ? styles.free : null}\n                // style={element.show ? { opacity: \"1\" } : { opacity: \"0.4\" }}\n                style={element.linkingCorrect == \"false\" ? {backgroundColor: \"orange\"} : element.isUpdated === \"true\"  ? {backgroundColor: \"lightGreen\"}\n                  : element.show ? { opacity: \"1\" } : { opacity: \"0.4\" }}\n              >\n                <td>{index + 1}</td>\n                <td className={styles.element}>\n                  <IconButton onClick={() => {\n                    toggleModal(\"details\");\n                    setDetailsIndex(index);\n                    }}>\n                      <AddCircleIcon />\n                    </IconButton>\n                    <div className={styles.tooltip}>\n                      <p>Details- {element.details}</p>\n                    </div>\n                    \n                </td>\n                {/* <td>\n                  <TextField\n                    type=\"tel\"\n                    value={element.details}\n                    id=\"outlined-secondary\"\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      handleChange(index, \"details\", e.target.value);\n                    }}\n                    style={{ width: 100 }}\n                  />\n                </td> */}\n                <td className={styles.element}>\n                  <TextField\n                    type=\"tel\"\n                    value={showPosIndex === index ? showPosState.barcode : element.barcode}\n                    id=\"outlined-secondary\"\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      handleChange(index, \"barcode\", e.target.value);\n                    }}\n                    style={{ width: 150 }}\n                  />\n                  <IconButton\n                    color=\"primary\"\n                    aria-label=\"add to review\"\n                    // onClick={() => addForReview(element, index)}\n                  >\n                    <InfoOutlinedIcon\n                      style={\n                        reviewItems.includes(index)\n                          ? { backgroundColor: \"green\" }\n                          : null\n                      }\n                    /> \n                    {/* <AddShoppingCartIcon\n                      style={\n                        reviewItems.includes(index)\n                          ? { backgroundColor: \"green\" }\n                          : null\n                      }\n                    /> */}\n                  </IconButton>\n                  <div className={element.isReviewed  === \"true\" ? styles.tooltipIsReviewed: styles.tooltip} >\n                    <p>POS Product- {showPosIndex === index ? showPosState.pos : element.posName }</p>\n                    {/* <p>UPC- {showPosIndex === index ? showPosState.barcode : element.barcode}</p> */}\n                    <p>Size- {showPosIndex === index ? showPosState.size : element.size}</p>\n                    <p>Department - {showPosIndex === index ? showPosState.department : element.department}</p>\n                    <p>Unit Cost- {showPosIndex === index ? showPosState.unitCost : element.cost}</p> \n                    <p>Unit Price- {showPosIndex === index ? showPosState.unitPrice : element.sellingPrice}</p>\n                    {/* <p>Price- {showPosIndex === index ? showPosState.price : element.price}</p> */}\n                    <div >\n                    <button onClick={() => {\n                            if(notFounds === \"true\"){\n                              toggleModal(\"notfounds\");\n                            }else{\n                              updateItem(invoice.slug, (parseFloat(element.unitPrice) / parseInt(element.pieces)).toFixed(2))\n                            }\n                          } } \n                      disabled={showPosIndex === index ? false : true}\n                      style={{backgroundColor: \"green\",\n                      border: \"none\",\n                      color: \"white\",\n                      padding: \"4px 8px\",\n                      textAlign: \"center\",\n                      textDecoration: \"none\",\n                      display: \"inline-block\",\n                      fontSize: \"14px\",\n                      align: \"left\"}} >\n                      Update Item\n                    </button>\n                    </div> \n                    <br />\n                    <div>\n                    <button onClick={()=> linkManually(index)} \n                      // disabled={showPosIndex === index ? false : true}\n                      style={{backgroundColor: \"blue\",\n                      border: \"none\",\n                      color: \"white\",\n                      padding: \"4px 8px\",\n                      textAlign: \"center\",\n                      textDecoration: \"none\",\n                      display: \"inline-block\",\n                      fontSize: \"14px\",\n                      align: \"left\"}} >\n                      Link Manually\n                    </button>\n                    </div>\n                    <br />\n                    <div>\n                    <button onClick={()=> reverseUpdate(index)} \n                      // disabled={showPosIndex === index ? false : true}\n                      style={{backgroundColor: \"red\",\n                      border: \"none\",\n                      color: \"white\",\n                      padding: \"4px 8px\",\n                      textAlign: \"center\",\n                      textDecoration: \"none\",\n                      display: \"inline-block\",\n                      fontSize: \"14px\",\n                      align: \"left\"}} >\n                      Reverse Update\n                    </button>\n                    </div>\n                  </div>\n                </td>\n                <td>{showPosIndex === index ? showPosState.posSku : element.posSku}</td>\n                <td>\n                  <TextField\n                    type=\"tel\"\n                    value={element.qty}\n                    id=\"outlined-secondary\"\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      handleChange(index, \"qty\", e.target.value);\n                    }}\n                    style={{ width: 100 }}\n                  />\n                </td>\n                <td>\n                  <Autocomplete\n                    value={element.itemNo}\n                    onChange={(event, newValue) => {\n                      if (newValue) {\n                        handleChange(index, \"itemNo\", newValue);\n                      }\n                    }}\n                    id=\"combo-box\"\n                    options={itemNoDropdown}\n                    getOptionLabel={(option) => option}\n                    style={{ width: 200 }}\n                    renderInput={(params) => (\n                      <TextField {...params} variant=\"outlined\" />\n                    )}\n                  />\n                </td>\n                <td>\n                {/* {dropdownIndex == index ? fetchingOptions ? <Loading type=\"ThreeDots\" height={40} width={40} /> : null : null} */}\n                  <Autocomplete\n                    value={showPosIndex  === index ? showPosState.item : element.itemNo }\n                    loading={true}\n                    onInputChange={(event, value) => {\n                      console.log(\"ON INPUT CHANGE\");\n                      // event.toLowerCase();\n                      // value.toLowerCase();\n                      // console.log(event.target.value);\n                      // console.log(value);\n                      // searchDropdown(event, value);\n                      // setOptions([]);\n                      if(event != null){\n                        setTimeout(()=> {\n                          hicksvilleDropdownNew(event, value, index);\n\n                        }, 1500);\n                      }\n                      // hicksvilleDropdownNew(event, value, index);\n                    }}\n                    onChange={(event, newValue) => {\n                      // console.log(event.target.value);\n                      // console.log(newValue);\n                      if (newValue) {\n                        let newState = { ...showPosState };\n                        console.log(newValue);\n                        // newState.item = newValue.name;\n                        newState.item = element.itemNo\n                        newState.description = newValue.name;\n                        newState.barcode = newValue.upc;\n                        newState.pos = newValue.name;\n                        newState.posSku = newValue.sku;\n                        newState.size = newValue.size;\n                        newState.department = newValue.department;\n                        newState.unitCost = newValue.cost;\n                        newState.unitPrice = newValue.price;\n                        setShowPosState(newState);\n                        setShowPosIndex(index);\n                        setUnitCost(newValue.cost);\n                        setStateUpdated(\"\");\n                        if(isEmpty){\n                          setNotFounds(\"true\");\n                          setRedState(\"false\");\n                        }\n                        //setDisabled(false);\n                        //updateOnHoverDetails(index);\n                        //setShowPosIndex(index);\n                        // console.log(newValue);\n                        console.log(newState);\n                        //console.log(showPosState);\n                        \n                      }\n                    }}\n                    id=\"combo-box\"\n                    // options={element.fuzzSuggestion}\n                    options={options}\n                    // getOptionLabel={option => option.label}\n                    getOptionLabel={(option) => option.label ?? element.itemNo}\n                    // getOptionLabel={(option) => dropdownLoader ? <Spinner /> : option.label}\n                    style={{ width: 400 }}\n                    renderInput={(params) => (\n                      <TextField {...params} variant=\"outlined\" />\n                    )}\n                  />\n                </td>\n                \n                <td>{element.description}</td>\n                <td>{element.pieces}</td>\n                <td>\n                  <TextField\n                    type=\"tel\"\n                    value={element.unitPrice}\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      handleChange(index, \"unitPrice\", e.target.value);\n                    }}\n                    style={\n                      element.priceIncrease === 1\n                        ? { backgroundColor: \"#1a8cff\", width: 100 }\n                        : element.priceIncrease === -1\n                        ? { backgroundColor: \"#ffb31a\", width: 100 }\n                        : { width: 100 }\n                      // showPosIndex === index ? costInc===\"true\" ? { backgroundColor: \"#1a8cff\", width: 100 } : costDec===\"true\" ? { backgroundColor: \"#ffb31a\", width: 100 } : {width: 100}\n                      //   : element.priceIncrease === 1 \n                      //       ? { backgroundColor: \"#1a8cff\", width: 100 }\n                      //       : element.priceIncrease === -1 \n                      //       ? { backgroundColor: \"#ffb31a\", width: 100 }\n                      //       : { width: 100 }\n                    }\n                  />\n                </td>\n                <td>{element.extendedPrice}</td>\n                <td>{element.cp}</td>\n                <td>\n                  <TextField\n                    type=\"tel\"\n                    value={element.sp}\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      handleChange(index, \"sp\", e.target.value);\n                    }}\n                    style={{ width: 100 }}\n                  />\n                </td>\n                <td>{element.markup}</td>\n                {/* <td>\n                  <Checkbox\n                    checked={!element.show}\n                    onChange={(e) => handleChange(index, \"show\", e.target.value)}\n                    inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                  />\n                </td> */}\n                <td>\n              <Button\n                text={element.show ? \"Delete\" : \"Undo\"}\n                color=\"btn btn-info\"\n                type=\"submit\"\n                onClick={() => deleteRow(index)}\n              />\n            </td>\n                <td>\n                <Button \n                    text=\"Update POS\"\n                    color=\"btn btn-info\"\n                    type=\"submit\"\n                    onClick={() => pushSingleItemToInventory(index)}\n                    style={{ width: 120 }}\n                  />\n                      \n                </td>\n                <td>\n                <Button \n                    text=\"Reverse POS\"\n                    type=\"submit\"\n                    onClick={() => reversePOSUpdate(index)}\n                    style={{ width: 120, backgroundColor: \"red\", color: \"white\" }}\n                  />\n                      \n                </td>\n                <td className={styles.element}>\n                  <IconButton onClick={() => linkingCorrect(index)}>\n                    <Cancel/>\n                  </IconButton>\n                </td>\n                <td>{index + 1}</td>\n                {/* <td>\n                  <Button\n                    text={element.show ? \"Delete\" : \"Undo\"}\n                    color=\"btn btn-info\"\n                    type=\"submit\"\n                    onClick={() => deleteRow(index)}\n                  />\n                </td> */}\n              </tr>\n            );\n          });\n          return (\n            <div style={{ marginTop: \"35px\" }}>\n              <table className=\"table table-hover table-responsive-sm\">\n                <tbody>\n                  <tr>{renderTableHeader()}</tr>\n                  {rows}\n                  <tr>\n                    <td>\n                      <Button\n                        text=\"Add cell\"\n                        color=\"btn btn-info\"\n                        onClick={addRow}\n                      />\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n              <div className={styles.divRow}>\n                <Button\n                  text=\"Update Inventory\"\n                  color=\"btn btn-info\"\n                  type=\"submit\"\n                  onClick={pushInventoryDetails}\n                />\n                {/* <Button\n                  text=\"Save Invoice Data\"\n                  color=\"btn btn-info\"\n                  type=\"submit\"\n                  onClick={toggleModal}\n                /> */}\n                <Button\n                  text=\"Re upload\"\n                  color=\"btn btn-info\"\n                  type=\"submit\"\n                  onClick={() => window.location.reload()}\n                />\n              </div>\n            </div>\n          );\n        }\n    };\n\n    const pushInventoryDetails = async () => {\n        const notFoundItems = emptyColumn.map((i) => tableData[i]);\n        const tempTable = [];\n        tableData.forEach((element, index) => {\n          if (\n            !emptyColumn.includes(index) &&\n            element.show === true &&\n            element[\"isForReview\"] != true\n          ) {\n            let rowData = { index: index + 1, ...element };\n            tempTable.push(rowData);\n          }\n        });\n        // console.log(\"notFoundItems\", notFoundItems);\n        // console.log(\"final table data\", tempTable);\n    \n        if (emptyColumn.length !== 0) {\n          /**api to push  to not found list*/\n          setLoader(true);\n          const responses = await Promise.all(\n            notFoundItems.map(async (product) => {\n              try {\n                const data = {\n                  Item: product.itemNo,\n                  Description: product.description,\n                  Quantity: product.qty,\n                  Price: product.unitPrice,\n                  sku: product.sku,\n                  Barcode: product.barcode,\n                  PosSKU: product.posSku,\n                  InvoiceName: invoice.slug,\n                };\n                await inventoryService.CreateNotFoundItems(data);\n                return true;\n              } catch (error) {\n                console.log(\n                  \"Couldn't create not found product\",\n                  product.description,\n                  { error }\n                );\n                alert(\"Couldn't create product on website.\");\n                return null;\n              }\n            })\n          );\n          setLoader(false);\n        }\n        const priceIncreasedProducts = tempTable.filter(\n          (product) => product.priceIncrease !== 0\n        );\n        setLoader(true);\n        const res = await Promise.all(\n          priceIncreasedProducts.map(async (product) => {\n            try {\n              const data = {\n                invoiceName: invoice,\n                itemName: product.itemNo,\n                value: { Price: product.unitPrice },\n              };\n              await inventoryService.UpdateProductFields(data);\n            } catch (error) {\n              console.log(`couldn't update price for product ${product.itemNo}`);\n            }\n          })\n        );\n        console.log(priceIncreasedProducts.length);\n        setLoader(false);\n        setInventoryData(mergeDuplicates(tempTable));\n        setPushToInventory(true);\n    };\n\n    const handleChange = async (row, key, value) => {\n        let tempTableData = [...tableData];\n        tempTableData[row][key] = value;\n        const { itemNo } = tempTableData[row];\n        if (\n          tempTableData[row][\"qty\"] !== \"\" &&\n          tempTableData[row][\"itemNo\"] !== \"\" &&\n          tempTableData[row][\"unitPrice\"] !== \"\"\n        ) {\n          const index = emptyColumnList.indexOf(row);\n          if (index > -1) {\n            emptyColumnList.splice(index, 1);\n          }\n        } else {\n          emptyColumnList.push(row);\n        }\n        setEmptyColumn(emptyColumnList);\n        if (key === \"itemNo\") {\n          tempTableData[row][\"description\"] = productDetails[value].Description;\n          tempTableData[row][\"pieces\"] = productDetails[value].Quantity;\n          tempTableData[row][\"sku\"] = productDetails[value].sku;\n          /**auto populate barcode & other pos fields*/\n          tempTableData[row][\"barcode\"] = productDetails[value].Barcode;\n          tempTableData[row][\"posName\"] = productDetails[value].POS;\n          tempTableData[row][\"posSku\"] = productDetails[value].PosSKU;\n        }\n    \n        if (key === \"unitPrice\" || key === \"sp\" || key === \"itemNo\") {\n          let cp = parseFloat(tempTableData[row][\"cp\"]);\n          let sp = parseFloat(tempTableData[row][\"sp\"]);\n          let markup = ((sp - cp) / cp) * 100;\n          let cost =\n            parseFloat(tempTableData[row][\"unitPrice\"]) /\n            tempTableData[row][\"pieces\"];\n          // let sp = cp + (cp * markup) / 100;\n          // if (tempTableData[row][\"pieces\"]) {\n          //   sp = sp / tempTableData[row][\"pieces\"];\n          // }\n          tempTableData[row][\"markup\"] = isNaN(markup) ? 0 : markup.toFixed(2);\n          tempTableData[row][\"cp\"] = isNaN(cost) ? 0 : cost.toFixed(2);\n        }\n    \n        if (key === \"qty\" || key === \"unitPrice\") {\n          const extendedPrice =\n            parseFloat(tempTableData[row][\"qty\"]) *\n            parseFloat(tempTableData[row][\"unitPrice\"]);\n          const cp = tempTableData[row][\"unitPrice\"] / tempTableData[row][\"pieces\"];\n          if (!isNaN(extendedPrice)) {\n            tempTableData[row][\"extendedPrice\"] = extendedPrice.toFixed(2);\n          }\n          if (!isNaN(cp)) {\n            tempTableData[row][\"cp\"] = cp.toFixed(2);\n          }\n        }\n        if (itemNo) {\n          if (+tempTableData[row][\"unitPrice\"] > +productDetails[itemNo].Price) {\n            tempTableData[row][\"priceIncrease\"] = 1;\n          } else if (\n            +tempTableData[row][\"unitPrice\"] < +productDetails[itemNo].Price\n          ) {\n            tempTableData[row][\"priceIncrease\"] = -1;\n          } else if (\n            +tempTableData[row][\"unitPrice\"] == +productDetails[itemNo].Price\n          ) {\n            tempTableData[row][\"priceIncrease\"] = 0;\n          }\n        }\n    \n        if (key === \"barcode\") {\n          tempTableData[row][\"barcode\"] = value;\n        }\n        setTableData(tempTableData);\n    };\n\n    const mergeDuplicates = (a) => {\n        let arr = [...a];\n        let map = new Map();\n        for (let i = 0; i < arr.length; i++) {\n          if (!map.has(arr[i].itemNo)) map.set(arr[i].itemNo, arr[i]);\n          else {\n            let obj = { ...map.get(arr[i].itemNo) };\n            obj[\"qty\"] = (\n              parseFloat(obj[\"qty\"]) + parseFloat(arr[i].qty)\n            ).toString();\n            map.set(arr[i].itemNo, obj);\n          }\n        }\n        let newArr = [];\n        for (let x of map.values()) newArr.push(x);\n        return newArr;\n    };\n\n    useEffect(() => {\n      // hicksvilleDropdown();\n      // hicksvilleDropdown();\n      const curDate = new Date();\n      console.log(curDate);\n      let date = curDate.getFullYear()+ \"-\" + (curDate.getMonth()+1) +\"-\"+ curDate.getDate();\n      console.log(date);\n      setTodayDate(date);\n      // hicksvilleDropdown(HicksData);\n      firebase.auth().onAuthStateChanged(function(user) {\n        if (user) {\n          setUserEmail(user.email);\n            console.log('This is the user: ', user)\n            console.log('This is the user: ', user.email);\n        } else {\n            // No user is signed in.\n            console.log('There is no logged in user');\n        }\n    });\n    \n\n\n        /**Fetch the data from the aws textract for the image */\n        // async function fetchOCRData() {\n        //   // return chetak();\n    \n        //   setLoader(true);\n        //   const ocrData = [];\n\n\n\n        //   let newData = [];\n        //   ocrData.forEach((data) => (newData = [...newData, ...data]));\n        //   return newData;\n        // }\n    \n        // async function invoiceData() {\n        //   const products = await tesseractService.GetProductDetails(\n        //     invoice\n        //   );\n        //   //console.log(props.selectedInvoice);\n        //   return products;\n        // }\n\n        // fetchOCRData().then((ocrData) => {\n        //   invoiceData()\n        //     .then((products) => {\n        //       /**post processing the table data after returning from filter */\n        //       function convertToUpperCase(obj) {\n        //         let newObj = {};\n        //         for (let key in obj) {\n        //           newObj[key.toUpperCase()] = obj[key];\n        //         }\n        //         return newObj;\n        //       }\n        //       products = convertToUpperCase(products);\n        //       console.log(products);\n        //       // scanInvoiceData.InvoiceData = ocrData;\n        //     //   setOcrProducts(ocrData);\n              \n        //     //   console.log(scanInvoiceData);\n        //       // scanInvoiceData.InvoiceData = ocrData;\n        //       //console.log(resScnInvDta);\n        //       //console.log(\"OCERDATa\", ocrData);\n        //       //console.log(products);\n        //       //console.log(scanInvoiceData);\n        //       let table = ocrData.map((row) => {\n        //         /**For invoices which dont have item no, set description as item no */\n        //         if (row.itemNo === undefined) {\n        //           row.itemNo = row.description.trim().toUpperCase();\n        //         }\n        //         row.itemNo = row.itemNo.toString().toUpperCase();\n    \n        //         row.description =\n        //           products[row.itemNo] !== undefined\n        //             ? products[row.itemNo].Description\n        //             : row.description;\n        //         row.pieces =\n        //           products[row.itemNo] !== undefined\n        //             ? products[row.itemNo].Quantity\n        //             : 0;\n        //         row.sku =\n        //           products[row.itemNo] !== undefined\n        //             ? products[row.itemNo].sku\n        //             : \"\";\n        //         row.barcode =\n        //           products[row.itemNo] !== undefined\n        //             ? products[row.itemNo].Barcode\n        //             : \"\";\n        //         row.posName =\n        //           products[row.itemNo] !== undefined\n        //             ? products[row.itemNo].POS\n        //             : \"\";\n        //         row.markup = 0;\n        //         row.show = true;\n        //         row.posSku =\n        //           products[row.itemNo] !== undefined\n        //             ? products[row.itemNo].PosSKU\n        //             : \"\";\n        //         row.isReviewed = \n        //           products[row.itemNo] !== undefined ? products[row.itemNo].isReviewed : \"\" ;\n        //         row.size = \n        //           products[row.itemNo] !== undefined ? products[row.itemNo].Size : \"\";\n        //         row.department = \n        //           products[row.itemNo] !== undefined ? products[row.itemNo].Department : \"\";\n        //         row.cost = \n        //           products[row.itemNo] !== undefined ? products[row.itemNo].SellerCost : \"\";\n        //         row.sellingPrice = \n        //           products[row.itemNo] !== undefined ? products[row.itemNo].SellingPrice : \"\";\n        //         //console.log(\"department-\" + row.department + \"  cost-\" + row.cost + \"  price\" + row.sellingPrice);\n        //         let sp = 0;\n        //         let cp = 0;\n        //         // const barcode = products.Barcode\n        //         if (parseInt(row.pieces)) {\n        //           sp = (parseFloat(row.unitPrice) / parseInt(row.pieces)).toFixed(\n        //             2\n        //           );\n        //           cp = sp;\n        //         }\n        //         if (products[row.itemNo] !== undefined) {\n        //           if (+row.unitPrice > +products[row.itemNo].Price) {\n        //             row[\"priceIncrease\"] = 1;\n        //           } else if (+row.unitPrice < +products[row.itemNo].Price) {\n        //             row[\"priceIncrease\"] = -1;\n        //           } else if (+row.unitPrice == +products[row.itemNo].Price) {\n        //             row[\"priceIncrease\"] = 0;\n        //           }\n        //         } else {\n        //           row[\"priceIncrease\"] = 0;\n        //         }\n    \n        //         /**filter out the rows for which qty shipped & extendedPrice is zero */\n        //         if (row.qty == \"0\" && row.extendedPrice === \"0.00\") {\n        //           return null;\n        //         }\n        //         /**Calulate qty for which qty is not read/scanned by textract */\n        //         if (!row.qty) {\n        //           row.qty = (\n        //             parseFloat(row.extendedPrice) / parseFloat(row.unitPrice)\n        //           ).toFixed(0);\n        //         }\n        //       return { ...row, sp, cp };\n        //       });\n        //       setLoader(false);\n        //       setTableData(table.filter((data) => data !== null));\n        //       setItemNoDropdown(Object.keys(products));\n        //       setProductDetails(products);\n        //     })\n        //     .catch((err) => {\n        //       console.log(\"error on mapping ocrdata\", err)\n        //       setLoader(false);\n        //     });\n        // });\n    }, []);\n\n    if (loader) {\n      return <Spinner />;\n    }\n    if(apiLoader){\n      return (\n      <div style={{marginTop: \"100px\", marginLeft: \"700px\"}}>\n        <CircularProgress />\n      </div>\n      ); \n      \n    }\n    return(\n\n        <div className=\"container-fluid\">\n            <Paper className={classes.root}>\n                <Grid style={{ display: \"flex\" }}>\n                    <Autocomplete\n                        value={invoice}\n                        onChange={(event, newValue) => {\n                            // console.log(\"new value\", newValue)\n                            if (newValue) {\n                            setInvoice(newValue);\n                            }\n                            // getInvoices(newValue);\n                        }}\n                        id=\"combo-box\"\n                        options={dropdownOptions}\n                        getOptionLabel={(option) => option.value}\n                        style={{ width: 250 }}\n                        autoHighlight\n                        renderInput={(params) => (\n                            <TextField {...params} label={dropdownLabel} variant=\"outlined\" />\n                        )}\n                    />\n                    {/* <Autocomplete\n                        value={invoiceNo}\n                        onChange={(event, newValue) => {\n                            // console.log(\"new value\", newValue)\n                            if (newValue) {\n                            setInvoiceNo(newValue);\n                            }\n                        }}\n                        id=\"combo-box\"\n                        options={invoiceOptions}\n                        getOptionLabel={(option) => option.value}\n                        style={{ width: 200 }}\n                        autoHighlight\n                        renderInput={(params) => (\n                            <TextField {...params} label=\"Invoice No.\" variant=\"outlined\" />\n                        )}\n                    /> */}\n                    \n                    {/* <TextField\n                        label=\"Invoice No.\"\n                        variant=\"outlined\"\n                        value={invoiceNo}\n                        style={{ marginLeft: 20 }}\n                        onChange={(e) => setInvoiceNo(e.target.value)}\n                    />\n                    <TextField\n                        id=\"date\"\n                        label=\"Date\"\n                        type=\"date\"\n                        value={date}\n                        style={{ marginLeft: 20 }}          \n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        onChange={(event) => setDate(event.target.value)}          \n                    /> */}\n                    <button  style={{backgroundColor: \"green\",\n                        border: \"none\",\n                        color: \"white\",\n                        padding: \"4px 8px\",\n                        textAlign: \"center\",\n                        textDecoration: \"none\",\n                        display: \"inline-block\",\n                        fontSize: \"14px\",\n                        align: \"left\",\n                        marginLeft: 20}}\n                        // onClick={setProductsInTable}\n                        onClick={getInvoices}\n                        >\n                            Fetch Invoice Data\n                    </button>\n                </Grid>\n            </Paper>\n\n            {openInvoice ? (<div><div><p>Invoice No.-- {num}</p></div><div><p>Invoice Date -- {day}</p></div></div>) : null}\n\n            {/* { apiLoader ? <CircularProgress /> : null} */}\n        \n            {pushToInventory ? (\n            <UpdateInventory\n                newInventoryData={inventoryData}\n                header={header}\n                goBack={setPushToInventory}\n                invoice={invoice}\n            />\n            ) : ( openInvoice ? renderTableData() : renderInvoiceTable() \n            )}\n            <CModal show={showModal} onClose={() => toggleModal(\"notfounds\")}>\n        <CModalHeader closeButton>Add Red Products</CModalHeader>\n        <CModalBody>\n          <CContainer fluid>\n            <CRow>\n              <CCol sm=\"6\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"invoiceNo\">Units In Case</CLabel>\n                  <CInput\n                    type=\"text\"\n                    name=\"unitsInCase\"\n                    value={unitsInCase}\n                    onChange={(event) => setUnitsInCase(event.target.value)}\n                    />\n                  <CLabel htmlFor=\"date\">Case Cost</CLabel>\n                  <CInput\n                    type=\"text\"\n                    name=\"price\"\n                    value={price}\n                    onChange={(event) => setPrice(event.target.value)}\n                    />\n                </CFormGroup>\n              </CCol>\n            </CRow>\n          </CContainer>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"primary\" onClick={updateItem}>\n            ADD\n          </CButton>{\" \"}\n          <CButton color=\"secondary\" onClick={() => toggleModal(\"notfounds\")}>\n            Cancel\n          </CButton>\n        </CModalFooter>\n      </CModal>\n\n            <CModal show={detailsModal} onClose={() => toggleModal(\"details\")}>\n        <CModalHeader closeButton>Add Details</CModalHeader>\n        <CModalBody>\n          <CContainer fluid>\n            <CRow>\n              <CCol sm=\"6\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"invoiceNo\">Add Details</CLabel>\n                  <TextareaAutosize\n                    aria-label=\"empty textarea\"\n                    placeholder=\"add details\"\n                    // minRows={4}\n                    // maxRows={10}\n                    style={{ width: 400, height: 100 }}\n                    onChange={(event) => setDetails(event.target.value)}\n                  />\n                </CFormGroup>\n              </CCol>\n            </CRow>\n          </CContainer>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"primary\" onClick={saveDetails}>\n            ADD\n          </CButton>{\" \"}\n          <CButton color=\"secondary\" onClick={() => toggleModal(\"details\")}>\n            Cancel\n          </CButton>\n        </CModalFooter>\n      </CModal>\n\n\n\n        </div>\n\n    );\n}\n\nexport default SaveInvoiceData;"],"sourceRoot":""}