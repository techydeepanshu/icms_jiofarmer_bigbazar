{"version":3,"sources":["UI/Button.js","services/TesseractService.js","utils/invoiceList.js","components/DisplayData/DisplayData.module.css","../../index.ts","../@material-ui/core/esm/styles/makeStyles.js","../@material-ui/core/esm/Grid/Grid.js","components/HandWrittenInvoice/HandWrittenInvoice.js"],"names":["Button","this","props","color","text","others","className","React","Component","TesseractService","image","a","data","FormData","append","Axios","post","appendURL","res","invoiceName","get","params","filename","console","log","invoiceNo","date","dropdownOptions","value","slug","jsonName","emptyColumn","databaseName","jsonNaseame","module","exports","registerVersion","version","SDK_VERSION","makeStyles","stylesOrCreator","options","arguments","length","undefined","makeStylesWithoutDefault","_extends","defaultTheme","SPACINGS","GRID_SIZES","getOffset","val","div","parse","parseFloat","concat","String","replace","Grid","ref","_props$alignContent","alignContent","_props$alignItems","alignItems","classes","classNameProp","_props$component","component","_props$container","container","_props$direction","direction","_props$item","item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","zeroMinWidth","other","_objectWithoutProperties","clsx","root","StyledGrid","withStyles","theme","boxSizing","display","flexWrap","width","margin","minWidth","flexDirection","justifyContent","breakpoint","styles","forEach","themeSpacing","padding","generateGutter","breakpoints","keys","reduce","accumulator","key","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","name","useStyles","paddingTop","maxHeight","marginTop","table","fontWeight","fontSize","backgroundColor","cursor","HandwrittenInvoice","useState","tableData","itemNoDropdown","dropdownLabel","useDispatch","invoice","inventoryService","InventoryService","setOptions","showModal","setShowModal","modalLabel","todayDate","setTodayDate","userEmail","setUserEmail","itemName","setItemName","unitsInCase","setUnitsInCase","caseCost","setCaseCost","newUnitCost","setNewUnitCost","newUnitPrice","setNewUnitPrice","showPosIndex","setShowPosIndex","useSelector","state","redItems","notFounds","detailsModal","setDetailsModal","setUnitCost","openInvoice","inv","num","day","setInvoiceNo","setDate","selectedDropdown","setSelectedDropdown","setNotFound","quantity","description","price","pos","barcode","posSku","department","unitCost","unitPrice","showPosState","setShowPosState","isReviewed","Item","Quantity","Description","Price","POS","Barcode","PosSKU","Size","Department","SellerCost","SellingPrice","posProduct","setPosProduct","posProducts","loaders","apiLoader","loader","wooComProducts","singleItemData","updateSku","header","getProducts","Promise","all","map","row","GetProductDetails","id","regular_price","sku","stock_quantity","sale_price","itemNo","items","getPosProducts","hasErrorOccured","GetPOSProductDetails","Array","isArray","alert","SKU","UPC","ITEMNAME","TOTALQTY","DEPNAME","COST","PRICE","isNew","BUYASCASE","cp","sp","parseInt","qty","pieces","CASEUNITS","toString","CASECOST","pushToPOS","products","product","UpdatePOSProducts","JSON","stringify","DESCRIPTION","QTY","SIZE","PACK","REPLACEQTY","DEPARTMENT","CATEGORY","SUBCATEGORY","ISFOODSTAMP","ISWEIGHTED","ISTAXABLE","ISNEWITEM","COMPANYNAME","PRODUCTCODE","Cost","ItemName","TotalQty","pushInventoryDetails2","window","pushSingleItemToInventory","index","push","isUpdated","data1","cost","UpdateDBafterPosUpdate","InvoiceName","InvoiceDate","ItemNo","InvoiceDescription","PosDescription","OldUnitCost","OldUnitPrice","OldMargin","toFixed","NewUnitCost","NewUnitPrice","NewMargin","UpdateDate","Person","TimeStamp","Date","toTimeString","split","HandWritten","posLogs","logUpdate","updateItem","toggleModal","x","handleChange","hicksvilleDropdownNew","event","isNaN","getHicksvilleData","toUpperCase","productsString","i","result","newData","s","obj","upc","altupc1","altupc2","vintage","totalQty","pricea","priceb","pricec","salePrice","pack","filter","element","label","useEffect","curDate","getFullYear","getMonth","getDate","firebase","auth","onAuthStateChanged","user","email","style","onChange","newValue","getOptionLabel","option","autoHighlight","renderInput","variant","target","type","loading","onInputChange","setTimeout","newState","height","border","textAlign","textDecoration","align","marginLeft","onClick","tableContant","rows","isEmpty","extendedPrice","isFree","red","free","e","disabled","priceIncrease","markup","show","divRow","location","reload","position","top","background","renderTableData","onClose","closeButton","fluid","htmlFor"],"mappings":"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","file":"static/js/9.3db6155f.chunk.js","sourcesContent":["import React from \"react\";\nclass Button extends React.Component {\n\n    render() {\n      const { \n        color,\n        text,\n        ...others\n      } = this.props;\n      \n      return (\n        <button className={color} {...others}>\n          {text}\n        </button>\n      )\n    }\n  }\n  \n\n  export default Button;","import Axios from \"./axios\";\nconst appendURL=process.env.NODE_ENV===\"production\"?\"/server\":\"\";\nexport class TesseractService {\n    async PostImage(image) {\n        const data = new FormData();\n        data.append(\"file\", image);\n        var res = await Axios.post(appendURL+`/api/upload-image`, data);\n        return res.data\n    }\n\n    async GetProductDetails(invoiceName) {\n        var res = await Axios.get(appendURL+`/api/product/`, {\n          params: { invoiceName: invoiceName },\n        });\n        return res.data\n    }\n\n    async GetOCRData(filename) {\n        var res = await Axios.post(appendURL+`/api/ocr`, { data: {filename} });\n        console.log(res);\n        return res.data\n    }\n\n    async GetSavedInvoiceData(invoiceName, invoiceNo, date) {\n        console.log(\"IN TESSERACT SERVICE\");\n        var res = await Axios.get(appendURL + \"/api/invoice/getsaveinvoicedata/\", {params:{ invoiceName: invoiceName, invoiceNo: invoiceNo,date: date}});\n        console.log(res);\n        return res.data;\n    }\n}","export const dropdownOptions = [\n  {\n    value: \"Chetak\",\n    slug: \"chetak\",\n    jsonName: \"chetak-products.json\",\n    emptyColumn: true,\n    databaseName: \"chetakproducts\",\n  },\n  {\n    value: \"Aahubarah USA\",\n    slug: \"aahubarah-usa\",\n    jsonName: \"aahubarah.json\",\n    emptyColumn: false,\n    databaseName: \"aahubarahs\",\n  }, \n  {\n    value: \"Adelman foods\",\n    slug: \"adelman-foods\",\n    jsonName: \"adelaman-food.json\",\n    emptyColumn: false,\n    databaseName: \"adelamanfoods\",\n  },\n  {\n    value: \"Advance Foods\",\n    slug: \"advance-foods\",\n    jsonName: \"advance-foods.json\",\n    emptyColumn: false,\n    databaseName: \"advancefoods\",\n  },\n\n  // Added by Deepanshu on 09-01-2022\n  {\n    value: \"Aliments\",\n    slug: \"aliments\",\n    jsonName: \"aliments.json\",\n    emptyColumn: true,\n    databaseName: \"aliments\",\n  }, \n\n    // Added by Deepanshu on 09-01-2022\n  {\n    value: \"Amtrade\",\n    slug: \"amtrade\",\n    jsonName: \"amtrade.json\",\n    emptyColumn: false,\n    databaseName: \"amtrades\",\n  }, \n\n  // Added by Deepanshu on 09-01-2022\n  {\n    value: \"Anmol distributors\",\n    slug: \"anmol-distributors\",\n    jsonName: \"anmol-distribution.json\",\n    emptyColumn: false,\n    databaseName: \"anmoldistributions\",\n  },\n  {\n    value: \"Anns eco store\",\n    slug: \"anns-eco-store\",\n    jsonName: \"anns-eco-store.json\",\n    emptyColumn: false,\n    databaseName: \"annsecostores\",\n  },\n  {\n    value: \"Gurme Guru\",\n    slug: \"gurme-guru\",\n    jsonName: \"gurme-guru.json\",\n    emptyColumn: true,\n    databaseName: \"gurmeguru\",\n  },\n  {\n    value: \"Katzman Produce\",\n    slug: \"katzman-produce\",\n    jsonName: \"katzman-produce.json\",\n    emptyColumn: false,\n    databaseName: \"katzmanproduce\",\n  }, \n  {\n    value: \"Katzman Berry Corp\",\n    slug: \"katzman-beery-corp\",\n    jsonName: \"katzman-berry-corp.json\",\n    emptyColumn: true,\n    databaseName: \"katzmanberrycorp\",\n  }, \n  {\n    value: \"UYT Imports NYC\",\n    slug: \"uyt-imports-nyc\",\n    jsonName: \"uyt-imports-nyc.json\",\n    emptyColumn: false,\n    databaseName: \"uytimportsnyc\",\n  }, \n  {\n    value: \"Dave West Indian\",\n    slug: \"dava-west-indian\",\n    jsonName: \"dava-west-indian.json\",\n    emptyColumn: false,\n    databaseName: \"davawestindian\",\n  }, \n  {\n    value: \"Soko Packaging\",\n    slug: \"soko-packaging\",\n    jsonName: \"soko-packaging.json\",\n    emptyColumn: false,\n    databaseName: \"sokopackaging\",\n  },\n\n    // Added by Deepanshu on 09-01-2022\n  {\n    value: \"Babco foods\",\n    slug: \"babco-foods\",\n    jsonName: \"babco.json\",\n    emptyColumn: false,\n    databaseName: \"babcos\",\n  }, \n  // {\n  //   value: \"Karison Foods\",\n  //   slug: \"karison-foods\",\n  //   jsonName: \"karison-foods.json\",\n  //   emptyColumn: true,\n  //   databaseName: \"karisonfoods\",\n  // }, \n\n  // Added by Deepanshu on 09-01-2022\n  {\n    value: \"Baraka cold\",\n    slug: \"baraka-cold\",\n    jsonName: \"baraka-cold.json\",\n    emptyColumn: false,\n    databaseName: \"barakacolds\",\n  },\n  // {\n  //   value: \"Barlett dairy\",\n  //   slug: \"bartlett-dairy\",\n  //   jsonName: \"barlett.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"barletts\",\n  // },\n\n  // Added by Deepanshu on 09-01-2022\n  {\n    value: \"Baroody\",\n    slug: \"baroody\",\n    jsonName: \"baroody.json\",\n    emptyColumn: true,\n    databaseName: \"baroodies\",\n  }, \n// {value:'',slug:'',jsonName:'bartlett.json',emptyColumn:false,databaseName:'bartletts'},\n  // {\n  //   value: \"Bedessee\",\n  //   slug: \"bedessee\",\n  //   jsonName: \"bedessee.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"bedessees\",\n  // },\n  // {value:'',slug:'',jsonName:'Best-food-1.json',emptyColumn:false,databaseName:'bestfood1'},\n  {\n    value: \"Best Foods\",\n    slug: \"best-foods\",\n    jsonName: \"best-foods.json\",\n    emptyColumn: true,\n    databaseName: \"bestfoods\",\n  },\n\n  {\n    value: \"Dara food LLC\",\n    slug: \"dara-food\",\n    jsonName: \"dara.json\",\n    emptyColumn: false,\n    databaseName: \"daras\",\n  }, \n  {\n    value: \"Dawn food\",\n    slug: \"dawn-food\",\n    jsonName: \"dawn-food.json\",\n    emptyColumn: false,\n    databaseName: \"dawnfoods\",\n  },\n  \n  {\n    value: \"Delight distribution\",\n    slug: \"delight-distribution\",\n    jsonName: \"delight-distrubution.json\",\n    emptyColumn: false,\n    databaseName: \"delightdistrubutions\",\n  }, \n  // {\n  //   value: \"HJA Sales Corp\",\n  //   slug: \"hja-sales-corp\",\n  //   jsonName: \"hja-sales-corp.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"hjasalescorp\",\n  // }, \n  {\n    value: \"Delight foods\",\n    slug: \"delight-food\",\n    jsonName: \"delight-foods.json\",\n    emptyColumn: true,\n    databaseName: \"delightfoods\",\n  },\n  {\n    value: \"Dsa snacks\",\n    slug: \"dsa-snacks\",\n    jsonName: \"dsa-snacks.json\",\n    emptyColumn: false,\n    databaseName: \"dsasnacks\",\n  }, \n  {\n    value: \"East end\",\n    slug: \"east-end\",\n    jsonName: \"east-end.json\",\n    emptyColumn: false,\n    databaseName: \"eastends\",\n  },\n  {\n    value: \"Empire food importers\",\n    slug: \"empire-food-importers\",\n    jsonName: \"empire-food-importers.json\",\n    emptyColumn: false,\n    databaseName: \"empirefoodimporters\",\n  },\n  {\n    value: \"Family five\",\n    slug: \"family-five\",\n    jsonName: \"family-five.json\",\n    emptyColumn: false,\n    databaseName: \"familyfives\",\n  }, \n  {\n    value: \"Gaint Farm\",\n    slug: \"gaint-farm\",\n    jsonName: \"gaint-farm.json\",\n    emptyColumn: true,\n    databaseName: \"gaintfarms\",\n  }, \n  // {\n  //   value: \"Hellenic Treasures\",\n  //   slug: \"hellenic-treasures\",\n  //   jsonName: \"hellenic-treasures.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"hellenictreasures\",\n  // }, \n  // added by sahil on 11 jan 2022\n  {\n    value: \"Galil imports\",\n    slug: \"galil\",\n    jsonName: \"galil-importing.json\",\n    emptyColumn: false,\n    databaseName: \"galilimportings\",\n  },\n  // {\n  //   value: \"Musco Food Corporation\",\n  //   slug: \"musco-food-corporation\",\n  //   jsonName: \"musco-food-corporation.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"muscofoodcorporation\",\n  // },\n  {\n    value: \"Goyal group\",\n    slug: \"goyal-group\",\n    jsonName: \"goyal-grp.json\",\n    emptyColumn: false,\n    databaseName: \"goyalgrps\",\n  },\n  // {\n  //   value: \"Grocer mill\",\n  //   slug: \"grocer-mill\",\n  //   jsonName: \"grocermill.json\",\n  //   emptyColumn: true,\n  //   databaseName: \"grocermills\",\n  // },\n  {\n    value: \"Hellenic\",\n    slug: \"hellenic\",\n    jsonName: \"hellenic.json\",\n    emptyColumn: false,\n    databaseName: \"hellenics\",\n  }, \n  // {\n  //   value: \"Hellenic Treasures\",\n  //   slug: \"hellenic-treasures\",\n  //   jsonName: \"hellenic-treasures.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"hellenictreasures\",\n  // }, \n//  {\n//     value: \"Cream O Land\",\n//     slug: \"cream-o-land\",\n//     jsonName: \"cream-o-land.json\",\n//     emptyColumn: true,\n//     databaseName: \"cream-o-land\",\n//   }, \n  // {\n  //   value: \"Big Apple Distributors\",\n  //   slug: \"big-apple-distributors\",\n  //   jsonName: \"big-apple-distributors.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"bigappledistributors\",\n  // }, \n  // {\n  //   value: \"K&S Wholesale\",\n  //   slug: \"k&s-wholesale\",\n  //   jsonName: \"k&s-wholesale.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"k&swholesale\",\n  // }, \n  // {\n  //   value: \"Los Olivos Ltd\",\n  //   slug: \"los-olivos-ltd\",\n  //   jsonName: \"los-olivos-ltd.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"losolivosltd\",\n  // }, \n  // {\n  //   value: \"Sirob Imports Inc\",\n  //   slug: \"sirob-imports-inc\",\n  //   jsonName: \"sirob-imports-inc.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"sirobimportsinc\",\n  // }, \n  // {\n  //   value: \"AZ Metro Distribution\",\n  //   slug: \"az-metro-distribution\",\n  //   jsonName: \"az-metro-distribution.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"azmetrodistribution\",\n  // }, \n  {\n    value: \"Duty Free Produce\",\n    slug: \"duty-free-produce\",\n    jsonName: \"duty-free-produce.json\",\n    emptyColumn: false,\n    databaseName: \"dutyfreeproduces\",\n  },\n  // {\n  //   value: \"Farmers Choice Dairy\",\n  //   slug: \"farmers-choice-dairy\",\n  //   jsonName: \"farmers-choice-dairy.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"farmerschoicedairy\",\n  // }, \n  {\n    value: \"Hill top farms\",\n    slug: \"hill-top-farms\",\n    jsonName: \"hill-top-farms.json\",\n    emptyColumn: false,\n    databaseName: \"hilltopfarms\",\n  }, \n  {\n    value: \"House of spices\",\n    slug: \"house-of-spices\",\n    jsonName: \"house-spices.json\",\n    emptyColumn: false,\n    databaseName: \"housespices\",\n  },\n  {\n    value: \"Indian food & spices\",\n    slug: \"indian-food-and-spices\",\n    jsonName: \"india-food-spices.json\",\n    emptyColumn: false,\n    databaseName: \"indiafoodspices\",\n  },\n  // {\n  //   value: \"M SY Marketing\",\n  //   slug: \"m-sy-marketing\",\n  //   jsonName: \"m-sy-marketing.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"m-sy-marketing\",\n  // }, \n  // {\n  //   value: \"Concept Food\",\n  //   slug: \"concept-food-us\",\n  //   jsonName: \"concept-food-us.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"conceptfoodus\",\n  // }, \n  // {\n  //   value: \"Good Luck Int\",\n  //   slug: \"good-luck-int\",\n  //   jsonName: \"good-luck-int.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"goodluckint\",\n  // }, \n  // {\n  //   value: \"Tropicana\",\n  //   slug: \"tropicana\",\n  //   jsonName: \"tropicana.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"tropicana\",\n  // }, \n  // {\n  //   value: \"Lucky Traders\",\n  //   slug: \"lucky-traders\",\n  //   jsonName: \"lucky-traders.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"luckytraders\",\n  // }, \n  // {\n  //   value: \"Trading Corp\",\n  //   slug: \"trading-corp\",\n  //   jsonName: \"trading-corp.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"tradingcorp\",\n  // }, \n  {\n    value: \"Indian spice trading\",\n    slug: \"indian-spice-trading\",\n    jsonName: \"indian-spice-trading.json\",\n    emptyColumn: true,\n    databaseName: \"indianspicetradings\",\n  }, \n  {\n    value: \"I sifol\",\n    slug: \"i-sifol\",\n    jsonName: \"I-sifol-llc.json\",\n    emptyColumn: false,\n    databaseName: \"isifolllcs\",\n  }, \n  {\n    value: \"Jaan distributors\",\n    slug: \"jaan-distributors\",\n    jsonName: \"jaan-dist.json\",\n    emptyColumn: false,\n    databaseName: \"jaandists\",\n  }, \n  // {\n  //   value: \"Jalaram produce\",\n  //   slug: \"jalaram-produce\",\n  //   jsonName: \"jalaram.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"jalarams\",\n  // }, \n  {\n    value: \"JCW imports\",\n    slug: \"jcw-import-and-export\",\n    jsonName: \"jcw-import.json\",\n    emptyColumn: false,\n    databaseName: \"jcwimports\",\n  }, \n  // {value:'',slug:'',jsonName:'joy-foods.json',emptyColumn:false,databaseName:'joyfoods'},\n  {\n    value: \"Joy gourmet foods\",\n    slug: \"joy-gourment-foods\",\n    jsonName: \"joy-gourmet-foods.json\",\n    emptyColumn: false,\n    databaseName: \"joygourmetfoods\",\n  },\n  // {\n  //   value: \"Katzman\",\n  //   slug: \"katzam-foods\",\n  //   jsonName: \"katzman.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"katzman\",\n  // }, \n  {\n    value: \"KM Distribution\",\n    slug: \"km-distribution-usa\",\n    jsonName: \"km-dist-usa.json\",\n    emptyColumn: false,\n    databaseName: \"kmdistusas\",\n  }, \n  // {\n  //   value: \"Tuscan\",\n  //   slug: \"tuscan\",\n  //   jsonName: \"tuscan.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"tuscan\",\n  // },   //not complete\n  // {\n  //   value: \"SA Distribution\",\n  //   slug: \"sa-distribution\",\n  //   jsonName: \"sa-distribution.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"sadistribution\",\n  // }, \n  // {\n  //   value: \"Triboro Wholesale\",\n  //   slug: \"triboro-wholesale\",\n  //   jsonName: \"triboro-wholesale.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"triborowholesale\",\n  // }, \n  // {\n  //   value: \"North East Banana\",\n  //   slug: \"northeast-banana\",\n  //   jsonName: \"northeast-banana.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"northeastbanana\",\n  // }, \n  // {\n  //   value: \"Lezza Food\",\n  //   slug: \"lezza-food\",\n  //   jsonName: \"lezza-food.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"lezzafood\",\n  // },\n  // {\n  //   value: \"Hamd Distribution\",\n  //   slug: \"hamd-distribution\",\n  //   jsonName: \"hamd-distribution.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"hamddistribution\",\n  // }, \n  // {\n  //   value: \"Baawarchi\",\n  //   slug: \"baawarchi\",\n  //   jsonName: \"baawarchi.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"baawarchi\",\n  // }, \n  // {\n  //   value: \"Mfried Store Fixture Inc\",\n  //   slug: \"mfried-store-fixture-inc\",\n  //   jsonName: \"mfried-store-fixture-inc.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"mfriedstorefixtureinc\",\n  // }, \n  // {\n  //   value: \"Crown of East\",\n  //   slug: \"crown-of-east\",\n  //   jsonName: \"crown-of-east.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"crownofeast\",\n  // }, \n  // {\n  //   value: \"Guru Nanak\",\n  //   slug: \"guru-nanak\",\n  //   jsonName: \"guru-nanak.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"gurunanak\",\n  // }, \n  // {\n  //   value: \"Valente Yeast Inc\",\n  //   slug: \"valente-yeast-inc\",\n  //   jsonName: \"valente-yeast-inc.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"valenteyeastinc\",\n  // }, \n  // {\n  //   value: \"Online Mr Inc\",\n  //   slug: \"online-mr-inc\",\n  //   jsonName: \"online-mr-inc.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"onlinemrinc\",\n  // }, \n  // {\n  //   value: \"Busines International\",\n  //   slug: \"business-international\",\n  //   jsonName: \"business-international.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"businessinternational\",\n  // }, \n  // {\n  //   value: \"Bhavani Fruit Vegetables\",\n  //   slug: \"bhavani-fruit-vegetables\",\n  //   jsonName: \"bhavani-fruit-vegetables.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"bhavanifruitvegatbles\",\n  // }, \n  // {\n  //   value: \"Best Cakes Distribution\",\n  //   slug: \"best-cakes-distribution \",\n  //   jsonName: \"best-cakes-distribution.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"bestcakesdistribution\",\n  // }, \n  {\n    value: \"Koryeo\",\n    slug: \"koryeo\",\n    jsonName: \"koryeo-foods.json\",\n    emptyColumn: false,\n    databaseName: \"koryeofoods\",\n  },\n  // {\n  //   value: \"Krishna Aahar\",\n  //   slug: \"krishna-aahar\",\n  //   jsonName: \"krishna-aahar.json\",\n  //   emptyColumn: true,\n  //   databaseName: \"krishna-aahar\",\n  // },\n  {\n    value: \"Krishna Food Corp\",\n    slug: \"krishna-food-corp\",\n    jsonName: \"krishna-food-corp.json\",\n    emptyColumn: true,\n    databaseName: \"krishnafoodcorp\",\n  }, \n  {\n    value: \"Krinos foods\",\n    slug: \"krinos-foods\",\n    jsonNaseame: \"krino-foods.json\",\n    emptyColumn: false,\n    databaseName: \"krinofoods\",\n  },\n  // {\n  //   value: \"Krishna Foods\",\n  //   slug: \"krishna-food-corp\",\n  //   jsonName: \"krishna-foods-products.json\",\n  //   emptyColumn: true,\n  //   databaseName: \"krishnafoodsproducts\",\n  // },\n  // {value:'',slug:'',jsonName:'krishna.json',emptyColumn:false,databaseName:'krishnas'},\n  {\n    value: \"Leblon foods\",\n    slug: \"leblon-foods\",\n    jsonName: \"leblon.json\",\n    emptyColumn: false,\n    databaseName: \"leblons\",\n  },\n  // {\n  //   value: \"Loumidis foods\",\n  //   slug: \"loumidis-foods\",\n  //   jsonName: \"loumidis-food.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"loumidisfoods\",\n  // }, \n  // {\n  //   value: \"Rajbhog Food\",\n  //   slug: \"rajbhog-food\",\n  //   jsonName: \"rajbhog-food.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"rajbhogfood\",\n  // }, \n  // {\n  //   value: \"Bakemark\",\n  //   slug: \"bakemark\",\n  //   jsonName: \"balemark.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"bakemark\",\n  // }, \n  // {\n  //   value: \"Solid Trade\",\n  //   slug: \"solid-trade\",\n  //   jsonName: \"solid-trade.json\",\n  //   emptyColumn: true,\n  //   databaseName: \"solidtrade\",\n  // }, \n  // {\n  //   value: \"Raja Food Vegetables\",\n  //   slug: \"raja-food-vegetables\",\n  //   jsonName: \"raja-food-vegetables.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"rajafoodvegetables\",\n  // }, \n  {\n    value: \"Maharaja food importers\",\n    slug: \"maharaja-food-importers\",\n    jsonName: \"maharaja.json\",\n    emptyColumn: false,\n    databaseName: \"maharajas\",\n  },\n  {\n    value: \"Meenaxi enterprise\",\n    slug: \"meenaxi-enterprise\",\n    jsonName: \"meenaxi.json\",\n    emptyColumn: false,\n    databaseName: \"meenaxis\",\n  },\n  \n  // {\n  //   value: \"Mels ice-cream\",\n  //   slug: \"mels-ice-cream\",\n  //   jsonName: \"mel-icecream.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"melicecreams\",\n  // }, \n  {\n    value: \"Moda food\",\n    slug: \"moda-food\",\n    jsonName: \"moda-food-ny.json\",\n    emptyColumn: true,\n    databaseName: \"modafoodnies\",\n  }, \n  {\n    value: \"Mr pickle\",\n    slug: \"mr-pickle\",\n    jsonName: \"mr-pickle.json\",\n    emptyColumn: false,\n    databaseName: \"mrpickles\",\n  }, \n  // {value:'',slug:'',jsonName:'my-baby-ev.json',emptyColumn:false,databaseName:'mybabyevs'},\n  {\n    value: \"Nassau candy\",\n    slug: \"nassau-candy\",\n    jsonName: \"nassau.json\",\n    emptyColumn: false,\n    databaseName: \"nassaus\",\n  },\n  // {\n  //   value: \"Crestwood Farms\",\n  //   slug: \"crestwood-farms\",\n  //   jsonName: \"crestwood-farms.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"crestwoodfarms\",\n  // }, \n  {\n    value: \"New reliance traders\",\n    slug: \"new-reliance-traders\",\n    jsonName: \"new-reliance.json\",\n    emptyColumn: true,\n    databaseName: \"newreliances\",\n  },\n  {\n    value: \"New york wholesale\",\n    slug: \"new-york-wholesale\",\n    jsonName: \"new-york-wholesale.json\",\n    emptyColumn: false,\n    databaseName: \"newyorkwholesales\",\n  },\n  {\n    value: \"Nirav Indian groceries\",\n    slug: \"nirav-indian-groceries\",\n    jsonName: \"nirav-indian-groceries.json\",\n    emptyColumn: false,\n    databaseName: \"niravindiangroceries\",\n  }, \n  // {\n  //   value: \"Grace Lafe\",\n  //   slug: \"grace-lafe\",\n  //   jsonName: \"grace-lef.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"gracelafe\",\n  // }, \n  {\n    value: \"Nupur trading\",\n    slug: \"nupur-trading\",\n    jsonName: \"nupur.json\",\n    emptyColumn: false,\n    databaseName: \"nupurs\",\n  },\n  {\n    value: \"NY zara food\",\n    slug: \"ny-zara-food\",\n    jsonName: \"ny-zara-food-inc.json\",\n    emptyColumn: false,\n    databaseName: \"nyzarafoodincs\",\n  },\n  {\n    value: \"On time distribution\",\n    slug: \"on-time-distribution\",\n    jsonName: \"ontime.json\",\n    emptyColumn: false,\n    databaseName: \"ontimes\",\n  }, \n\n  //  added by sahil on 11 jan 2022.\n  {\n    value: \"Optima foods\",\n    slug: \"optima-foods\",\n    jsonName: \"optimal.json\",\n    emptyColumn: false,\n    databaseName: \"optimals\",\n  },\n  // {\n  //   value: \"Pams creations\",\n  //   slug: \"pams-creations\",\n  //   jsonName: \"pams.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"pams\",\n  // }, \n  {\n    value: \"Pexco INC.\",\n    slug: \"pexco-inc\",\n    jsonName: \"pexco.json\",\n    emptyColumn: false,\n    databaseName: \"pexcos\",\n  }, \n  {\n    value: \"PGL trade\",\n    slug: \"pgl-trade\",\n    jsonName: \"pgl-trade.json\",\n    emptyColumn: false,\n    databaseName: \"pgltrades\",\n  }, \n  {\n    value: \"Preferred beverage\",\n    slug: \"referred-beverage\",\n    jsonName: \"preferred-beverage.json\",\n    emptyColumn: false,\n    databaseName: \"preferredbeverages\",\n  },\n  // {\n  //   value: \"Priya foods\",\n  //   slug: \"priya-foods\",\n  //   jsonName: \"priya-foods-usa.json\",\n  //   emptyColumn: true,\n  //   databaseName: \"priyafoodsusas\",\n  // },\n  {\n    value: \"Produce n More\",\n    slug: \"produce-n-more\",\n    jsonName: \"produce-n-more.json\",\n    emptyColumn: false,\n    databaseName: \"producenmores\",\n  }, \n  {\n    value:'Pure Ghee',\n    slug:'pure-ghee',\n    jsonName:'pure-ghee.json',\n    emptyColumn:false,\n    databaseName:'pureghees'\n  }, \n  // {\n  //   value: \"Putul distributors\",\n  //   slug: \"putul-distributors\",\n  //   jsonName: \"putull-dist.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"putulldists\",\n  // },\n  // added by sahil on 11 jan 2022\n  {\n    value: \"Radhey foods\",\n    slug: \"radhey-food\",\n    jsonName: \"radhey-foods.json\",\n    emptyColumn: false,\n    databaseName: \"radheyfoods\",\n  } ,\n  // {\n  //   value: \"Raja foods\",\n  //   slug: \"raja-foods\",\n  //   jsonName: \"raja-foods.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"rajafoods\",\n  // }, \n  {\n    value: \"Rane music\",\n    slug: \"ranemusic\",\n    jsonName: \"rane-music.json\",\n    emptyColumn: false,\n    databaseName: \"ranemusics\",\n  },\n  {\n    value: \"Rite source corp\",\n    slug: \"ritesource-corp\",\n    jsonName: \"rite-source-corp.json\",\n    emptyColumn: false,\n    databaseName: \"ritesourcecorps\",\n  }, \n  // {value:'',slug:'',jsonName:'rite-source.json',emptyColumn:false,databaseName:'ritesources'},\n  // {value:'',slug:'',jsonName:'riya.json',emptyColumn:false,databaseName:'riyas'},\n  // {\n  //   value: \"Rollin dairy\",\n  //   slug: \"rollin-dairy\",\n  //   jsonName: \"rollin-diary.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"rollindiaries\",\n  // }, \n  // {\n  //   value: \"Arya International\",\n  //   slug: \"arya-international\",\n  //   jsonName: \"arya-international.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"aryainternational\",\n  // }, \n  {\n    value: \"Ron foods\",\n    slug: \"ron-foods\",\n    jsonName: \"ron-foods.json\",\n    emptyColumn: false,\n    databaseName: \"ronfoods\",\n  },\n  // {\n  //   value: \"Kadakia International Group\",\n  //   slug: \"kadakia-international-group\",\n  //   jsonName: \"kadakia-international-group.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"kadakiainternationalgroup\",\n  // }, // database not found \n  //  {\n  //   value: \"Samar Trading Corp\",\n  //   slug: \"samar-trading-corp\",\n  //   jsonName: \"samar-trading-corp.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"samartradingcorp\",\n  // }, \n  // {\n  //   value: \"Aroma Flavour\",\n  //   slug: \"aroma-flavour\",\n  //   jsonName: \"aroma-flavour.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"aromaflavour\",\n  // }, \n  // {\n  //   value: \"Apna Bazar\",\n  //   slug: \"apna-bazar\",\n  //   jsonName: \"apna-bazar.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"apnabazar\",\n  // }, // not complete in regex .\n  // {value:'',slug:'',jsonName:'ron.json',emptyColumn:false,databaseName:'rons'},\n  {\n    value: \"Sankaj\",\n    slug: \"sankaj\",\n    jsonName: \"sankaj.json\",\n    emptyColumn: false,\n    databaseName: \"sankajs\",\n  }, \n  {\n    value: \"Sea mark\",\n    slug: \"sea-mark\",\n    jsonName: \"seamark.json\",\n    emptyColumn: false,\n    databaseName: \"seamarks\",\n  }, \n // On 14 jan 2020 down to up ⬆︎ by sahil \n\n  // {\n  //   value: \"Shakti group\",\n  //   slug: \"shakti-group-usa\",\n  //   jsonName: \"shakti.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"shaktis\",\n  // }, \n  {\n    value: \"Shata traders\",\n    slug: \"shata-traders\",\n    jsonName: \"shata.json\",\n    emptyColumn: true,\n    databaseName: \"shatas\",\n  }, \n  // {  \n  //   value: \"Himalaya International\",\n  //   slug: \"himalaya-international\",\n  //   jsonName: \"himalaya-international.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"himalayainternational\",\n  // }, \n  \n  {\n    value: \"Shine foods\",\n    slug: \"shine-foods\",\n    jsonName: \"shine.json\",\n    emptyColumn: false,\n    databaseName: \"shines\",\n  }, \n  {\n    value: \"Shreeji Jay/Shreeji  \",\n    slug: \"shreeji-jay\",\n    jsonName: \"shreeji-jay.json\",\n    emptyColumn: false,\n    databaseName: \"shreejijay\",\n  }, \n  // {\n  //   value: \"Shreeji\",\n  //   slug: \"shreeji\",\n  //   jsonName: \"shreeji.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"shreejis\",\n  // }, \n  {\n        value:'Singh-and-singh',\n        slug:'singh-and-singh',\n        jsonName:'singh-and-singh.json',\n        emptyColumn:false,\n        databaseName:'singhandsingh'\n},\n  // {\n  //   value: \"Slaughter house\",\n  //   slug: \"slaughter-house\",\n  //   jsonName: \"slaughter-house.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"slaughterhouses\",\n  // }, \n  {\n    value: \"Spicy sense\",\n    slug: \"spicy-sense\",\n    jsonName: \"spicy-sense.json\",\n    emptyColumn: false,\n    databaseName: \"spicysenses\",\n  }, \n  {\n    value: \"Spicy world\",\n    slug: \"spicy-world\",\n    jsonName: \"spicy-world.json\",\n    emptyColumn: false,\n    databaseName: \"spicyworlds\",\n  },\n\n  // On 13 jan 2020 down to up ⬆︎ by sahil \n  {\n    value: \"Surati\",\n    slug: \"surati\",\n    jsonName: \"surati.json\",\n    emptyColumn: false,\n    databaseName: \"suratis\",\n  }, \n  // {\n  //   value: \"Symco distributor\",\n  //   slug: \"symco-distributor\",\n  //   jsonName: \"symco-distributor.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"symcodistributors\",\n  // },\n  {\n    value: \"Temin distribution\",\n    slug: \"temin-distribution\",\n    jsonName: \"temin.json\",\n    emptyColumn: false,\n    databaseName: \"temins\",\n  }, \n // aded by sahil on 11 jan 2022\n  {\n    value: \"Turkana food\",\n    slug: \"turkana-food\",\n    jsonName: \"turkana.json\",\n    emptyColumn: false,\n    databaseName: \"turkanas\",\n  }, \n  {\n    value: \"Two brother wholesale\",\n    slug: \"two-brother-wholesale\",\n    jsonName: \"two-brother-wholesale.json\",\n    emptyColumn: false,\n    databaseName: \"twobrotherwholesales\",\n  },\n  {\n    value: \"Unique importer\",\n    slug: \"unique-importer\",\n    jsonName: \"unique-importer.json\",\n    emptyColumn: false,\n    databaseName: \"uniqueimporters\",\n  }, \n  {\n    value: \"US gourmet\",\n    slug: \"us-gourmet-food\",\n    jsonName: \"us-gourmet-food.json\",\n    emptyColumn: false,\n    databaseName: \"usgourmetfoods\",\n  }, \n  {\n    value: \"USA Halal\",\n    slug: \"usa-halal-foods\",\n    jsonName: \"usa-halal.json\",\n    emptyColumn: false,\n    databaseName: \"usahalals\",\n  }, \n  // {\n  //   value: \"Vadilal\",\n  //   slug: \"vadilal\",\n  //   jsonName: \"vadilal.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"vadilals\",\n  // }, \n  // {\n  //   value: \"Vibrant enterprise\",\n  //   slug: \"vibrant-enterprise\",\n  //   jsonName: \"vibrant.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"vibrants\",\n  // }, \n  {\n    value: \"Vdyas\",\n    slug: \"vidyas\",\n    jsonName: \"vidyas.json\",\n    emptyColumn: false,\n    databaseName: \"vidyas\",\n  },\n  // {\n  //   value: \"Vijay home foods\",\n  //   slug: \"vijay-food\",\n  //   jsonName: \"vijay-home-foods.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"vijayhomefoods\",\n  // }, \n  {\n    value: \"Vintage food\",\n    slug: \"vintage-food\",\n    jsonName: \"vintage.json\",\n    emptyColumn: false,\n    databaseName: \"vintages\",\n  },\n  // {value:'',slug:'',jsonName:'wave-ron-foods.json',emptyColumn:false,databaseName:'waveronfoods'}\n];\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"DisplayData_main__3dZaC\",\"Filter\":\"DisplayData_Filter__1u_nu\",\"Apply\":\"DisplayData_Apply__GjHhP\",\"container\":\"DisplayData_container__2MkRT\",\"HeadStyle\":\"DisplayData_HeadStyle__PCmCu\",\"TableText\":\"DisplayData_TableText__hhvZ2\",\"records\":\"DisplayData_records__1Gi0X\",\"red\":\"DisplayData_red__24S03\",\"image\":\"DisplayData_image__3STA7\",\"button\":\"DisplayData_button__GadqQ\",\"tooltip\":\"DisplayData_tooltip__fXq_c\",\"tooltipIsReviewed\":\"DisplayData_tooltipIsReviewed__29ewR\",\"element\":\"DisplayData_element__3jIVP\",\"free\":\"DisplayData_free__1jKz9\",\"tablewrapper\":\"DisplayData_tablewrapper__AuFC6\",\"divRow\":\"DisplayData_divRow__1M_V6\"};","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport { name, version } from '../package.json';\n\nfirebase.registerVersion(name, version, 'app');\nfirebase.SDK_VERSION = version;\n\nexport default firebase;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","import React, { useEffect, useState } from \"react\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport { dropdownOptions } from \"../../utils/invoiceList\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { InventoryService } from \"../../services/InventoryService\";\nimport {\n  CModal,\n  CModalBody,\n  CModalHeader,\n  CModalFooter,\n  CButton,\n  CContainer,\n  CCol,\n  CRow,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CDropdown,\n  CDropdownToggle,\n  CDropdownMenu,\n  CDropdownItem,\n} from \"@coreui/react\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { TesseractService } from \"../../services/TesseractService\";\nimport Button from \"../../UI/Button\";\nimport styles from \"../DisplayData/DisplayData.module.css\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport Cancel from \"@material-ui/icons/Cancel\";\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\n\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    paddingTop: 50,\n  },\n  container: {\n    maxHeight: \"80vh\",\n    marginTop: 10,\n  },\n  table: {\n    \"& thead th\": {\n      fontWeight: \"600\",\n      fontSize: 20,\n      backgroundColor: \"grey\",\n    },\n    \"& tbody td\": {\n      fontWeight: \"300\",\n    },\n    \"& tbody tr:hover\": {\n      backgroundColor: \"#fffbf2\",\n      cursor: \"pointer\",\n    },\n  },\n});\n\nconst HandwrittenInvoice = () => {\n  // const [loader, setLoader] = useState();\n  const tesseractService = new TesseractService();\n  const [tableData, setTableData] = useState([]);\n  const [productDetails, setProductDetails] = useState([]);\n  const [itemNoDropdown, setItemNoDropdown] = useState([]);\n\n  const dispatch = useDispatch();\n  const numOfCollections = dropdownOptions.length;\n  const dropdownLabel = \"Select Invoice(\" + numOfCollections + \")\";\n  // const [invoice, setInvoice] = useState(\"\");\n  let invoice = \"\";\n  const classes = useStyles();\n  const inventoryService = new InventoryService();\n  const [options, setOptions] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [modalLabel, setModalLabel] = useState(\"\");\n\n  const [todayDate, setTodayDate] = useState(\"\");\n  const [userEmail, setUserEmail] = useState(\"\");\n\n  const [itemName, setItemName] = useState(\"\");\n  const [unitsInCase, setUnitsInCase] = useState(\"\");\n  const [caseCost, setCaseCost] = useState(\"\");\n\n  const [newUnitCost, setNewUnitCost] = useState(\"\");\n  const [newUnitPrice, setNewUnitPrice] = useState(\"\");\n\n  const [showPosIndex, setShowPosIndex] = useState(-1);\n  // const showPosState = useSelector(state => state.showPosState);\n  const notFounds = useSelector((state) => state.redItems.notFounds);\n\n  const [detailsModal, setDetailsModal] = useState(false);\n  const [details, setDetails] = useState(\"\");\n  const [detailsIndex, setDetailsIndex] = useState(-1);\n  const [unitCost, setUnitCost] = useState(\"\");\n  const [redState, setRedState] = useState(\"true\");\n\n  // ************** Added by Deepanshu *****************\n  // const [inv, setInv] = useState(\"\");\n  const inv = useSelector((state) => state.openInvoice.inv);\n  // const [ num, setNum] = useState(\"\");\n  const num = useSelector((state) => state.openInvoice.num);\n  // const [day, setDay] = useState(\"\");\n  const day = useSelector((state) => state.openInvoice.day);\n\n  const [invoiceNo, setInvoiceNo] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [selectedDropdown, setSelectedDropdown] = useState(dropdownOptions[0]);\n  const [notFound, setNotFound] = useState(\"false\");\n  const [showPosState, setShowPosState] = useState({\n    item: \"\",\n    quantity: \"\",\n    description: \"\",\n    price: \"\",\n    pos: \"\",\n    barcode: \"\",\n    posSku: \"\",\n    invoice: \"\",\n    size: \"\",\n    department: \"\",\n    unitCost: \"\",\n    unitPrice: \"\",\n  });\n\n  // ************** Added by Deepanshu *****************\n\n  // function added by deepanshu\n  const saveDetails = async () => {\n    console.log(\"this is saveDetails\");\n  };\n \n\n\n  const [posProduct, setPosProduct] = useState({\n    isReviewed: \"\",\n    Item: \"\",\n    Quantity: \"\",\n    Description: \"\",\n    Price: \"\",\n    POS: \"\",\n    Barcode: \"\",\n    PosSKU: \"\",\n    Size: \"\",\n    Department: \"\",\n    SellerCost: \"\",\n    SellingPrice: \"\",\n  });\n\n  const apiLoader = useSelector((state) => state.loaders.apiLoader);\n  const loader = useSelector((state) => state.loaders.loader);\n\n  let posProducts = [];\n  let wooComProducts = [];\n  let singleItemData = [];\n  let updateSku = \"\";\n  let itemNo = \"\";\n\n  const header = [\n    \"Serial No.\",\n    \"Barcode\",\n    \"POS SKU\",\n    \"Qty Shipped\",\n    ,\n    \"Unit Cost\",\n    \"ITEM NO\",\n    \"Link Product\",\n\n    \"DESCRIPTION\",\n    \"Units in  Case\",\n    \"Case cost\",\n    \"Extended Price\",\n\n    \"Unit Price\",\n    \"Mark up (%)\",\n    \"Add Details\",\n    // \"Tick to Delete\",\n    \"Update POS\",\n    // \"Reverse POS Update\",\n    \"NO LINKING\",\n    \"Serial No.(2)\",\n  ];\n\n  //*********************************************************************POS UPDATE STARTS******************************************* */\n\n  //Function to fetch wooCom Prpducts.\n  async function getProducts() {\n    console.log(\"IN WOOCOM PRODUCTS\");\n    const items = await Promise.all(\n      singleItemData.map(async (row) => {\n        console.log(row.barcode);\n        try {\n          const res = await inventoryService.GetProductDetails(row.barcode);\n          console.log(res);\n          const {\n            id,\n            name,\n            regular_price,\n            price,\n            sku,\n            slug,\n            stock_quantity,\n            sale_price,\n          } = res[0];\n          return {\n            id,\n            name,\n            regular_price,\n            price,\n            sku,\n            slug,\n            stock_quantity,\n            sale_price,\n            itemNo: row.itemNo,\n          };\n        } catch (error) {\n          // tempNotFoundProducts.push(row);\n          console.log(\"Couldn't fetch product from woodpress.\", row.itemNo);\n          return null;\n        }\n      })\n    );\n    // setLoader(false);\n    // dispatch({type: \"LOADER\"});\n    console.log(items);\n    wooComProducts = items;\n    // setWooComProducts(items.filter((ele) => ele !== null));\n    // setNotFoundProducts(tempNotFoundProducts);\n  }\n\n  //function to fetch POS products.\n  async function getPosProducts() {\n    console.log(\"IN POS PRODUCTS\");\n    // setLoader(true);\n    // dispatch({type: \"LOADER\"});\n    let hasErrorOccured = false;\n    const items = await Promise.all(\n      singleItemData.map(async (row) => {\n        console.log(row.barcode);\n        try {\n          const res = await inventoryService.GetPOSProductDetails(row.barcode);\n          console.log(res);\n          if (!Array.isArray(res)) {\n            alert(\"API not working\");\n            return;\n          }\n          console.log(\"fetched pos data\", res);\n          const { SKU, UPC, ITEMNAME, TOTALQTY, DEPNAME } = res[0];\n          console.log(SKU);\n          console.log(updateSku);\n          if (SKU == updateSku) {\n            console.log(SKU);\n            console.log(updateSku);\n            return {\n              ...row,\n              COST: row.newUnitCost,\n              PRICE: row.newUnitPrice,\n              SKU,\n              UPC,\n              ITEMNAME,\n              // TOTALQTY:\n              //   parseInt(row.qty) * parseInt(row.pieces) + parseInt(TOTALQTY),\n              itemNo: row.itemNo,\n              isNew: false,\n              BUYASCASE: 1,\n              // CASEUNITS: row.pieces.toString(),\n              // CASECOST: row.unitPrice.toString(),\n              DEPNAME,\n            };\n          } else {\n            alert(\"SKU mismatch!!\");\n          }\n        } catch (error) {\n          hasErrorOccured = true;\n          return {\n            ...row,\n            COST: row.cp,\n            PRICE: row.sp,\n            SKU: row.posSku,\n            UPC: row.barcode,\n            ITEMNAME: row.description,\n            TOTALQTY: parseInt(row.qty) * parseInt(row.pieces),\n            itemNo: row.itemNo,\n            isNew: true,\n            BUYASCASE: 1,\n            CASEUNITS: row.pieces.toString(),\n            CASECOST: row.unitPrice.toString(),\n            DEPNAME: \"\",\n          };\n        }\n      })\n    );\n    if (hasErrorOccured) {\n      alert(\"Couldn't fetch some data from POS\");\n    }\n    // setLoader(false);\n    // dispatch({type: \"LOADER\"});\n    console.log(items);\n    posProducts = items;\n    console.log(posProducts);\n    // setPosProducts(items.filter((ele) => ele !== null));\n  }\n\n  //PUSH TO WOOCOM.\n  const pushToWoocom = async (products) => {\n    // setLoader(true);\n    // dispatch({type: \"LOADER\"});\n    const responses = await Promise.all(\n      products.map(async (product) => {\n        try {\n          const res = await inventoryService.UpdateProductDetails(product.id, {\n            regular_price: product.regular_price,\n            stock_quantity: product.stock_quantity,\n          });\n          const { id, name, regular_price, stock_quantity } = res;\n          return {\n            id,\n            name,\n            regular_price,\n            stock_quantity,\n            itemNo: product.itemNo,\n          };\n        } catch (error) {\n          console.log(error);\n          alert(\"Couldn't update product on website.\");\n          return null;\n        }\n      })\n    );\n    // setLoader(false);\n    // dispatch({type: \"LOADER\"});\n  };\n\n  //PUSH TO POS.\n  const pushToPOS = async (products) => {\n    // setLoader(true);\n    // dispatch({type: \"LOADER\"});\n    console.log(products);\n    const responses = await Promise.all(\n      products.map(async (product) => {\n        try {\n          const {\n            COST,\n            PRICE,\n            UPC,\n            TOTALQTY,\n            isNew,\n            ITEMNAME,\n            BUYASCASE,\n            CASEUNITS,\n            CASECOST,\n            SKU,\n            DEPNAME,\n            itemNo,\n          } = product;\n          const res = await inventoryService.UpdatePOSProducts(\n            JSON.stringify({\n              UPC,\n              ITEMNAME,\n              DESCRIPTION: \"\",\n              PRICE,\n              COST,\n              QTY: TOTALQTY,\n              SIZE: \"\",\n              PACK: \"\",\n              REPLACEQTY: 1,\n              DEPARTMENT: DEPNAME,\n              CATEGORY: \"\",\n              SUBCATEGORY: \"\",\n              ISFOODSTAMP: 1,\n              ISWEIGHTED: 0,\n              ISTAXABLE: 1,\n              // VENDORNAME: invoice.slug,\n              // VENDORCODE: itemNo,\n              // VENDORCOST: \"\",\n              ISNEWITEM: isNew ? 1 : 0,\n              BUYASCASE,\n              CASEUNITS,\n              CASECOST,\n              COMPANYNAME: invoice.slug,\n              PRODUCTCODE: itemNo,\n            })\n          );\n          console.log(\"updated pos data\", res);\n          const data = {\n            UPC,\n            SKU,\n            Cost: COST,\n            ItemName: ITEMNAME,\n            Price: PRICE,\n            TotalQty: TOTALQTY,\n          };\n          //not needed as of now, parikshit.\n          // if (isNew) {\n          //   const response = await inventoryService.CreateDBProduct(data);\n          //   console.log(\"Created new product\", response);\n          // } else {\n          //   const response = await inventoryService.UpdateDBProduct({\n          //     count: parseInt(product.qty) * parseInt(product.pieces),\n          //     UPC,\n          //   });\n          //   console.log(\"updated existing product\", response);\n          // }\n\n          console.log(\"res from POS\", res);\n          return true;\n        } catch (error) {\n          console.log(error);\n          return null;\n        }\n      })\n    );\n    // setLoader(false);\n    // dispatch({type: \"LOADER\"});\n  };\n\n  const pushInventoryDetails2 = async () => {\n    console.log(posProducts);\n    // setLoader(true);\n    // let data = singleItemData.map((element) => {\n    //   return {\n    //     item: element.itemNo,\n    //     qty: parseInt(element.qty) * parseInt(element.pieces),\n    //     cp: element.unitPrice,\n    //     markup: element.markup,\n    //     sp: element.sp,\n    //     description: element.description,\n    //   };\n    // });\n\n    // var duplicates = {};\n    // for (var i = 0; i < data.length; i++) {\n    //   if (duplicates.hasOwnProperty(data[i].item)) {\n    //     duplicates[data[i].item].push(i);\n    //   } else if (data.lastIndexOf(data[i].item) !== i) {\n    //     duplicates[data[i].item] = [i];\n    //   }\n    // }\n\n    // let tempData = Object.values(duplicates).filter((ele) => ele.length > 1);\n    // if (tempData.length > 0) {\n    //   tempData.forEach((index) => {\n    //     let temp = 0;\n    //     index.forEach((val) => {\n    //       if (data[val]) {\n    //         // console.log(\"data[val]\", data[val]);\n    //         temp += data[val].qty;\n    //         if (temp - data[val].qty !== 0) {\n    //           data[val] = null;\n    //         }\n    //       }\n    //     });\n    //     data[index[0]].qty = temp;\n    //   });\n    // }\n    // data = data.filter((ele) => ele !== null);\n\n    /**\n     * add the fileds of  data from the woocom & ocr\n     */\n    console.log(wooComProducts.length);\n    // if(wooComProducts[0] != null){\n    //   let updatedWoocomProducts = data\n    //     .map((product, index) => {\n    //       /**find index of the item in fetched woocom product list */\n    //       const wooIndex = wooComProducts.findIndex(\n    //         (wooProduct) => product.item === wooProduct.itemNo\n    //       );\n    //       if (wooIndex !== -1) {\n    //         /**get the qty & other fileds of the woocom product */\n    //         let { id, stock_quantity } = wooComProducts[wooIndex];\n    //         stock_quantity += product.qty;\n    //         const regular_price = product.sp;\n    //         return { id, regular_price, stock_quantity, itemNo: product.item };\n    //       }\n    //       return null;\n    //     })\n    //     .filter((item) => item !== null);\n\n    //   console.log(updatedWoocomProducts);\n    //   await pushToWoocom(updatedWoocomProducts);\n    //   }\n    await pushToPOS(posProducts);\n\n    // setLoader(false);\n    // dispatch({type: \"LOADER\"});\n    // if (itemsNotPushed.length === 0) {\n    window.alert(\"Inventory updated successfully\");\n    // setRedirect(true);\n    // } else {\n    //   window.alert(\"Inventory not updated\");\n    // }\n  };\n\n  function toConsoleState() {\n    console.log(wooComProducts);\n    console.log(posProducts);\n    console.log(singleItemData);\n  }\n\n  const pushSingleItemToInventory = async (index) => {\n    // setApiLoader(true);\n    // dispatch({type: \"API_LOADER\"});\n    const product = [];\n\n    const tempTable = [];\n    product.push(posProduct);\n    console.log(product);\n    product.isUpdated = \"true\";\n    itemNo = product.itemNo;\n\n    // setLoader(false);\n    // dispatch({type: \"LOADER\"});\n    // console.log(tempTable);\n    singleItemData = [posProduct];\n    singleItemData[0].isUpdated = \"true\";\n    // setPushToInventory(true);\n    console.log(singleItemData);\n\n    updateSku = singleItemData[0].posSku;\n\n    await getProducts();\n    await getPosProducts();\n    console.log(posProducts);\n    if (posProducts[0] != undefined) {\n      await pushInventoryDetails2();\n      toConsoleState();\n      console.log(singleItemData);\n      console.log(singleItemData.itemNo);\n      // await inventoryService.UpdateInvoiceData(inv, num, day, singleItemData[0].itemNo);\n\n      //Update unit cost n price in db, after update POS.\n      let data1 = {\n        cost: singleItemData[0].newUnitCost,\n        price: singleItemData[0].newUnitPrice,\n        item: singleItemData[0].itemNo,\n        invoice: invoice.slug,\n      };\n      console.log(data1);\n      await inventoryService.UpdateDBafterPosUpdate(data1);\n\n      //Log Generate.\n      console.log(\"PRODUCTT\");\n      console.log(singleItemData);\n      const log = {\n        InvoiceName: invoice.slug,\n        InvoiceDate: \"\",\n        ItemNo: singleItemData[0].itemNo,\n        InvoiceDescription: singleItemData[0].description,\n        PosDescription: singleItemData[0].pos,\n        OldUnitCost: singleItemData[0].unitCost,\n        OldUnitPrice: singleItemData[0].unitPrice,\n        //OldMargin: singleItemData[0].margin.toFixed(2).toString(),\n        OldMargin: (\n          ((singleItemData[0].unitPrice - singleItemData[0].unitCost) /\n            singleItemData[0].unitCost) *\n          100\n        )\n          .toFixed(2)\n          .toString(),\n        NewUnitCost: singleItemData[0].newUnitCost,\n        NewUnitPrice: singleItemData[0].newUnitPrice,\n        //NewMargin:( ((singleItemData[0].sp- singleItemData[0].cp)/ singleItemData[0].cp)*100).toFixed(2).toString(),\n        NewMargin: (\n          ((singleItemData[0].newUnitPrice - singleItemData[0].newUnitCost) /\n            singleItemData[0].newUnitCost) *\n          100\n        )\n          .toFixed(2)\n          .toString(),\n        UpdateDate: todayDate,\n        Person: userEmail,\n        TimeStamp: new Date().toTimeString().split(\" \")[0],\n        HandWritten: \"YES\",\n      };\n      console.log(log);\n\n      const logUpdate = await inventoryService.posLogs(log);\n      console.log(logUpdate);\n    } else {\n      alert(\"POS not updated!!\");\n    }\n    // setApiLoader(false);\n    // dispatch({type: \"API_LOADER\"});\n  };\n  //*********************************************************************POS UPDATE ENDS******************************************* */\n  const reverseUpdate = async (index) => {\n    console.log(index);\n    console.log(tableData);\n    console.log(tableData[index]);\n    let item = tableData[index];\n    let data = {\n      invoice: invoice.slug,\n      itemNo: item.itemNo,\n    };\n    const result = await inventoryService.reverseUpdate(data);\n    console.log(result);\n    if (result.ok == 1) {\n      setProductsInTable();\n    } else {\n      alert(\"Some error occured in updation\");\n    }\n  };\n\n  const linkManually = async (index) => {\n    console.log(index);\n    console.log(tableData);\n    console.log(tableData[index]);\n    let item = tableData[index];\n    console.log(item);\n    let data = {\n      invoice: invoice.slug,\n      itemNo: item.itemNo,\n    };\n    const result = await inventoryService.linkManually(data);\n    console.log(result);\n\n    //Update unit cost from excel.\n    // const skuData = {sku: item.posSku};\n    // const res = await inventoryService.fetchProductFromPosList(skuData);\n    // console.log(res);\n\n    //Log Generate.\n    const costChange = item.cp - item.cost;\n    const invError = item.cp >= 3 * item.cost ? \"YES\" : \"\";\n    console.log(invError);\n    let logState = {\n      InvoiceDescription: item.description,\n      PosDescription: item.posName,\n      SKU: item.posSku,\n      Barcode: item.barcode,\n      InvoiceName: invoice.slug,\n      ItemCode: item.itemNo,\n      LinkingDate: todayDate,\n      PersonName: userEmail,\n      Size: item.size,\n      PosUnitCost: item.cost,\n      PosUnitPrice: item.sellingPrice,\n      // InvoiceNo: num,\n      // InvoiceDate: day,\n      Department: item.department,\n      InvUnitCost: item.cp,\n      CostIncrease: invError == \"YES\" ? \"\" : costChange > 0 ? \"YES\" : \"\",\n      CostDecrease: invError == \"YES\" ? \"\" : costChange < 0 ? \"YES\" : \"\",\n      CostSame: invError == \"YES\" ? \"\" : costChange == 0 ? \"YES\" : \"\",\n      InvError: invError,\n    };\n    console.log(logState);\n    const logResult = await inventoryService.linkManuallyLog(logState);\n    console.log(logResult);\n\n    if (result.statusText == \"OK\") {\n      setProductsInTable();\n      // setProductsInTableNew(inv, num, day);\n    } else {\n      alert(\"Some error occured in updation\");\n      setProductsInTable();\n      // setProductsInTableNew(inv, num, day);\n    }\n  };\n\n  const updateUnits = async (index) => {\n    const item = tableData[index];\n    console.log(item);\n    const data = {\n      invoiceName: invoice.slug,\n      itemName: item.itemNo,\n      value: {\n        Quantity: item.pieces,\n      },\n    };\n    inventoryService\n      .UpdateProductFields(data)\n      .then((res) => {\n        if (!res) {\n          throw new Error(\"Product not updated\");\n        }\n        console.log(res);\n        alert(\"Successfully updated fields\");\n        // setStateUpdated(true);\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"Some error occuured in creating product\");\n      })\n      .finally(setProductsInTable());\n    // console.log(res);\n  };\n\n  const linkingCorrect = async (index) => {\n    console.log(index);\n    console.log(tableData);\n    console.log(tableData[index]);\n    let item = tableData[index];\n    console.log(item);\n    let data = {\n      invoice: invoice.slug,\n      itemNo: item.itemNo,\n    };\n    console.log(data);\n    const res = await inventoryService.linkingCorrect(data);\n    console.log(res);\n    if (res.statusText == \"OK\") {\n      const costChange = item.cp - item.cost;\n      const invError = item.cp >= 3 * item.cost ? \"YES\" : \"\";\n\n      let logState = {\n        InvoiceDescription: item.description,\n        PosDescription: item.posName,\n        SKU: item.posSku,\n        Barcode: item.barcode,\n        InvoiceName: invoice.slug,\n        ItemCode: item.itemNo,\n        LinkingDate: todayDate,\n        PersonName: userEmail,\n        Size: item.size,\n        PosUnitCost: item.cost,\n        PosUnitPrice: item.sellingPrice,\n        // InvoiceNo: num,\n        // InvoiceDate: day,\n        Department: item.department,\n        InvUnitCost: item.cp,\n        CostIncrease: \"\",\n        CostDecrease: \"\",\n        CostSame: \"\",\n        Unidentified: \"YES\",\n        InvError: invError,\n      };\n      const res = await inventoryService.UnidentifiedLog(logState);\n      console.log(res);\n      alert(\"SUCCESS\");\n      setProductsInTable();\n    } else {\n      alert(\"Some error occured\");\n      setProductsInTable();\n    }\n  };\n\n  // const reversePOSUpdate = async(index) => {\n  //   console.log(index);\n  //   console.log(tableData);\n  //   console.log(tableData[index]);\n  //   let item = tableData[index];\n  //   const result = await inventoryService.reversePOSUpdate(inv, num, day, item.itemNo);\n  //   if(result.ok == 1){\n  //     setProductsInTable();\n  //   }else {\n  //     alert(\"Some error occured in updation\");\n  //   }\n\n  // }\n\n  const renderTableHeader = () => {\n    return header.map((key, index) => {\n      return (\n        <th\n          key={index}\n          style={{\n            position: \"sticky\",\n            top: \"70px\",\n            background: \"grey\",\n          }}\n        >\n          {key.toUpperCase()}\n        </th>\n      );\n    });\n  };\n\n  //   const renderTableData = () => {\n  //     // hicksvilleDropdown(HicksData);\n  //     const tableContant =[\n  //      {\n  //       barcode: \"894559000389\",\n  //       cost: \"2.0\",\n  //       cp: \"3.75\",\n  //       department: \"ROTI AND NAAN\",\n  //       description: \"TAZA TANDOORI NAAN JUMBO 8PCS X12 4.99\",\n  //       details: undefined,\n  //       extendedPrice: \"225.00\",\n  //       isReviewed: \"false\",\n  //       isUpdated: \"false\",\n  //       itemNo: \"TAZA TANDOORI NAAN JUMBO 8PCS X12 4.99\",\n  //       itemNoPresent: true,\n  //       linkingCorrect: \"false\",\n  //       margin: 49.500000000000014,\n  //       markup: 0,\n  //       pieces: \"12\",\n  //       posName: \"TANDOORI NAAN 5 PC\",\n  //       posSku: \"13051\",\n  //       price: \"45\",\n  //       priceIncrease: 1,\n  //       qty: \"5\",\n  //       sellingPrice: \"2.99\",\n  //       show: true,\n  //       size: \"425 GM ..\",\n  //       sku: undefined,\n  //       sp: \"3.75\",\n  //       unitPrice: \"45.00\"\n  //     }];\n  //     setTableData(tableContant);\n  //     console.log(\"renderTableData_tableData : \",tableData);\n  //     if (tableContant) {\n  //       console.log(tableData);\n\n  //       // console.log(showPosIndex);\n  //       // console.log(tableData[0]);\n\n  //       let rows = tableContant.map((element, index) => {\n  //         //fuzzwuzzSuggestion = getFuzzwuzzSuggestion(element.description);\n  //         let isEmpty =\n  //           element.qty === \"\" ||\n  //           element.itemNo === \"\" ||\n  //           !element.pieces ||\n  //           isNaN(element.unitPrice) ||\n  //           element.unitPrice === \"\" ||\n  //           isNaN(element.extendedPrice);\n  //         // let isEmpty = false;\n  //         // if (isEmpty && element.show) {\n  //         //   let emptyColumn = [...emptyColumnList, index];\n  //         //   emptyColumnList = [...new Set(emptyColumn)];\n  //         // }\n  //         let isFree = element.qty != 0 && element.extendedPrice === \"0.00\";\n  //         console.log(element.isUpdated);\n  //         console.log(element);\n  //         let margin = ((element.sellingPrice - element.cost)/ element.cost)*100;\n\n  //         return (\n  //           <tr\n  //             key={index}\n  //             className={isEmpty ? styles.red : null}\n  //             // style={element.show ? { opacity: \"1\" } : { opacity: \"0.4\" }}\n  //             style={element.linkingCorrect == \"false\" ? {backgroundColor: \"pink\"} : element.isUpdated === \"true\"  ? {backgroundColor: \"lightGreen\"}\n  //               : element.show ? { opacity: \"1\" } : { opacity: \"0.4\" }}\n  //           >\n  //             <td>{index + 1}</td>\n\n  //             {/* <td>\n  //               <TextField\n  //                 type=\"tel\"\n  //                 value={element.details}\n  //                 id=\"outlined-secondary\"\n  //                 variant=\"outlined\"\n  //                 onChange={(e) => {\n  //                   handleChange(index, \"details\", e.target.value);\n  //                 }}\n  //                 style={{ width: 100 }}\n  //               />\n  //             </td> */}\n  //             <td className={styles.element}>\n  //               <TextField\n  //                 type=\"tel\"\n  //                 value={showPosIndex === index ? showPosState.barcode : element.barcode}\n  //                 id=\"outlined-secondary\"\n  //                 variant=\"outlined\"\n  //                 onChange={(e) => {\n  //                   handleChange(index, \"barcode\", e.target.value);\n  //                 }}\n  //                 style={{ width: 150 }}\n  //               />\n  //               <IconButton\n  //                 color=\"primary\"\n  //                 aria-label=\"add to review\"\n  //                 // onClick={() => addForReview(element, index)}\n  //               >\n  //                 <InfoOutlinedIcon\n  //                   style={element.isReviewed  === \"true\" ? {fill: \"red\"} : null}\n  //                 />\n  //                 {/* <AddShoppingCartIcon\n  //                   style={\n  //                     reviewItems.includes(index)\n  //                       ? { backgroundColor: \"green\" }\n  //                       : null\n  //                   }\n  //                 /> */}\n  //               </IconButton>\n  //               <div className={element.isReviewed  === \"true\" ? styles.tooltipIsReviewed: styles.tooltip} >\n  //                 <p>POS Product- {showPosIndex === index ? showPosState.pos : element.posName }</p>\n  //                 {/* <p>UPC- {showPosIndex === index ? showPosState.barcode : element.barcode}</p> */}\n  //                 <p>Size- {showPosIndex === index ? showPosState.size : element.size}</p>\n  //                 <p>Department - {showPosIndex === index ? showPosState.department : element.department}</p>\n  //                 <p>Margin(%) - {margin.toFixed(2)}</p>\n  //                 <p>Unit Cost- {showPosIndex === index ? showPosState.unitCost : element.cost}</p>\n  //                 <p>Unit Price- {showPosIndex === index ? showPosState.unitPrice : element.sellingPrice}</p>\n  //                 {/* <p>Price- {showPosIndex === index ? showPosState.price : element.price}</p> */}\n  //                 <div >\n  //                 <button onClick={() => {\n  //                         if(notFounds === \"true\"){\n  //                           toggleModal(\"notfounds\");\n  //                         }else{\n  //                           updateItem(invoice.slug, (parseFloat(element.unitPrice) / parseInt(element.pieces)).toFixed(2))\n  //                         }\n  //                       } }\n  //                   disabled={showPosIndex === index ? false : true}\n  //                   style={{backgroundColor: \"green\",\n  //                   border: \"none\",\n  //                   color: \"white\",\n  //                   padding: \"4px 8px\",\n  //                   textAlign: \"center\",\n  //                   textDecoration: \"none\",\n  //                   display: \"inline-block\",\n  //                   fontSize: \"14px\",\n  //                   align: \"left\"}} >\n  //                   Update Item\n  //                 </button>\n  //                 </div>\n  //                 <br />\n  //                 <div>\n  //                 <button onClick={()=> linkManually(index)}\n  //                   // disabled={showPosIndex === index ? false : true}\n  //                   style={{backgroundColor: \"blue\",\n  //                   border: \"none\",\n  //                   color: \"white\",\n  //                   padding: \"4px 8px\",\n  //                   textAlign: \"center\",\n  //                   textDecoration: \"none\",\n  //                   display: \"inline-block\",\n  //                   fontSize: \"14px\",\n  //                   align: \"left\"}} >\n  //                   Link Manually\n  //                 </button>\n  //                 </div>\n  //                 <br />\n  //                 <div>\n  //                 <button onClick={()=> reverseUpdate(index)}\n  //                   // disabled={showPosIndex === index ? false : true}\n  //                   style={{backgroundColor: \"red\",\n  //                   border: \"none\",\n  //                   color: \"white\",\n  //                   padding: \"4px 8px\",\n  //                   textAlign: \"center\",\n  //                   textDecoration: \"none\",\n  //                   display: \"inline-block\",\n  //                   fontSize: \"14px\",\n  //                   align: \"left\"}} >\n  //                   Reverse Update\n  //                 </button>\n  //                 </div>\n  //               </div>\n  //             </td>\n  //             <td>{showPosIndex === index ? showPosState.posSku : element.posSku}</td>\n  //             <td>\n  //               <TextField\n  //                 type=\"tel\"\n  //                 value={element.qty}\n  //                 id=\"outlined-secondary\"\n  //                 variant=\"outlined\"\n  //                 onChange={(e) => {\n  //                   handleChange(index, \"qty\", e.target.value);\n  //                 }}\n  //                 style={{ width: 100 }}\n  //               />\n  //             </td>\n  //             <td>{element.cp}</td>\n  //             <td>\n  //               <Autocomplete\n  //                 value={element.itemNo}\n  //                 onChange={(event, newValue) => {\n  //                   if (newValue) {\n  //                     handleChange(index, \"itemNo\", newValue);\n  //                   }\n  //                 }}\n  //                 id=\"combo-box\"\n  //                 options={itemNoDropdown}\n  //                 getOptionLabel={(option) => option}\n  //                 style={{ width: 200 }}\n  //                 renderInput={(params) => (\n  //                   <TextField {...params} variant=\"outlined\" />\n  //                 )}\n  //               />\n  //             </td>\n  //             <td>\n  //             {/* {dropdownIndex == index ? fetchingOptions ? <Loading type=\"ThreeDots\" height={40} width={40} /> : null : null} */}\n  //               <Autocomplete\n  //                 value={showPosIndex  === index ? showPosState.item : element.itemNo }\n  //                 loading={true}\n  //                 onInputChange={(event, value) => {\n  //                   console.log(\"ON INPUT CHANGE\");\n  //                   // event.toLowerCase();\n  //                   // value.toLowerCase();\n  //                   // console.log(event.target.value);\n  //                   // console.log(value);\n  //                   // searchDropdown(event, value);\n  //                   // setOptions([]);\n  //                   if(event != null){\n  //                     setTimeout(()=> {\n  //                       hicksvilleDropdownNew(event, value, index);\n\n  //                     }, 1500);\n  //                   }\n  //                   // hicksvilleDropdownNew(event, value, index);\n  //                 }}\n  //                 onChange={(event, newValue) => {\n  //                   // console.log(event.target.value);\n  //                   // console.log(newValue);\n  //                   if (newValue) {\n  //                     let newState = { ...showPosState };\n  //                     console.log(newValue);\n  //                     // newState.item = newValue.name;\n  //                     newState.item = element.itemNo\n  //                     newState.description = newValue.name;\n  //                     newState.barcode = newValue.upc;\n  //                     newState.pos = newValue.name;\n  //                     newState.posSku = newValue.sku;\n  //                     newState.size = newValue.size;\n  //                     newState.department = newValue.department;\n  //                     newState.unitCost = newValue.cost;\n  //                     newState.unitPrice = newValue.price;\n  //                     // setShowPosState(newState);\n  //                     dispatch({type: \"SET_POS_STATE\", data: newState})\n  //                     setShowPosIndex(index);\n  //                     setUnitCost(newValue.cost);\n  //                     // setStateUpdated(\"\");\n  //                     if(isEmpty){\n  //                       // setNotFounds(\"true\");\n  //                       dispatch({type: \"NOT_FOUNDS\", data: \"true\"})\n\n  //                       setRedState(\"false\");\n  //                     }\n  //                     //setDisabled(false);\n  //                     //updateOnHoverDetails(index);\n  //                     //setShowPosIndex(index);\n  //                     // console.log(newValue);\n  //                     console.log(newState);\n  //                     //console.log(showPosState);\n\n  //                   }\n  //                 }}\n  //                 id=\"combo-box\"\n  //                 // options={element.fuzzSuggestion}\n  //                 options={options}\n  //                 // getOptionLabel={option => option.label}\n  //                 getOptionLabel={(option) => option.label ?? element.itemNo}\n  //                 // getOptionLabel={(option) => dropdownLoader ? <Spinner /> : option.label}\n  //                 style={{ width: 400 }}\n  //                 renderInput={(params) => (\n  //                   <TextField {...params} variant=\"outlined\" />\n  //                 )}\n  //               />\n  //             </td>\n\n  //             <td>{element.description}</td>\n  //             {/* <td>{element.pieces}</td> */}\n  //             <td>\n  //               <TextField\n  //                 type=\"tel\"\n  //                 value={element.pieces}\n  //                 variant=\"outlined\"\n  //                 onChange={(e) => {\n  //                   handleChange(index, \"pieces\", e.target.value);\n  //                 }}\n  //                 style={{ width: 100 }}\n  //               />\n  //               <button onClick={() => {updateUnits(index)}} style={{\n  //                 backgroundColor: \"#008CBA\",\n  //                 border: \"none\",\n  //                 color: \"white\",\n  //                 padding: \"5px 16px\",\n  //                 textAlign: \"center\",\n  //                 textDecoration: \"none\",\n  //                 display: \"inline-block\",\n  //                 fontSize: \"10px\",\n  //                 margin: \"4px 2px\",\n  //                 cursor: \"pointer\",\n  //               }}>Update Units</button>\n  //             </td>\n  //             <td>\n  //               <TextField\n  //                 type=\"tel\"\n  //                 value={element.unitPrice}\n  //                 variant=\"outlined\"\n  //                 onChange={(e) => {\n  //                   handleChange(index, \"unitPrice\", e.target.value);\n  //                 }}\n  //                 style={\n  //                   element.priceIncrease === 1\n  //                     ? { backgroundColor: \"#1a8cff\", width: 100 }\n  //                     : element.priceIncrease === -1\n  //                     ? { backgroundColor: \"#ffb31a\", width: 100 }\n  //                     : { width: 100 }\n  //                   // showPosIndex === index ? costInc===\"true\" ? { backgroundColor: \"#1a8cff\", width: 100 } : costDec===\"true\" ? { backgroundColor: \"#ffb31a\", width: 100 } : {width: 100}\n  //                   //   : element.priceIncrease === 1\n  //                   //       ? { backgroundColor: \"#1a8cff\", width: 100 }\n  //                   //       : element.priceIncrease === -1\n  //                   //       ? { backgroundColor: \"#ffb31a\", width: 100 }\n  //                   //       : { width: 100 }\n  //                 }\n  //               />\n  //             </td>\n  //             <td>{element.extendedPrice}</td>\n\n  //             <td>\n  //               <TextField\n  //                 type=\"tel\"\n  //                 value={element.sp}\n  //                 variant=\"outlined\"\n  //                 onChange={(e) => {\n  //                   handleChange(index, \"sp\", e.target.value);\n  //                 }}\n  //                 style={{ width: 100 }}\n  //               />\n  //             </td>\n  //             <td>{element.markup}</td>\n  //             {/* <td>\n  //               <Checkbox\n  //                 checked={!element.show}\n  //                 onChange={(e) => handleChange(index, \"show\", e.target.value)}\n  //                 inputProps={{ \"aria-label\": \"primary checkbox\" }}\n  //               />\n  //             </td> */}\n\n  //               <td className={styles.element}>\n  //               <IconButton onClick={() => {\n  //                 toggleModal(\"details\");\n  //                 setDetailsIndex(index);\n  //                 }}>\n  //                   <AddCircleIcon />\n  //                 </IconButton>\n  //                 <div className={styles.tooltip}>\n  //                   <p>Details- {element.details}</p>\n  //                 </div>\n\n  //             </td>\n\n  //             <td>\n  //           {/* <Button\n  //             text={element.show ? \"Delete\" : \"Undo\"}\n  //             color=\"btn btn-info\"\n  //             type=\"submit\"\n  //             onClick={() => deleteRow(index)}\n  //           /> */}\n  //         </td>\n  //             <td>\n  //             <Button\n  //                 text=\"Update POS\"\n  //                 color=\"btn btn-info\"\n  //                 type=\"submit\"\n  //                 onClick={() => pushSingleItemToInventory(index)}\n  //                 style={{ width: 120 }}\n  //               />\n\n  //             </td>\n  //             {/* <td>\n  //             <Button\n  //                 text=\"Reverse POS\"\n  //                 type=\"submit\"\n  //                 onClick={() => reversePOSUpdate(index)}\n  //                 style={{ width: 120, backgroundColor: \"red\", color: \"white\" }}\n  //               />\n\n  //             </td> */}\n  //             <td className={styles.element}>\n  //               <IconButton onClick={() => linkingCorrect(index)}>\n  //                 <Cancel/>\n  //               </IconButton>\n  //             </td>\n  //             <td>{index + 1}</td>\n  //             {/* <td>\n  //               <Button\n  //                 text={element.show ? \"Delete\" : \"Undo\"}\n  //                 color=\"btn btn-info\"\n  //                 type=\"submit\"\n  //                 onClick={() => deleteRow(index)}\n  //               />\n  //             </td> */}\n  //           </tr>\n  //         );\n  //       });\n  //       return (\n  //         <div style={{ marginTop: \"35px\" }}>\n  //           <table className=\"table table-hover table-responsive-sm\">\n  //             <tbody>\n  //               <tr>{renderTableHeader()}</tr>\n  //               {rows}\n  //               <tr>\n  //                 <td>\n  //                   {/* <Button\n  //                     text=\"Add cell\"\n  //                     color=\"btn btn-info\"\n  //                     onClick={addRow}\n  //                   /> */}\n  //                 </td>\n  //               </tr>\n  //             </tbody>\n  //           </table>\n  //           <div className={styles.divRow}>\n  //             {/* <Button\n  //               text=\"Update Inventory\"\n  //               color=\"btn btn-info\"\n  //               type=\"submit\"\n  //               onClick={pushInventoryDetails}\n  //             /> */}\n  //             {/* <Button\n  //               text=\"Save Invoice Data\"\n  //               color=\"btn btn-info\"\n  //               type=\"submit\"\n  //               onClick={toggleModal}\n  //             /> */}\n  //             {/* <Button\n  //               text=\"Re upload\"\n  //               color=\"btn btn-info\"\n  //               type=\"submit\"\n  //               onClick={() => window.location.reload()}\n  //             /> */}\n  //           </div>\n  //         </div>\n  //       );\n  //     }\n  // };\n\n  const renderTableData = () => {\n    const tableContant = [\n      // {\n      //   barcode: \"894559000389\",\n      //   cost: \"2.0\",\n      //   cp: \"3.75\",\n      //   department: \"ROTI AND NAAN\",\n      //   description: \"TAZA TANDOORI NAAN JUMBO 8PCS X12 4.99\",\n      //   details: undefined,\n      //   extendedPrice: \"225.00\",\n      //   isReviewed: \"false\",\n      //   isUpdated: \"false\",\n      //   itemNo: \"TAZA TANDOORI NAAN JUMBO 8PCS X12 4.99\",\n      //   itemNoPresent: true,\n      //   linkingCorrect: \"false\",\n      //   margin: 49.500000000000014,\n      //   markup: 0,\n      //   pieces: \"12\",\n      //   posName: \"TANDOORI NAAN 5 PC\",\n      //   posSku: \"13051\",\n      //   price: \"45\",\n      //   priceIncrease: 1,\n      //   qty: \"5\",\n      //   sellingPrice: \"2.99\",\n      //   show: true,\n      //   size: \"425 GM ..\",\n      //   sku: undefined,\n      //   sp: \"3.75\",\n      //   unitPrice: \"45.00\",\n      // },\n      // {\n      //   barcode: \"894559000389\",\n      //   cost: \"2.0\",\n      //   cp: \"3.75\",\n      //   department: \"ROTI AND NAAN\",\n      //   description: \"TAZA TANDOORI NAAN JUMBO 8PCS X12 4.99\",\n      //   details: undefined,\n      //   extendedPrice: \"225.00\",\n      //   isReviewed: \"false\",\n      //   isUpdated: \"false\",\n      //   itemNo: \"TAZA TANDOORI NAAN JUMBO 8PCS X12 4.99\",\n      //   itemNoPresent: true,\n      //   linkingCorrect: \"false\",\n      //   margin: 49.500000000000014,\n      //   markup: 0,\n      //   pieces: \"12\",\n      //   posName: \"TANDOORI NAAN 5 PC\",\n      //   posSku: \"13051\",\n      //   price: \"45\",\n      //   priceIncrease: 1,\n      //   qty: \"5\",\n      //   sellingPrice: \"2.99\",\n      //   show: true,\n      //   size: \"425 GM ..\",\n      //   sku: undefined,\n      //   sp: \"3.75\",\n      //   unitPrice: \"45.00\",\n      // },\n    ];\n    // setTableData(tableContant);\n    console.log(\"renderTableData_tableData : \", tableData);\n    console.log(\"renderTableData_tableContant : \", tableContant);\n    console.log(\"renderTableData_showPosState : \", showPosState);\n    // console.log(stateUpdated);\n\n    if (tableContant) {\n      // console.log(tableContant);\n\n      // console.log(showPosIndex);\n\n      let rows = tableContant.map((element, index) => {\n        //fuzzwuzzSuggestion = getFuzzwuzzSuggestion(element.description);\n        let isEmpty =\n          element.qty === \"\" ||\n          element.itemNo === \"\" ||\n          !element.pieces ||\n          isNaN(element.unitPrice) ||\n          element.unitPrice === \"\" ||\n          isNaN(element.extendedPrice);\n        // if (isEmpty && element.show) {\n        //   let emptyColumn = [...emptyColumnList, index];\n        //   emptyColumnList = [...new Set(emptyColumn)];\n        // }\n        let isFree = element.qty != 0 && element.extendedPrice === \"0.00\";\n\n        const isUpdated = \"true\";\n        const updateIndex = 1;\n        const costInc = \"true\";\n        const costDec = \"true\";\n        let hicksvilleData = [];\n        const deleteRow = () => {\n          console.log(\"deleteRow\");\n        };\n        const addRow = () => {\n          console.log(\"addRow\");\n        };\n        const pushInventoryDetails = () => {\n          console.log(\"pushInventoryDetails\");\n        };\n\n        return (\n          <tr\n            key={index}\n            className={isEmpty ? styles.red : isFree ? styles.free : null}\n            style={\n              isUpdated === \"true\"\n                ? updateIndex === index\n                  ? { backgroundColor: \"lightBlue\" }\n                  : {}\n                : element.show\n                ? { opacity: \"1\" }\n                : { opacity: \"0.4\" }\n            }\n          >\n            <td>{index + 1}</td>\n            <td className={styles.element}>\n              <TextField\n                type=\"tel\"\n                value={\n                  showPosIndex === index\n                    ? showPosState.barcode\n                    : element.barcode\n                }\n                id=\"outlined-secondary\"\n                variant=\"outlined\"\n                onChange={(e) => {\n                  handleChange(index, \"barcode\", e.target.value);\n                }}\n                style={{ width: 150 }}\n              />\n              {/* <IconButton\n                color=\"primary\"\n                aria-label=\"add to review\"\n                // onClick={() => addForReview(element, index)}\n              >\n                <InfoOutlinedIcon\n                  style={\n                    reviewItems.includes(index)\n                      ? { backgroundColor: \"green\" }\n                      : null\n                  }\n                /> \n              </IconButton>\n              <div className={element.isReviewed  === \"true\" || (showPosIndex === index && stateUpdated === \"true\") ? styles.tooltipIsReviewed: styles.tooltip} >\n                <p>POS Product- {showPosIndex === index ? showPosState.pos : element.posName }</p>\n                <p>UPC- {showPosIndex === index ? showPosState.barcode : element.barcode}</p>\n                <p>Size- {showPosIndex === index ? showPosState.size : element.size}</p>\n                <p>Department - {showPosIndex === index ? showPosState.department : element.department}</p>\n                <p>Unit Cost- {showPosIndex === index ? showPosState.unitCost : element.cost}</p> \n                <p>Unit Price- {showPosIndex === index ? showPosState.unitPrice : element.sellingPrice}</p>\n                <div >\n                <button onClick={ () => {\n                            if(notFounds === \"true\"){\n                              toggleModal();\n                            }else{\n                              updateItem(props, (parseFloat(element.unitPrice) / parseInt(element.pieces)).toFixed(2))\n                            }\n                          }\n                        } \n                  disabled={showPosIndex === index ? false : true}\n                  style={{backgroundColor: \"green\",\n                  border: \"none\",\n                  color: \"white\",\n                  padding: \"4px 8px\",\n                  textAlign: \"center\",\n                  textDecoration: \"none\",\n                  display: \"inline-block\",\n                  fontSize: \"14px\",\n                  align: \"left\"}} >\n                  Update Item\n                </button>\n                </div> \n              </div> */}\n            </td>\n            <td>\n              {showPosIndex === index ? showPosState.posSku : element.posSku}\n            </td>\n            <td>\n              <TextField\n                type=\"tel\"\n                value={element.qty}\n                id=\"outlined-secondary\"\n                variant=\"outlined\"\n                onChange={(e) => {\n                  handleChange(index, \"qty\", e.target.value);\n                }}\n                style={{ width: 100 }}\n              />\n            </td>\n            <td>\n              <Autocomplete\n                value={element.itemNo}\n                onChange={(event, newValue) => {\n                  if (newValue) {\n                    handleChange(index, \"itemNo\", newValue);\n                  }\n                }}\n                id=\"combo-box\"\n                options={itemNoDropdown}\n                getOptionLabel={(option) => option}\n                style={{ width: 200 }}\n                renderInput={(params) => (\n                  <TextField {...params} variant=\"outlined\" />\n                )}\n              />\n            </td>\n            <td>\n              <Autocomplete\n                value={\n                  showPosIndex === index ? showPosState.item : element.itemNo\n                }\n                onChange={(event, newValue) => {\n                  if (newValue) {\n                    let newState = { ...showPosState };\n                    console.log(newValue);\n                    // newState.item = newValue.name;\n                    newState.item = element.itemNo;\n                    newState.description = element.description;\n                    newState.barcode = newValue.upc;\n                    newState.pos = newValue.name;\n                    newState.posSku = newValue.sku;\n                    newState.size = newValue.size;\n                    newState.department = newValue.department;\n                    newState.unitCost = newValue.cost;\n                    newState.unitPrice = newValue.price;\n                    setShowPosState(newState);\n                    setShowPosIndex(index);\n                    setUnitCost(newValue.cost);\n                    if (isEmpty) {\n                      setNotFound(\"true\");\n                    }\n                    //setDisabled(false);\n                    //updateOnHoverDetails(index);\n                    //setShowPosIndex(index);\n                    // console.log(newValue);\n                    // console.log(newState);\n                    //console.log(showPosState);\n                  }\n                }}\n                id=\"combo-box\"\n                disabled\n                // options={element.fuzzSuggestion}\n                options={hicksvilleData}\n                getOptionLabel={(option) => option.label ?? element.itemNo}\n                style={{ width: 400 }}\n                renderInput={(params) => (\n                  <TextField {...params} variant=\"outlined\" />\n                )}\n              />\n            </td>\n\n            <td>{element.description}</td>\n            {/* <td>{element.pieces}</td> */}\n            <td>\n              <TextField\n                type=\"tel\"\n                value={element.pieces}\n                variant=\"outlined\"\n                onChange={(e) => {\n                  handleChange(index, \"pieces\", e.target.value);\n                }}\n                style={{ width: 100 }}\n              />\n            </td>\n            <td>\n              <TextField\n                type=\"tel\"\n                value={element.unitPrice}\n                variant=\"outlined\"\n                onChange={(e) => {\n                  handleChange(index, \"unitPrice\", e.target.value);\n                }}\n                style={\n                  // element.priceIncrease === 1\n                  //   ? { backgroundColor: \"#1a8cff\", width: 100 }\n                  //   : element.priceIncrease === -1\n                  //   ? { backgroundColor: \"#ffb31a\", width: 100 }\n                  //   : { width: 100 }\n                  showPosIndex === index\n                    ? costInc === \"true\"\n                      ? { backgroundColor: \"#1a8cff\", width: 100 }\n                      : costDec === \"true\"\n                      ? { backgroundColor: \"#ffb31a\", width: 100 }\n                      : { width: 100 }\n                    : element.priceIncrease === 1\n                    ? { backgroundColor: \"#1a8cff\", width: 100 }\n                    : element.priceIncrease === -1\n                    ? { backgroundColor: \"#ffb31a\", width: 100 }\n                    : { width: 100 }\n                }\n              />\n            </td>\n            <td>{element.extendedPrice}</td>\n            {/* <td>{element.cp}</td> */}\n            <td>\n              <TextField\n                type=\"tel\"\n                value={element.cp}\n                variant=\"outlined\"\n                onChange={(e) => {\n                  handleChange(index, \"cp\", e.target.value);\n                }}\n                style={{ width: 100 }}\n              />\n            </td>\n            <td>\n              <TextField\n                type=\"tel\"\n                value={element.sp}\n                variant=\"outlined\"\n                onChange={(e) => {\n                  handleChange(index, \"sp\", e.target.value);\n                }}\n                style={{ width: 100 }}\n              />\n            </td>\n            <td>{element.markup}</td>\n            {/* <td>\n              <Checkbox\n                checked={!element.show}\n                onChange={(e) => handleChange(index, \"show\", e.target.value)}\n                inputProps={{ \"aria-label\": \"primary checkbox\" }}\n              />\n            </td> */}\n            <td>\n              <Button\n                text={element.show ? \"Delete\" : \"Undo\"}\n                color=\"btn btn-info\"\n                type=\"submit\"\n                onClick={() => deleteRow(index)}\n              />\n            </td>\n            <td>\n              <Button\n                text=\"Update POS\"\n                color=\"btn btn-info\"\n                type=\"submit\"\n                onClick={() => pushSingleItemToInventory(index)}\n                style={{ width: 120 }}\n              />\n            </td>\n            <td>{index + 1}</td>\n            {/* <td>\n              <Button\n                text={element.show ? \"Delete\" : \"Undo\"}\n                color=\"btn btn-info\"\n                type=\"submit\"\n                onClick={() => deleteRow(index)}\n              />\n            </td> */}\n          </tr>\n        );\n      });\n      return (\n        <div style={{ marginTop: \"70px\" }}>\n          <div className={styles.divRow} style={{ marginTop: \"80px\" }}>\n            <Button\n              text=\"Save Invoice Data\"\n              color=\"btn btn-info\"\n              type=\"submit\"\n              onClick={toggleModal}\n            />\n            <Button\n              text=\"Re upload\"\n              color=\"btn btn-info\"\n              type=\"submit\"\n              onClick={() => window.location.reload()}\n            />\n          </div>\n          <table className=\"table table-hover table-responsive-sm\">\n            <tbody>\n              <tr>{renderTableHeader()}</tr>\n              {rows}\n              <tr>\n                <td>\n                  <Button text=\"Add cell\" color=\"btn btn-info\" />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <div className={styles.divRow}>\n            <Button\n              text=\"Update Inventory\"\n              color=\"btn btn-info\"\n              type=\"submit\"\n            />\n            <Button\n              text=\"Save Invoice Data\"\n              color=\"btn btn-info\"\n              type=\"submit\"\n              onClick={toggleModal}\n            />\n            <Button\n              text=\"Re upload\"\n              color=\"btn btn-info\"\n              type=\"submit\"\n              onClick={() => window.location.reload()}\n            />\n          </div>\n        </div>\n      );\n    }\n  };\n\n  const updateItem = async () => {\n    console.log(\"updateItem_selectedDropdown : \", selectedDropdown);\n    console.log(\"updateItem_InvoiceNo : \", invoiceNo);\n    console.log(\"updateItem_date : \", date);\n    console.log(\"updateItem_itemName : \", itemName);\n    const data = {\n      invoiceName: selectedDropdown.slug,\n      itemName: itemName,\n      value: {\n        isReviewed: \"true\",\n        Item: itemName,\n        Quantity: unitsInCase,\n        Description: posProduct.Description,\n        Price: caseCost,\n        POS: posProduct.POS,\n        Barcode: posProduct.Barcode,\n        PosSKU: posProduct.PosSKU,\n        Size: posProduct.Size,\n        Department: posProduct.Department,\n        SellerCost: newUnitCost,\n        SellingPrice: newUnitPrice,\n      },\n    };\n    console.log(data);\n\n    // const result = await inventoryService.UpdateProductFields(data);\n    // console.log(result);\n  };\n\n  const getItems = async () => {\n    // const data = {\n    //   invoice: invoice.slug,\n    // }\n    const data = invoice;\n    console.log(data);\n    const res = await inventoryService.getItemForHandwrittenInvoice(data);\n    console.log(res);\n    return res;\n  };\n\n  const toggleModal = (x) => {\n    console.log(posProduct);\n    console.log(!showModal);\n    if(x === \"showModal\"){\n      setShowModal(!showModal);\n    }else{\n      setDetailsModal(!detailsModal);\n    }\n    \n  };\n\n  const handleChange = (key, val) => {\n    setPosProduct({\n      ...posProduct,\n      [key]: val,\n    });\n  };\n\n  const addProduct = () => {\n    setShowModal(!showModal);\n    console.log(posProduct);\n    const data = {\n      InvoiceName: invoice.slug,\n      ItemName: posProduct.itemName,\n      POS: posProduct.pos,\n      Barcode: posProduct.barcode,\n      PosSKU: posProduct.posSku,\n      Size: posProduct.size,\n      Department: posProduct.department,\n      SellerCost: posProduct.unitCost,\n      SellingPrice: posProduct.unitPrice,\n      NewUnitCost: posProduct.newUnitCost,\n      NewUnitPrice: posProduct.newUnitPrice,\n    };\n\n    inventoryService\n      .handwrittenLogs(data)\n      .then((res) => {\n        if (!res) {\n          throw new Error(\"Product not created\");\n        }\n        console.log(res);\n        alert(\"Successfully updated fields\");\n      })\n      .then()\n      .catch((err) => {\n        console.log(err);\n        alert(\"Some error occuured in creating product\");\n      })\n      .finally();\n  };\n\n  const hicksvilleDropdownNew = async (event, value, index) => {\n    console.log(event);\n    console.log(value);\n    console.log(value.length);\n    setOptions([]);\n\n    if (!isNaN(value) && value.length > 0) {\n      console.log(\"number\");\n      const res = await inventoryService.getHicksvilleData(value.toUpperCase());\n      const data = res;\n      console.log(data);\n\n      let productsString = \"\";\n      for (let i = 0; i < data.length; i++) {\n        productsString = productsString + data[i].name + \"$$$\";\n      }\n      let result = productsString.split(\"$$$\");\n\n      let newData = [];\n      for (let i = 0; i < result.length; i++) {\n        let s = result[i].split(\"@@@\");\n        let obj = {\n          sku: s[1] === \"nan\" ? null : s[1],\n          upc: s[0] === \"nan\" ? null : s[0],\n          altupc1: s[14] === \"nan\" ? null : s[14],\n          altupc2: s[15] === \"nan\" ? null : s[15],\n          name: s[2] === \"nan\" ? null : s[2],\n          vintage: s[8] === \"nan\" ? null : s[8],\n          totalQty: s[13] === \"nan\" ? null : s[13],\n          cost: s[4] === \"nan\" ? null : s[4],\n          pricea: s[10] === \"nan\" ? null : s[10],\n          priceb: s[11] === \"nan\" ? null : s[11],\n          pricec: s[12] === \"nan\" ? null : s[12],\n          department: s[9] === \"nan\" ? null : s[9],\n          salePrice: s[5] === \"nan\" ? null : s[5],\n          size: s[6] === \"nan\" ? null : s[6],\n          pack: s[7] === \"nan\" ? null : s[7],\n          price: s[3] === \"nan\" ? null : s[3],\n        };\n        newData.push(obj);\n      }\n      const filter = newData.map((element) => {\n        let obj = { ...element };\n        obj.label = `${element.name}--${element.price}--${element.upc}--${element.size}--${element.cost}--${element.sku}`;\n        //console.log(obj);\n        return obj;\n      });\n      setOptions(filter);\n    }\n\n    if (isNaN(value) && value != null && value.length >= 4) {\n      console.log(\"string\");\n      // setDropdownLoader(true);\n      // setFetchingOptions(true);\n      const res = await inventoryService.getHicksvilleData(value.toUpperCase());\n      const data = res;\n      console.log(data);\n\n      let productsString = \"\";\n      for (let i = 0; i < data.length; i++) {\n        productsString = productsString + data[i].name + \"$$$\";\n      }\n      let result = productsString.split(\"$$$\");\n\n      let newData = [];\n      for (let i = 0; i < result.length; i++) {\n        let s = result[i].split(\"@@@\");\n        let obj = {\n          sku: s[1] === \"nan\" ? null : s[1],\n          upc: s[0] === \"nan\" ? null : s[0],\n          altupc1: s[14] === \"nan\" ? null : s[14],\n          altupc2: s[15] === \"nan\" ? null : s[15],\n          name: s[2] === \"nan\" ? null : s[2],\n          vintage: s[8] === \"nan\" ? null : s[8],\n          totalQty: s[13] === \"nan\" ? null : s[13],\n          cost: s[4] === \"nan\" ? null : s[4],\n          pricea: s[10] === \"nan\" ? null : s[10],\n          priceb: s[11] === \"nan\" ? null : s[11],\n          pricec: s[12] === \"nan\" ? null : s[12],\n          department: s[9] === \"nan\" ? null : s[9],\n          salePrice: s[5] === \"nan\" ? null : s[5],\n          size: s[6] === \"nan\" ? null : s[6],\n          pack: s[7] === \"nan\" ? null : s[7],\n          price: s[3] === \"nan\" ? null : s[3],\n        };\n        newData.push(obj);\n      }\n      const filter = newData.map((element) => {\n        let obj = { ...element };\n        if (element.itemNo != \"undefined\") {\n          obj.label = `${element.name}--${element.price}--${element.upc}--${element.size}--${element.cost}--${element.sku}`;\n        }\n        //console.log(obj);\n        return obj;\n      });\n      setOptions(filter);\n    }\n  };\n\n  const setProductsInTable = () => {\n    // setLoader(true);\n    dispatch({ type: \"LOADER\" });\n    async function invoiceData() {\n      const products = await tesseractService.GetProductDetails(\n        invoice.slug\n        // inv\n      );\n      console.log(products);\n      //console.log(props.selectedInvoice);\n      return products;\n    }\n    // invoiceData()\n    getItems()\n      .then((products) => {\n        /**post processing the table data after returning from filter */\n        // function convertToUpperCase(obj) {\n        //   let newObj = {};\n        //   for (let key in obj) {\n        //     newObj[key.toUpperCase()] = obj[key];\n        //   }\n        //   return newObj;\n        // }\n        // products = convertToUpperCase(products);\n        console.log(products);\n        // scanInvoiceData.InvoiceData = ocrData;\n        //   setOcrProducts(ocrData);\n\n        //   console.log(scanInvoiceData);\n        // scanInvoiceData.InvoiceData = ocrData;\n        //console.log(resScnInvDta);\n        //console.log(\"OCERDATa\", ocrData);\n        //console.log(products);\n        //console.log(scanInvoiceData);\n        let table = products.map((row) => {\n          /**For invoices which dont have item no, set description as item no */\n          if (row.itemNo === undefined) {\n            // row.itemNo = row.description.trim().toUpperCase();\n            // row.itemNo = row.Description.trim().toUpperCase();\n            row.itemNo = row.Description.trim();\n          }\n          // row.itemNo = row.itemNo.toString().toUpperCase();\n          // row.itemNo = row.Item.toString().toUpperCase();\n          row.itemNo = row.Item.toString();\n\n          row.description = row.Description;\n          // products[row.itemNo] !== undefined\n          //   ? products[row.itemNo].Description\n          //   : row.description;\n          row.pieces = row.Quantity;\n          // products[row.Item] !== undefined\n          //   ? products[row.Item].Quantity\n          //   : 0;\n          row.sku = row.sku;\n          // products[row.Item] !== undefined\n          //   ? products[row.Item].sku\n          //   : \"\";\n          row.barcode = row.Barcode;\n          // products[row.Item] !== undefined\n          //   ? products[row.Item].Barcode\n          //   : \"\";\n          row.posName = row.POS;\n          // products[row.Item] !== undefined\n          //   ? products[row.Item].POS\n          //   : \"\";\n          row.markup = 0;\n          row.show = true;\n          row.posSku = row.PosSKU;\n          // products[row.Item] !== undefined\n          //   ? products[row.Item].PosSKU\n          //   : \"\";\n          row.isReviewed = row.isReviewed;\n          // products[row.Item] !== undefined ? products[row.Item].isReviewed : \"\" ;\n          row.size = row.Size;\n          // products[row.Item] !== undefined ? products[row.Item].Size : \"\";\n          row.department = row.Department;\n          // products[row.Item] !== undefined ? products[row.Item].Department : \"\";\n          row.cost = row.SellerCost;\n          // products[row.Item] !== undefined ? products[row.Item].SellerCost : \"\";\n          row.sellingPrice = row.SellingPrice;\n          // products[row.Item] !== undefined ? products[row.Item].SellingPrice : \"\";\n          row.price = row.Price;\n          // products[row.Item] !== undefined ? products[row.Item].Price : \"\";\n          row.details = row.Details;\n          // products[row.Item] !== undefined ? products[row.Item].Details : \"\";\n          row.linkingCorrect = row.linkingCorrect;\n          // products[row.Item] !== undefined ? products[row.Item].LinkingCorrect : \"\";\n          // row.margin = products[row.Item] !== undefined ? ((products[row.Item].SellingPrice - products[row.Item].SellerCost)/ products[row.Item].SellerCost)*100 : \"\";\n          row.margin =\n            row.Item !== undefined\n              ? ((row.SellingPrice - row.SellerCost) / row.SellerCost) * 100\n              : \"\";\n          //console.log(\"department-\" + row.department + \"  cost-\" + row.cost + \"  price\" + row.sellingPrice);\n          let sp = 0;\n          let cp = 0;\n          // const barcode = products.Barcode\n          // if (parseInt(row.pieces)) {\n          //   sp = (parseFloat(row.unitPrice) / parseInt(row.pieces)).toFixed(\n          //     2\n          //   );\n          //   cp = sp;\n          // }\n          row.cp = \"\";\n          row.sp = \"\";\n          if (row.Item !== undefined) {\n            if (sp > row.SellerCost) {\n              row[\"priceIncrease\"] = 1;\n            } else if (sp < +row.SellerCost) {\n              row[\"priceIncrease\"] = -1;\n            } else if (sp == +row.SellerCost) {\n              row[\"priceIncrease\"] = 0;\n            }\n          } else {\n            row[\"priceIncrease\"] = 0;\n          }\n          // if (products[row.Item] !== undefined) {\n          //   if (sp > +products[row.Item].SellerCost) {\n          //     row[\"priceIncrease\"] = 1;\n          //   } else if (sp < +products[row.Item].SellerCost) {\n          //     row[\"priceIncrease\"] = -1;\n          //   } else if (sp == +products[row.Item].SellerCost) {\n          //     row[\"priceIncrease\"] = 0;\n          //   }\n          // } else {\n          //   row[\"priceIncrease\"] = 0;\n          // }\n          row.qty = \"\";\n          row.extendedPrice = \"\";\n          /**filter out the rows for which qty shipped & extendedPrice is zero */\n          if (row.qty == \"0\" && row.extendedPrice === \"0.00\") {\n            return null;\n          }\n          /**Calulate qty for which qty is not read/scanned by textract */\n          // if (!row.qty) {\n          //   row.qty = (\n          //     parseFloat(row.extendedPrice) / parseFloat(row.unitPrice)\n          //   ).toFixed(0);\n          // }\n          return { ...row, sp, cp };\n        });\n        // setLoader(false);\n        dispatch({ type: \"LOADER\" });\n\n        setTableData(table.filter((data) => data !== null));\n        setItemNoDropdown(Object.keys(products));\n        setProductDetails(products);\n      })\n      .catch((err) => {\n        console.log(\"error on mapping ocrdata\", err);\n        // setLoader(false);\n        dispatch({ type: \"LOADER\" });\n      });\n  };\n\n  // ************* Add by Deepanshu *****************\n  const fetchSavedData = async (invoice = inv, no = num, date = day) => {\n    const data = await tesseractService.GetSavedInvoiceData(invoice, no, date);\n    console.log(\"fetchSavedData_data : \", data);\n    if (data.length === 0) {\n      alert(\"Invoice doesnt Exist!!\");\n    } else return data[0].InvoiceData;\n    // console.log(data);\n    // console.log(data[0].InvoiceData);\n  };\n\n  async function invoiceData() {\n    const products = await tesseractService.GetProductDetails(invoice);\n    //console.log(props.selectedInvoice);\n    return products;\n  }\n\n  const no = \"2022-01-21\";\n  // fetchSavedData(invoice, no, date).then((ocrData) => {\n  //   console.log(\"fetchSavedData_ocrData : \",ocrData);\n  //   invoiceData()\n  //     .then((products) => {\n  //       console.log(\"fetchSavedData_products : \",products);\n  //       /**post processing the table data after returning from filter */\n  //       function convertToUpperCase(obj) {\n  //         let newObj = {};\n  //         for (let key in obj) {\n  //           newObj[key.toUpperCase()] = obj[key];\n  //         }\n  //         return newObj;\n  //       }\n  //       products = convertToUpperCase(products);\n  //       console.log(products);\n  //       // scanInvoiceData.InvoiceData = ocrData;\n  //     //   setOcrProducts(ocrData);\n\n  //     //   console.log(scanInvoiceData);\n  //       // scanInvoiceData.InvoiceData = ocrData;\n  //       //console.log(resScnInvDta);\n  //       console.log(\"OCERDATa\", ocrData);\n  //       //console.log(products);\n  //       //console.log(scanInvoiceData);\n  //       let table = ocrData.map((row) => {\n  //         /**For invoices which dont have item no, set description as item no */\n  //         row.itemNoPresent = row.itemNo === undefined ? false : true;\n  //         if (row.itemNo === undefined) {\n  //           row.itemNo = row.description.trim().toUpperCase();\n  //         }\n  //         row.itemNo = row.itemNo.toString().toUpperCase();\n\n  //         row.description = row.description;\n  //           // products[row.itemNo] !== undefined\n  //           //   ? products[row.itemNo].Description\n  //           //   : row.description;\n  //         row.pieces =\n  //           products[row.itemNo] !== undefined\n  //             ? products[row.itemNo].Quantity\n  //             : 0;\n  //         row.sku =\n  //           products[row.itemNo] !== undefined\n  //             ? products[row.itemNo].sku\n  //             : \"\";\n  //         row.barcode =\n  //           products[row.itemNo] !== undefined\n  //             ? products[row.itemNo].Barcode\n  //             : \"\";\n  //         row.posName =\n  //           products[row.itemNo] !== undefined\n  //             ? products[row.itemNo].POS\n  //             : \"\";\n  //         row.markup = 0;\n  //         row.show = true;\n  //         row.posSku =\n  //           products[row.itemNo] !== undefined\n  //             ? products[row.itemNo].PosSKU\n  //             : \"\";\n  //         row.isReviewed =\n  //           products[row.itemNo] !== undefined ? products[row.itemNo].isReviewed : \"\" ;\n  //         row.size =\n  //           products[row.itemNo] !== undefined ? products[row.itemNo].Size : \"\";\n  //         row.department =\n  //           products[row.itemNo] !== undefined ? products[row.itemNo].Department : \"\";\n  //         row.cost =\n  //           products[row.itemNo] !== undefined ? products[row.itemNo].SellerCost : \"\";\n  //         row.sellingPrice =\n  //           products[row.itemNo] !== undefined ? products[row.itemNo].SellingPrice : \"\";\n  //         row.price =\n  //           products[row.itemNo] !== undefined ? products[row.itemNo].Price : \"\";\n  //         row.details =\n  //           products[row.itemNo] !== undefined ? products[row.itemNo].Details : \"\";\n  //         row.linkingCorrect =\n  //           products[row.itemNo] !== undefined ? products[row.itemNo].LinkingCorrect : \"\";\n  //         row.margin = products[row.itemNo] !== undefined ? ((products[row.itemNo].SellingPrice - products[row.itemNo].SellerCost)/ products[row.itemNo].SellerCost)*100 : \"\";\n  //         //console.log(\"department-\" + row.department + \"  cost-\" + row.cost + \"  price\" + row.sellingPrice);\n  //         let sp = 0;\n  //         let cp = 0;\n  //         // const barcode = products.Barcode\n  //         if (parseInt(row.pieces)) {\n  //           sp = (parseFloat(row.unitPrice) / parseInt(row.pieces)).toFixed(\n  //             2\n  //           );\n  //           cp = sp;\n  //         }\n  //         if (products[row.itemNo] !== undefined) {\n  //           if (sp > +products[row.itemNo].SellerCost) {\n  //             row[\"priceIncrease\"] = 1;\n  //           } else if (sp < +products[row.itemNo].SellerCost) {\n  //             row[\"priceIncrease\"] = -1;\n  //           } else if (sp == +products[row.itemNo].SellerCost) {\n  //             row[\"priceIncrease\"] = 0;\n  //           }\n  //         } else {\n  //           row[\"priceIncrease\"] = 0;\n  //         }\n\n  //         /**filter out the rows for which qty shipped & extendedPrice is zero */\n  //         if (row.qty == \"0\" && row.extendedPrice === \"0.00\") {\n  //           return null;\n  //         }\n  //         /**Calulate qty for which qty is not read/scanned by textract */\n  //         if (!row.qty) {\n  //           row.qty = (\n  //             parseFloat(row.extendedPrice) / parseFloat(row.unitPrice)\n  //           ).toFixed(0);\n  //         }\n  //       return { ...row, sp, cp };\n  //       });\n  //       // setLoader(false);\n  //       dispatch({type: \"LOADER\"});\n\n  //       setTableData(table.filter((data) => data !== null));\n  //       console.log(\"fetchSavedData_tableData : \",tableData);\n  //       setItemNoDropdown(Object.keys(products));\n  //       setProductDetails(products);\n  //     })\n  //     .catch((err) => {\n  //       console.log(\"error on mapping ocrdata\", err)\n  //       // setLoader(false);\n  //       dispatch({type: \"LOADER\"});\n  //     });\n  // });\n\n  // ************* Add by Deepanshu *****************\n  useEffect(() => {\n    const curDate = new Date();\n    console.log(curDate);\n    let date =\n      curDate.getFullYear() +\n      \"-\" +\n      (curDate.getMonth() + 1) +\n      \"-\" +\n      curDate.getDate();\n    console.log(date);\n    setTodayDate(date);\n\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        // setUserEmail(user.email);\n        setUserEmail(user.email);\n        console.log(\"This is the user: \", user);\n        console.log(\"This is the user: \", user.email);\n      } else {\n        // No user is signed in.\n        console.log(\"There is no logged in user\");\n      }\n    });\n  }, []);\n\n  return (\n    <div className=\"container-fluid\">\n      <Paper className={classes.root}>\n        <Grid style={{ display: \"flex\" }}>\n          {/* <ul>\n                  <li> */}\n          <Autocomplete\n            value={selectedDropdown}\n            onChange={(event, newValue) => {\n              console.log(\"newValue\", newValue);\n              if (newValue) {\n                console.log(newValue);\n                setSelectedDropdown(newValue);\n                // setInvoice(newValue);\n                // setTimeout(()=> {}, 1000);\n                // invoice = newValue;\n                // console.log(invoice);\n                // setProductsInTable();\n              }\n              // getInvoices(newValue);\n            }}\n            id=\"combo-box\"\n            options={dropdownOptions}\n            getOptionLabel={(option) => option.value}\n            style={{ width: 200 }}\n            autoHighlight\n            renderInput={(params) => (\n              <TextField {...params} label={dropdownLabel} variant=\"outlined\" />\n            )}\n          />\n          {/* </li> */}\n          <br />\n\n          {/* <li> */}\n          <TextField\n            label=\"Item Name\"\n            variant=\"outlined\"\n            value={posProduct.Item}\n            onChange={(event) => {\n              handleChange(\"Item\", event.target.value);\n              setItemName(event.target.value);\n            }}\n          />\n          <TextField\n            label=\"Inoive No.\"\n            variant=\"outlined\"\n            type=\"text\"\n            name=\"invoiceNo\"\n            value={invoiceNo}\n            onChange={(event) => {\n              setInvoiceNo(event.target.value);\n              console.log(\"setInvoiceNo_inoiceNo : \", invoiceNo);\n            }}\n          />\n\n          <TextField\n            variant=\"outlined\"\n            type=\"date\"\n            name=\"date\"\n            value={date}\n            onChange={(event) => {\n              setDate(event.target.value);\n              console.log(\"setDate_date : \", date);\n            }}\n          />\n          {/* </li> */}\n          <br />\n          {/* <li> */}\n          <Autocomplete\n            value={posProduct.POS}\n            loading={true}\n            onInputChange={(event, value) => {\n              console.log(\"ON INPUT CHANGE\");\n              // event.toLowerCase();\n              // value.toLowerCase();\n              // console.log(event.target.value);\n              // console.log(value);\n              // searchDropdown(event, value);\n              // setOptions([]);\n              if (event != null) {\n                setTimeout(() => {\n                  hicksvilleDropdownNew(event, value);\n                }, 1500);\n              }\n              // hicksvilleDropdownNew(event, value, index);\n            }}\n            onChange={(event, newValue) => {\n              // console.log(event.target.value);\n              // console.log(newValue);\n              if (newValue) {\n                let newState = { ...posProduct };\n                console.log(newValue);\n                newState.Item = itemName;\n                newState.isReviewed = \"true\";\n                // newState.item = element.itemNo\n                newState.Description = newValue.name;\n                newState.Barcode = newValue.upc;\n                newState.POS = newValue.name;\n                newState.PosSKU = newValue.sku;\n                newState.Size = newValue.size;\n                newState.Department = newValue.department;\n                newState.SellerCost = newValue.cost;\n                newState.SellingPrice = newValue.price;\n                // setShowPosState(newState);\n                // setShowPosIndex(index);\n                // setUnitCost(newValue.cost);\n                // setStateUpdated(\"\");\n\n                setPosProduct(newState);\n                singleItemData = [];\n\n                //setDisabled(false);\n                //updateOnHoverDetails(index);\n                //setShowPosIndex(index);\n                // console.log(newValue);\n                console.log(newState);\n                //console.log(showPosState);\n                // toggleModal();\n              }\n            }}\n            id=\"combo-box\"\n            // options={element.fuzzSuggestion}\n            options={options}\n            // getOptionLabel={option => option.label}\n            getOptionLabel={(option) => option.label ?? posProduct.item}\n            // getOptionLabel={(option) => dropdownLoader ? <Spinner /> : option.label}\n            style={{ width: 400 }}\n            renderInput={(params) => (\n              <TextField {...params} label=\"POS Product\" variant=\"outlined\" />\n            )}\n          />\n          <button\n            style={{\n              backgroundColor: \"green\",\n              height: \"50px\",\n              border: \"none\",\n              color: \"white\",\n              padding: \"4px 8px\",\n              textAlign: \"center\",\n              textDecoration: \"none\",\n              display: \"inline-block\",\n              fontSize: \"14px\",\n              align: \"left\",\n              marginLeft: 20,\n            }}\n            // onClick={setProductsInTable}\n            onClick={()=>toggleModal(\"showModal\")}\n          >\n            Add New Product\n          </button>\n          {/* </li >\n                </ul> */}\n        </Grid>\n      </Paper>\n      <p>Invoice-- {invoice}</p>\n\n      <div>{renderTableData()}</div>\n\n      <CModal show={showModal} onClose={() => toggleModal(\"showModal\")}>\n        <CModalHeader closeButton>{modalLabel}</CModalHeader>\n        <CModalBody>\n          <CContainer fluid>\n            <CRow>\n              <CCol sm=\"12\">\n                <CRow>\n                  <CCol sm=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"type\">Barcode</CLabel>\n                      <CInput\n                        disabled\n                        type=\"text\"\n                        name=\"type\"\n                        value={posProduct.Barcode}\n                        onChange={(event) =>\n                          handleChange(\"Barcode\", event.target.value)\n                        }\n                      />\n                    </CFormGroup>\n                  </CCol>\n                  <CCol sm=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"short_description\">POS SKU</CLabel>\n                      <CInput\n                        disabled\n                        type=\"text\"\n                        name=\"short_description\"\n                        value={posProduct.PosSKU}\n                        onChange={(event) =>\n                          handleChange(\"PosSKU\", event.target.value)\n                        }\n                      />\n                    </CFormGroup>\n                  </CCol>\n                </CRow>\n                <CFormGroup>\n                  <CLabel htmlFor=\"regular_price\">POS Name</CLabel>\n                  <CInput\n                    disabled\n                    type=\"text\"\n                    name=\"regular_price\"\n                    value={posProduct.POS}\n                    onChange={(event) =>\n                      handleChange(\"POS\", event.target.value)\n                    }\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"size\">POS Size</CLabel>\n                  <CInput\n                    disabled\n                    type=\"text\"\n                    name=\"size\"\n                    value={posProduct.Size}\n                    onChange={(event) =>\n                      handleChange(\"Size\", event.target.value)\n                    }\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"department\">Department</CLabel>\n                  <CInput\n                    disabled\n                    type=\"text\"\n                    name=\"department\"\n                    value={posProduct.Department}\n                    onChange={(event) =>\n                      handleChange(\"Department\", event.target.value)\n                    }\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"unitsInCase\">Units In Case</CLabel>\n                  <CInput\n                    type=\"text\"\n                    name=\"unitsInCase\"\n                    value={unitsInCase}\n                    onChange={(event) => setUnitsInCase(event.target.value)}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"caseCost\">Case Cost</CLabel>\n                  <CInput\n                    type=\"text\"\n                    name=\"caseCost\"\n                    value={caseCost}\n                    onChange={(event) => setCaseCost(event.target.value)}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"unitPrice\">POS Unit Price</CLabel>\n                  <CInput\n                    disabled\n                    type=\"text\"\n                    name=\"unitPrice\"\n                    value={posProduct.SellingPrice}\n                    onChange={(event) =>\n                      handleChange(\"SellingPrice\", event.target.value)\n                    }\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"unitCost\">POS Unit Cost</CLabel>\n                  <CInput\n                    disabled\n                    type=\"text\"\n                    name=\"unitCost\"\n                    value={posProduct.SellerCost}\n                    onChange={(event) =>\n                      handleChange(\"SellerCost\", event.target.value)\n                    }\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"newUnitCost\">New POS Unit Cost</CLabel>\n                  <CInput\n                    type=\"text\"\n                    name=\"newUnitCost\"\n                    value={newUnitCost}\n                    onChange={(event) => setNewUnitCost(event.target.value)}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"newUnitPrice\">New POS Unit Price</CLabel>\n                  <CInput\n                    type=\"text\"\n                    name=\"newUnitPrice\"\n                    value={newUnitPrice}\n                    onChange={(event) => setNewUnitPrice(event.target.value)}\n                  />\n                </CFormGroup>\n              </CCol>\n            </CRow>\n          </CContainer>\n        </CModalBody>\n        <CModalFooter>\n          {/* <CButton color=\"primary\" onClick={() => addProduct()}> */}\n          <CButton color=\"primary\" onClick={() => updateItem()}>\n            Add\n          </CButton>{\" \"}\n          <CButton color=\"secondary\" onClick={toggleModal}>\n            Cancel\n          </CButton>\n        </CModalFooter>\n      </CModal>\n\n\n      <CModal show={detailsModal} onClose={() => toggleModal(\"details\")}>\n      <CModalHeader closeButton>Save Invoice Data</CModalHeader>\n      <CModalBody>\n        <CContainer fluid>\n          <CRow>\n            <CCol sm=\"6\">\n              <CFormGroup>\n                <CLabel htmlFor=\"invoiceNo\">Invoice No.</CLabel>\n                <CInput\n                  type=\"text\"\n                  name=\"invoiceNo\"\n                  value={invoiceNo}\n                  onChange={(event) => setInvoiceNo(event.target.value)}\n                  />\n                <CLabel htmlFor=\"date\">Date</CLabel>\n                <CInput\n                  type=\"date\"\n                  name=\"date\"\n                  value={date}\n                  onChange={(event) => setDate(event.target.value)}\n                  />\n                \n              </CFormGroup>\n            </CCol>\n          </CRow>\n        </CContainer>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"primary\" >\n          Save Invoice\n        </CButton>{\" \"}\n        <CButton color=\"secondary\" onClick={toggleModal}>\n          Cancel\n        </CButton>\n      </CModalFooter>\n      </CModal>\n\n\n    </div>\n  );\n};\n\nexport default HandwrittenInvoice;\n"],"sourceRoot":""}