{"version":3,"sources":["services/InventoryService.js","components/Inventory/Inventory.js"],"names":["InventoryService","productSKU","a","WordpressAxios","get","params","sku","response","data","productId","put","res","post","upc","itemName","Axios","appendURL","console","log","invoiceName","invoiceNo","date","itemNo","dateObj","columns","id","label","useStyles","makeStyles","root","width","paddingTop","container","maxHeight","marginTop","table","fontWeight","fontSize","backgroundColor","cursor","StickyHeadTable","classes","React","useState","page","setPage","rowsPerPage","setRowsPerPage","inventoryService","products","setProducts","loader","setLoader","searchVal","setSearchVal","startDate","setStartDate","endDate","setEndDate","getProducts","SyncInventory","map","item","UPC","SKU","ItemName","Price","cost","Cost","price","currentStockQuantity","TotalQty","posSoldQuantity","soldQty","wordpressSoldQty","alert","useEffect","getInitialSyncedData","ITEMNAME","PRICEPERUNIT","QuantitySold","OnHand","className","style","display","variant","value","marginLeft","onChange","e","target","type","InputLabelProps","shrink","event","border","color","padding","textAlign","textDecoration","align","onClick","options","method","headers","UserId","Password","Pin","body","STARTDATE","ENDDATE","json","then","error","onGo","flexGrow","sm","stickyHeader","aria-label","column","minWidth","slice","filter","toLowerCase","includes","row","hover","role","rowsPerPageOptions","component","count","length","onChangePage","newPage","onChangeRowsPerPage"],"mappings":"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","file":"static/js/13.4c703b17.chunk.js","sourcesContent":["import { POSAxios, WordpressAxios } from \"./axios\";\nimport Axios from \"./axios\";\nconst appendURL = process.env.NODE_ENV === \"production\" ? \"/server\" : \"\";\n\nexport class InventoryService {\n  async GetProductDetails(productSKU) {\n    const response = await WordpressAxios.get(`/products/`, {\n      params: { sku: productSKU },\n    });\n    return response.data;\n  }\n\n  async UpdateProductDetails(productId, data) {\n    const res = await WordpressAxios.put(`/products/${productId}`, data);\n    return res.data;\n  }\n  async getAllProducts() {\n    const res = await WordpressAxios.get(\"products\");\n    return res.data;\n  }\n  async createProduct(data) {\n    const res = await WordpressAxios.post(\"products\", data);\n    return res.data;\n  }\n\n  async GetPOSProductDetails(upc, itemName = \"\") {\n    const response = await Axios.get(appendURL + \"/api/getPOSProduct\", {\n      params: { upc, itemName },\n    });\n    return response.data;\n  }\n  async UpdatePOSProducts(data) {\n    console.log(data);\n    const res = await Axios.post(\n      appendURL + \"/api/pos/Product/ManageItem\",\n      data\n    );\n    return res.data;\n  }\n  async SyncInventory() {\n    const res = await Axios.get(appendURL + \"/api/sync\");\n    console.log(res.data);\n    return res.data;\n  }\n  async UpdateProductFields(data) {\n    /**\n     ***** data format\n     * data = {invoiceName: \"chetak\", itemName:\"CAS 123\", value:{\"Description\": \"jnckwc\", \"Price\": \"44\"}}\n     */\n    //  console.log(data);\n    const res = await Axios.put(\n      appendURL + \"/api/invoice/product/update\",\n      data\n    );\n    return res.data;\n  }\n\n  async CreateNotFoundItems(data) {\n    /**\n     * data format\n     * {Item:String,Description:String,Quantity:String,Price:String,sku:String,Barcode:String,PosSKU:String,InvoiceName:String}\n     */\n    const res = await Axios.post(appendURL + \"/api/invoice/notfound\", data);\n    return res.data;\n  }\n\n  async CreateScanInvoiceData(data){\n    //console.log(\"IN INVENTORY SERVICE\");\n    //console.log(data);\n    const res = await Axios.post(appendURL + \"/api/invoice/scaninvoicedata\", data);\n    return res.data;\n  }\n  async UpdateInvoiceData(invoiceName, invoiceNo, date, itemNo) {\n    console.log(invoiceName);\n    console.log(invoiceNo);\n    console.log(itemNo);\n    console.log(date);\n    const res = await Axios.post(appendURL + \"/api/invoice/updateinvoicedata\", {params:{ invoiceName: invoiceName, invoiceNo: invoiceNo,date: date, itemNo: itemNo}});\n    return res.data;\n  }\n\n  async UpdateDBafterPosUpdate(data){\n    console.log(data);\n    const res = await Axios.post(appendURL + \"/api/invoice/updatedbafterposupdate\", data);\n    console.log(res);\n\n  }\n\n  async UpdateDBProduct(data) {\n    console.log(data);\n    const res = await Axios.put(appendURL + \"/api/invoice/pos/update\", data);\n    return res.data;\n  }\n  async CreateDBProduct(data) {\n    const res = await Axios.post(appendURL + \"/api/invoice/pos/create\", data);\n    return res.data;\n  }\n\n  async getInitialSyncedData(dateObj) {\n    console.log(\"In inventory service\");\n    console.log(dateObj);\n    const res = await Axios.get(appendURL + \"/api/invoice/pos\",dateObj);\n    console.log(res);\n    return res.data;\n  }\n}\n","import { CRow, CCol, CDataTable } from \"@coreui/react\";\nimport { InventoryService } from \"../../services/InventoryService\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Axios from \"axios\";\n\nconst columns = [\n  { id: \"upc\", label: \"UPC\" },\n  { id: \"sku\", label: \"SKU\" },\n  { id: \"itemName\", label: \"Item Name\" },\n  { id: \"cost\", label: \"Cost\" },\n  { id: \"price\", label: \"Price\" },\n  { id: \"currentStockQuantity\", label: \"Current Stock Quantity\" },\n  { id: \"posSoldQuantity\", label: \"POS Sold Quantity\" },\n  { id: \"wordpressSoldQty\", label: \"Wordpress Sold Qty.\" },\n  { id: \"OnHand\", label: \"On Hand\"},\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    paddingTop: 50,\n  },\n  container: {\n    maxHeight: \"80vh\",\n    marginTop: 10,\n  },\n  table: {\n    \"& thead th\": {\n      fontWeight: \"600\",\n      fontSize: 20,\n      backgroundColor: \"grey\",\n    },\n    \"& tbody td\": {\n      fontWeight: \"300\",\n    },\n    \"& tbody tr:hover\": {\n      backgroundColor: \"#fffbf2\",\n      cursor: \"pointer\",\n    },\n  },\n});\n\nexport default function StickyHeadTable() {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(100);\n  const inventoryService = new InventoryService();\n  const [products, setProducts] = React.useState([]);\n  const [loader, setLoader] = React.useState(true);\n  const [searchVal, setSearchVal] = React.useState(\"\");\n  const [startDate, setStartDate] = React.useState(\"20-July-2021\");\n  const [endDate, setEndDate] = React.useState(\"22-July-2021\");\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const changeDateFormat = (date) => {\n    let defaultDate = new Date(date);\n    let month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"][defaultDate.getMonth()];\n    let formattedDate = defaultDate.getDate()+\"-\"+month+\"-\"+defaultDate.getFullYear();\n    return formattedDate;\n  }\n\n  const onGo = () => {\n    console.log(startDate);\n    console.log(endDate);\n    const options = {\n      method: \"GET\",\n      headers:{\n        UserId: \"lRRqlkYefuV=\",\n        Password: \"lRRqlkYefuV6jJ==\",\n        Pin: \"qzOUsBmZFgMDlwGtrgYypxUz\",\n        'Content-Type' : 'application/x-www-form-urlencoded; charset=UTF-8',\n      },\n      body:{\n        STARTDATE: startDate,\n        ENDDATE: endDate\n      },\n      json: true,\n    }    \n    const dateObj = {startDate: startDate, endDate: endDate};\n    try {\n      setLoader(true);\n      const res = Axios.get(\"https://dataservices.sypramsoftware.com/api/Product/GetSoldItemList\",options)\n                    .then(response => {return response});\n      const data = res.map((item) => {\n        const {\n          UPC,\n          SKU,\n          //ItemName,\n          ITEMNAME,\n          //Price,\n          PRICEPERUNIT,\n          Cost,\n          TotalQty,\n          //soldQty,\n          QuantitySold,\n          wordpressSoldQty,\n          OnHand\n        } = item;\n        return {\n          upc: UPC,\n          itemName: ITEMNAME,\n          cost: Cost,\n          price: PRICEPERUNIT,\n          sku: SKU,\n          currentStockQuantity: TotalQty,\n          posSoldQuantity: QuantitySold,\n          wordpressSoldQty,\n          OnHand: OnHand\n        };\n      });\n\n      setProducts(data);\n    } catch (error) {\n      alert(\"Couldn't sync inventory\", error);\n    } finally {\n      setLoader(false);\n    }\n  }\n\n  const getProducts = async () => {\n    try {\n      setLoader(true);\n      const res = await inventoryService.SyncInventory();\n      const data = res.map((item) => {\n        const {\n          UPC,\n          SKU,\n          ItemName,\n          Price,\n          Cost,\n          TotalQty,\n          soldQty,\n          wordpressSoldQty,\n        } = item;\n        return {\n          upc: UPC,\n          itemName: ItemName,\n          cost: Cost,\n          price: Price,\n          sku: SKU,\n          currentStockQuantity: TotalQty,\n          posSoldQuantity: soldQty,\n          wordpressSoldQty,\n        };\n      });\n      setProducts(data);\n      alert(\"Sync complete\");\n    } catch (error) {\n      alert(\"Couldn't sync inventory\", error);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  React.useEffect(() => {\n    async function getInitialSyncedData() {\n      try {\n        setLoader(true);\n        const res = await inventoryService.getInitialSyncedData();\n        const data = res.map((item) => {\n          const {\n            UPC,\n            SKU,\n            //ItemName,\n            ITEMNAME,\n            //Price,\n            PRICEPERUNIT,\n            Cost,\n            TotalQty,\n            //soldQty,\n            QuantitySold,\n            wordpressSoldQty,\n            OnHand\n          } = item;\n          return {\n            upc: UPC,\n            itemName: ITEMNAME,\n            cost: Cost,\n            price: PRICEPERUNIT,\n            sku: SKU,\n            currentStockQuantity: TotalQty,\n            posSoldQuantity: QuantitySold,\n            wordpressSoldQty,\n            OnHand: OnHand\n          };\n        });\n\n        setProducts(data);\n      } catch (error) {\n        alert(\"Couldn't sync inventory\", error);\n      } finally {\n        setLoader(false);\n      }\n    }\n    console.log(startDate, endDate);\n    getInitialSyncedData();\n  }, []);\n\n  if (loader) {\n    return <Spinner />;\n  }\n  return (\n    <Paper className={classes.root}>\n      <Grid style={{ display: \"flex\" }}>\n        <TextField\n          label=\"Search\"\n          variant=\"outlined\"\n          value={searchVal}\n          style={{ marginLeft: 20 }}\n          onChange={(e) => setSearchVal(e.target.value)}\n        />\n        <TextField\n          id=\"date\"\n          label=\"Start Date\"\n          type=\"date\"\n          value={startDate}\n          style={{ marginLeft: 20 }}          \n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={(event) => setStartDate(event.target.value)}          \n        />\n        <TextField\n          id=\"date\"\n          label=\"End Date\"\n          type=\"date\"\n          value={endDate}\n          style={{ marginLeft: 20 }}          \n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={(event) => setEndDate(event.target.value)}\n        />\n        <button  style={{backgroundColor: \"green\",\n          border: \"none\",\n          color: \"white\",\n          padding: \"4px 8px\",\n          textAlign: \"center\",\n          textDecoration: \"none\",\n          display: \"inline-block\",\n          fontSize: \"14px\",\n          align: \"left\",\n          marginLeft: 20}}\n          onClick={() => onGo()}>\n            Go!\n          </button>\n\n        <Box style={{ flexGrow: 1 }} />\n        <CCol sm=\"1\">\n          <button className=\"btn btn-lg btn-info\" onClick={() => getProducts()}>\n            Sync\n          </button>\n        </CCol>\n      </Grid>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\" className={classes.table}>\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {products\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .filter((item) => {\n                if (searchVal) {\n                  if (item.itemName.toLowerCase().includes(searchVal)) {\n                    return item;\n                  } else {\n                    return null;\n                  }\n                }\n                return item;\n              })\n              .map((row) => {\n                return (\n                  <TableRow hover role=\"checkbox\" key={row.upc}>\n                    {columns.map((column) => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[100, 200, 500]}\n        component=\"div\"\n        count={products.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n"],"sourceRoot":""}