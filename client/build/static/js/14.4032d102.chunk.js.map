{"version":3,"sources":["services/Api.js","components/Queue/Queue.js"],"names":["Api","name","type","a","console","log","Axios","get","appendURL","params","res","data","Queue","inventoryService","InventoryService","api","useState","queue","setQueue","loader","setLoader","categoryArray","setCategoryArray","showModal","setShowModal","setContent","setHeader","fuzzSuggestion","setFuzzSuggestion","modalLabel","setModalLabel","selectedItemNo","setSelectedItemNo","regular_price","description","short_description","categories","images","label","state","setState","handleChange","event","val","newState","target","value","o","id","src","push","toggleModal","useEffect","firebase","database","ref","on","snapshot","Object","values","c","getAllProducts","then","map","d","Set","catch","err","deleteAddedProducts","item","remove","filetered","filter","product","itemNo","error","style","marginTop","className","q","i","padding","border","margin","marginBottom","onClick","header","prop","prototype","hasOwnProperty","call","cp","GetFuzz","result","element","obj","price","upc","setContentExtra","sku","show","onClose","closeButton","fluid","sm","htmlFor","onChange","newValue","options","getOptionLabel","option","paddingTop","renderInput","variant","size","caret","length","e","color","createProduct","alert","to"],"mappings":"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","file":"static/js/14.4032d102.chunk.js","sourcesContent":["import Axios from \"./axios\";\nconst appendURL=process.env.NODE_ENV===\"production\"?\"/server\":\"\";\nexport class Api {\n    async GetFuzz(name,type){\n      console.log(name,type);\n      var res=await Axios.get(appendURL+`/api/fuzzwuzz`,{params:{name:name,type:type}});\n      /* var res=await Axios.get(appendURL+`/api/fuzzwuzz`); */\n      console.log(res);\n      return res.data\n    }\n}\n\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { InventoryService } from \"../../services/InventoryService\";\nimport { Api } from \"../../services/Api\";\nimport {\n  CModal,\n  CModalBody,\n  CModalHeader,\n  CModalFooter,\n  CButton,\n  CContainer,\n  CCol,\n  CRow,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CDropdown,\n  CDropdownToggle,\n  CDropdownMenu,\n  CDropdownItem,\n} from \"@coreui/react\";\nimport firebase from \"../../firebase\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\nconst Queue = () => {\n  const inventoryService = new InventoryService();\n  const api = new Api();\n  const [queue, setQueue] = useState([]);\n  const [loader, setLoader] = useState(true);\n  const [categoryArray, setCategoryArray] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [content, setContent] = useState(null);\n  const [header, setHeader] = useState([]);\n  const [fuzzSuggestion, setFuzzSuggestion] = useState([]);\n  const [modalLabel, setModalLabel] = useState(\"\");\n  const [selectedItemNo, setSelectedItemNo] = useState(\"\")\n  const [state, setState] = useState({\n    name: \"\",\n    type: \"\",\n    regular_price: \"\",\n    description: \"\",\n    short_description: \"\",\n    categories: [],\n    images: [],\n    label: \"\",\n  });\n  const handleChange = (event, val) => {\n    let newState = { ...state };\n    if (event.target.name !== \"categories\" && event.target.name !== \"images\")\n      newState[event.target.name] = event.target.value;\n    else {\n      let o = null;\n      if (event.target.name === \"categories\") {\n        o = { id: val };\n        newState[event.target.name] = [o];\n      } else {\n        o = { src: val };\n        newState[event.target.name].push(o);\n      }\n    }\n    setState(newState);\n  };\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n  useEffect(() => {\n    const ref = firebase.database().ref(\"/queue\");\n    ref.on(\"value\", (snapshot) => {\n      if (snapshot.val()) {\n        const data = Object.values(snapshot.val());\n        setQueue(data);\n        setLoader(false);\n      }\n    });\n    let c = [];\n    inventoryService\n      .getAllProducts()\n      .then((res) => {\n        c = res.map((d) => d.categories[0].id);\n        setCategoryArray([...new Set(c)]);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n  const setContentExtra = (o) => {\n    setContent(o);\n    let header = [];\n    for (var prop in o) {\n      if (Object.prototype.hasOwnProperty.call(o, prop)) {\n        header.push(prop);\n      }\n    }\n    setHeader(header);\n    let newState = {\n      name: o.description,\n      type: \"simple\",\n      regular_price: o.cp,\n      description: o.description,\n      short_description: o.description,\n      categories: [],\n      images: [],\n      label: o.description,\n    };\n    setState(newState);\n    api\n      .GetFuzz(o.description, \"queue\")\n      .then((res) => {\n        const filter = res.result.map((element) => {\n          let obj = { ...element };\n          obj.label = `${element.name}- ${element.price}- ${element.upc}`;\n          return obj;\n        });\n        setFuzzSuggestion(filter);\n      })\n      .catch((err) => console.log(err));\n  };\n  const addProduct = () => {\n    console.log(selectedItemNo)\n    setShowModal(!showModal);\n    inventoryService\n      .createProduct(state)\n      .then(() => deleteAddedProducts(selectedItemNo))\n      .then((res) => alert(\"Successfully created a product\"))\n      .catch((err) => alert(\"Some error occuured in creating product\"));\n  };\n\n  const deleteAddedProducts = (item) => {\n    console.log('item to be deleted', item)\n    try {\n      firebase.database().ref(`/queue/${item}`).remove();\n      let temp = [...queue];\n      const filetered = temp.filter((product) => product.itemNo !== item)\n      setQueue(filetered);\n      return true;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  };\n  if (loader) {\n    return <Spinner />;\n  }\n\n  return (\n    <div style={{ marginTop: \"90px\" }}>\n      <div className=\"row\">\n        {queue.map((q, i) => (\n          <div className=\"col-md-4\" key={q.sku} style={{ padding: \"10px\" }}>\n            <div style={{ border: \"1px solid grey\", margin: \"10px\" }}>\n              <div className=\"text-center bg-secondary\">{q.itemNo}</div>\n              <br />\n              <div className=\"text-center\">{q.description}</div>\n              <br />\n              <div className=\"row\" style={{ marginBottom: \"10px\" }}>\n                <div className=\"col-md-9\"></div>\n                <div className=\"col-md-3\">\n                  <button\n                    className=\"btn btn-sm btn-primary\"\n                    onClick={() => {\n                      setShowModal(true);\n                      setModalLabel(q.description);\n                      setSelectedItemNo(q.itemNo)\n                      setContentExtra(q);\n                    }}\n                  >\n                    Details\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n      <CModal show={showModal} onClose={toggleModal}>\n        <CModalHeader closeButton>{modalLabel}</CModalHeader>\n        <CModalBody>\n          <CContainer fluid>\n            <CRow>\n              <CCol sm=\"12\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"name\">Name</CLabel>\n                  <Autocomplete\n                    value={state}\n                    onChange={(event, newValue) => {\n                      if (newValue) {\n                        let newState = { ...state };\n                        console.log(newValue);\n                        newState.name = newValue.name;\n                        newState.short_description = newValue.name;\n                        newState.description = newValue.name;\n                        newState.regular_price = newValue.price;\n                        newState.label = newValue.name;\n                        setState(newState);\n                      }\n                    }}\n                    id=\"combo-box\"\n                    options={fuzzSuggestion}\n                    getOptionLabel={(option) => option.label ?? option.name}\n                    style={{ paddingTop: 4 }}\n                    renderInput={(params) => (\n                      <TextField {...params} variant=\"outlined\" size=\"small\" />\n                    )}\n                  />\n                </CFormGroup>\n                <CRow>\n                  <CCol sm=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"type\">Type</CLabel>\n                      <CInput\n                        type=\"text\"\n                        name=\"type\"\n                        value={state.type}\n                        onChange={(event) => handleChange(event, \"\")}\n                      />\n                    </CFormGroup>\n                  </CCol>\n                  <CCol sm=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"regular_price\">Regular Price</CLabel>\n                      <CInput\n                        type=\"text\"\n                        name=\"regular_price\"\n                        value={state.regular_price}\n                        onChange={(event) => handleChange(event, \"\")}\n                      />\n                    </CFormGroup>\n                  </CCol>\n                </CRow>\n                <CFormGroup>\n                  <CLabel htmlFor=\"description\">Description</CLabel>\n                  <CInput\n                    type=\"text\"\n                    name=\"description\"\n                    value={state.description}\n                    onChange={(event) => handleChange(event, \"\")}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"short_description\">Short Description</CLabel>\n                  <CInput\n                    type=\"text\"\n                    name=\"short_description\"\n                    value={state.short_description}\n                    onChange={(event) => handleChange(event, \"\")}\n                  />\n                </CFormGroup>\n                <CRow>\n                  <CCol sm=\"3\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"categories\">Category</CLabel>\n                      <CDropdown name=\"categories\" className=\"mt-2\">\n                        <CDropdownToggle caret>\n                          {state.categories.length === 0\n                            ? \"Select a Category\"\n                            : state.categories[0].id}\n                        </CDropdownToggle>\n                        <CDropdownMenu>\n                          {categoryArray.map((e, i) => (\n                            <CDropdownItem\n                              key={i}\n                              name=\"categories\"\n                              onClick={(event) => handleChange(event, e)}\n                            >\n                              {e}\n                            </CDropdownItem>\n                          ))}\n                        </CDropdownMenu>\n                      </CDropdown>\n                    </CFormGroup>\n                  </CCol>\n                  <CCol sm=\"9\"></CCol>\n                </CRow>\n              </CCol>\n            </CRow>\n          </CContainer>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"primary\" onClick={() => addProduct()}>\n            Add\n          </CButton>{\" \"}\n          <CButton color=\"secondary\" onClick={toggleModal}>\n            Cancel\n          </CButton>\n        </CModalFooter>\n      </CModal>\n      <div className=\"row\" style={{ marginTop: \"40px\" }}>\n        <div className=\"col-md-2\">\n          <Link className=\"btn btn-lg btn-info\" to=\"/invoice\">\n            Back\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Queue;\n"],"sourceRoot":""}