{"version":3,"sources":["../@material-ui/core/esm/utils/deprecatedPropType.js","../@material-ui/core/esm/utils/requirePropFactory.js","UI/Button.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/@babel/runtime/helpers/interopRequireWildcard.js","../@material-ui/icons/utils/createSvgIcon.js","../@material-ui/core/esm/utils/unsupportedProp.js","services/TesseractService.js","components/DisplayData/DisplayData.module.css","../@material-ui/icons/InfoOutlined.js","../@material-ui/icons/Cancel.js","../../index.ts","../node_modules/@babel/runtime/helpers/typeof.js","../@material-ui/icons/AddCircle.js","../@material-ui/core/esm/styles/makeStyles.js","../@material-ui/core/esm/Grid/Grid.js","components/HandWrittenInvoice/HandWrittenInvoiceList.js","components/HandWrittenInvoice/HandWrittenInvoice.js"],"names":["deprecatedPropType","validator","reason","requirePropFactory","componentNameInError","Button","this","props","color","text","others","className","React","Component","module","exports","obj","__esModule","_typeof","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","value","enumerable","_utils","createSvgIcon","require","unsupportedProp","propName","componentName","location","propFullName","TesseractService","image","a","data","FormData","append","Axios","post","appendURL","res","invoiceName","console","log","params","filename","invoiceNo","date","_interopRequireDefault","_interopRequireWildcard","default","_default","createElement","d","registerVersion","version","SDK_VERSION","Symbol","iterator","constructor","makeStyles","stylesOrCreator","options","arguments","length","undefined","makeStylesWithoutDefault","_extends","defaultTheme","SPACINGS","GRID_SIZES","getOffset","val","div","parse","parseFloat","concat","String","replace","Grid","ref","_props$alignContent","alignContent","_props$alignItems","alignItems","classes","classNameProp","_props$component","component","_props$container","container","_props$direction","direction","_props$item","item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","zeroMinWidth","other","_objectWithoutProperties","clsx","root","StyledGrid","withStyles","theme","boxSizing","display","flexWrap","width","margin","minWidth","flexDirection","justifyContent","breakpoint","styles","forEach","themeSpacing","padding","generateGutter","breakpoints","keys","reduce","accumulator","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","name","handwrittenInvoiceList","slug","jsonName","emptyColumn","databaseName","useStyles","paddingTop","maxHeight","marginTop","table","fontWeight","fontSize","backgroundColor","cursor","HandwrittenInvoice","tesseractService","useState","setProductDetails","itemNoDropdown","setItemNoDropdown","dispatch","useDispatch","dropdownLabel","invoice","inventoryService","InventoryService","setOptions","showModal","setShowModal","modalLabel","todayDate","setTodayDate","userEmail","setUserEmail","itemName","setItemName","unitsInCase","setUnitsInCase","caseCost","setCaseCost","newUnitCost","newUnitPrice","setNewUnitPrice","prevNewUnitPrice","setPrevNewUnitPrice","showPosIndex","setShowPosIndex","notFounds","useSelector","state","redItems","detailsModal","setDetailsIndex","setUnitCost","setRedState","openInvoice","inv","num","day","setInvoiceNo","quantity","setQuantity","price","setPrice","extendedPrice","setExtendedPrice","setDate","selectedDropdown","setSelectedDropdown","description","pos","barcode","posSku","department","unitCost","unitPrice","showPosState","setShowPosState","tableDataCopy","setTableDataCopy","tableData","setTableData","isReviewed","Item","Quantity","Description","Price","POS","Barcode","PosSKU","Size","Department","SellerCost","SellingPrice","posProduct","setPosProduct","posProducts","loaders","apiLoader","loader","wooComProducts","singleItemData","updateSku","header","getProducts","Promise","all","map","row","GetProductDetails","id","regular_price","sku","stock_quantity","sale_price","itemNo","items","getPosProducts","hasErrorOccured","GetPOSProductDetails","Array","isArray","alert","SKU","UPC","ITEMNAME","TOTALQTY","DEPNAME","COST","cp","PRICE","sellingPrice","parseInt","qty","pieces","isNew","BUYASCASE","CASEUNITS","toString","CASECOST","sp","pushToWoocom","products","product","UpdateProductDetails","responses","pushToPOS","codeOrSku","indexOf","i","itemNoPresent","UpdatePOSProducts","JSON","stringify","DESCRIPTION","QTY","SIZE","PACK","REPLACEQTY","DEPARTMENT","CATEGORY","SUBCATEGORY","ISFOODSTAMP","ISWEIGHTED","ISTAXABLE","VENDORNAME","VENDORCODE","VENDORCOST","ISNEWITEM","COMPANYNAME","PRODUCTCODE","MODELNUM","slice","Date","toLocaleDateString","VINTAGE","Cost","ItemName","TotalQty","pushInventoryDetails2","element","markup","duplicates","push","lastIndexOf","tempData","values","filter","ele","index","temp","updatedWoocomProducts","wooIndex","findIndex","wooProduct","window","pushSingleItemToInventory","isUpdated","data1","toLowerCase","cost","isUpdatedDate","UpdateHandWrittenProductFields","InvoiceName","InvoiceDate","ItemNo","InvoiceDescription","PosDescription","posName","OldUnitCost","OldUnitPrice","OldMarkup","toFixed","NewUnitCost","NewUnitPrice","NewMarkup","UpdateDate","Person","TimeStamp","toTimeString","split","InvCaseCost","InvUnitsInCase","HandWritten","handwrittenPosLogs","logUpdate","setProductsInTableNew","reversePOSUpdate","reverseUpdate","result","ok","setProductsInTable","linkManually","costChange","invError","logState","ItemCode","LinkingDate","PersonName","PosUnitCost","PosUnitPrice","InvUnitCost","CostIncrease","CostDecrease","CostSame","InvError","linkManuallyLog","logResult","statusText","updateUnits","then","Error","catch","err","updatePosDetails","sellerCost","finally","linkingCorrect","Unidentified","UnidentifiedLog","renderTableData","rows","isEmpty","isNaN","isFree","red","free","style","show","opacity","TextField","type","variant","onChange","e","handleChange","target","IconButton","fill","tooltipIsReviewed","tooltip","onClick","toggleModal","disabled","border","textAlign","textDecoration","align","Autocomplete","event","newValue","getOptionLabel","option","renderInput","loading","onInputChange","setTimeout","hicksvilleDropdownNew","newState","upc","label","priceIncrease","details","confirm","position","top","background","toUpperCase","divRow","reload","updateItem","sellingCost","x","tempTableData","propertyNames","getHicksvilleData","productsString","newData","s","altupc1","altupc2","vintage","totalQty","pricea","priceb","pricec","salePrice","pack","getItems","getItemForHandwrittenInvoice","invoiceData","trim","Details","currentInvoice","resdata","invData","useEffect","curDate","getFullYear","getMonth","getDate","firebase","auth","onAuthStateChanged","user","email","Paper","autoHighlight","height","marginLeft","onClose","closeButton","fluid","htmlFor"],"mappings":"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","file":"static/js/8.e22a5c88.chunk.js","sourcesContent":["export default function deprecatedPropType(validator, reason) {\n  if (process.env.NODE_ENV === 'production') {\n    return function () {\n      return null;\n    };\n  }\n\n  return function (props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    if (typeof props[propName] !== 'undefined') {\n      return new Error(\"The \".concat(location, \" `\").concat(propFullNameSafe, \"` of \") + \"`\".concat(componentNameSafe, \"` is deprecated. \").concat(reason));\n    }\n\n    return null;\n  };\n}","export default function requirePropFactory(componentNameInError) {\n  if (process.env.NODE_ENV === 'production') {\n    return function () {\n      return null;\n    };\n  }\n\n  var requireProp = function requireProp(requiredProp) {\n    return function (props, propName, componentName, location, propFullName) {\n      var propFullNameSafe = propFullName || propName;\n\n      if (typeof props[propName] !== 'undefined' && !props[requiredProp]) {\n        return new Error(\"The prop `\".concat(propFullNameSafe, \"` of \") + \"`\".concat(componentNameInError, \"` must be used on `\").concat(requiredProp, \"`.\"));\n      }\n\n      return null;\n    };\n  };\n\n  return requireProp;\n}","import React from \"react\";\nclass Button extends React.Component {\n\n    render() {\n      const { \n        color,\n        text,\n        ...others\n      } = this.props;\n      \n      return (\n        <button className={color} {...others}>\n          {text}\n        </button>\n      )\n    }\n  }\n  \n\n  export default Button;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nmodule.exports = _interopRequireWildcard, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.createSvgIcon;\n  }\n});\n\nvar _utils = require(\"@material-ui/core/utils\");","export default function unsupportedProp(props, propName, componentName, location, propFullName) {\n  if (process.env.NODE_ENV === 'production') {\n    return null;\n  }\n\n  var propFullNameSafe = propFullName || propName;\n\n  if (typeof props[propName] !== 'undefined') {\n    return new Error(\"The prop `\".concat(propFullNameSafe, \"` is not supported. Please remove it.\"));\n  }\n\n  return null;\n}","import Axios from \"./axios\";\nconst appendURL=process.env.NODE_ENV===\"production\"?\"/server\":\"\";\nexport class TesseractService {\n    async PostImage(image) {\n        const data = new FormData();\n        data.append(\"file\", image);\n        var res = await Axios.post(appendURL+`/api/upload-image`, data);\n        return res.data\n    }\n\n    async GetProductDetails(invoiceName) {\n        console.log(\"invoiceName : \",invoiceName);\n        var res = await Axios.get(appendURL+`/api/product/`, {\n          params: { invoiceName: invoiceName },\n        });\n        return res.data\n    }\n\n    async GetOCRData(filename) {\n        var res = await Axios.post(appendURL+`/api/ocr`, { data: {filename} });\n        console.log(res);\n        return res.data\n    }\n\n    async GetSavedInvoiceData(invoiceName, invoiceNo, date) {\n        console.log(\"IN TESSERACT SERVICE\");\n        var res = await Axios.get(appendURL + \"/api/invoice/getsaveinvoicedata/\", {params:{ invoiceName: invoiceName, invoiceNo: invoiceNo,date: date}});\n        console.log(res);\n        return res.data;\n    }\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"DisplayData_main__3dZaC\",\"Filter\":\"DisplayData_Filter__1u_nu\",\"Apply\":\"DisplayData_Apply__GjHhP\",\"container\":\"DisplayData_container__2MkRT\",\"HeadStyle\":\"DisplayData_HeadStyle__PCmCu\",\"TableText\":\"DisplayData_TableText__hhvZ2\",\"records\":\"DisplayData_records__1Gi0X\",\"red\":\"DisplayData_red__24S03\",\"image\":\"DisplayData_image__3STA7\",\"button\":\"DisplayData_button__GadqQ\",\"tooltip\":\"DisplayData_tooltip__fXq_c\",\"tooltipIsReviewed\":\"DisplayData_tooltipIsReviewed__29ewR\",\"element\":\"DisplayData_element__3jIVP\",\"free\":\"DisplayData_free__1jKz9\",\"tablewrapper\":\"DisplayData_tablewrapper__AuFC6\",\"divRow\":\"DisplayData_divRow__1M_V6\"};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 7h2v2h-2zm0 4h2v6h-2zm1-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'InfoOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\n\nexports.default = _default;","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport { name, version } from '../package.json';\n\nfirebase.registerVersion(name, version, 'app');\nfirebase.SDK_VERSION = version;\n\nexport default firebase;\n","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddCircle');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","export const handwrittenInvoiceList = [\n      //********handwritten invoices********\n  {\n    value: \"Giant Farm\",\n    slug: \"giant-farm\",\n    jsonName: \"giant-farm.json\",\n    emptyColumn: true,\n    databaseName: \"giantfarms\",\n  },\n  {\n    value: \"Duty Free Produce\",\n    slug: \"duty-free-produce\",\n    jsonName: \"duty-free-produce.json\",\n    emptyColumn: true,\n    databaseName: \"dutyfreeproduces\",\n  },\n  {\n    value: \"Gurme Guru\",\n    slug: \"gurme-guru\",\n    jsonName: \"gurme-guru.json\",\n    emptyColumn: true,\n    databaseName: \"gurmegurus\",\n  },\n\n  //********handwritten invoices********\n];","import React, { useEffect, useState } from \"react\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Box, Grid } from \"@material-ui/core\";\n// import { dropdownOptions } from \"../../utils/invoiceList\";\nimport { handwrittenInvoiceList } from \"./HandWrittenInvoiceList\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { InventoryService } from \"../../services/InventoryService\";\nimport {\n  CModal,\n  CModalBody,\n  CModalHeader,\n  CModalFooter,\n  CButton,\n  CContainer,\n  CCol,\n  CRow,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CDropdown,\n  CDropdownToggle,\n  CDropdownMenu,\n  CDropdownItem,\n} from \"@coreui/react\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { TesseractService } from \"../../services/TesseractService\";\nimport Button from \"../../UI/Button\";\nimport styles from \"../DisplayData/DisplayData.module.css\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport Cancel from \"@material-ui/icons/Cancel\";\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\n\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    paddingTop: 50,\n  },\n  container: {\n    maxHeight: \"80vh\",\n    marginTop: 10,\n  },\n  table: {\n    \"& thead th\": {\n      fontWeight: \"600\",\n      fontSize: 20,\n      backgroundColor: \"grey\",\n    },\n    \"& tbody td\": {\n      fontWeight: \"300\",\n    },\n    \"& tbody tr:hover\": {\n      backgroundColor: \"#fffbf2\",\n      cursor: \"pointer\",\n    },\n  },\n});\n\nconst HandwrittenInvoice = () => {\n  // const [loader, setLoader] = useState();\n  const tesseractService = new TesseractService();\n\n  const [productDetails, setProductDetails] = useState([]);\n  const [itemNoDropdown, setItemNoDropdown] = useState([]);\n\n  const dispatch = useDispatch();\n  const numOfCollections = handwrittenInvoiceList.length;\n  const dropdownLabel = \"Select Invoice(\" + numOfCollections + \")\";\n  // const [invoice, setInvoice] = useState(\"\");\n  let invoice = \"\";\n  const classes = useStyles();\n  const inventoryService = new InventoryService();\n  const [options, setOptions] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [modalLabel, setModalLabel] = useState(\"\");\n\n  const [todayDate, setTodayDate] = useState(\"\");\n  const [userEmail, setUserEmail] = useState(\"\");\n\n  const [itemName, setItemName] = useState(\"\");\n  const [unitsInCase, setUnitsInCase] = useState(\"\");\n  const [caseCost, setCaseCost] = useState();\n\n  const [newUnitCost, setNewUnitCost] = useState(\"\");\n  const [newUnitPrice, setNewUnitPrice] = useState(\"\");\n  const [prevNewUnitPrice, setPrevNewUnitPrice] = useState(\"\");\n\n  const [showPosIndex, setShowPosIndex] = useState(-1);\n  // const showPosState = useSelector(state => state.showPosState);\n  const notFounds = useSelector((state) => state.redItems.notFounds);\n\n  const [detailsModal, setDetailsModal] = useState(false);\n  const [details, setDetails] = useState(\"\");\n  const [detailsIndex, setDetailsIndex] = useState(-1);\n  const [unitCost, setUnitCost] = useState(\"\");\n  const [redState, setRedState] = useState(\"true\");\n\n  // ************** Added by Deepanshu *****************\n  // const [inv, setInv] = useState(\"\");\n  const inv = useSelector((state) => state.openInvoice.inv);\n  // const [ num, setNum] = useState(\"\");\n  const num = useSelector((state) => state.openInvoice.num);\n  // const [day, setDay] = useState(\"\");\n  const day = useSelector((state) => state.openInvoice.day);\n\n  const [invoiceNo, setInvoiceNo] = useState(\"\");\n  const [quantity, setQuantity] = useState(\"\");\n  const [price, setPrice] = useState();\n  const [extendedPrice, setExtendedPrice] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [selectedDropdown, setSelectedDropdown] = useState();\n  const [notFound, setNotFound] = useState(\"false\");\n  const [showPosState, setShowPosState] = useState({\n    item: \"\",\n    quantity: \"\",\n    description: \"\",\n    price: \"\",\n    pos: \"\",\n    barcode: \"\",\n    posSku: \"\",\n    invoice: \"\",\n    size: \"\",\n    department: \"\",\n    unitCost: \"\",\n    unitPrice: \"\",\n  });\n  const [tableDataCopy, setTableDataCopy] = useState([]);\n  const [tableData, setTableData] = useState([\n    // {\n    //   barcode: \"894559000389\",\n    //   cost: \"2.0\",\n    //   cp: \"3.75\",\n    //   department: \"ROTI AND NAAN\",\n    //   description: \"TAZA TANDOORI NAAN JUMBO 8PCS X12 4.99\",\n    //   details: undefined,\n    //   extendedPrice: \"225.00\",\n    //   isReviewed: \"false\",\n    //   isUpdated: \"false\",\n    //   itemNo: \"TAZA TANDOORI NAAN JUMBO 8PCS X12 4.99\",\n    //   itemNoPresent: true,\n    //   linkingCorrect: \"false\",\n    //   margin: 49.500000000000014,\n    //   markup: 0,\n    //   pieces: \"12\",\n    //   posName: \"TANDOORI NAAN 5 PC\",\n    //   posSku: \"13051\",\n    //   price: \"45\",\n    //   priceIncrease: 1,\n    //   qty: \"5\",\n    //   sellingPrice: \"2.99\",\n    //   show: true,\n    //   size: \"425 GM ..\",\n    //   sku: undefined,\n    //   sp: \"3.75\",\n    //   unitPrice: \"45.00\",\n    // },\n    // {\n    //   barcode: \"894559000389\",\n    //   cost: \"2.0\",\n    //   cp: \"3.75\",\n    //   department: \"ROTI AND NAAN\",\n    //   description: \"TAZA TANDOORI NAAN JUMBO 8PCS X12 4.99\",\n    //   details: undefined,\n    //   extendedPrice: \"225.00\",\n    //   isReviewed: \"false\",\n    //   isUpdated: \"false\",\n    //   itemNo: \"TAZA TANDOORI NAAN JUMBO 8PCS X12 4.99\",\n    //   itemNoPresent: true,\n    //   linkingCorrect: \"false\",\n    //   margin: 49.500000000000014,\n    //   markup: 0,\n    //   pieces: \"12\",\n    //   posName: \"TANDOORI NAAN 5 PC\",\n    //   posSku: \"13051\",\n    //   price: \"45\",\n    //   priceIncrease: 1,\n    //   qty: \"5\",\n    //   sellingPrice: \"2.99\",\n    //   show: true,\n    //   size: \"425 GM ..\",\n    //   sku: undefined,\n    //   sp: \"3.75\",\n    //   unitPrice: \"45.00\",\n    // },\n  ]);\n  console.log(\"table_state_value : \", tableData);\n  // ************** Added by Deepanshu *****************\n\n  // function added by deepanshu\n  const saveDetails = async () => {\n    console.log(\"this is saveDetails\");\n  };\n\n  const [posProduct, setPosProduct] = useState({\n    isReviewed: \"\",\n    Item: \"\",\n    Quantity: \"\",\n    Description: \"\",\n    Price: \"\",\n    POS: \"\",\n    Barcode: \"\",\n    PosSKU: \"\",\n    Size: \"\",\n    Department: \"\",\n    SellerCost: \"\",\n    SellingPrice: \"\",\n  });\n\n  const apiLoader = useSelector((state) => state.loaders.apiLoader);\n  const loader = useSelector((state) => state.loaders.loader);\n\n  let posProducts = [];\n  let wooComProducts = [];\n  let singleItemData = [];\n  let gethandwrittenlog = [];\n  let updateSku = \"\";\n  let itemNo = \"\";\n\n  const header = [\n    \"Serial No.\",\n    \"Barcode\",\n    \"POS SKU\",\n    \"Qty Shipped\",\n    ,\n    \"Unit Cost\",\n    \"ITEM NO\",\n    \"Link Product\",\n\n    \"DESCRIPTION\",\n    \"Units in  Case\",\n    \"Case cost\",\n    \"Extended Price\",\n\n    \"Unit Price\",\n    \"Mark up (%)\",\n    \"Add Details\",\n    \"Tick to Delete\",\n    \"Update POS\",\n    \"Reverse POS Update\",\n    \"NO LINKING\",\n    \"Serial No.(2)\",\n  ];\n\n  //*********************************************************************POS UPDATE STARTS******************************************* */\n\n  //Function to fetch wooCom Prpducts.\n  async function getProducts() {\n    console.log(\"IN WOOCOM PRODUCTS\");\n    const items = await Promise.all(\n      singleItemData.map(async (row) => {\n        console.log(row.barcode);\n        try {\n          const res = await inventoryService.GetProductDetails(row.barcode);\n          console.log(res);\n          const {\n            id,\n            name,\n            regular_price,\n            price,\n            sku,\n            slug,\n            stock_quantity,\n            sale_price,\n          } = res[0];\n          console.log(\"res[0]\");\n          console.log(\"id : \", id);\n          console.log(\"name : \", name);\n          console.log(\"regular_price : \", regular_price);\n          console.log(\"price : \", price);\n          console.log(\"sku : \", sku);\n          console.log(\"slug : \", slug);\n          console.log(\"stock_quantity : \", stock_quantity);\n          console.log(\"sale_price : \", sale_price);\n          return {\n            id,\n            name,\n            regular_price,\n            price,\n            sku,\n            slug,\n            stock_quantity,\n            sale_price,\n            itemNo: row.itemNo,\n          };\n        } catch (error) {\n          // tempNotFoundProducts.push(row);\n          console.log(\"Couldn't fetch product from woodpress.\", row.itemNo);\n          return null;\n        }\n      })\n    );\n    // setLoader(false);\n    // dispatch({type: \"LOADER\"});\n    console.log(items);\n    wooComProducts = items;\n    // setWooComProducts(items.filter((ele) => ele !== null));\n    // setNotFoundProducts(tempNotFoundProducts);\n  }\n\n  //function to fetch POS products.\n  async function getPosProducts() {\n    console.log(\"IN POS PRODUCTS\");\n    // setLoader(true);\n    // dispatch({type: \"LOADER\"});\n    let hasErrorOccured = false;\n    const items = await Promise.all(\n      singleItemData.map(async (row) => {\n        console.log(row.barcode);\n        try {\n          const res = await inventoryService.GetPOSProductDetails(row.barcode);\n          console.log(res);\n          if (!Array.isArray(res)) {\n            alert(\"API not working\");\n            return;\n          }\n          console.log(\"fetched pos data\", res);\n          const { SKU, UPC, ITEMNAME, TOTALQTY, DEPNAME } = res[0];\n          console.log(SKU);\n          console.log(updateSku);\n          if (SKU == updateSku) {\n            console.log(SKU);\n            console.log(updateSku);\n            return {\n              ...row,\n              COST: row.cp,\n              // PRICE: newUnitPrice === \"\" ? row.sp : newUnitPrice,\n              PRICE: newUnitPrice === \"\" ? row.sellingPrice : newUnitPrice,\n              SKU,\n              UPC,\n              ITEMNAME,\n              TOTALQTY:\n                parseInt(row.qty) * parseInt(row.pieces) + parseInt(TOTALQTY),\n              itemNo: row.itemNo,\n              isNew: false,\n              BUYASCASE: 1,\n              CASEUNITS: row.pieces.toString(),\n              CASECOST: row.unitPrice.toString(),\n              DEPNAME,\n            };\n          } else {\n            alert(\"SKU mismatch!!\");\n          }\n        } catch (error) {\n          hasErrorOccured = true;\n          return {\n            ...row,\n            COST: row.cp,\n            PRICE: row.sp,\n            SKU: row.posSku,\n            UPC: row.barcode,\n            ITEMNAME: row.description,\n            TOTALQTY: parseInt(row.qty) * parseInt(row.pieces),\n            itemNo: row.itemNo,\n            isNew: true,\n            BUYASCASE: 1,\n            CASEUNITS: row.pieces.toString(),\n            CASECOST: row.unitPrice.toString(),\n            DEPNAME: \"\",\n          };\n        }\n      })\n    );\n    if (hasErrorOccured) {\n      alert(\"Couldn't fetch some data from POS\");\n    }\n    // setLoader(false);\n    // dispatch({type: \"LOADER\"});\n    console.log(items);\n    posProducts = items;\n    console.log(posProducts);\n    // setPosProducts(items.filter((ele) => ele !== null));\n  }\n\n  //PUSH TO WOOCOM.\n  const pushToWoocom = async (products) => {\n    // setLoader(true);\n    // dispatch({type: \"LOADER\"});\n    console.log(products);\n    const responses = await Promise.all(\n      products.map(async (product) => {\n        try {\n          const res = await inventoryService.UpdateProductDetails(product.id, {\n            regular_price: product.regular_price,\n            stock_quantity: product.stock_quantity,\n          });\n          const { id, name, regular_price, stock_quantity } = res;\n          return {\n            id,\n            name,\n            regular_price,\n            stock_quantity,\n            itemNo: product.itemNo,\n          };\n        } catch (error) {\n          console.log(error);\n          alert(\"Couldn't update product on website.\");\n          return null;\n        }\n      })\n    );\n\n    console.log(\"pushToWoocom_result : \", responses);\n    // setLoader(false);\n    // dispatch({type: \"LOADER\"});\n  };\n\n  //PUSH TO POS.\n  const pushToPOS = async (products) => {\n    // setLoader(true);\n    // dispatch({type: \"LOADER\"});\n    console.log(products);\n    const responses = await Promise.all(\n      products.map(async (product) => {\n        try {\n          const {\n            COST,\n            PRICE,\n            UPC,\n            TOTALQTY,\n            isNew,\n            ITEMNAME,\n            BUYASCASE,\n            CASEUNITS,\n            CASECOST,\n            SKU,\n            DEPNAME,\n            itemNo,\n          } = product;\n          console.log(\"product : \", product);\n\n          // SET ITEMNAME...\n          let codeOrSku = \"\";\n          console.log(product.itemNo);\n          console.log(ITEMNAME.indexOf(\"-\"));\n          let itemName = ITEMNAME;\n          console.log(\"pushToPos_ITEMNAME : \", ITEMNAME);\n          if (ITEMNAME.indexOf(\"-\") < 0) {\n            let itemNoPresent;\n            for (let i = 0; i < handwrittenInvoiceList.length; i++) {\n              console.log(selectedDropdown.slug);\n              if (handwrittenInvoiceList[i].slug === selectedDropdown.slug) {\n                itemNoPresent = false;\n                break;\n              } else {\n                itemNoPresent = true;\n                break;\n              }\n            }\n            console.log(itemNoPresent);\n            // if (itemNoPresent) {\n            //   codeOrSku = product.itemNo;\n            // } else {\n              codeOrSku = \"SKU\" + \" \" + product.posSku;\n            // }\n            itemName = ITEMNAME + \" \" + \"-\" + \" \" + codeOrSku;\n          }\n\n          const res = await inventoryService.UpdatePOSProducts(\n            JSON.stringify({\n              UPC,\n              ITEMNAME:itemName,\n              DESCRIPTION: \"\",\n              PRICE,\n              COST,\n              QTY: TOTALQTY,\n              SIZE: \"\",\n              PACK: \"\",\n              REPLACEQTY: 1,\n              DEPARTMENT: DEPNAME,\n              CATEGORY: \"\",\n              SUBCATEGORY: \"\",\n              ISFOODSTAMP: 1,\n              ISWEIGHTED: 0,\n              ISTAXABLE: 1,\n              VENDORNAME: selectedDropdown.slug,\n              VENDORCODE: itemNo,\n              VENDORCOST: \"\",\n              ISNEWITEM: isNew ? 1 : 0,\n              BUYASCASE,\n              CASEUNITS,\n              CASECOST,\n              COMPANYNAME: selectedDropdown.slug,\n              PRODUCTCODE: itemNo,\n              MODELNUM:\n                userEmail.slice(0, 4) + \" \" + new Date().toLocaleDateString(),\n              VINTAGE: \"ICMS\",\n            })\n          );\n          console.log(\"updated pos data\", res);\n          const data = {\n            UPC,\n            SKU,\n            Cost: COST,\n            ItemName: ITEMNAME,\n            Price: PRICE,\n            TotalQty: TOTALQTY,\n          };\n          //not needed as of now, parikshit.\n          // if (isNew) {\n          //   const response = await inventoryService.CreateDBProduct(data);\n          //   console.log(\"Created new product\", response);\n          // } else {\n          //   const response = await inventoryService.UpdateDBProduct({\n          //     count: parseInt(product.qty) * parseInt(product.pieces),\n          //     UPC,\n          //   });\n          //   console.log(\"updated existing product\", response);\n          // }\n\n          console.log(\"res from POS\", res);\n          return true;\n        } catch (error) {\n          console.log(error);\n          return null;\n        }\n      })\n    );\n    // setLoader(false);\n    // dispatch({type: \"LOADER\"});\n  };\n\n  const pushInventoryDetails2 = async () => {\n    console.log(posProducts);\n    // setLoader(true);\n    console.log(singleItemData);\n    let data = singleItemData.map((element) => {\n      return {\n        item: element.itemNo,\n        qty: parseInt(element.qty) * parseInt(element.pieces),\n        cp: element.unitPrice,\n        markup: element.markup,\n        sp: element.sellingPrice,\n        description: element.description,\n      };\n    });\n\n    console.log(data);\n\n    var duplicates = {};\n    for (var i = 0; i < data.length; i++) {\n      if (duplicates.hasOwnProperty(data[i].item)) {\n        console.log(\"true\");\n        duplicates[data[i].item].push(i);\n      } else if (data.lastIndexOf(data[i].item) !== i) {\n        console.log(\"false\");\n        console.log(data.lastIndexOf(data[i].item));\n        duplicates[data[i].item] = [i];\n      }\n    }\n\n    console.log(duplicates);\n\n    let tempData = Object.values(duplicates).filter((ele) => ele.length > 1);\n    console.log(tempData);\n    if (tempData.length > 0) {\n      tempData.forEach((index) => {\n        let temp = 0;\n        index.forEach((val) => {\n          if (data[val]) {\n            // console.log(\"data[val]\", data[val]);\n            temp += data[val].qty;\n            if (temp - data[val].qty !== 0) {\n              data[val] = null;\n            }\n          }\n        });\n        data[index[0]].qty = temp;\n      });\n    }\n    console.log(data);\n    data = data.filter((ele) => ele !== null);\n    console.log(data);\n    /**\n     * add the fileds of  data from the woocom & ocr\n     */\n    console.log(wooComProducts.length);\n    console.log(wooComProducts);\n    if (wooComProducts[0] != null) {\n      let updatedWoocomProducts = data\n        .map((product, index) => {\n          /**find index of the item in fetched woocom product list */\n          const wooIndex = wooComProducts.findIndex(\n            (wooProduct) => product.item === wooProduct.itemNo\n          );\n          console.log(\"wooIndex : \", wooIndex);\n          if (wooIndex !== -1) {\n            /**get the qty & other fileds of the woocom product */\n            let { id, stock_quantity } = wooComProducts[wooIndex];\n            stock_quantity += product.qty;\n            const regular_price = product.sp;\n            return { id, regular_price, stock_quantity, itemNo: product.item };\n          }\n          return null;\n        })\n        .filter((item) => item !== null);\n\n      await pushToWoocom(updatedWoocomProducts);\n    }\n\n    await pushToPOS(posProducts);\n\n    // setLoader(false);\n    // dispatch({type: \"LOADER\"});\n    // if (itemsNotPushed.length === 0) {\n    window.alert(\"Inventory updated successfully\");\n    // // setRedirect(true);\n    // } else {\n    //   window.alert(\"Inventory not updated\");\n    // }\n  };\n\n  function toConsoleState() {\n    console.log(wooComProducts);\n    console.log(posProducts);\n    console.log(singleItemData);\n  }\n\n  const pushSingleItemToInventory = async (index) => {\n    // setApiLoader(true);\n    // dispatch({type: \"API_LOADER\"});\n    const product = [];\n    console.log(\"posProduct : \", posProduct);\n    const tempTable = [];\n    product.push(posProduct);\n    console.log(product);\n    product.isUpdated = \"true\";\n    itemNo = product.itemNo;\n\n    // setLoader(false);\n    // dispatch({type: \"LOADER\"});\n    // console.log(tempTable);\n    // singleItemData = [posProduct];\n    // singleItemData[0].isUpdated = \"true\";\n    // setPushToInventory(true);\n\n    singleItemData = [tableData[index]];\n    console.log(singleItemData);\n    // const tempTable = [];\n    // product.forEach((element, index) => {\n    //   if (\n    //     !emptyColumn.includes(index) &&\n    //     element.show === true &&\n    //     element[\"isForReview\"] != true\n    //   ) {\n    //     let rowData = { index: index + 1, ...element };\n    //     tempTable.push(rowData);\n    //   }\n    // });\n    // singleItemData=tempTable;\n    updateSku = singleItemData[0].posSku;\n\n    await getProducts();\n    await getPosProducts();\n    console.log(posProducts);\n    if (posProducts[0] != undefined) {\n      await pushInventoryDetails2();\n      toConsoleState();\n      console.log(singleItemData);\n      console.log(singleItemData.itemNo);\n      // await inventoryService.UpdateInvoiceData(\n      //   inv,\n      //   num,\n      //   day,\n      //   singleItemData[0].itemNo\n      // );\n\n      //Update unit cost n price in db, after update POS.\n      let data1 = {\n        invoiceName: selectedDropdown.slug,\n        itemName: singleItemData[0].itemNo.toLowerCase(),\n        value: {\n          cost: singleItemData[0].cp,\n          sellingPrice: newUnitPrice,\n          isUpdated: \"true\",\n          isUpdatedDate:todayDate\n        },\n      };\n      console.log(data1);\n      await inventoryService.UpdateHandWrittenProductFields(data1);\n\n      //Log Generate.\n      console.log(\"PRODUCTT\");\n      console.log(singleItemData);\n      const log = {\n        InvoiceName: selectedDropdown.slug,\n        InvoiceDate: \"\",\n        ItemNo: singleItemData[0].itemNo,\n        InvoiceDescription: singleItemData[0].description,\n        PosDescription: singleItemData[0].posName,\n        OldUnitCost: singleItemData[0].cost,\n        OldUnitPrice: prevNewUnitPrice,\n        // OldMarkup: singleItemData[0].margin.toFixed(2).toString(),\n        OldMarkup: (\n          ((prevNewUnitPrice - singleItemData[0].cost) /\n            singleItemData[0].cost) *\n          100\n        )\n          .toFixed(2)\n          .toString(),\n\n        NewUnitCost: posProducts[0].COST,\n        NewUnitPrice: posProducts[0].PRICE,\n        // NewMarkup:( ((singleItemData[0].sp- singleItemData[0].cp)/ singleItemData[0].cp)*100).toFixed(2).toString(),\n        NewMarkup: (\n          ((posProducts[0].PRICE - posProducts[0].COST) / posProducts[0].COST) *\n          100\n        )\n          .toFixed(2)\n          .toString(),\n\n        UpdateDate: todayDate,\n        Person: userEmail,\n        TimeStamp: new Date().toTimeString().split(\" \")[0],\n        InvCaseCost: singleItemData[0].unitPrice,\n        InvUnitsInCase: singleItemData[0].pieces,\n        HandWritten: \"YES\",\n        SKU: singleItemData[0].posSku,\n      };\n      console.log(log);\n\n      const logUpdate = await inventoryService.handwrittenPosLogs(log);\n      console.log(logUpdate);\n      setProductsInTableNew(selectedDropdown);\n    } else {\n      alert(\"POS not updated!!\");\n      setProductsInTableNew(selectedDropdown);\n    }\n    // setApiLoader(false);\n    // dispatch({type: \"API_LOADER\"});\n  };\n  //*********************************************************************POS UPDATE ENDS******************************************* */\n\n  async function gethandwrittenLogs(){\n    console.log(\"GET HANDWRITTEN LOG\");\n    console.log(singleItemData);\n    const log = await Promise.all(\n      singleItemData.map(async (row)=>{\n        console.log(row.barcode);\n        const data = {\n          itemNo:row.itemNo,\n          invoicename:selectedDropdown.slug,\n          sku:row.posSku,\n          updatedate:row.isUpdatedDate\n        }\n        try{\n          const res = await inventoryService.gethandwrittenPosLogs(data);\n          console.log(res);\n          const {PosUnitCost,PosUnitPrice,NewUnitCost,NewUnitPrice} = res[0];\n          return {\n            PosUnitCost,PosUnitPrice,NewUnitCost,NewUnitPrice\n          }\n        }catch(error){\n          console.log(error);\n          alert(\"Previou Price Not Find\");\n        }\n      })\n    )\n\n    gethandwrittenlog = log;\n    console.log(gethandwrittenlog);\n  }\n\n  const reversePushInventoryDetails2 = async () => {\n    console.log(posProducts);\n    // setLoader(true);\n    console.log(singleItemData);\n    let data = singleItemData.map((element) => {\n      return {\n        item: element.itemNo,\n        qty: parseInt(element.qty) * parseInt(element.pieces),\n        cp: element.unitPrice,\n        markup: element.markup,\n        sp: element.sp,\n        description: element.description,\n      };\n    });\n\n    console.log(data);\n\n    var duplicates = {};\n    for (var i = 0; i < data.length; i++) {\n      if (duplicates.hasOwnProperty(data[i].item)) {\n        console.log(\"true\");\n        duplicates[data[i].item].push(i);\n      } else if (data.lastIndexOf(data[i].item) !== i) {\n        console.log(\"false\");\n        console.log(data.lastIndexOf(data[i].item));\n        duplicates[data[i].item] = [i];\n      }\n    }\n\n    console.log(duplicates);\n\n    let tempData = Object.values(duplicates).filter((ele) => ele.length > 1);\n    console.log(tempData);\n    if (tempData.length > 0) {\n      tempData.forEach((index) => {\n        let temp = 0;\n        index.forEach((val) => {\n          if (data[val]) {\n            // console.log(\"data[val]\", data[val]);\n            temp += data[val].qty;\n            if (temp - data[val].qty !== 0) {\n              data[val] = null;\n            }\n          }\n        });\n        data[index[0]].qty = temp;\n      });\n    }\n    console.log(data);\n    data = data.filter((ele) => ele !== null);\n    console.log(data);\n    /**\n     * add the fileds of  data from the woocom & ocr\n     */\n    console.log(wooComProducts.length);\n    console.log(wooComProducts);\n    if (wooComProducts[0] != null) {\n      let updatedWoocomProducts = data\n        .map((product, index) => {\n          /**find index of the item in fetched woocom product list */\n          const wooIndex = wooComProducts.findIndex(\n            (wooProduct) => product.item === wooProduct.itemNo\n          );\n          console.log(\"wooIndex : \", wooIndex);\n          if (wooIndex !== -1) {\n            /**get the qty & other fileds of the woocom product */\n            let { id, stock_quantity } = wooComProducts[wooIndex];\n            stock_quantity += product.qty;\n            const regular_price = product.sp;\n            return { id, regular_price, stock_quantity, itemNo: product.item };\n          }\n          return null;\n        })\n        .filter((item) => item !== null);\n\n      let updatedWoocomProducts2 = [{\n        ...updatedWoocomProducts[0],\n        regular_price:gethandwrittenlog[0].PosUnitPrice\n      }];\n      console.log(updatedWoocomProducts2);\n      await pushToWoocom(updatedWoocomProducts2);\n    }\n    let posProducts2 = [{\n      ...posProducts[0],\n      COST:gethandwrittenlog[0].PosUnitCost,\n      PRICE:gethandwrittenlog[0].PosUnitPrice\n    }]\n    await pushToPOS(posProducts2);\n\n    // setLoader(false);\n    // dispatch({type: \"LOADER\"});\n    // if (itemsNotPushed.length === 0) {\n    window.alert(\"Inventory updated successfully\");\n    // // setRedirect(true);\n    // } else {\n    //   window.alert(\"Inventory not updated\");\n    // }\n  };\n\n  const reversePOSUpdate = async (index) => {\n    console.log(\"reversePOSUpdate\");\n    // const response = await inventoryService.gethandwrittenPosLogs();\n\n    singleItemData = [tableData[index]];\n    console.log(singleItemData);\n\n    updateSku = singleItemData[0].posSku;\n\n    // await gethandwrittenLogs();\n    // await getProducts();\n    await getPosProducts();\n    console.log(posProducts);\n\n    if (posProducts[0] != undefined) {\n      // await reversePushInventoryDetails2();\n      // toConsoleState();\n      // console.log(singleItemData);\n      // console.log(singleItemData.itemNo);\n      // await inventoryService.UpdateInvoiceData(\n      //   inv,\n      //   num,\n      //   day,\n      //   singleItemData[0].itemNo\n      // );\n\n      //Update unit cost n price in db, after update POS.\n      let data1 = {\n        invoiceName: selectedDropdown.slug,\n        itemName: singleItemData[0].itemNo.toLowerCase(),\n        value: {\n          // cost: gethandwrittenlog[0].PosUnitCost,\n          // sellingPrice: gethandwrittenlog[0].PosUnitPrice,\n          isUpdated: \"false\",\n          // isUpdatedDate:todayDate\n        },\n      };\n      console.log(data1);\n      await inventoryService.UpdateHandWrittenProductFields(data1);\n\n      //Log Generate.\n      console.log(\"PRODUCTT\");\n      // console.log(singleItemData);\n      // const log = {\n      //   InvoiceName: selectedDropdown.slug,\n      //   InvoiceDate: \"\",\n      //   ItemNo: singleItemData[0].itemNo,\n      //   InvoiceDescription: singleItemData[0].description,\n      //   PosDescription: singleItemData[0].posName,\n      //   PosUnitCost: singleItemData[0].cost,\n      //   PosUnitPrice: singleItemData[0].sellingPrice,\n      //   // OldMarkup: singleItemData[0].margin.toFixed(2).toString(),\n      //   OldMarkup: (\n      //     ((singleItemData[0].sellingPrice - singleItemData[0].cost) /\n      //       singleItemData[0].cost) *\n      //     100\n      //   )\n      //     .toFixed(2)\n      //     .toString(),\n\n      //   NewUnitCost: posProducts[0].COST,\n      //   NewUnitPrice: posProducts[0].PRICE,\n      //   // NewMarkup:( ((singleItemData[0].sp- singleItemData[0].cp)/ singleItemData[0].cp)*100).toFixed(2).toString(),\n      //   NewMarkup: (\n      //     ((posProducts[0].PRICE - posProducts[0].COST) /\n      //       posProducts[0].COST) *\n      //     100\n      //   )\n      //     .toFixed(2)\n      //     .toString(),\n\n      //   UpdateDate: todayDate,\n      //   Person: userEmail,\n      //   TimeStamp: new Date().toTimeString().split(\" \")[0],\n      //   InvCaseCost: singleItemData[0].unitPrice,\n      //   InvUnitsInCase: singleItemData[0].pieces,\n      //   HandWritten: \"YES\",\n      //   SKU: singleItemData[0].posSku,\n      // };\n      // console.log(log);\n\n      // const logUpdate = await inventoryService.handwrittenPosLogs(log);\n      // console.log(logUpdate);\n      setProductsInTableNew(selectedDropdown);\n    } else {\n      alert(\"POS not updated!!\");\n      setProductsInTableNew(selectedDropdown);\n    }\n  };\n\n  const reverseUpdate = async (index) => {\n    console.log(index);\n    console.log(tableData);\n    console.log(tableData[index]);\n    let item = tableData[index];\n    let data = {\n      invoice: invoice.slug,\n      itemNo: item.itemNo,\n    };\n    const result = await inventoryService.reverseUpdate(data);\n    console.log(result);\n    if (result.ok == 1) {\n      setProductsInTable();\n    } else {\n      alert(\"Some error occured in updation\");\n    }\n  };\n\n  const linkManually = async (index) => {\n    console.log(index);\n    console.log(tableData);\n    console.log(tableData[index]);\n    let item = tableData[index];\n    console.log(item);\n    let data = {\n      invoice: invoice.slug,\n      itemNo: item.itemNo,\n    };\n    const result = await inventoryService.linkManually(data);\n    console.log(result);\n\n    //Update unit cost from excel.\n    // const skuData = {sku: item.posSku};\n    // const res = await inventoryService.fetchProductFromPosList(skuData);\n    // console.log(res);\n\n    //Log Generate.\n    const costChange = item.cp - item.cost;\n    const invError = item.cp >= 3 * item.cost ? \"YES\" : \"\";\n    console.log(invError);\n    let logState = {\n      InvoiceDescription: item.description,\n      PosDescription: item.posName,\n      SKU: item.posSku,\n      Barcode: item.barcode,\n      InvoiceName: invoice.slug,\n      ItemCode: item.itemNo,\n      LinkingDate: todayDate,\n      PersonName: userEmail,\n      Size: item.size,\n      PosUnitCost: item.cost,\n      PosUnitPrice: item.sellingPrice,\n      // InvoiceNo: num,\n      // InvoiceDate: day,\n      Department: item.department,\n      InvUnitCost: item.cp,\n      CostIncrease: invError == \"YES\" ? \"\" : costChange > 0 ? \"YES\" : \"\",\n      CostDecrease: invError == \"YES\" ? \"\" : costChange < 0 ? \"YES\" : \"\",\n      CostSame: invError == \"YES\" ? \"\" : costChange == 0 ? \"YES\" : \"\",\n      InvError: invError,\n    };\n    console.log(logState);\n    const logResult = await inventoryService.linkManuallyLog(logState);\n    console.log(logResult);\n\n    if (result.statusText == \"OK\") {\n      setProductsInTable();\n      // setProductsInTableNew(inv, num, day);\n    } else {\n      alert(\"Some error occured in updation\");\n      setProductsInTable();\n      // setProductsInTableNew(inv, num, day);\n    }\n  };\n\n  const updateUnits = async (index) => {\n    const item = tableData[index];\n    console.log(item);\n    const data = {\n      invoiceName: selectedDropdown.slug,\n      itemName: item.itemNo.toLowerCase(),\n      value: {\n        pieces: item.pieces,\n      },\n    };\n\n    console.log(\"updateUnits_data : \", data);\n    inventoryService\n      .UpdateHandWrittenProductFields(data)\n      .then((res) => {\n        if (!res) {\n          throw new Error(\"Product not updated\");\n        }\n        console.log(res);\n        alert(\"Successfully updated fields\");\n        // setStateUpdated(true);\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"Some error occuured in creating product\");\n      });\n    // .finally(setProductsInTable());\n    // console.log(res);\n  };\n\n  const updatePosDetails = async (index) => {\n    const item = tableData[index];\n    console.log(item);\n    const data = {\n      invoiceName: selectedDropdown.slug,\n      itemName: item.itemNo.toLowerCase(),\n      value: {\n        ...item,\n        barcode: posProduct.barcode,\n        department: posProduct.department,\n        posName: posProduct.pos,\n        posSku: posProduct.posSku,\n        size: posProduct.size,\n        sellingPrice: posProduct.sellingPrice,\n        cost: posProduct.sellerCost,\n        isUpdated: \"false\",\n      },\n    };\n\n    console.log(\"updatePosDetails : \", data);\n    inventoryService\n      .UpdateHandWrittenProductFields(data)\n      .then((res) => {\n        if (!res) {\n          throw new Error(\"Product not updated\");\n        }\n        console.log(res);\n        alert(\"Successfully updated fields\");\n        // setStateUpdated(true);\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"Some error occuured in creating product\");\n      })\n      .finally(() => {\n        setProductsInTableNew(selectedDropdown);\n        // renderTableData();\n      });\n    // console.log(res);\n  };\n\n  const linkingCorrect = async (index) => {\n    console.log(index);\n    console.log(tableData);\n    console.log(tableData[index]);\n    let item = tableData[index];\n    console.log(item);\n    let data = {\n      invoice: invoice.slug,\n      itemNo: item.itemNo,\n    };\n    console.log(data);\n    const res = await inventoryService.linkingCorrect(data);\n    console.log(res);\n    if (res.statusText == \"OK\") {\n      const costChange = item.cp - item.cost;\n      const invError = item.cp >= 3 * item.cost ? \"YES\" : \"\";\n\n      let logState = {\n        InvoiceDescription: item.description,\n        PosDescription: item.posName,\n        SKU: item.posSku,\n        Barcode: item.barcode,\n        InvoiceName: invoice.slug,\n        ItemCode: item.itemNo,\n        LinkingDate: todayDate,\n        PersonName: userEmail,\n        Size: item.size,\n        PosUnitCost: item.cost,\n        PosUnitPrice: item.sellingPrice,\n        // InvoiceNo: num,\n        // InvoiceDate: day,\n        Department: item.department,\n        InvUnitCost: item.cp,\n        CostIncrease: \"\",\n        CostDecrease: \"\",\n        CostSame: \"\",\n        Unidentified: \"YES\",\n        InvError: invError,\n      };\n      const res = await inventoryService.UnidentifiedLog(logState);\n      console.log(res);\n      alert(\"SUCCESS\");\n      setProductsInTable();\n    } else {\n      alert(\"Some error occured\");\n      setProductsInTable();\n    }\n  };\n\n  // const reversePOSUpdate = async(index) => {\n  //   console.log(index);\n  //   console.log(tableData);\n  //   console.log(tableData[index]);\n  //   let item = tableData[index];\n  //   const result = await inventoryService.reversePOSUpdate(inv, num, day, item.itemNo);\n  //   if(result.ok == 1){\n  //     setProductsInTable();\n  //   }else {\n  //     alert(\"Some error occured in updation\");\n  //   }\n\n  // }\n\n  const renderTableHeader = () => {\n    return header.map((key, index) => {\n      return (\n        <th\n          key={index}\n          style={{\n            position: \"sticky\",\n            top: \"70px\",\n            background: \"grey\",\n          }}\n        >\n          {key.toUpperCase()}\n        </th>\n      );\n    });\n  };\n\n  const renderTableData = () => {\n    // dispatch({type: \"LOADER\"});\n    // setTableData(tableContant);\n    console.log(\"renderTableData_tableData : \", tableData);\n    // console.log(\"renderTableData_tableContant : \", tableContant);\n    console.log(\"renderTableData_showPosState : \", showPosState);\n\n    // hicksvilleDropdown(HicksData);\n    console.log(\"renderTableData_tableData : \", tableData);\n    if (tableData) {\n      console.log(tableData);\n      console.log(\"renderTableData_showPosState : \", showPosState);\n      // console.log(showPosIndex);\n      // console.log(tableData[0]);\n\n      let rows = tableData.map((element, index) => {\n        //fuzzwuzzSuggestion = getFuzzwuzzSuggestion(element.description);\n        let isEmpty =\n          element.qty === \"\" ||\n          element.itemNo === \"\" ||\n          !element.pieces ||\n          isNaN(element.unitPrice) ||\n          element.unitPrice === \"\" ||\n          isNaN(element.extendedPrice);\n        // if (isEmpty && element.show) {\n        //   let emptyColumn = [...emptyColumnList, index];\n        //   emptyColumnList = [...new Set(emptyColumn)];\n        // }\n        let isFree = element.qty != 0 && element.extendedPrice === \"0.00\";\n        // console.log(element.isUpdated);\n        console.log(\"renderTableData_element : \", element);\n        let margin =\n          ((element.sellingPrice - element.cost) / element.cost) * 100;\n\n        console.log(\"isEmpty : \", isEmpty);\n        console.log(\"isFree : \", isFree);\n        const isUpdated = \"true\";\n        const updateIndex = 1;\n        const costInc = \"true\";\n        const costDec = \"true\";\n        let hicksvilleData = [];\n        const deleteRow = () => {\n          console.log(\"deleteRow\");\n        };\n        const addRow = () => {\n          console.log(\"addRow\");\n        };\n\n       \n        const pushInventoryDetails = () => {\n          console.log(\"pushInventoryDetails\");\n        };\n\n        return (\n          <tr\n            key={index}\n            className={isEmpty ? styles.red : isFree ? styles.free : null}\n            // style={element.show ? { opacity: \"1\" } : { opacity: \"0.4\" }}\n            style={\n              element.linkingCorrect == \"false\"\n                ? { backgroundColor: \"pink\" }\n                : element.isUpdated === \"true\"\n                ? { backgroundColor: \"lightGreen\" }\n                : element.show\n                ? { opacity: \"1\" }\n                : { opacity: \"0.4\" }\n            }\n          >\n            <td> {index + 1} </td>\n\n            {/* <td>\n              <TextField\n                type=\"tel\"\n                value={element.details}\n                id=\"outlined-secondary\"\n                variant=\"outlined\"\n                onChange={(e) => {\n                  handleChange(index, \"details\", e.target.value);\n                }}\n                style={{ width: 100 }}\n              />\n            </td> */}\n            <td className={styles.element}>\n              <TextField\n                type=\"tel\"\n                value={\n                  showPosIndex === index\n                    ? showPosState.barcode\n                    : element.barcode\n                }\n                id=\"outlined-secondary\"\n                variant=\"outlined\"\n                onChange={(e) => {\n                  handleChange(index, \"barcode\", e.target.value);\n                }}\n                style={{ width: 150 }}\n              />\n              <IconButton\n                color=\"primary\"\n                aria-label=\"add to review\"\n                // onClick={() => addForReview(element, index)}\n              >\n                <InfoOutlinedIcon\n                  style={element.isReviewed === \"true\" ? { fill: \"red\" } : null}\n                />\n                {/* <AddShoppingCartIcon\n                  style={\n                    reviewItems.includes(index)\n                      ? { backgroundColor: \"green\" }\n                      : null\n                  }\n                /> */}\n              </IconButton>\n              <div\n                className={\n                  element.isReviewed === \"true\"\n                    ? styles.tooltipIsReviewed\n                    : styles.tooltip\n                }\n              >\n                <p>\n                  POS Product-{\" \"}\n                  {showPosIndex === index ? showPosState.pos : element.posName}\n                </p>\n                {/* <p>UPC- {showPosIndex === index ? showPosState.barcode : element.barcode}</p> */}\n                <p>\n                  Size-{\" \"}\n                  {showPosIndex === index ? showPosState.size : element.size}\n                </p>\n                <p>\n                  Department -{\" \"}\n                  {showPosIndex === index\n                    ? showPosState.department\n                    : element.department}\n                </p>\n                {/*<p>Margin(%) - {margin.toFixed(2)}</p>*/}\n                <p>Margin(%) - {showPosIndex === index ? (((showPosState.sellingPrice - showPosState.sellerCost)/showPosState.sellerCost)*100).toFixed(2) : margin.toFixed(2)}</p>\n                <p>\n                  Unit Cost-{\" \"}\n                  {showPosIndex === index\n                    ? showPosState.sellerCost\n                    : element.cost}\n                </p>\n                <p>\n                  Unit Price-{\" \"}\n                  {showPosIndex === index\n                    ? showPosState.sellingPrice\n                    : element.sellingPrice}\n                </p>\n                {/* <p>Price- {showPosIndex === index ? showPosState.price : element.price}</p> */}\n                <div>\n                  <button\n                    onClick={() => {\n                      if (notFounds === \"true\") {\n                        toggleModal(\"notfounds\");\n                      } else {\n                        updatePosDetails(index);\n                      }\n                    }}\n                    disabled={showPosIndex === index ? false : true}\n                    style={{\n                      backgroundColor: \"green\",\n                      border: \"none\",\n                      color: \"white\",\n                      padding: \"4px 8px\",\n                      textAlign: \"center\",\n                      textDecoration: \"none\",\n                      display: \"inline-block\",\n                      fontSize: \"14px\",\n                      align: \"left\",\n                    }}\n                  >\n                    Update Item\n                  </button>\n                </div>\n                <br />\n                <div>\n                  <button\n                    onClick={() => linkManually(index)}\n                    // disabled={showPosIndex === index ? false : true}\n                    style={{\n                      backgroundColor: \"blue\",\n                      border: \"none\",\n                      color: \"white\",\n                      padding: \"4px 8px\",\n                      textAlign: \"center\",\n                      textDecoration: \"none\",\n                      display: \"inline-block\",\n                      fontSize: \"14px\",\n                      align: \"left\",\n                    }}\n                  >\n                    Link Manually\n                  </button>\n                </div>\n                <br />\n                <div>\n                  <button\n                    onClick={() => reverseUpdate(index)}\n                    // disabled={showPosIndex === index ? false : true}\n                    style={{\n                      backgroundColor: \"red\",\n                      border: \"none\",\n                      color: \"white\",\n                      padding: \"4px 8px\",\n                      textAlign: \"center\",\n                      textDecoration: \"none\",\n                      display: \"inline-block\",\n                      fontSize: \"14px\",\n                      align: \"left\",\n                    }}\n                  >\n                    Reverse Update\n                  </button>\n                </div>\n              </div>\n            </td>\n            <td>\n              {showPosIndex === index ? showPosState.posSku : element.posSku}\n            </td>\n            <td>\n              <TextField\n                type=\"tel\"\n                value={element.qty}\n                id=\"outlined-secondary\"\n                variant=\"outlined\"\n                onChange={(e) => {\n                  handleChange(index, \"qty\", e.target.value);\n                }}\n                style={{ width: 100 }}\n              />\n            </td>\n            <td>{element.cp}</td>\n            <td>\n              <Autocomplete\n                value={element.itemNo}\n                onChange={(event, newValue) => {\n                  if (newValue) {\n                    handleChange(index, \"itemNo\", newValue);\n                  }\n                }}\n                id=\"combo-box\"\n                options={itemNoDropdown}\n                getOptionLabel={(option) => option}\n                style={{ width: 200 }}\n                renderInput={(params) => (\n                  <TextField {...params} variant=\"outlined\" />\n                )}\n              />\n            </td>\n            <td>\n              {/* {dropdownIndex == index ? fetchingOptions ? <Loading type=\"ThreeDots\" height={40} width={40} /> : null : null} */}\n              <Autocomplete\n                value={\n                  showPosIndex === index ? showPosState.item : element.itemNo\n                }\n                loading={true}\n                onInputChange={(event, value) => {\n                  console.log(\"ON INPUT CHANGE\");\n                  // event.toLowerCase();\n                  // value.toLowerCase();\n                  // console.log(event.target.value);\n                  // console.log(value);\n                  // searchDropdown(event, value);\n                  // setOptions([]);\n                  if (event != null) {\n                    setTimeout(() => {\n                      hicksvilleDropdownNew(event, value, index);\n                    }, 1500);\n                  }\n                  // hicksvilleDropdownNew(event, value, index);\n                }}\n                onChange={(event, newValue) => {\n                  // console.log(event.target.value);\n                  // console.log(newValue);\n                  if (newValue) {\n                    let newState = { ...showPosState };\n                    console.log(newValue);\n                    // newState.item = newValue.name;\n                    newState.item = element.itemNo;\n                    newState.description = newValue.name;\n                    newState.barcode = newValue.upc;\n                    newState.pos = newValue.name;\n                    newState.posSku = newValue.sku;\n                    newState.size = newValue.size;\n                    newState.department = newValue.department;\n                    newState.sellerCost = newValue.cost;\n                    newState.sellingPrice = newValue.price;\n                    // setShowPosState(newState);\n                    dispatch({ type: \"SET_POS_STATE\", data: newState });\n                    setShowPosIndex(index);\n                    setUnitCost(newValue.cost);\n                    setPosProduct(newState);\n                    setShowPosState(newState);\n                    // setStateUpdated(\"\");\n                    if (isEmpty) {\n                      // setNotFounds(\"true\");\n                      dispatch({ type: \"NOT_FOUNDS\", data: \"true\" });\n\n                      setRedState(\"false\");\n                    }\n                    //setDisabled(false);\n                    //updateOnHoverDetails(index);\n                    //setShowPosIndex(index);\n                    // console.log(newValue);\n                    console.log(newState);\n                    //console.log(showPosState);\n                  }\n                }}\n                id=\"combo-box\"\n                // options={element.fuzzSuggestion}\n                options={options}\n                // getOptionLabel={option => option.label}\n                getOptionLabel={(option) => option.label ?? element.itemNo}\n                // getOptionLabel={(option) => dropdownLoader ? <Spinner /> : option.label}\n                style={{ width: 400 }}\n                renderInput={(params) => (\n                  <TextField {...params} variant=\"outlined\" />\n                )}\n              />\n            </td>\n\n            <td>{element.description}</td>\n            {/* <td>{element.pieces}</td> */}\n            <td>\n              <TextField\n                type=\"tel\"\n                value={element.pieces}\n                variant=\"outlined\"\n                onChange={(e) => {\n                  handleChange(index, \"pieces\", e.target.value);\n                }}\n                style={{ width: 100 }}\n              />\n              <button\n                onClick={() => {\n                  updateUnits(index);\n                }}\n                style={{\n                  backgroundColor: \"#008CBA\",\n                  border: \"none\",\n                  color: \"white\",\n                  padding: \"5px 16px\",\n                  textAlign: \"center\",\n                  textDecoration: \"none\",\n                  display: \"inline-block\",\n                  fontSize: \"10px\",\n                  margin: \"4px 2px\",\n                  cursor: \"pointer\",\n                }}\n              >\n                Update Units\n              </button>\n            </td>\n            <td>\n              <TextField\n                type=\"tel\"\n                value={element.unitPrice}\n                variant=\"outlined\"\n                onChange={(e) => {\n                  handleChange(index, \"unitPrice\", e.target.value);\n                }}\n                style={\n                  element.priceIncrease === 1\n                    ? { backgroundColor: \"#1a8cff\", width: 100 }\n                    : element.priceIncrease === -1\n                    ? { backgroundColor: \"#ffb31a\", width: 100 }\n                    : { width: 100 }\n                  // showPosIndex === index ? costInc===\"true\" ? { backgroundColor: \"#1a8cff\", width: 100 } : costDec===\"true\" ? { backgroundColor: \"#ffb31a\", width: 100 } : {width: 100}\n                  //   : element.priceIncrease === 1\n                  //       ? { backgroundColor: \"#1a8cff\", width: 100 }\n                  //       : element.priceIncrease === -1\n                  //       ? { backgroundColor: \"#ffb31a\", width: 100 }\n                  //       : { width: 100 }\n                }\n              />\n            </td>\n            <td>{element.extendedPrice}</td>\n\n            <td>\n              <TextField\n                type=\"tel\"\n                /*value={element.sp}*/\n                value={(showPosIndex === index\n                  ? showPosState.sellingPrice\n                  : element.sellingPrice)}\n                variant=\"outlined\"\n                onChange={(e) => {\n                  handleChange(index, \"sellingPrice\", e.target.value);\n                }}\n                style={{ width: 100 }}\n              />\n            </td>\n            <td>{element.markup}</td>\n            {/* <td>\n              <Checkbox\n                checked={!element.show}\n                onChange={(e) => handleChange(index, \"show\", e.target.value)}\n                inputProps={{ \"aria-label\": \"primary checkbox\" }}\n              />\n            </td> */}\n\n            <td className={styles.element}>\n              <IconButton\n                onClick={() => {\n                  toggleModal(\"details\");\n                  setDetailsIndex(index);\n                }}\n              >\n                <AddCircleIcon />\n              </IconButton>\n              <div className={styles.tooltip}>\n                <p>Details- {element.details}</p>\n              </div>\n            </td>\n\n            <td>\n              <Button\n                text={element.show ? \"Delete\" : \"Undo\"}\n                color=\"btn btn-info\"\n                type=\"submit\"\n                onClick={() => deleteRow(index)}\n              />\n            </td>\n            <td>\n              <Button\n                text=\"Update POS\"\n                color=\"btn btn-info\"\n                type=\"submit\"\n                onClick={() => {\n                  if(window.confirm(\"Do You Want to Update Data in POS\")){\n                    pushSingleItemToInventory(index)\n                  }\n                }}\n                style={{ width: 120 }}\n              />\n            </td>\n            <td>\n              <Button\n                text=\"Reverse POS\"\n                type=\"submit\"\n                onClick={() => reversePOSUpdate(index)}\n                style={{ width: 120, backgroundColor: \"red\", color: \"white\" }}\n              />\n            </td>\n            <td className={styles.element}>\n              <IconButton onClick={() => linkingCorrect(index)}>\n                <Cancel />\n              </IconButton>\n            </td>\n            <td>{index + 1}</td>\n            {/* <td>\n              <Button\n                text={element.show ? \"Delete\" : \"Undo\"}\n                color=\"btn btn-info\"\n                type=\"submit\"\n                onClick={() => deleteRow(index)}\n              />\n            </td> */}\n          </tr>\n        );\n      });\n      return (\n        <div style={{ marginTop: \"35px\" }}>\n          <table className=\"table table-hover table-responsive-sm\">\n            <tbody>\n              <tr>{renderTableHeader()}</tr>\n              {rows}\n              <tr>\n                <td>\n                  <Button\n                    text=\"Add cell\"\n                    color=\"btn btn-info\"\n                    onClick={() => console.log(\"addRow\")}\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <div className={styles.divRow}>\n            <Button\n              text=\"Update Inventory\"\n              color=\"btn btn-info\"\n              type=\"submit\"\n              onClick={() => console.log(\"addRow\")}\n            />\n            {/* <Button\n              text=\"Save Invoice Data\"\n              color=\"btn btn-info\"\n              type=\"submit\"\n              onClick={toggleModal}\n            /> */}\n            <Button\n              text=\"Re upload\"\n              color=\"btn btn-info\"\n              type=\"submit\"\n              onClick={() => window.location.reload()}\n            />\n          </div>\n        </div>\n      );\n    }\n  };\n\n  const updateItem = async (index) => {\n    console.log(\"updateItem_selectedDropdown : \", selectedDropdown);\n    console.log(\"updateItem_posProduct : \", posProduct);\n    console.log(\"updateItem_tableData[index] : \", tableData[index]);\n    console.log(\"updateItem_itemName : \", itemName);\n    const data = {\n      invoiceName: selectedDropdown.slug,\n      itemName: itemName,\n      value: {\n        barcode: posProduct.barcode,\n        department: posProduct.department,\n        posName: posProduct.pos,\n        posSku: posProduct.posSku,\n        size: posProduct.size,\n        cost: posProduct.sellerCost,\n        sellingPrice: posProduct.sellingPrice,\n        pieces: unitsInCase,\n        sellingCost: newUnitCost,\n        itemNo: itemName,\n        description: itemName,\n        price: caseCost === undefined ? price : caseCost,\n        sku: \"\",\n        details: \"\",\n        extendedPrice: (quantity * price).toFixed(2).toString(),\n        unitPrice: price,\n        isUpdated: \"\",\n        isUpdatedDate:todayDate,\n        itemNoPresent: \"\",\n        linkingCorrect: \"\",\n        margin: \"\",\n        markup: \"\",\n        priceIncrease: \"\",\n        qty: quantity,\n        show: \"\",\n        isReviewed: \"true\",\n      },\n    };\n    console.log(data);\n\n    const result = await inventoryService.UpdateHandWrittenProductFields(data);\n    console.log(result);\n    setProductsInTableNew(selectedDropdown);\n    renderTableData();\n  };\n\n  const toggleModal = (x) => {\n    console.log(posProduct);\n    console.log(!showModal);\n    if (x === \"showModal\") {\n      setShowModal(!showModal);\n    } else {\n      setShowModal(!showModal);\n\n      // setDetailsModal(!detailsModal);\n    }\n  };\n\n  const handleChange = (index, key, val) => {\n    console.log(\"handleChange_key : \", key);\n    console.log(\"handleChange_val : \", val);\n    console.log(\"handleChange_index : \", index);\n    console.log(\"handleChange_setPosProduct : \", posProduct);\n    console.log(\"handleChange_tableData[index] : \", tableData[index]);\n    // setPosProduct({\n    //   ...posProduct,\n    //   [key]: val,\n    // });\n    // const tempData = [{...tableData[index], [key]:val }]\n\n    if (key === \"sellingPrice\") {\n      setNewUnitPrice(val);\n      setPrevNewUnitPrice(tableDataCopy[index].sellingPrice);\n      console.log(\"NewUnitPrice_value : \", val);\n      console.log(\"PrevNewUnitPrice_value : \", tableDataCopy[index].sellingPrice);\n    }\n\n    const tempTableData = {\n      ...tableData,\n      [index]: { ...tableData[index], [key]: val },\n    };\n    const propertyNames = Object.values(tempTableData);\n\n    console.log(\"propertyName : \", propertyNames);\n    console.log(\"handelChange_propertyNames[index] : \", propertyNames[index]);\n    setTableData(propertyNames);\n  };\n\n  const addProduct = () => {\n    setShowModal(!showModal);\n    console.log(posProduct);\n    const data = {\n      InvoiceName: invoice.slug,\n      ItemName: posProduct.itemName,\n      POS: posProduct.pos,\n      Barcode: posProduct.barcode,\n      PosSKU: posProduct.posSku,\n      Size: posProduct.size,\n      Department: posProduct.department,\n      SellerCost: posProduct.unitCost,\n      SellingPrice: posProduct.unitPrice,\n      NewUnitCost: posProduct.newUnitCost,\n      NewUnitPrice: posProduct.newUnitPrice,\n    };\n\n    inventoryService\n      .handwrittenLogs(data)\n      .then((res) => {\n        if (!res) {\n          throw new Error(\"Product not created\");\n        }\n        console.log(res);\n        alert(\"Successfully updated fields\");\n      })\n      .then()\n      .catch((err) => {\n        console.log(err);\n        alert(\"Some error occuured in creating product\");\n      })\n      .finally();\n  };\n\n  const hicksvilleDropdownNew = async (event, value, index) => {\n    console.log(event);\n    console.log(value);\n    console.log(value.length);\n    setOptions([]);\n\n    if (!isNaN(value) && value.length > 0) {\n      console.log(\"number\");\n      const res = await inventoryService.getHicksvilleData(value.toUpperCase());\n      const data = res;\n      console.log(data);\n\n      let productsString = \"\";\n      for (let i = 0; i < data.length; i++) {\n        productsString = productsString + data[i].name + \"$$$\";\n      }\n      let result = productsString.split(\"$$$\");\n\n      let newData = [];\n      for (let i = 0; i < result.length; i++) {\n        let s = result[i].split(\"@@@\");\n        let obj = {\n          sku: s[1] === \"nan\" ? null : s[1],\n          upc: s[0] === \"nan\" ? null : s[0],\n          altupc1: s[14] === \"nan\" ? null : s[14],\n          altupc2: s[15] === \"nan\" ? null : s[15],\n          name: s[2] === \"nan\" ? null : s[2],\n          vintage: s[8] === \"nan\" ? null : s[8],\n          totalQty: s[13] === \"nan\" ? null : s[13],\n          cost: s[4] === \"nan\" ? null : s[4],\n          pricea: s[10] === \"nan\" ? null : s[10],\n          priceb: s[11] === \"nan\" ? null : s[11],\n          pricec: s[12] === \"nan\" ? null : s[12],\n          department: s[9] === \"nan\" ? null : s[9],\n          salePrice: s[5] === \"nan\" ? null : s[5],\n          size: s[6] === \"nan\" ? null : s[6],\n          pack: s[7] === \"nan\" ? null : s[7],\n          price: s[3] === \"nan\" ? null : s[3],\n        };\n        newData.push(obj);\n      }\n      const filter = newData.map((element) => {\n        let obj = { ...element };\n        obj.label = `${element.name}--${element.price}--${element.upc}--${element.size}--${element.cost}--${element.sku}`;\n        //console.log(obj);\n        return obj;\n      });\n      setOptions(filter);\n    }\n\n    if (isNaN(value) && value != null && value.length >= 4) {\n      console.log(\"string\");\n      // setDropdownLoader(true);\n      // setFetchingOptions(true);\n      const res = await inventoryService.getHicksvilleData(value.toUpperCase());\n      const data = res;\n      console.log(data);\n\n      let productsString = \"\";\n      for (let i = 0; i < data.length; i++) {\n        productsString = productsString + data[i].name + \"$$$\";\n      }\n      let result = productsString.split(\"$$$\");\n\n      let newData = [];\n      for (let i = 0; i < result.length; i++) {\n        let s = result[i].split(\"@@@\");\n        let obj = {\n          sku: s[1] === \"nan\" ? null : s[1],\n          upc: s[0] === \"nan\" ? null : s[0],\n          altupc1: s[14] === \"nan\" ? null : s[14],\n          altupc2: s[15] === \"nan\" ? null : s[15],\n          name: s[2] === \"nan\" ? null : s[2],\n          vintage: s[8] === \"nan\" ? null : s[8],\n          totalQty: s[13] === \"nan\" ? null : s[13],\n          cost: s[4] === \"nan\" ? null : s[4],\n          pricea: s[10] === \"nan\" ? null : s[10],\n          priceb: s[11] === \"nan\" ? null : s[11],\n          pricec: s[12] === \"nan\" ? null : s[12],\n          department: s[9] === \"nan\" ? null : s[9],\n          salePrice: s[5] === \"nan\" ? null : s[5],\n          size: s[6] === \"nan\" ? null : s[6],\n          pack: s[7] === \"nan\" ? null : s[7],\n          price: s[3] === \"nan\" ? null : s[3],\n        };\n        newData.push(obj);\n      }\n      const filter = newData.map((element) => {\n        let obj = { ...element };\n        if (element.itemNo != \"undefined\") {\n          obj.label = `${element.name}--${element.price}--${element.upc}--${element.size}--${element.cost}--${element.sku}`;\n        }\n        //console.log(obj);\n        return obj;\n      });\n      setOptions(filter);\n    }\n  };\n\n  const getItems = async () => {\n    // const data = {\n    //   invoice: invoice.slug,\n    // }\n    const data = selectedDropdown;\n    console.log(data);\n    const res = await inventoryService.getItemForHandwrittenInvoice(data);\n    console.log(\"getItems_res : \", res);\n    return res;\n  };\n  const setProductsInTable = () => {\n    // setLoader(true);\n    dispatch({ type: \"LOADER\" });\n    // GetProductDetails function fetch data from invoice name collection\n    async function invoiceData() {\n      const products = await tesseractService.GetProductDetails(\n        selectedDropdown.slug\n        // inv\n      );\n      console.log(\"setProductsInTable_invoiceData() : \", products);\n      //console.log(props.selectedInvoice);\n      return products;\n    }\n    invoiceData();\n    getItems()\n      .then((products) => {\n        /**post processing the table data after returning from filter */\n        // function convertToUpperCase(obj) {\n        //   let newObj = {};\n        //   for (let key in obj) {\n        //     newObj[key.toUpperCase()] = obj[key];\n        //   }\n        //   return newObj;\n        // }\n        // products = convertToUpperCase(products);\n        console.log(\"setProductsInTable_getItems() : \", products);\n        // scanInvoiceData.InvoiceData = ocrData;\n        //   setOcrProducts(ocrData);\n\n        //   console.log(scanInvoiceData);\n        // scanInvoiceData.InvoiceData = ocrData;\n        //console.log(resScnInvDta);\n        //console.log(\"OCERDATa\", ocrData);\n        //console.log(products);\n        //console.log(scanInvoiceData);\n        let table = products.map((row) => {\n          /**For invoices which dont have item no, set description as item no */\n          if (row.itemNo === undefined) {\n            // row.itemNo = row.description.trim().toUpperCase();\n            // row.itemNo = row.Description.trim().toUpperCase();\n            row.itemNo = row.Description.trim();\n          }\n          // row.itemNo = row.itemNo.toString().toUpperCase();\n          // row.itemNo = row.Item.toString().toUpperCase();\n          row.itemNo = row.Item.toString();\n\n          row.description = row.Description;\n          // products[row.itemNo] !== undefined\n          //   ? products[row.itemNo].Description\n          //   : row.description;\n          row.pieces = row.Quantity;\n          // products[row.Item] !== undefined\n          //   ? products[row.Item].Quantity\n          //   : 0;\n          row.sku = row.sku;\n          // products[row.Item] !== undefined\n          //   ? products[row.Item].sku\n          //   : \"\";\n          row.barcode = row.Barcode;\n          // products[row.Item] !== undefined\n          //   ? products[row.Item].Barcode\n          //   : \"\";\n          row.posName = row.POS;\n          // products[row.Item] !== undefined\n          //   ? products[row.Item].POS\n          //   : \"\";\n          row.markup = 0;\n          row.show = true;\n          row.posSku = row.PosSKU;\n          // products[row.Item] !== undefined\n          //   ? products[row.Item].PosSKU\n          //   : \"\";\n          row.isReviewed = row.isReviewed;\n          // products[row.Item] !== undefined ? products[row.Item].isReviewed : \"\" ;\n          row.size = row.Size;\n          // products[row.Item] !== undefined ? products[row.Item].Size : \"\";\n          row.department = row.Department;\n          // products[row.Item] !== undefined ? products[row.Item].Department : \"\";\n          row.cost = row.SellerCost;\n          // products[row.Item] !== undefined ? products[row.Item].SellerCost : \"\";\n          row.sellingPrice = row.SellingPrice;\n          // products[row.Item] !== undefined ? products[row.Item].SellingPrice : \"\";\n          row.price = row.Price;\n          // products[row.Item] !== undefined ? products[row.Item].Price : \"\";\n          row.details = row.Details;\n          // products[row.Item] !== undefined ? products[row.Item].Details : \"\";\n          row.linkingCorrect = row.linkingCorrect;\n          // products[row.Item] !== undefined ? products[row.Item].LinkingCorrect : \"\";\n          // row.margin = products[row.Item] !== undefined ? ((products[row.Item].SellingPrice - products[row.Item].SellerCost)/ products[row.Item].SellerCost)*100 : \"\";\n          row.margin =\n            row.Item !== undefined\n              ? ((row.SellingPrice - row.SellerCost) / row.SellerCost) * 100\n              : \"\";\n          //console.log(\"department-\" + row.department + \"  cost-\" + row.cost + \"  price\" + row.sellingPrice);\n          let sp = 0;\n          let cp = 0;\n          // const barcode = products.Barcode\n          // if (parseInt(row.pieces)) {\n          //   sp = (parseFloat(row.unitPrice) / parseInt(row.pieces)).toFixed(\n          //     2\n          //   );\n          //   cp = sp;\n          // }\n          row.cp = \"\";\n          row.sp = \"\";\n          if (row.Item !== undefined) {\n            if (sp > row.sellerCost) {\n              row[\"priceIncrease\"] = 1;\n            } else if (sp < +row.sellerCost) {\n              row[\"priceIncrease\"] = -1;\n            } else if (sp == +row.sellerCost) {\n              row[\"priceIncrease\"] = 0;\n            }\n          } else {\n            row[\"priceIncrease\"] = 0;\n          }\n\n          return { ...row, sp, cp };\n        });\n        // setLoader(false);\n        dispatch({ type: \"LOADER\" });\n\n        setTableData(table.filter((data) => data !== null));\n        setItemNoDropdown(Object.keys(products));\n        setProductDetails(products);\n      })\n      .catch((err) => {\n        console.log(\"error on mapping ocrdata\", err);\n        // setLoader(false);\n        dispatch({ type: \"LOADER\" });\n      });\n  };\n\n  // ************* Add by Deepanshu *****************\n  const fetchSavedData = async (invoice) => {\n    const data = await inventoryService.GethandwrittenLogs(invoice);\n    console.log(\"fetchSavedData_data : \", data);\n    if (data.length === 0) {\n      alert(\"Invoice doesnt Exist!!\");\n    } else return data;\n    // console.log(data);\n    // console.log(data[0].InvoiceData);\n  };\n\n  const no = \"2022-01-21\";\n\n  const setProductsInTableNew = (currentInvoice) => {\n    // setOpenInvoice(true);\n    // dispatch({type: \"OPEN_INVOICE\", data: true})\n    // console.log(invoiceOptions[index]);\n    // let invoice = invoiceOptions[index].InvoiceName;\n    // // setInv(invoice);\n    // dispatch({type: \"SET_INV\", data: invoice})\n    // let date =  invoiceOptions[index].SavedDate;\n    // // setDay(date);\n    // dispatch({type: \"SET_DAY\", data: date})\n    // let no = invoiceOptions[index].SavedInvoiceNo;\n    // // setNum(no);\n    // dispatch({type: \"SET_NUM\", data: no})\n    // // setLoader(true);\n    // dispatch({type: \"LOADER\"});\n\n    const invoice = currentInvoice;\n    // getProductDetails from their collection\n    console.log(\"setProductsInTableNew_invoice : \", invoice);\n    async function invoiceData() {\n      const resdata = await inventoryService.getItemForHandwrittenInvoice(\n        invoice\n      );\n      //console.log(props.selectedInvoice);\n      console.log(\"setProductsInTableNew_products : \", resdata);\n      return resdata;\n    }\n\n    invoiceData()\n      .then((invData) => {\n        console.log(\"fetchSavedData_handwrittenInvoiceData : \", invData);\n        const table = invData.map((row) => {\n          row.itemNoPresent = row.itemNo === undefined ? false : true;\n\n          if (row.itemNo === undefined) {\n            row.itemNo = row.description.trim().toUpperCase();\n          }\n\n          row.itemNo = row.itemNo.toString().toUpperCase();\n          row.description = row.description.toString().toUpperCase();\n\n          row.markup = 0;\n          row.show = true;\n\n          console.log(\"check here\");\n          let sp = 0;\n          let cp = 0;\n          // const barcode = products.Barcode\n          if (parseInt(row.pieces)) {\n            sp = (parseFloat(row.unitPrice) / parseInt(row.pieces)).toFixed(2);\n            cp = sp;\n          }\n\n          if (row.itemNo !== undefined) {\n            if (sp > +row.cost) {\n              row.priceIncrease = 1;\n            } else if (sp < row.cost) {\n              row.priceIncrease = -1;\n            } else if (sp == +row.cost) {\n              row.priceIncrease = 0;\n            }\n          } else {\n            row.priceIncrease = 0;\n          }\n\n          /**filter out the rows for which qty shipped & extendedPrice is zero */\n          if (row.qty == \"0\" && row.extendedPrice === \"0.00\") {\n            return null;\n          }\n          /**Calulate qty for which qty is not read/scanned by textract */\n          if (!row.qty) {\n            row.qty = (\n              parseFloat(row.extendedPrice) / parseFloat(row.unitPrice)\n            ).toFixed(0);\n          }\n          row.margin =\n            row.itemNo !== undefined\n              ? ((row.SellingPrice - row.cost) / row.cost) * 100\n              : \"\";\n          return { ...row, sp, cp };\n        });\n\n        setTableData(table.filter((data) => data !== null));\n        setTableDataCopy(table.filter((data) => data !== null));\n        console.log(\"fetchSavedData_tableData : \", tableData);\n      })\n      .catch((err) => {\n        console.log(\"error on mapping ocrdata\", err);\n        // setLoader(false);\n        // dispatch({type: \"LOADER\"});\n      });\n  };\n\n  // ************* Add by Deepanshu *****************\n  useEffect(() => {\n    const curDate = new Date();\n    console.log(curDate);\n    let date =\n      curDate.getFullYear() +\n      \"-\" +\n      (curDate.getMonth() + 1) +\n      \"-\" +\n      curDate.getDate();\n    console.log(date);\n    setTodayDate(date);\n\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        // setUserEmail(user.email);\n        setUserEmail(user.email);\n        console.log(\"This is the user: \", user);\n        console.log(\"This is the user: \", user.email);\n      } else {\n        // No user is signed in.\n        console.log(\"There is no logged in user\");\n      }\n    });\n  }, []);\n\n  return (\n    <div className=\"container-fluid\">\n      <Paper className={classes.root}>\n        <Grid style={{ display: \"flex\" }}>\n          {/* <ul>\n                  <li> */}\n          <Autocomplete\n            value={selectedDropdown}\n            onChange={async (event, newValue) => {\n              console.log(\"newValue\", newValue);\n              if (newValue) {\n                console.log(\"setSelectedDropdown :\", newValue);\n                setSelectedDropdown(newValue);\n                // const getInvoiceData = async(invoice)=>{\n                //   console.log(\"setSelectedDropdown_invoice :\",invoice);\n                //   const resdata = await inventoryService.getItemForHandwrittenInvoice(\n                //     invoice\n                //   );\n                //   return resdata;\n                // }\n                // const restableData = await getInvoiceData(newValue)\n                // console.log(\"restableData : \",restableData);\n                // setTableData(restableData);\n                setProductsInTableNew(newValue);\n                // setInvoice(newValue);\n                // setTimeout(()=> {}, 1000);\n                // invoice = newValue;\n                // console.log(invoice);\n                // setProductsInTable();\n              }\n              // getInvoices(newValue);\n            }}\n            id=\"combo-box\"\n            options={handwrittenInvoiceList}\n            getOptionLabel={(option) => option.value}\n            style={{ width: 200 }}\n            autoHighlight\n            renderInput={(params) => (\n              <TextField {...params} label={dropdownLabel} variant=\"outlined\" />\n            )}\n          />\n          {/* </li> */}\n          <br />\n\n          {/* <li> */}\n          <TextField\n            label=\"Item Name\"\n            variant=\"outlined\"\n            value={itemName}\n            onChange={(event) => {\n              // handleChange(\"Item\", event.target.value);\n              setItemName(event.target.value);\n            }}\n          />\n          <TextField\n            label=\"Quantity\"\n            variant=\"outlined\"\n            type=\"text\"\n            name=\"quantity\"\n            value={quantity}\n            onChange={(event) => {\n              // setInvoiceNo(event.target.value);\n              setQuantity(event.target.value);\n              console.log(\"setInvoiceNo_quantity : \", quantity);\n            }}\n          />\n\n          <TextField\n            label=\"Price\"\n            variant=\"outlined\"\n            type=\"text\"\n            name=\"price\"\n            value={price}\n            onChange={(event) => {\n              setPrice(event.target.value);\n              console.log(\"setInvoiceNo_price : \", price);\n            }}\n          />\n          <TextField\n            disabled\n            label=\"Extended Price\"\n            variant=\"outlined\"\n            type=\"text\"\n            name=\"extendedprice\"\n            value={(quantity * price).toFixed(2)}\n            onChange={(event) => {\n              setExtendedPrice(event.target.value);\n              console.log(\"setInvoiceNo_extendedprice : \", extendedPrice);\n            }}\n          />\n          {/* </li> */}\n          <br />\n          {/* <li> */}\n          <Autocomplete\n            value={posProduct.POS}\n            loading={true}\n            onInputChange={(event, value) => {\n              console.log(\"ON INPUT CHANGE\");\n              // event.toLowerCase();\n              // value.toLowerCase();\n              // console.log(event.target.value);\n              // console.log(value);\n              // searchDropdown(event, value);\n              // setOptions([]);\n              if (event != null) {\n                setTimeout(() => {\n                  hicksvilleDropdownNew(event, value);\n                }, 1500);\n              }\n              // hicksvilleDropdownNew(event, value, index);\n            }}\n            onChange={(event, newValue) => {\n              // console.log(event.target.value);\n              // console.log(newValue);\n              if (newValue) {\n                let newState = { ...posProduct };\n                console.log(\"newValue : \", newValue);\n                newState.item = itemName;\n                newState.isReviewed = \"true\";\n                // newState.item = element.itemNo\n                newState.description = newValue.name;\n                newState.barcode = newValue.upc;\n                newState.pos = newValue.name;\n                newState.posSku = newValue.sku;\n                newState.size = newValue.size;\n                newState.department = newValue.department;\n                newState.sellerCost = newValue.cost;\n                newState.sellingPrice = newValue.price;\n                // setShowPosState(newState);\n                // setShowPosIndex(index);\n                // setUnitCost(newValue.cost);\n                // setStateUpdated(\"\");\n\n                setPosProduct(newState);\n                console.log(\"setPosProduct : \", newState);\n                singleItemData = [];\n\n                //setDisabled(false);\n                //updateOnHoverDetails(index);\n                //setShowPosIndex(index);\n                // console.log(newValue);\n                console.log(newState);\n                //console.log(showPosState);\n                // toggleModal();\n              }\n            }}\n            id=\"combo-box\"\n            // options={element.fuzzSuggestion}\n            options={options}\n            // getOptionLabel={option => option.label}\n            getOptionLabel={(option) => option.label ?? posProduct.item}\n            // getOptionLabel={(option) => dropdownLoader ? <Spinner /> : option.label}\n            style={{ width: 400 }}\n            renderInput={(params) => (\n              <TextField {...params} label=\"POS Product\" variant=\"outlined\" />\n            )}\n          />\n          <button\n            style={{\n              backgroundColor: \"green\",\n              height: \"50px\",\n              border: \"none\",\n              color: \"white\",\n              padding: \"4px 8px\",\n              textAlign: \"center\",\n              textDecoration: \"none\",\n              display: \"inline-block\",\n              fontSize: \"14px\",\n              align: \"left\",\n              marginLeft: 20,\n            }}\n            // onClick={setProductsInTable}\n            onClick={() => toggleModal(\"showModal\")}\n          >\n            Add New Product\n          </button>\n          {/* </li >\n                </ul> */}\n        </Grid>\n      </Paper>\n      <p>{`Invoice-- ${\n        selectedDropdown === undefined ? \"\" : selectedDropdown.value\n      }`}</p>\n\n      <div>{renderTableData()}</div>\n\n      <CModal show={showModal} onClose={() => toggleModal(\"showModal\")}>\n        <CModalHeader closeButton>{modalLabel}</CModalHeader>\n        <CModalBody>\n          <CContainer fluid>\n            <CRow>\n              <CCol sm=\"12\">\n                <CRow>\n                  <CCol sm=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"type\">Barcode</CLabel>\n                      <CInput\n                        disabled\n                        type=\"text\"\n                        name=\"type\"\n                        value={posProduct.barcode}\n                        onChange={(event) =>\n                          handleChange(\"barcode\", event.target.value)\n                        }\n                      />\n                    </CFormGroup>\n                  </CCol>\n                  <CCol sm=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"short_description\">POS SKU</CLabel>\n                      <CInput\n                        disabled\n                        type=\"text\"\n                        name=\"short_description\"\n                        value={posProduct.posSku}\n                        onChange={(event) =>\n                          handleChange(\"posSku\", event.target.value)\n                        }\n                      />\n                    </CFormGroup>\n                  </CCol>\n                </CRow>\n                <CFormGroup>\n                  <CLabel htmlFor=\"regular_price\">POS Name</CLabel>\n                  <CInput\n                    disabled\n                    type=\"text\"\n                    name=\"regular_price\"\n                    value={posProduct.pos}\n                    onChange={(event) =>\n                      handleChange(\"pos\", event.target.value)\n                    }\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"size\">POS Size</CLabel>\n                  <CInput\n                    disabled\n                    type=\"text\"\n                    name=\"size\"\n                    value={posProduct.size}\n                    onChange={(event) =>\n                      handleChange(\"size\", event.target.value)\n                    }\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"department\">Department</CLabel>\n                  <CInput\n                    disabled\n                    type=\"text\"\n                    name=\"department\"\n                    value={posProduct.department}\n                    onChange={(event) =>\n                      handleChange(\"department\", event.target.value)\n                    }\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"unitsInCase\">Units In Case</CLabel>\n                  <CInput\n                    type=\"text\"\n                    name=\"unitsInCase\"\n                    value={unitsInCase}\n                    onChange={(event) => setUnitsInCase(event.target.value)}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"caseCost\">Case Cost</CLabel>\n                  <CInput\n                    type=\"text\"\n                    name=\"caseCost\"\n                    value={caseCost === undefined ? price : caseCost}\n                    onChange={(event) => setCaseCost(event.target.value)}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"unitPrice\">POS Unit Price</CLabel>\n                  <CInput\n                    disabled\n                    type=\"text\"\n                    name=\"unitPrice\"\n                    value={posProduct.sellingPrice}\n                    onChange={(event) =>\n                      handleChange(\"SellingPrice\", event.target.value)\n                    }\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"unitCost\">POS Unit Cost</CLabel>\n                  <CInput\n                    disabled\n                    type=\"text\"\n                    name=\"unitCost\"\n                    value={posProduct.sellerCost}\n                    onChange={(event) =>\n                      handleChange(\"SellerCost\", event.target.value)\n                    }\n                  />\n                </CFormGroup>\n                {/* <CFormGroup>\n                  <CLabel htmlFor=\"newUnitCost\">New POS Unit Cost</CLabel>\n                  <CInput\n                    type=\"text\"\n                    name=\"newUnitCost\"\n                    value={newUnitCost}\n                    onChange={(event) => setNewUnitCost(event.target.value)}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"newUnitPrice\">New POS Unit Price</CLabel>\n                  <CInput\n                    type=\"text\"\n                    name=\"newUnitPrice\"\n                    value={newUnitPrice}\n                    onChange={(event) => setNewUnitPrice(event.target.value)}\n                  />\n                </CFormGroup>*/}\n              </CCol>\n            </CRow>\n          </CContainer>\n        </CModalBody>\n        <CModalFooter>\n          {/* <CButton color=\"primary\" onClick={() => addProduct()}> */}\n          <CButton\n            color=\"primary\"\n            onClick={() => {\n              updateItem();\n              toggleModal(\"details\");\n            }}\n          >\n            Add\n          </CButton>{\" \"}\n          <CButton color=\"secondary\" onClick={toggleModal}>\n            Cancel\n          </CButton>\n        </CModalFooter>\n      </CModal>\n\n      <CModal show={detailsModal} onClose={() => toggleModal(\"details\")}>\n        <CModalHeader closeButton>Save Invoice Data</CModalHeader>\n        <CModalBody>\n          <CContainer fluid>\n            <CRow>\n              <CCol sm=\"6\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"invoiceNo\">Invoice No.</CLabel>\n                  <CInput\n                    type=\"text\"\n                    name=\"invoiceNo\"\n                    value={invoiceNo}\n                    onChange={(event) => setInvoiceNo(event.target.value)}\n                  />\n                  <CLabel htmlFor=\"date\">Date</CLabel>\n                  <CInput\n                    type=\"date\"\n                    name=\"date\"\n                    value={date}\n                    onChange={(event) => setDate(event.target.value)}\n                  />\n                </CFormGroup>\n              </CCol>\n            </CRow>\n          </CContainer>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"primary\">Save Invoice</CButton>{\" \"}\n          <CButton color=\"secondary\" onClick={toggleModal}>\n            Cancel\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </div>\n  );\n};\n\nexport default HandwrittenInvoice;\n"],"sourceRoot":""}