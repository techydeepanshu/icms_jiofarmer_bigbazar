{"version":3,"sources":["services/Api.js","utils/invoiceList.js","components/Update/UpdateInventory.js","components/SaveInvoiceData/SaveInvoiceData.js"],"names":["Api","name","type","a","console","log","Axios","get","appendURL","params","res","data","dropdownOptions","value","slug","jsonName","emptyColumn","databaseName","jsonNaseame","UpdateInventory","props","useState","newInventoryData","posProducts","setPosProducts","redirect","setRedirect","loader","setLoader","wooComProducts","setWooComProducts","inventoryService","InventoryService","header","pushInventoryDetails","map","element","item","itemNo","qty","parseInt","pieces","cp","unitPrice","markup","sp","description","duplicates","i","length","hasOwnProperty","push","lastIndexOf","tempData","Object","values","filter","ele","forEach","index","temp","val","updatedWoocomProducts","product","wooIndex","findIndex","wooProduct","id","stock_quantity","regular_price","pushToWoocom","pushToPOS","window","alert","products","Promise","all","UpdateProductDetails","COST","PRICE","UPC","TOTALQTY","isNew","ITEMNAME","BUYASCASE","CASEUNITS","CASECOST","SKU","DEPNAME","UpdatePOSProducts","JSON","stringify","DESCRIPTION","QTY","SIZE","PACK","REPLACEQTY","DEPARTMENT","CATEGORY","SUBCATEGORY","ISFOODSTAMP","ISWEIGHTED","ISTAXABLE","VENDORNAME","invoice","VENDORCODE","VENDORCOST","ISNEWITEM","COMPANYNAME","PRODUCTCODE","Cost","ItemName","Price","TotalQty","CreateDBProduct","response","UpdateDBProduct","count","useEffect","row","GetProductDetails","barcode","price","sku","sale_price","items","hasErrorOccured","isForReview","GetPOSProductDetails","toString","posSku","getProducts","getPosProducts","to","rows","extendedPrice","style","marginTop","className","key","position","top","background","toUpperCase","text","color","onClick","goBack","renderTableData","useStyles","makeStyles","root","width","container","maxHeight","table","fontWeight","fontSize","backgroundColor","cursor","emptyColumnList","SaveInvoiceData","tesseractService","TesseractService","classes","setInvoice","dropdownLabel","inv","useSelector","state","openInvoice","num","day","apiLoader","loaders","dispatch","useDispatch","setHicksvilleData","tableData","setTableData","setEmptyColumn","productDetails","setProductDetails","pushToInventory","setPushToInventory","inventoryData","setInventoryData","itemNoDropdown","setItemNoDropdown","showPosIndex","setShowPosIndex","showModal","setShowModal","setCostInc","setCostDec","unitCost","setUnitCost","setIsUpdated","setUpdateIndex","singleItemData","notFounds","redItems","unitsInCase","setRedState","updateSku","options","setOptions","detailsModal","setDetailsModal","invoiceOptions","setInvoiceOptions","details","setDetails","detailsIndex","setDetailsIndex","userEmail","userDetails","todayDate","setFetchingOptions","setDropwdownIndex","invoiceHeader","itemNoDescription","showPosState","getPosProductsLinkManually","Array","isArray","codeOrSku","indexOf","itemName","itemNoPresent","MODELNUM","slice","Date","toLocaleDateString","VINTAGE","update","data1","cost","UpdateDBafterPosUpdate","pushInventoryDetails2","pushSingleItemToInventory","notFoundItems","tempTable","isUpdated","includes","show","rowData","Item","Description","Quantity","Barcode","PosSKU","InvoiceName","CreateNotFoundItems","error","priceIncreasedProducts","priceIncrease","invoiceName","UpdateProductFields","undefined","UpdateInvoiceData","InvoiceDate","ItemNo","InvoiceDescription","PosDescription","posName","PosUnitCost","PosUnitPrice","sellingPrice","OldMarkup","margin","toFixed","InvUnitCost","InvUnitPrice","NewMarkup","UpdateDate","Person","TimeStamp","toTimeString","split","InvCaseCost","InvUnitsInCase","posLogs","logUpdate","setProductsInTable","updateUnits","then","Error","catch","err","finally","saveDetails","toggleModal","getInvoices","getSavedInvoices","reverse","reverseUpdate","result","ok","reversePOSUpdate","linkingCorrect","statusText","invError","logState","ItemCode","LinkingDate","PersonName","Size","size","InvoiceNo","Department","department","CostIncrease","CostDecrease","CostSame","Unidentified","InvError","UnidentifiedLog","linkManually","costChange","linkManuallyLog","logResult","fetchSavedData","no","date","GetSavedInvoiceData","InvoiceData","ocrData","invoiceData","obj","newObj","convertToUpperCase","trim","POS","isReviewed","SellerCost","SellingPrice","Details","LinkingCorrect","parseFloat","keys","x","hicksvilleDropdownNew","event","isNaN","getHicksvilleData","productsString","newData","s","upc","altupc1","altupc2","vintage","totalQty","pricea","priceb","pricec","salePrice","pack","label","updateItem","ocrCost","pos","b","c","InvoiceUnitCost","generateLog","addRow","tempTableData","showPOS","setProductsInTableNew","SavedDate","SavedInvoiceNo","mergeDuplicates","handleChange","splice","arr","Map","has","set","newArr","curDate","getFullYear","getMonth","getDate","firebase","auth","onAuthStateChanged","user","email","marginLeft","display","onChange","newValue","getOptionLabel","option","autoHighlight","renderInput","variant","height","border","padding","textAlign","textDecoration","align","borderRadius","isEmpty","Set","isFree","styles","red","free","opacity","e","target","fill","tooltipIsReviewed","tooltip","disabled","loading","onInputChange","setTimeout","newState","confirm","deleteRow","divRow","location","reload","invoiceList","renderInvoiceTable","onClose","closeButton","fluid","sm","htmlFor","placeholder"],"mappings":"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","file":"static/js/10.e1b5fada.chunk.js","sourcesContent":["import Axios from \"./axios\";\r\nconst appendURL=process.env.NODE_ENV===\"production\"?\"/server\":\"\";\r\nexport class Api {\r\n    async GetFuzz(name,type){\r\n      console.log(name,type);\r\n      var res=await Axios.get(appendURL+`/api/fuzzwuzz`,{params:{name:name,type:type}});\r\n      /* var res=await Axios.get(appendURL+`/api/fuzzwuzz`); */\r\n      console.log(res);\r\n      return res.data\r\n    }\r\n}\r\n\r\n","export const dropdownOptions = [\r\n\r\n\r\n  {\r\n    value: \"Chetak\",\r\n    slug: \"chetak\",\r\n    jsonName: \"chetak-products.json\",\r\n    emptyColumn: true,\r\n    databaseName: \"chetakproducts\",\r\n  },\r\n  {\r\n    value: \"Aahubarah USA\",\r\n    slug: \"aahubarah-usa\",\r\n    jsonName: \"aahubarah.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"aahubarahs\",\r\n  }, \r\n  {\r\n    value: \"Adelman foods\",\r\n    slug: \"adelman-foods\",\r\n    jsonName: \"adelaman-food.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"adelamanfoods\",\r\n  },\r\n  {\r\n    value: \"Advance Foods\",\r\n    slug: \"advance-foods\",\r\n    jsonName: \"advance-foods.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"advancefoods\",\r\n  },\r\n\r\n  // Added by Deepanshu on 09-01-2022\r\n  {\r\n    value: \"Aliments\",\r\n    slug: \"aliments\",\r\n    jsonName: \"aliments.json\",\r\n    emptyColumn: true,\r\n    databaseName: \"aliments\",\r\n  }, \r\n\r\n    // Added by Deepanshu on 09-01-2022\r\n  {\r\n    value: \"Amtrade\",\r\n    slug: \"amtrade\",\r\n    jsonName: \"amtrade.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"amtrades\",\r\n  }, \r\n\r\n  // Added by Deepanshu on 09-01-2022\r\n  {\r\n    value: \"Anmol distributors\",\r\n    slug: \"anmol-distributors\",\r\n    jsonName: \"anmol-distribution.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"anmoldistributions\",\r\n  },\r\n  {\r\n    value: \"Anns eco store\",\r\n    slug: \"anns-eco-store\",\r\n    jsonName: \"anns-eco-store.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"annsecostores\",\r\n  },\r\n  {\r\n    value: \"Gurme Guru\",\r\n    slug: \"gurme-guru\",\r\n    jsonName: \"gurme-guru.json\",\r\n    emptyColumn: true,\r\n    databaseName: \"gurmeguru\",\r\n  },\r\n  {\r\n    value: \"Katzman Produce\",\r\n    slug: \"katzman-produce\",\r\n    jsonName: \"katzman-produce.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"katzmanproduce\",\r\n  }, \r\n  {\r\n    value: \"Katzman Berry Corp\",\r\n    slug: \"katzman-beery-corp\",\r\n    jsonName: \"katzman-berry-corp.json\",\r\n    emptyColumn: true,\r\n    databaseName: \"katzmanberrycorp\",\r\n  }, \r\n  {\r\n    value: \"UYT Imports NYC\",\r\n    slug: \"uyt-imports-nyc\",\r\n    jsonName: \"uyt-imports-nyc.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"uytimportsnyc\",\r\n  }, \r\n  {\r\n    value: \"Dave West Indian\",\r\n    slug: \"dava-west-indian\",\r\n    jsonName: \"dava-west-indian.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"davawestindian\",\r\n  }, \r\n  {\r\n    value: \"Soko Packaging\",\r\n    slug: \"soko-packaging\",\r\n    jsonName: \"soko-packaging.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"sokopackaging\",\r\n  },\r\n\r\n    // Added by Deepanshu on 09-01-2022\r\n  {\r\n    value: \"Babco foods\",\r\n    slug: \"babco-foods\",\r\n    jsonName: \"babco.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"babcos\",\r\n  }, \r\n  // {\r\n  //   value: \"Karison Foods\",\r\n  //   slug: \"karison-foods\",\r\n  //   jsonName: \"karison-foods.json\",\r\n  //   emptyColumn: true,\r\n  //   databaseName: \"karisonfoods\",\r\n  // }, \r\n\r\n  // Added by Deepanshu on 09-01-2022\r\n  {\r\n    value: \"Baraka cold\",\r\n    slug: \"baraka-cold\",\r\n    jsonName: \"baraka-cold.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"barakacolds\",\r\n  },\r\n  // {\r\n  //   value: \"Barlett dairy\",\r\n  //   slug: \"bartlett-dairy\",\r\n  //   jsonName: \"barlett.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"barletts\",\r\n  // },\r\n\r\n  // Added by Deepanshu on 09-01-2022\r\n  {\r\n    value: \"Baroody\",\r\n    slug: \"baroody\",\r\n    jsonName: \"baroody.json\",\r\n    emptyColumn: true,\r\n    databaseName: \"baroodies\",\r\n  }, \r\n// {value:'',slug:'',jsonName:'bartlett.json',emptyColumn:false,databaseName:'bartletts'},\r\n  // {\r\n  //   value: \"Bedessee\",\r\n  //   slug: \"bedessee\",\r\n  //   jsonName: \"bedessee.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"bedessees\",\r\n  // },\r\n  // {value:'',slug:'',jsonName:'Best-food-1.json',emptyColumn:false,databaseName:'bestfood1'},\r\n  {\r\n    value: \"Best Foods\",\r\n    slug: \"best-foods\",\r\n    jsonName: \"best-foods.json\",\r\n    emptyColumn: true,\r\n    databaseName: \"bestfoods\",\r\n  },\r\n\r\n  {\r\n    value: \"Dara food LLC\",\r\n    slug: \"dara-food\",\r\n    jsonName: \"dara.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"daras\",\r\n  }, \r\n  {\r\n    value: \"Dawn food\",\r\n    slug: \"dawn-food\",\r\n    jsonName: \"dawn-food.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"dawnfoods\",\r\n  },\r\n  \r\n  {\r\n    value: \"Delight distribution\",\r\n    slug: \"delight-distribution\",\r\n    jsonName: \"delight-distrubution.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"delightdistrubutions\",\r\n  }, \r\n  // {\r\n  //   value: \"HJA Sales Corp\",\r\n  //   slug: \"hja-sales-corp\",\r\n  //   jsonName: \"hja-sales-corp.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"hjasalescorp\",\r\n  // }, \r\n  {\r\n    value: \"Delight foods\",\r\n    slug: \"delight-food\",\r\n    jsonName: \"delight-foods.json\",\r\n    emptyColumn: true,\r\n    databaseName: \"delightfoods\",\r\n  },\r\n  {\r\n    value: \"Dsa snacks\",\r\n    slug: \"dsa-snacks\",\r\n    jsonName: \"dsa-snacks.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"dsasnacks\",\r\n  }, \r\n  {\r\n    value: \"East end\",\r\n    slug: \"east-end\",\r\n    jsonName: \"east-end.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"eastends\",\r\n  },\r\n  {\r\n    value: \"Empire food importers\",\r\n    slug: \"empire-food-importers\",\r\n    jsonName: \"empire-food-importers.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"empirefoodimporters\",\r\n  },\r\n  {\r\n    value: \"Family five\",\r\n    slug: \"family-five\",\r\n    jsonName: \"family-five.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"familyfives\",\r\n  }, \r\n  {\r\n    value: \"Gaint Farm\",\r\n    slug: \"gaint-farm\",\r\n    jsonName: \"gaint-farm.json\",\r\n    emptyColumn: true,\r\n    databaseName: \"gaintfarms\",\r\n  }, \r\n  // {\r\n  //   value: \"Hellenic Treasures\",\r\n  //   slug: \"hellenic-treasures\",\r\n  //   jsonName: \"hellenic-treasures.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"hellenictreasures\",\r\n  // }, \r\n  // added by sahil on 11 jan 2022\r\n  {\r\n    value: \"Galil imports\",\r\n    slug: \"galil\",\r\n    jsonName: \"galil-importing.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"galilimportings\",\r\n  },\r\n  // {\r\n  //   value: \"Musco Food Corporation\",\r\n  //   slug: \"musco-food-corporation\",\r\n  //   jsonName: \"musco-food-corporation.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"muscofoodcorporation\",\r\n  // },\r\n  {\r\n    value: \"Goyal group\",\r\n    slug: \"goyal-group\",\r\n    jsonName: \"goyal-grp.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"goyalgrps\",\r\n  },\r\n  // {\r\n  //   value: \"Grocer mill\",\r\n  //   slug: \"grocer-mill\",\r\n  //   jsonName: \"grocermill.json\",\r\n  //   emptyColumn: true,\r\n  //   databaseName: \"grocermills\",\r\n  // },\r\n  {\r\n    value: \"Hellenic\",\r\n    slug: \"hellenic\",\r\n    jsonName: \"hellenic.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"hellenics\",\r\n  }, \r\n  // {\r\n  //   value: \"Hellenic Treasures\",\r\n  //   slug: \"hellenic-treasures\",\r\n  //   jsonName: \"hellenic-treasures.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"hellenictreasures\",\r\n  // }, \r\n//  {\r\n//     value: \"Cream O Land\",\r\n//     slug: \"cream-o-land\",\r\n//     jsonName: \"cream-o-land.json\",\r\n//     emptyColumn: true,\r\n//     databaseName: \"cream-o-land\",\r\n//   }, \r\n  // {\r\n  //   value: \"Big Apple Distributors\",\r\n  //   slug: \"big-apple-distributors\",\r\n  //   jsonName: \"big-apple-distributors.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"bigappledistributors\",\r\n  // }, \r\n  // {\r\n  //   value: \"K&S Wholesale\",\r\n  //   slug: \"k&s-wholesale\",\r\n  //   jsonName: \"k&s-wholesale.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"k&swholesale\",\r\n  // }, \r\n  // {\r\n  //   value: \"Los Olivos Ltd\",\r\n  //   slug: \"los-olivos-ltd\",\r\n  //   jsonName: \"los-olivos-ltd.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"losolivosltd\",\r\n  // }, \r\n  // {\r\n  //   value: \"Sirob Imports Inc\",\r\n  //   slug: \"sirob-imports-inc\",\r\n  //   jsonName: \"sirob-imports-inc.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"sirobimportsinc\",\r\n  // }, \r\n  // {\r\n  //   value: \"AZ Metro Distribution\",\r\n  //   slug: \"az-metro-distribution\",\r\n  //   jsonName: \"az-metro-distribution.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"azmetrodistribution\",\r\n  // }, \r\n  {\r\n    value: \"Duty Free Produce\",\r\n    slug: \"duty-free-produce\",\r\n    jsonName: \"duty-free-produce.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"dutyfreeproduces\",\r\n  },\r\n  // {\r\n  //   value: \"Farmers Choice Dairy\",\r\n  //   slug: \"farmers-choice-dairy\",\r\n  //   jsonName: \"farmers-choice-dairy.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"farmerschoicedairy\",\r\n  // }, \r\n  {\r\n    value: \"Hill top farms\",\r\n    slug: \"hill-top-farms\",\r\n    jsonName: \"hill-top-farms.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"hilltopfarms\",\r\n  }, \r\n  {\r\n    value: \"House of spices\",\r\n    slug: \"house-of-spices\",\r\n    jsonName: \"house-spices.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"housespices\",\r\n  },\r\n  {\r\n    value: \"Indian food & spices\",\r\n    slug: \"indian-food-and-spices\",\r\n    jsonName: \"india-food-spices.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"indiafoodspices\",\r\n  },\r\n  // {\r\n  //   value: \"M SY Marketing\",\r\n  //   slug: \"m-sy-marketing\",\r\n  //   jsonName: \"m-sy-marketing.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"m-sy-marketing\",\r\n  // }, \r\n  // {\r\n  //   value: \"Concept Food\",\r\n  //   slug: \"concept-food-us\",\r\n  //   jsonName: \"concept-food-us.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"conceptfoodus\",\r\n  // }, \r\n  // {\r\n  //   value: \"Good Luck Int\",\r\n  //   slug: \"good-luck-int\",\r\n  //   jsonName: \"good-luck-int.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"goodluckint\",\r\n  // }, \r\n  // {\r\n  //   value: \"Tropicana\",\r\n  //   slug: \"tropicana\",\r\n  //   jsonName: \"tropicana.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"tropicana\",\r\n  // }, \r\n  // {\r\n  //   value: \"Lucky Traders\",\r\n  //   slug: \"lucky-traders\",\r\n  //   jsonName: \"lucky-traders.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"luckytraders\",\r\n  // }, \r\n  // {\r\n  //   value: \"Trading Corp\",\r\n  //   slug: \"trading-corp\",\r\n  //   jsonName: \"trading-corp.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"tradingcorp\",\r\n  // }, \r\n  {\r\n    value: \"Indian spice trading\",\r\n    slug: \"indian-spice-trading\",\r\n    jsonName: \"indian-spice-trading.json\",\r\n    emptyColumn: true,\r\n    databaseName: \"indianspicetradings\",\r\n  }, \r\n  {\r\n    value: \"I sifol\",\r\n    slug: \"i-sifol\",\r\n    jsonName: \"I-sifol-llc.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"isifolllcs\",\r\n  }, \r\n  {\r\n    value: \"Jaan distributors\",\r\n    slug: \"jaan-distributors\",\r\n    jsonName: \"jaan-dist.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"jaandists\",\r\n  }, \r\n  // {\r\n  //   value: \"Jalaram produce\",\r\n  //   slug: \"jalaram-produce\",\r\n  //   jsonName: \"jalaram.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"jalarams\",\r\n  // }, \r\n  {\r\n    value: \"JCW imports\",\r\n    slug: \"jcw-import-and-export\",\r\n    jsonName: \"jcw-import.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"jcwimports\",\r\n  }, \r\n  // {value:'',slug:'',jsonName:'joy-foods.json',emptyColumn:false,databaseName:'joyfoods'},\r\n  {\r\n    value: \"Joy gourmet foods\",\r\n    slug: \"joy-gourment-foods\",\r\n    jsonName: \"joy-gourmet-foods.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"joygourmetfoods\",\r\n  },\r\n  // {\r\n  //   value: \"Katzman\",\r\n  //   slug: \"katzam-foods\",\r\n  //   jsonName: \"katzman.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"katzman\",\r\n  // }, \r\n  {\r\n    value: \"KM Distribution\",\r\n    slug: \"km-distribution-usa\",\r\n    jsonName: \"km-dist-usa.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"kmdistusas\",\r\n  }, \r\n  // {\r\n  //   value: \"Tuscan\",\r\n  //   slug: \"tuscan\",\r\n  //   jsonName: \"tuscan.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"tuscan\",\r\n  // },   //not complete\r\n  // {\r\n  //   value: \"SA Distribution\",\r\n  //   slug: \"sa-distribution\",\r\n  //   jsonName: \"sa-distribution.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"sadistribution\",\r\n  // }, \r\n  // {\r\n  //   value: \"Triboro Wholesale\",\r\n  //   slug: \"triboro-wholesale\",\r\n  //   jsonName: \"triboro-wholesale.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"triborowholesale\",\r\n  // }, \r\n  // {\r\n  //   value: \"North East Banana\",\r\n  //   slug: \"northeast-banana\",\r\n  //   jsonName: \"northeast-banana.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"northeastbanana\",\r\n  // }, \r\n  // {\r\n  //   value: \"Lezza Food\",\r\n  //   slug: \"lezza-food\",\r\n  //   jsonName: \"lezza-food.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"lezzafood\",\r\n  // },\r\n  // {\r\n  //   value: \"Hamd Distribution\",\r\n  //   slug: \"hamd-distribution\",\r\n  //   jsonName: \"hamd-distribution.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"hamddistribution\",\r\n  // }, \r\n  // {\r\n  //   value: \"Baawarchi\",\r\n  //   slug: \"baawarchi\",\r\n  //   jsonName: \"baawarchi.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"baawarchi\",\r\n  // }, \r\n  // {\r\n  //   value: \"Mfried Store Fixture Inc\",\r\n  //   slug: \"mfried-store-fixture-inc\",\r\n  //   jsonName: \"mfried-store-fixture-inc.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"mfriedstorefixtureinc\",\r\n  // }, \r\n  // {\r\n  //   value: \"Crown of East\",\r\n  //   slug: \"crown-of-east\",\r\n  //   jsonName: \"crown-of-east.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"crownofeast\",\r\n  // }, \r\n  // {\r\n  //   value: \"Guru Nanak\",\r\n  //   slug: \"guru-nanak\",\r\n  //   jsonName: \"guru-nanak.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"gurunanak\",\r\n  // }, \r\n  // {\r\n  //   value: \"Valente Yeast Inc\",\r\n  //   slug: \"valente-yeast-inc\",\r\n  //   jsonName: \"valente-yeast-inc.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"valenteyeastinc\",\r\n  // }, \r\n  // {\r\n  //   value: \"Online Mr Inc\",\r\n  //   slug: \"online-mr-inc\",\r\n  //   jsonName: \"online-mr-inc.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"onlinemrinc\",\r\n  // }, \r\n  // {\r\n  //   value: \"Busines International\",\r\n  //   slug: \"business-international\",\r\n  //   jsonName: \"business-international.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"businessinternational\",\r\n  // }, \r\n  // {\r\n  //   value: \"Bhavani Fruit Vegetables\",\r\n  //   slug: \"bhavani-fruit-vegetables\",\r\n  //   jsonName: \"bhavani-fruit-vegetables.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"bhavanifruitvegatbles\",\r\n  // }, \r\n  // {\r\n  //   value: \"Best Cakes Distribution\",\r\n  //   slug: \"best-cakes-distribution \",\r\n  //   jsonName: \"best-cakes-distribution.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"bestcakesdistribution\",\r\n  // }, \r\n  {\r\n    value: \"Koryeo\",\r\n    slug: \"koryeo\",\r\n    jsonName: \"koryeo-foods.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"koryeofoods\",\r\n  },\r\n  // {\r\n  //   value: \"Krishna Aahar\",\r\n  //   slug: \"krishna-aahar\",\r\n  //   jsonName: \"krishna-aahar.json\",\r\n  //   emptyColumn: true,\r\n  //   databaseName: \"krishna-aahar\",\r\n  // },\r\n  {\r\n    value: \"Krishna Food Corp\",\r\n    slug: \"krishna-food-corp\",\r\n    jsonName: \"krishna-food-corp.json\",\r\n    emptyColumn: true,\r\n    databaseName: \"krishnafoodcorp\",\r\n  }, \r\n  {\r\n    value: \"Krinos foods\",\r\n    slug: \"krinos-foods\",\r\n    jsonNaseame: \"krino-foods.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"krinofoods\",\r\n  },\r\n  // {\r\n  //   value: \"Krishna Foods\",\r\n  //   slug: \"krishna-food-corp\",\r\n  //   jsonName: \"krishna-foods-products.json\",\r\n  //   emptyColumn: true,\r\n  //   databaseName: \"krishnafoodsproducts\",\r\n  // },\r\n  // {value:'',slug:'',jsonName:'krishna.json',emptyColumn:false,databaseName:'krishnas'},\r\n  {\r\n    value: \"Leblon foods\",\r\n    slug: \"leblon-foods\",\r\n    jsonName: \"leblon.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"leblons\",\r\n  },\r\n  // {\r\n  //   value: \"Loumidis foods\",\r\n  //   slug: \"loumidis-foods\",\r\n  //   jsonName: \"loumidis-food.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"loumidisfoods\",\r\n  // }, \r\n  // {\r\n  //   value: \"Rajbhog Food\",\r\n  //   slug: \"rajbhog-food\",\r\n  //   jsonName: \"rajbhog-food.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"rajbhogfood\",\r\n  // }, \r\n  // {\r\n  //   value: \"Bakemark\",\r\n  //   slug: \"bakemark\",\r\n  //   jsonName: \"balemark.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"bakemark\",\r\n  // }, \r\n  // {\r\n  //   value: \"Solid Trade\",\r\n  //   slug: \"solid-trade\",\r\n  //   jsonName: \"solid-trade.json\",\r\n  //   emptyColumn: true,\r\n  //   databaseName: \"solidtrade\",\r\n  // }, \r\n  // {\r\n  //   value: \"Raja Food Vegetables\",\r\n  //   slug: \"raja-food-vegetables\",\r\n  //   jsonName: \"raja-food-vegetables.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"rajafoodvegetables\",\r\n  // }, \r\n  {\r\n    value: \"Maharaja food importers\",\r\n    slug: \"maharaja-food-importers\",\r\n    jsonName: \"maharaja.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"maharajas\",\r\n  },\r\n  {\r\n    value: \"Meenaxi enterprise\",\r\n    slug: \"meenaxi-enterprise\",\r\n    jsonName: \"meenaxi.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"meenaxis\",\r\n  },\r\n  \r\n  // {\r\n  //   value: \"Mels ice-cream\",\r\n  //   slug: \"mels-ice-cream\",\r\n  //   jsonName: \"mel-icecream.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"melicecreams\",\r\n  // }, \r\n  {\r\n    value: \"Moda food\",\r\n    slug: \"moda-food\",\r\n    jsonName: \"moda-food-ny.json\",\r\n    emptyColumn: true,\r\n    databaseName: \"modafoodnies\",\r\n  }, \r\n  {\r\n    value: \"Mr pickle\",\r\n    slug: \"mr-pickle\",\r\n    jsonName: \"mr-pickle.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"mrpickles\",\r\n  }, \r\n  // {value:'',slug:'',jsonName:'my-baby-ev.json',emptyColumn:false,databaseName:'mybabyevs'},\r\n  {\r\n    value: \"Nassau candy\",\r\n    slug: \"nassau-candy\",\r\n    jsonName: \"nassau.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"nassaus\",\r\n  },\r\n  // {\r\n  //   value: \"Crestwood Farms\",\r\n  //   slug: \"crestwood-farms\",\r\n  //   jsonName: \"crestwood-farms.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"crestwoodfarms\",\r\n  // }, \r\n  {\r\n    value: \"New reliance traders\",\r\n    slug: \"new-reliance-traders\",\r\n    jsonName: \"new-reliance.json\",\r\n    emptyColumn: true,\r\n    databaseName: \"newreliances\",\r\n  },\r\n  {\r\n    value: \"New york wholesale\",\r\n    slug: \"new-york-wholesale\",\r\n    jsonName: \"new-york-wholesale.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"newyorkwholesales\",\r\n  },\r\n  {\r\n    value: \"Nirav Indian groceries\",\r\n    slug: \"nirav-indian-groceries\",\r\n    jsonName: \"nirav-indian-groceries.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"niravindiangroceries\",\r\n  }, \r\n  // {\r\n  //   value: \"Grace Lafe\",\r\n  //   slug: \"grace-lafe\",\r\n  //   jsonName: \"grace-lef.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"gracelafe\",\r\n  // }, \r\n  {\r\n    value: \"Nupur trading\",\r\n    slug: \"nupur-trading\",\r\n    jsonName: \"nupur.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"nupurs\",\r\n  },\r\n  {\r\n    value: \"NY zara food\",\r\n    slug: \"ny-zara-food\",\r\n    jsonName: \"ny-zara-food-inc.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"nyzarafoodincs\",\r\n  },\r\n  {\r\n    value: \"On time distribution\",\r\n    slug: \"on-time-distribution\",\r\n    jsonName: \"ontime.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"ontimes\",\r\n  }, \r\n\r\n  //  added by sahil on 11 jan 2022.\r\n  {\r\n    value: \"Optima foods\",\r\n    slug: \"optima-foods\",\r\n    jsonName: \"optimal.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"optimals\",\r\n  },\r\n  // {\r\n  //   value: \"Pams creations\",\r\n  //   slug: \"pams-creations\",\r\n  //   jsonName: \"pams.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"pams\",\r\n  // }, \r\n  {\r\n    value: \"Pexco INC.\",\r\n    slug: \"pexco-inc\",\r\n    jsonName: \"pexco.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"pexcos\",\r\n  }, \r\n  {\r\n    value: \"PGL trade\",\r\n    slug: \"pgl-trade\",\r\n    jsonName: \"pgl-trade.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"pgltrades\",\r\n  }, \r\n  {\r\n    value: \"Preferred beverage\",\r\n    slug: \"referred-beverage\",\r\n    jsonName: \"preferred-beverage.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"preferredbeverages\",\r\n  },\r\n  // {\r\n  //   value: \"Priya foods\",\r\n  //   slug: \"priya-foods\",\r\n  //   jsonName: \"priya-foods-usa.json\",\r\n  //   emptyColumn: true,\r\n  //   databaseName: \"priyafoodsusas\",\r\n  // },\r\n  {\r\n    value: \"Produce n More\",\r\n    slug: \"produce-n-more\",\r\n    jsonName: \"produce-n-more.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"producenmores\",\r\n  }, \r\n  {\r\n    value:'Pure Ghee',\r\n    slug:'pure-ghee',\r\n    jsonName:'pure-ghee.json',\r\n    emptyColumn:false,\r\n    databaseName:'pureghees'\r\n  }, \r\n  // {\r\n  //   value: \"Putul distributors\",\r\n  //   slug: \"putul-distributors\",\r\n  //   jsonName: \"putull-dist.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"putulldists\",\r\n  // },\r\n  // added by sahil on 11 jan 2022\r\n  {\r\n    value: \"Radhey foods\",\r\n    slug: \"radhey-food\",\r\n    jsonName: \"radhey-foods.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"radheyfoods\",\r\n  } ,\r\n  // {\r\n  //   value: \"Raja foods\",\r\n  //   slug: \"raja-foods\",\r\n  //   jsonName: \"raja-foods.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"rajafoods\",\r\n  // }, \r\n  {\r\n    value: \"Rane music\",\r\n    slug: \"ranemusic\",\r\n    jsonName: \"rane-music.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"ranemusics\",\r\n  },\r\n  {\r\n    value: \"Rite source corp\",\r\n    slug: \"ritesource-corp\",\r\n    jsonName: \"rite-source-corp.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"ritesourcecorps\",\r\n  }, \r\n  // {value:'',slug:'',jsonName:'rite-source.json',emptyColumn:false,databaseName:'ritesources'},\r\n  // {value:'',slug:'',jsonName:'riya.json',emptyColumn:false,databaseName:'riyas'},\r\n  // {\r\n  //   value: \"Rollin dairy\",\r\n  //   slug: \"rollin-dairy\",\r\n  //   jsonName: \"rollin-diary.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"rollindiaries\",\r\n  // }, \r\n  // {\r\n  //   value: \"Arya International\",\r\n  //   slug: \"arya-international\",\r\n  //   jsonName: \"arya-international.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"aryainternational\",\r\n  // }, \r\n  {\r\n    value: \"Ron foods\",\r\n    slug: \"ron-foods\",\r\n    jsonName: \"ron-foods.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"ronfoods\",\r\n  },\r\n  // {\r\n  //   value: \"Kadakia International Group\",\r\n  //   slug: \"kadakia-international-group\",\r\n  //   jsonName: \"kadakia-international-group.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"kadakiainternationalgroup\",\r\n  // }, // database not found \r\n  //  {\r\n  //   value: \"Samar Trading Corp\",\r\n  //   slug: \"samar-trading-corp\",\r\n  //   jsonName: \"samar-trading-corp.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"samartradingcorp\",\r\n  // }, \r\n  // {\r\n  //   value: \"Aroma Flavour\",\r\n  //   slug: \"aroma-flavour\",\r\n  //   jsonName: \"aroma-flavour.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"aromaflavour\",\r\n  // }, \r\n  // {\r\n  //   value: \"Apna Bazar\",\r\n  //   slug: \"apna-bazar\",\r\n  //   jsonName: \"apna-bazar.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"apnabazar\",\r\n  // }, // not complete in regex .\r\n  // {value:'',slug:'',jsonName:'ron.json',emptyColumn:false,databaseName:'rons'},\r\n  {\r\n    value: \"Sankaj\",\r\n    slug: \"sankaj\",\r\n    jsonName: \"sankaj.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"sankajs\",\r\n  }, \r\n  {\r\n    value: \"Sea mark\",\r\n    slug: \"sea-mark\",\r\n    jsonName: \"seamark.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"seamarks\",\r\n  }, \r\n // On 14 jan 2020 down to up ⬆︎ by sahil \r\n\r\n  // {\r\n  //   value: \"Shakti group\",\r\n  //   slug: \"shakti-group-usa\",\r\n  //   jsonName: \"shakti.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"shaktis\",\r\n  // }, \r\n  {\r\n    value: \"Shata traders\",\r\n    slug: \"shata-traders\",\r\n    jsonName: \"shata.json\",\r\n    emptyColumn: true,\r\n    databaseName: \"shatas\",\r\n  }, \r\n  // {  \r\n  //   value: \"Himalaya International\",\r\n  //   slug: \"himalaya-international\",\r\n  //   jsonName: \"himalaya-international.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"himalayainternational\",\r\n  // }, \r\n  \r\n  {\r\n    value: \"Shine foods\",\r\n    slug: \"shine-foods\",\r\n    jsonName: \"shine.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"shines\",\r\n  }, \r\n  {\r\n    value: \"Shreeji Jay/Shreeji  \",\r\n    slug: \"shreeji-jay\",\r\n    jsonName: \"shreeji-jay.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"shreejijay\",\r\n  }, \r\n  // {\r\n  //   value: \"Shreeji\",\r\n  //   slug: \"shreeji\",\r\n  //   jsonName: \"shreeji.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"shreejis\",\r\n  // }, \r\n  {\r\n        value:'Singh-and-singh',\r\n        slug:'singh-and-singh',\r\n        jsonName:'singh-and-singh.json',\r\n        emptyColumn:false,\r\n        databaseName:'singhandsingh'\r\n},\r\n  // {\r\n  //   value: \"Slaughter house\",\r\n  //   slug: \"slaughter-house\",\r\n  //   jsonName: \"slaughter-house.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"slaughterhouses\",\r\n  // }, \r\n  {\r\n    value: \"Spicy sense\",\r\n    slug: \"spicy-sense\",\r\n    jsonName: \"spicy-sense.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"spicysenses\",\r\n  }, \r\n  {\r\n    value: \"Spicy world\",\r\n    slug: \"spicy-world\",\r\n    jsonName: \"spicy-world.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"spicyworlds\",\r\n  },\r\n\r\n  // On 13 jan 2020 down to up ⬆︎ by sahil \r\n  {\r\n    value: \"Surati\",\r\n    slug: \"surati\",\r\n    jsonName: \"surati.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"suratis\",\r\n  }, \r\n  // {\r\n  //   value: \"Symco distributor\",\r\n  //   slug: \"symco-distributor\",\r\n  //   jsonName: \"symco-distributor.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"symcodistributors\",\r\n  // },\r\n  {\r\n    value: \"Temin distribution\",\r\n    slug: \"temin-distribution\",\r\n    jsonName: \"temin.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"temins\",\r\n  }, \r\n // aded by sahil on 11 jan 2022\r\n  {\r\n    value: \"Turkana food\",\r\n    slug: \"turkana-food\",\r\n    jsonName: \"turkana.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"turkanas\",\r\n  }, \r\n  {\r\n    value: \"Two brother wholesale\",\r\n    slug: \"two-brother-wholesale\",\r\n    jsonName: \"two-brother-wholesale.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"twobrotherwholesales\",\r\n  },\r\n  {\r\n    value: \"Unique importer\",\r\n    slug: \"unique-importer\",\r\n    jsonName: \"unique-importer.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"uniqueimporters\",\r\n  }, \r\n  {\r\n    value: \"US gourmet\",\r\n    slug: \"us-gourmet-food\",\r\n    jsonName: \"us-gourmet-food.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"usgourmetfoods\",\r\n  }, \r\n  {\r\n    value: \"USA Halal\",\r\n    slug: \"usa-halal-foods\",\r\n    jsonName: \"usa-halal.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"usahalals\",\r\n  }, \r\n  // {\r\n  //   value: \"Vadilal\",\r\n  //   slug: \"vadilal\",\r\n  //   jsonName: \"vadilal.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"vadilals\",\r\n  // }, \r\n  // {\r\n  //   value: \"Vibrant enterprise\",\r\n  //   slug: \"vibrant-enterprise\",\r\n  //   jsonName: \"vibrant.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"vibrants\",\r\n  // }, \r\n  {\r\n    value: \"Vdyas\",\r\n    slug: \"vidyas\",\r\n    jsonName: \"vidyas.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"vidyas\",\r\n  },\r\n  // {\r\n  //   value: \"Vijay home foods\",\r\n  //   slug: \"vijay-food\",\r\n  //   jsonName: \"vijay-home-foods.json\",\r\n  //   emptyColumn: false,\r\n  //   databaseName: \"vijayhomefoods\",\r\n  // }, \r\n  {\r\n    value: \"Vintage food\",\r\n    slug: \"vintage-food\",\r\n    jsonName: \"vintage.json\",\r\n    emptyColumn: false,\r\n    databaseName: \"vintages\",\r\n  },\r\n  // {value:'',slug:'',jsonName:'wave-ron-foods.json',emptyColumn:false,databaseName:'waveronfoods'}\r\n];\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { InventoryService } from \"../../services/InventoryService\";\r\nimport Button from \"../../UI/Button\";\r\nimport Spinner from \"../../UI/Spinner/Spinner\";\r\n\r\nconst UpdateInventory = (props) => {\r\n  // const header = props.header;\r\n  const [newInventoryData, setNewInventoryData] = useState(\r\n    props.newInventoryData\r\n  );\r\n  const [posProducts, setPosProducts] = useState([]);\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [loader, setLoader] = useState(true);\r\n  const [wooComProducts, setWooComProducts] = useState([]);\r\n  const inventoryService = new InventoryService();\r\n  const header = [\r\n    \"Serial No.\",\r\n    \"Barcode\",\r\n    \"POS SKU\",\r\n    \"Qty Shipped\",\r\n    \"ITEM NO\",\r\n    \"DESCRIPTION\",\r\n    \"Units in  Case\",\r\n    \"Case cost\",\r\n    \"Extended Price\",\r\n    \"Unit Cost \",\r\n    \"Unit Price\",\r\n    \"Mark up (%)\",\r\n  ];\r\n\r\n  const renderTableHeader = () => {\r\n    return header.map((key, index) => {\r\n      return (\r\n        <th\r\n          key={index}\r\n          style={{\r\n            position: \"sticky\",\r\n            top: \"70px\",\r\n            background: \"grey\",\r\n          }}\r\n        >\r\n          {key.toUpperCase()}\r\n        </th>\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderTableData = () => {\r\n    let rows = newInventoryData.map((element, index) => {\r\n      return (\r\n        <tr key={index}>\r\n          <td>{index + 1}</td>\r\n          <td>{element.barcode}</td>\r\n          <td>{element.posSku}</td>\r\n          <td>{element.qty}</td>\r\n          <td>{element.itemNo}</td>\r\n          <td>{element.description}</td>\r\n          <td>{element.pieces}</td>\r\n          <td>{element.unitPrice}</td>\r\n          <td>{element.extendedPrice}</td>\r\n          <td>{element.cp}</td>\r\n          <td>{element.sp}</td>\r\n          <td>{element.markup}</td>\r\n        </tr>\r\n      );\r\n    });\r\n    return (\r\n      <div style={{ marginTop: \"70px\" }}>\r\n        <table className=\"table table-hover table-responsive-sm\">\r\n          <tbody>\r\n            <tr>{renderTableHeader()}</tr>\r\n            {rows}\r\n          </tbody>\r\n        </table>\r\n        <div className=\"d-flex justify-content-start\">\r\n          <Button\r\n            text=\"Back\"\r\n            color=\"btn btn-info\"\r\n            type=\"submit\"\r\n            onClick={() => props.goBack(false)}\r\n          />\r\n        </div>\r\n        <div className=\"d-flex justify-content-center\">\r\n          <Button\r\n            text=\"Submit\"\r\n            color=\"btn btn-info\"\r\n            type=\"submit\"\r\n            onClick={pushInventoryDetails}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const pushInventoryDetails = async () => {\r\n    console.log(\"pushInventoryDetails\");\r\n    setLoader(true);\r\n    let data = newInventoryData.map((element) => {\r\n      return {\r\n        item: element.itemNo,\r\n        qty: parseInt(element.qty) * parseInt(element.pieces),\r\n        cp: element.unitPrice,\r\n        markup: element.markup,\r\n        sp: element.sp,\r\n        description: element.description,\r\n      };\r\n    });\r\n\r\n    var duplicates = {};\r\n    for (var i = 0; i < data.length; i++) {\r\n      if (duplicates.hasOwnProperty(data[i].item)) {\r\n        duplicates[data[i].item].push(i);\r\n      } else if (data.lastIndexOf(data[i].item) !== i) {\r\n        duplicates[data[i].item] = [i];\r\n      }\r\n    }\r\n\r\n    let tempData = Object.values(duplicates).filter((ele) => ele.length > 1);\r\n    if (tempData.length > 0) {\r\n      tempData.forEach((index) => {\r\n        let temp = 0;\r\n        index.forEach((val) => {\r\n          if (data[val]) {\r\n            // console.log(\"data[val]\", data[val]);\r\n            temp += data[val].qty;\r\n            if (temp - data[val].qty !== 0) {\r\n              data[val] = null;\r\n            }\r\n          }\r\n        });\r\n        data[index[0]].qty = temp;\r\n      });\r\n    }\r\n    data = data.filter((ele) => ele !== null);\r\n\r\n    /**\r\n     * add the fileds of  data from the woocom & ocr\r\n     */\r\n    let updatedWoocomProducts = data\r\n      .map((product, index) => {\r\n        /**find index of the item in fetched woocom product list */\r\n        const wooIndex = wooComProducts.findIndex(\r\n          (wooProduct) => product.item === wooProduct.itemNo\r\n        );\r\n        if (wooIndex !== -1) {\r\n          /**get the qty & other fileds of the woocom product */\r\n          let { id, stock_quantity } = wooComProducts[wooIndex];\r\n          stock_quantity += product.qty;\r\n          const regular_price = product.sp;\r\n          return { id, regular_price, stock_quantity, itemNo: product.item };\r\n        }\r\n        return null;\r\n      })\r\n      .filter((item) => item !== null);\r\n\r\n    await pushToWoocom(updatedWoocomProducts);\r\n    await pushToPOS(posProducts);\r\n\r\n    setLoader(false);\r\n    // if (itemsNotPushed.length === 0) {\r\n    window.alert(\"Inventory updated successfully\");\r\n    setRedirect(true);\r\n    // } else {\r\n    //   window.alert(\"Inventory not updated\");\r\n    // }\r\n  };\r\n\r\n  const pushToWoocom = async (products) => {\r\n    setLoader(true);\r\n    const responses = await Promise.all(\r\n      products.map(async (product) => {\r\n        try {\r\n          const res = await inventoryService.UpdateProductDetails(product.id, {\r\n            regular_price: product.regular_price,\r\n            stock_quantity: product.stock_quantity,\r\n          });\r\n          const { id, name, regular_price, stock_quantity } = res;\r\n          return {\r\n            id,\r\n            name,\r\n            regular_price,\r\n            stock_quantity,\r\n            itemNo: product.itemNo,\r\n          };\r\n        } catch (error) {\r\n          console.log(error);\r\n          alert(\"Couldn't update product on website.\");\r\n          return null;\r\n        }\r\n      })\r\n    );\r\n    setLoader(false);\r\n  };\r\n\r\n  const pushToPOS = async (products) => {\r\n    setLoader(true);\r\n    console.log(products);\r\n    const responses = await Promise.all(\r\n      products.map(async (product) => {\r\n        try {\r\n          const {\r\n            COST,\r\n            PRICE,\r\n            UPC,\r\n            TOTALQTY,\r\n            isNew,\r\n            ITEMNAME,\r\n            BUYASCASE,\r\n            CASEUNITS,\r\n            CASECOST,\r\n            SKU,\r\n            DEPNAME,\r\n            itemNo,\r\n          } = product;\r\n          const res = await inventoryService.UpdatePOSProducts(\r\n            JSON.stringify({\r\n              UPC,\r\n              ITEMNAME,\r\n              DESCRIPTION: \"\",\r\n              PRICE,\r\n              COST,\r\n              QTY: TOTALQTY,\r\n              SIZE: \"\",\r\n              PACK: \"\",\r\n              REPLACEQTY: 1,\r\n              DEPARTMENT: DEPNAME,\r\n              CATEGORY: \"\",\r\n              SUBCATEGORY: \"\",\r\n              ISFOODSTAMP: 1,\r\n              ISWEIGHTED: 0,\r\n              ISTAXABLE: 1,\r\n              VENDORNAME: props.invoice,\r\n              VENDORCODE: itemNo,\r\n              VENDORCOST: \"\",\r\n              ISNEWITEM: isNew ? 1 : 0,\r\n              BUYASCASE,\r\n              CASEUNITS,\r\n              CASECOST,\r\n              COMPANYNAME: props.invoice,\r\n              PRODUCTCODE: itemNo,\r\n            })\r\n          );\r\n          console.log(\"updated pos data\", res);\r\n          const data = {\r\n            UPC,\r\n            SKU,\r\n            Cost: COST,\r\n            ItemName: ITEMNAME,\r\n            Price: PRICE,\r\n            TotalQty: TOTALQTY,\r\n          };\r\n          if (isNew) {\r\n            const response = await inventoryService.CreateDBProduct(data);\r\n            console.log(\"Created new product\", response);\r\n          } else {\r\n            const response = await inventoryService.UpdateDBProduct({\r\n              count: parseInt(product.qty) * parseInt(product.pieces),\r\n              UPC,\r\n            });\r\n            console.log(\"updated existing product\", response);\r\n          }\r\n\r\n          console.log(\"res from POS\", res);\r\n          return true;\r\n        } catch (error) {\r\n          console.log(error);\r\n          return null;\r\n        }\r\n      })\r\n    );\r\n    setLoader(false);\r\n  };\r\n  useEffect(() => {\r\n    async function getProducts() {\r\n      const items = await Promise.all(\r\n        newInventoryData.map(async (row) => {\r\n          try {\r\n            const res = await inventoryService.GetProductDetails(row.barcode);\r\n            const {\r\n              id,\r\n              name,\r\n              regular_price,\r\n              price,\r\n              sku,\r\n              slug,\r\n              stock_quantity,\r\n              sale_price,\r\n            } = res[0];\r\n            return {\r\n              id,\r\n              name,\r\n              regular_price,\r\n              price,\r\n              sku,\r\n              slug,\r\n              stock_quantity,\r\n              sale_price,\r\n              itemNo: row.itemNo,\r\n            };\r\n          } catch (error) {\r\n            // tempNotFoundProducts.push(row);\r\n            console.log(\"Couldn't fetch product from woodpress.\", row.itemNo);\r\n            return null;\r\n          }\r\n        })\r\n      );\r\n      setLoader(false);\r\n      setWooComProducts(items.filter((ele) => ele !== null));\r\n      // setNotFoundProducts(tempNotFoundProducts);\r\n    }\r\n\r\n    async function getPosProducts() {\r\n      setLoader(true);\r\n      let hasErrorOccured = false;\r\n      const items = await Promise.all(\r\n        newInventoryData\r\n          .filter((row) => !row.isForReview)\r\n          .map(async (row) => {\r\n            try {\r\n              const res = await inventoryService.GetPOSProductDetails(\r\n                row.barcode\r\n              );\r\n              console.log(\"fetched pos data\", res);\r\n              const { SKU, UPC, ITEMNAME, TOTALQTY, DEPNAME } = res[0];\r\n              return {\r\n                ...row,\r\n                COST: row.cp,\r\n                PRICE: row.sp,\r\n                SKU,\r\n                UPC,\r\n                ITEMNAME,\r\n                TOTALQTY:\r\n                  parseInt(row.qty) * parseInt(row.pieces) + parseInt(TOTALQTY),\r\n                itemNo: row.itemNo,\r\n                isNew: false,\r\n                BUYASCASE: 1,\r\n                CASEUNITS: row.pieces.toString(),\r\n                CASECOST: row.unitPrice.toString(),\r\n                DEPNAME,\r\n              };\r\n            } catch (error) {\r\n              hasErrorOccured = true;\r\n              return {\r\n                ...row,\r\n                COST: row.cp,\r\n                PRICE: row.sp,\r\n                SKU: row.posSku,\r\n                UPC: row.barcode,\r\n                ITEMNAME: row.description,\r\n                TOTALQTY: parseInt(row.qty) * parseInt(row.pieces),\r\n                itemNo: row.itemNo,\r\n                isNew: true,\r\n                BUYASCASE: 1,\r\n                CASEUNITS: row.pieces.toString(),\r\n                CASECOST: row.unitPrice.toString(),\r\n                DEPNAME: \"\",\r\n              };\r\n            }\r\n          })\r\n      );\r\n      if (hasErrorOccured) {\r\n        alert(\"Couldn't fetch some data from POS\");\r\n      }\r\n      setLoader(false);\r\n      setPosProducts(items.filter((ele) => ele !== null));\r\n    }\r\n    getProducts();\r\n    getPosProducts();\r\n  }, []);\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  if (loader) {\r\n    return <Spinner />;\r\n  }\r\n  return <div>{renderTableData()}</div>;\r\n};\r\n\r\nexport default UpdateInventory;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { dropdownOptions } from \"../../utils/invoiceList\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TesseractService } from \"../../services/TesseractService\";\r\n\r\nimport { InventoryService } from \"../../services/InventoryService\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport { Api } from \"../../services/Api\";\r\nimport HicksData from \"../DisplayData/Hicksville.json\";\r\nimport { CContainer, CModalHeader, CCol, CFormGroup, CInput, CButton, CLabel, CModal, CModalBody, CModalFooter, CRow } from \"@coreui/react\";\r\nimport Button from \"../../UI/Button\";\r\nimport styles from \"../DisplayData/DisplayData.module.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport UpdateInventory from \"../Update/UpdateInventory\";\r\nimport Spinner from \"../../UI/Spinner/Spinner\";\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport  CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport Cancel from \"@material-ui/icons/Cancel\";\r\n// import CircularProgress from '@material/circular-progress';\r\n// import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n// import Loading from 'react-loader-spinner';\r\n\r\nimport { useSelector} from \"react-redux\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n        root: {\r\n        width: \"100%\",\r\n        // paddingTop: 50,\r\n        // height: \"125px\"\r\n        },\r\n        container: {\r\n            maxHeight: \"80vh\",\r\n            marginTop: 10,\r\n          },\r\n          table: {\r\n            \"& thead th\": {\r\n              fontWeight: \"600\",\r\n              fontSize: 20,\r\n              backgroundColor: \"grey\",\r\n            },\r\n            \"& tbody td\": {\r\n              fontWeight: \"300\",\r\n            },\r\n            \"& tbody tr:hover\": {\r\n              backgroundColor: \"#fffbf2\",\r\n              cursor: \"pointer\",\r\n            },\r\n          },\r\n    });\r\nlet emptyColumnList = [];\r\n\r\nconst SaveInvoiceData = () => {\r\n\r\n    const tesseractService = new TesseractService();\r\n    const classes = useStyles();\r\n    const [date, setDate] = useState(\"\");\r\n    const [invoice, setInvoice] = useState({});\r\n    const [invoiceNo, setInvoiceNo] = useState(\"\");\r\n    const numOfCollections = dropdownOptions.length;\r\n    const dropdownLabel = \"Select Invoice(\"+   numOfCollections   + \")\";\r\n    // const [inv, setInv] = useState(\"\");\r\n    const inv = useSelector(state => state.openInvoice.inv);\r\n    // const [ num, setNum] = useState(\"\");\r\n    const num = useSelector(state => state.openInvoice.num);\r\n    // const [day, setDay] = useState(\"\");\r\n    const day = useSelector(state => state.openInvoice.day);\r\n    // const [apiLoader, setApiLoader] = useState(false);\r\n\r\n    const apiLoader = useSelector(state => state.loaders.apiLoader)\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n\r\n    //Following for display data functionalities.\r\n    const [hicksvilleData, setHicksvilleData] = useState([]);\r\n    let saveInvoiceFlag  = 1;\r\n    const api = new Api();\r\n    const [tableData, setTableData] = useState([]);\r\n    const [emptyColumn, setEmptyColumn] = useState([]);\r\n    const [productDetails, setProductDetails] = useState([]);\r\n    const [pushToInventory, setPushToInventory] = useState(false);\r\n    const [inventoryData, setInventoryData] = useState([]);\r\n    const [itemNoDropdown, setItemNoDropdown] = useState([]);\r\n    \r\n    // const [loader, setLoader] = useState(false);\r\n    const loader = useSelector(state => state.loaders.loader);\r\n\r\n    const [reviewItems, setReviewItems] = useState([]);\r\n    const [showPosIndex, setShowPosIndex] = useState(-1);\r\n    const inventoryService = new InventoryService();\r\n    const [showModal, setShowModal] = useState(false);\r\n    // const [stateUpdated, setStateUpdated] = useState(\"false\");\r\n    const [costInc, setCostInc] = useState(\"false\");\r\n    const [costDec, setCostDec] = useState(\"false\");\r\n    const [unitCost, setUnitCost] = useState(\"\");\r\n    const [isUpdated, setIsUpdated] = useState(\"false\");\r\n    const [updateIndex, setUpdateIndex] = useState(-1);\r\n    let posProducts = []\r\n    let wooComProducts = [];\r\n    let singleItemData = [];\r\n    let itemNo = \"\";\r\n    // const [posProducts, setPosProducts] = useState([]);\r\n\r\n    // const [notFounds, setNotFounds] = useState(\"false\");\r\n    const notFounds = useSelector(state => state.redItems.notFounds);\r\n\r\n    // const [unitsInCase, setUnitsInCase] = useState(\"\");\r\n    const unitsInCase = useSelector(state => state.redItems.unitsInCase);\r\n\r\n    // const [price, setPrice] = useState(\"\");\r\n    const price = useSelector(state => state.redItems.price);\r\n\r\n    const [redState, setRedState] = useState(\"true\");\r\n    let updateSku = \"\";\r\n    const [searchVal, setSearchVal] = useState(\"\");\r\n    const [options, setOptions] = useState([]);\r\n    const [detailsModal, setDetailsModal] = useState(false);\r\n    const [invoiceOptions, setInvoiceOptions] = useState([]);\r\n    const [details, setDetails] = useState(\"\");\r\n    const [detailsIndex, setDetailsIndex] = useState(-1);\r\n\r\n    // const [userEmail, setUserEmail] = useState(\"\");\r\n    const userEmail = useSelector(state => state.userDetails.userEmail);\r\n    \r\n    // const [todayDate, setTodayDate] = useState(\"\");\r\n    const todayDate = useSelector(state => state.userDetails.todayDate);\r\n\r\n    \r\n    // const [openInvoice, setOpenInvoice] = useState(false);\r\n    const openInvoice = useSelector(state => state.openInvoice.openInvoice);\r\n\r\n    const[dropdownLoader, setDropdownLoader] = useState(false);\r\n    const [fetchingOptions, setFetchingOptions] = useState(false);\r\n    const [dropdownIndex, setDropwdownIndex] = useState(-1);\r\n\r\n    const invoiceHeader = [\r\n      \"Sr.No.\",\r\n      \"Invoice\",\r\n      \"Invoice No.\",\r\n      \"Invoice Date\",\r\n      \"Open Invoice\"\r\n    ]\r\n\r\n    \r\n    const header = [\r\n        \"Serial No.\",\r\n        \"Barcode\",\r\n        \"POS SKU\",\r\n        \"Qty Shipped\",,\r\n        \"Unit Cost\",\r\n        \"ITEM NO\",\r\n        \"Link Product\",\r\n        \r\n        \"DESCRIPTION\",\r\n        \"Units in  Case\",\r\n        \"Case cost\",\r\n        \"Extended Price\",\r\n       \r\n        \"Unit Price\",\r\n        \"Mark up (%)\",\r\n        \"Add Details\",\r\n        \"Tick to Delete\",\r\n        \"Update POS\",\r\n        \"Reverse POS Update\",\r\n        \"NO LINKING\",\r\n        \"Serial No.(2)\"\r\n    ];\r\n\r\n    const itemNoDescription = [\r\n      \"advance-foods\",\r\n      \"family-five\",\r\n      \"moda-food\",\r\n      \"anmol-distributors\",\r\n      \"baraka-cold\",\r\n      \"indian-food-and-spices\",\r\n      \"ron-foods\",\r\n      \"vidyas\",\r\n      \"adelman-foods\",\r\n      \"aliments\",\r\n      \"baroody\"\r\n\r\n    ];\r\n\r\n    const showPosState = useSelector(state => state.showPosState);\r\n    // const [showPosState, setShowPosState] = useState({\r\n    //     item: \"\",\r\n    //     quantity: \"\",\r\n    //     description: \"\",\r\n    //     price: \"\",\r\n    //     pos: \"\",\r\n    //     barcode: \"\",\r\n    //     posSku: \"\",\r\n    //     invoice: \"\",\r\n    //     size: \"\",\r\n    //     department: \"\",\r\n    //     unitCost: \"\",\r\n    //     unitPrice: \"\",\r\n    // });\r\n\r\n  //***************  INDIVIDUAL ITEM UPDATE FUNCTIONALITY STARTS*******************************************.\r\n\r\n    //Function to fetch wooCom Prpducts.\r\n    async function getProducts() {\r\n      console.log(\"IN WOOCOM PRODUCTS\");\r\n      const items = await Promise.all(\r\n        singleItemData.map(async (row) => {\r\n          console.log(row.barcode);\r\n          try {\r\n            const res = await inventoryService.GetProductDetails(row.barcode);\r\n            console.log(res);\r\n            const {\r\n              id,\r\n              name,\r\n              regular_price,\r\n              price,\r\n              sku,\r\n              slug,\r\n              stock_quantity,\r\n              sale_price,\r\n            } = res[0];\r\n            return {\r\n              id,\r\n              name,\r\n              regular_price,\r\n              price,\r\n              sku,\r\n              slug,\r\n              stock_quantity,\r\n              sale_price,\r\n              itemNo: row.itemNo,\r\n            };\r\n          } catch (error) {\r\n            // tempNotFoundProducts.push(row);\r\n\r\n            // Commented on 13th Dec 2021.\r\n            // console.log(\"Couldn't fetch product from wordpress.\", row.itemNo);\r\n            return null;\r\n          }\r\n        })\r\n      );\r\n      // setLoader(false);\r\n      dispatch({type: \"LOADER\"});\r\n      console.log(items);\r\n      wooComProducts = items;\r\n      // setWooComProducts(items.filter((ele) => ele !== null));\r\n      // setNotFoundProducts(tempNotFoundProducts);\r\n    }\r\n\r\n    async function getPosProductsLinkManually(index) {\r\n\r\n      console.log(\"tabledata in getPosProductsLinkManually\",tableData);\r\n\r\n      // dispatch({type: \"LOADER\"});\r\n      const res = await inventoryService.GetPOSProductDetails(tableData[index].barcode);\r\n\r\n      console.log(\"res is: \", res);\r\n\r\n      if(!Array.isArray(res)){\r\n        alert(\"API not working\");\r\n        return;\r\n      }\r\n\r\n      // SET ITEMNAME...\r\n      let codeOrSku = \"\";\r\n      console.log(\"res[0].ITEMNAME.indexOf(\"-\")\" ,res[0].ITEMNAME.indexOf(\"-\"));\r\n      let itemName = res[0].ITEMNAME;\r\n\r\n      if(res[0].ITEMNAME.indexOf(\"-\") < 0){\r\n        let itemNoPresent;\r\n        for(let i = 0; i<itemNoDescription.length; i++){\r\n          if(itemNoDescription[i] === invoice.slug){\r\n            itemNoPresent = false;\r\n            break;\r\n          }else {\r\n            itemNoPresent = true;\r\n            break;\r\n          }\r\n        }\r\n\r\n        console.log(\"itemNoPresent\",itemNoPresent);\r\n        if(itemNoPresent){\r\n          codeOrSku = tableData[index].itemNo;\r\n        }else{\r\n          codeOrSku = \"SKU\" + \" \" + tableData[index].posSku; \r\n        }\r\n        itemName = res[0].ITEMNAME + \" \" + \"-\" + \" \" + codeOrSku;\r\n\r\n        \r\n      // Do the API Call to update on syprum system.\r\n      const update = await inventoryService.UpdatePOSProducts(\r\n        JSON.stringify({\r\n          UPC: tableData[index].barcode,\r\n          ITEMNAME: itemName,\r\n          DESCRIPTION: \"\",\r\n          PRICE: res[0].PRICE,\r\n          COST: res[0].COST,\r\n          QTY: res[0].TOTALQTY,\r\n          SIZE: \"\",\r\n          PACK: \"\",\r\n          REPLACEQTY: 1,\r\n          DEPARTMENT: res[0].DEPNAME,\r\n          CATEGORY: \"\",\r\n          SUBCATEGORY: \"\",\r\n          ISFOODSTAMP: 1,\r\n          ISWEIGHTED: 0,\r\n          ISTAXABLE: 1,\r\n          VENDORNAME: invoice.slug,\r\n          VENDORCODE: tableData[index].itemNo,\r\n          VENDORCOST: \"\",\r\n          ISNEWITEM: 0,\r\n          BUYASCASE: 1,\r\n          CASEUNITS: tableData[index].pieces,\r\n          CASECOST: (tableData[index].price / tableData[index].qty),\r\n          COMPANYNAME: invoice.slug,\r\n          PRODUCTCODE: tableData[index].itemNo,\r\n          MODELNUM: userEmail.slice(0,4) + \" \" + new Date().toLocaleDateString(),\r\n          VINTAGE: \"ICMS\",\r\n        })\r\n      );\r\n\r\n      console.log(\"Helloooooooooooooooooooooooooo update api call\", update);\r\n      \r\n      console.log(\"update api call\", update[0].COST);\r\n      console.log(\"update api call\", update[0].PRICE);\r\n      console.log(\"update api call\", update[0].ITEMNAME);\r\n      console.log(\"update api call\", update[0].VENDORCODE);\r\n      console.log(\"update api call\", invoice.slug);\r\n      let data1 = {\r\n        cost: update[0].COST,\r\n        price: update[0].PRICE,\r\n        item: update[0].VENDORCODE,\r\n        itemName:update[0].ITEMNAME,\r\n        invoice: invoice.slug\r\n      }\r\n      \r\n      // console.log(\"I am posProducts.ITEMNAME from updatedb after Pos\",posProducts[0].ITEMNAME)\r\n\r\n      await inventoryService.UpdateDBafterPosUpdate(data1);\r\n      }\r\n\r\n      // const update = await inventoryService.UpdatePOSProducts(\r\n      //   JSON.stringify({\r\n      //     UPC,\r\n      //     ITEMNAME: itemName,\r\n      //     DESCRIPTION: \"\",\r\n      //     PRICE: res.PRICE,\r\n      //     COST: res.COST,\r\n      //     QTY: res.TOTALQTY,\r\n      //     SIZE: \"\",\r\n      //     PACK: \"\",\r\n      //     REPLACEQTY: 1,\r\n      //     DEPARTMENT: res.DEPNAME,\r\n      //     CATEGORY: \"\",\r\n      //     SUBCATEGORY: \"\",\r\n      //     ISFOODSTAMP: 1,\r\n      //     ISWEIGHTED: 0,\r\n      //     ISTAXABLE: 1,\r\n      //     VENDORNAME: invoice.slug,\r\n      //     VENDORCODE: itemNo,\r\n      //     VENDORCOST: \"\",\r\n      //     ISNEWITEM: 0,\r\n      //     BUYASCASE,\r\n      //     CASEUNITS,\r\n      //     CASECOST,\r\n      //     COMPANYNAME: invoice.slug,\r\n      //     PRODUCTCODE: itemNo,\r\n      //     MODELNUM: userEmail.slice(0,4) + \" \" + new Date().toLocaleDateString(),\r\n      //     VINTAGE: \"ICMS\",\r\n      //   })\r\n      // );\r\n\r\n      // if(tableData[index].posSku === res.SKU) {\r\n      //     console.log(\"SKU is same\");\r\n      //     dispatch({type: \"LOADER\"});\r\n      //   }\r\n      \r\n\r\n    }\r\n\r\n    //function to fetch POS products.\r\n    async function getPosProducts() {\r\n      console.log(\"IN POS PRODUCTS\");\r\n      // setLoader(true);\r\n      dispatch({type: \"LOADER\"});\r\n      let hasErrorOccured = false;\r\n      console.log(singleItemData);\r\n      const items = await Promise.all(\r\n        singleItemData\r\n          .map(async (row) => {\r\n            console.log(row.barcode);\r\n            try {\r\n              const res = await inventoryService.GetPOSProductDetails(\r\n                row.barcode\r\n              );\r\n              if(!Array.isArray(res)){\r\n                alert(\"API not working\");\r\n                return;\r\n              }\r\n              console.log(\"fetched pos data\", res);\r\n              const { SKU, UPC, ITEMNAME, TOTALQTY, DEPNAME } = res[0];\r\n              console.log(SKU);\r\n              console.log(updateSku);\r\n              if(SKU == updateSku){\r\n                console.log(SKU);\r\n                console.log(updateSku);\r\n                return {\r\n                  ...row,\r\n                  COST: row.cp,\r\n                  PRICE: row.sp,\r\n                  SKU,\r\n                  UPC,\r\n                  ITEMNAME,\r\n                  TOTALQTY:\r\n                    parseInt(row.qty) * parseInt(row.pieces) + parseInt(TOTALQTY),\r\n                  itemNo: row.itemNo,\r\n                  isNew: false,\r\n                  BUYASCASE: 1,\r\n                  CASEUNITS: row.pieces.toString(),\r\n                  CASECOST: row.unitPrice.toString(),\r\n                  DEPNAME,\r\n                };\r\n              } else {\r\n                alert(\"SKU mismatch!!\");\r\n              }\r\n\r\n              \r\n              \r\n            } catch (error) {\r\n              hasErrorOccured = true;\r\n              return {\r\n                ...row,\r\n                COST: row.cp,\r\n                PRICE: row.sp,\r\n                SKU: row.posSku,\r\n                UPC: row.barcode,\r\n                ITEMNAME: row.description,\r\n                TOTALQTY: parseInt(row.qty) * parseInt(row.pieces),\r\n                itemNo: row.itemNo,\r\n                isNew: true,\r\n                BUYASCASE: 1,\r\n                CASEUNITS: row.pieces.toString(),\r\n                CASECOST: row.unitPrice.toString(),\r\n                DEPNAME: \"\",\r\n              };\r\n            }\r\n          })\r\n      );\r\n      if (hasErrorOccured) {\r\n        alert(\"Couldn't fetch some data from POS\");\r\n      }\r\n      // setLoader(false);\r\n      dispatch({type: \"LOADER\"});\r\n      console.log(items);\r\n      posProducts = items;\r\n      console.log(\"posProducts array is: \",posProducts);\r\n      // setPosProducts(items.filter((ele) => ele !== null));\r\n    }\r\n\r\n    //PUSH TO WOOCOM.\r\n    const pushToWoocom = async (products) => {\r\n      // setLoader(true);\r\n      dispatch({type: \"LOADER\"});\r\n      const responses = await Promise.all(\r\n        products.map(async (product) => {\r\n          try {\r\n            const res = await inventoryService.UpdateProductDetails(product.id, {\r\n              regular_price: product.regular_price,\r\n              stock_quantity: product.stock_quantity,\r\n            });\r\n            const { id, name, regular_price, stock_quantity } = res;\r\n            return {\r\n              id,\r\n              name,\r\n              regular_price,\r\n              stock_quantity,\r\n              itemNo: product.itemNo,\r\n            };\r\n          } catch (error) {\r\n            console.log(error);\r\n            alert(\"Couldn't update product on website.\");\r\n            return null;\r\n          }\r\n        })\r\n      );\r\n      // setLoader(false);\r\n      dispatch({type: \"LOADER\"});\r\n    };\r\n\r\n    //PUSH TO POS.\r\n    const pushToPOS = async (products) => {\r\n      // setLoader(true);\r\n      dispatch({type: \"LOADER\"});\r\n      console.log(\"products values are: \",products);\r\n\r\n\r\n      const responses = await Promise.all(\r\n        products.map(async (product) => {\r\n          \r\n          try {\r\n            const {\r\n              COST,\r\n              PRICE,\r\n              UPC,\r\n              TOTALQTY,\r\n              isNew,\r\n              ITEMNAME,\r\n              BUYASCASE,\r\n              CASEUNITS,\r\n              CASECOST,\r\n              SKU,\r\n              DEPNAME,\r\n              itemNo\r\n            } = product;\r\n\r\n            console.log(\"product : \",product)\r\n            \r\n            // SET ITEMNAME... \r\n            let codeOrSku = \"\";\r\n            console.log(product.itemNo)\r\n            console.log(ITEMNAME.indexOf(\"-\"));\r\n            let itemName = ITEMNAME;\r\n            console.log(\"pushToPos_ITEMNAME : \",ITEMNAME);\r\n            if(ITEMNAME.indexOf(\"-\") < 0){\r\n              let itemNoPresent;\r\n              for(let i = 0; i<itemNoDescription.length; i++){\r\n                console.log(invoice.slug)\r\n                if(itemNoDescription[i] === invoice.slug){\r\n                  itemNoPresent = false;\r\n                  break;\r\n                }else {\r\n                  itemNoPresent = true;\r\n                  break;\r\n                }\r\n              }\r\n              console.log(itemNoPresent);\r\n              if(itemNoPresent){\r\n                codeOrSku = product.itemNo;\r\n              }else{\r\n                codeOrSku = \"SKU\" + \" \" + product.posSku \r\n              }\r\n              itemName = ITEMNAME + \" \" + \"-\" + \" \" + codeOrSku;\r\n            }\r\n\r\n            const res = await inventoryService.UpdatePOSProducts(\r\n              JSON.stringify({\r\n                UPC,\r\n                ITEMNAME: itemName,\r\n                DESCRIPTION: \"\",\r\n                PRICE,\r\n                COST,\r\n                QTY: TOTALQTY,\r\n                SIZE: \"\",\r\n                PACK: \"\",\r\n                REPLACEQTY: 1,\r\n                DEPARTMENT: DEPNAME,\r\n                CATEGORY: \"\",\r\n                SUBCATEGORY: \"\",\r\n                ISFOODSTAMP: 1,\r\n                ISWEIGHTED: 0,\r\n                ISTAXABLE: 1,\r\n                VENDORNAME: invoice.slug,\r\n                VENDORCODE: itemNo,\r\n                VENDORCOST: \"\",\r\n                ISNEWITEM: isNew ? 1 : 0,\r\n                BUYASCASE,\r\n                CASEUNITS,\r\n                CASECOST,\r\n                COMPANYNAME: invoice.slug,\r\n                PRODUCTCODE: itemNo,\r\n                MODELNUM: userEmail.slice(0,4) + \" \" + new Date().toLocaleDateString(),\r\n                VINTAGE: \"ICMS\",\r\n              })\r\n            );\r\n            console.log(\"updated pos data\", res);\r\n            const data = {\r\n              UPC,\r\n              SKU,\r\n              Cost: COST,\r\n              ItemName: ITEMNAME,\r\n              Price: PRICE,\r\n              TotalQty: TOTALQTY,\r\n            };\r\n            //not needed as of now, parikshit.\r\n            if (isNew) {\r\n              const response = await inventoryService.CreateDBProduct(data);\r\n              console.log(\"Created new product\", response);\r\n            } else {\r\n              const response = await inventoryService.UpdateDBProduct({\r\n                count: parseInt(product.qty) * parseInt(product.pieces),\r\n                UPC,\r\n              });\r\n              console.log(\"updated existing product\", response);\r\n            }\r\n  \r\n            console.log(\"res from POS\", res);\r\n            return true;\r\n          } catch (error) {\r\n            console.log(error);\r\n            return null;\r\n          }\r\n        })\r\n      );\r\n      // setLoader(false);\r\n      dispatch({type: \"LOADER\"});\r\n    };\r\n\r\n    const pushInventoryDetails2 = async () => {\r\n      console.log(posProducts);\r\n      // setLoader(true);\r\n      let data = singleItemData.map((element) => {\r\n        return {\r\n          item: element.itemNo,\r\n          qty: parseInt(element.qty) * parseInt(element.pieces),\r\n          cp: element.unitPrice,\r\n          markup: element.markup,\r\n          sp: element.sp,\r\n          description: element.description,\r\n        };\r\n      });\r\n  \r\n      var duplicates = {};\r\n      for (var i = 0; i < data.length; i++) {\r\n        if (duplicates.hasOwnProperty(data[i].item)) {\r\n          duplicates[data[i].item].push(i);\r\n        } else if (data.lastIndexOf(data[i].item) !== i) {\r\n          duplicates[data[i].item] = [i];\r\n        }\r\n      }\r\n  \r\n      let tempData = Object.values(duplicates).filter((ele) => ele.length > 1);\r\n      if (tempData.length > 0) {\r\n        tempData.forEach((index) => {\r\n          let temp = 0;\r\n          index.forEach((val) => {\r\n            if (data[val]) {\r\n              // console.log(\"data[val]\", data[val]);\r\n              temp += data[val].qty;\r\n              if (temp - data[val].qty !== 0) {\r\n                data[val] = null;\r\n              }\r\n            }\r\n          });\r\n          data[index[0]].qty = temp;\r\n        });\r\n      }\r\n      data = data.filter((ele) => ele !== null);\r\n  \r\n      /**\r\n       * add the fileds of  data from the woocom & ocr\r\n      */\r\n     console.log(wooComProducts.length);\r\n      if(wooComProducts[0] != null){\r\n        let updatedWoocomProducts = data\r\n          .map((product, index) => {\r\n            /**find index of the item in fetched woocom product list */\r\n            const wooIndex = wooComProducts.findIndex(\r\n              (wooProduct) => product.item === wooProduct.itemNo\r\n            );\r\n            if (wooIndex !== -1) {\r\n              /**get the qty & other fileds of the woocom product */\r\n              let { id, stock_quantity } = wooComProducts[wooIndex];\r\n              stock_quantity += product.qty;\r\n              const regular_price = product.sp;\r\n              return { id, regular_price, stock_quantity, itemNo: product.item };\r\n            }\r\n            return null;\r\n          })\r\n          .filter((item) => item !== null);\r\n\r\n        console.log(updatedWoocomProducts); \r\n        await pushToWoocom(updatedWoocomProducts);\r\n        }\r\n      await pushToPOS(posProducts);\r\n  \r\n      // setLoader(false);\r\n      dispatch({type: \"LOADER\"});\r\n      // if (itemsNotPushed.length === 0) {\r\n      window.alert(\"Inventory updated successfully\");\r\n      // setRedirect(true);\r\n      // } else {\r\n      //   window.alert(\"Inventory not updated\");\r\n      // }\r\n    };\r\n\r\n    function toConsoleState() {\r\n      console.log(wooComProducts);\r\n      console.log(posProducts);\r\n      console.log(singleItemData);\r\n    }\r\n\r\n  const pushSingleItemToInventory = async (index) =>{\r\n\r\n    // setApiLoader(true);\r\n    dispatch({type: \"API_LOADER\"});\r\n    console.log(\"pI_index : \",index);\t\r\n    \r\n    // Setting State\r\n    setShowPosIndex(-1);\r\n    \r\n    // tableData also a state\r\n    console.log(\"pI_tableData : \",tableData);\r\n    const product = [];\r\n    console.log(\"pI_emptyColumn : \",emptyColumn);\r\n    const notFoundItems = emptyColumn.map((i) => tableData[i]);\r\n    console.log(\"pI_notFoundItems : \",notFoundItems);\r\n    const tempTable = [];\r\n    product.push(tableData[index]);\r\n    console.log(product);\r\n    product.isUpdated = \"true\";\r\n    itemNo = product.itemNo;\r\n    console.log(\"pI_product : \",product);\r\n    \r\n    product.forEach((element, index) => {\r\n      if (\r\n        !emptyColumn.includes(index) &&\r\n        element.show === true &&\r\n        element[\"isForReview\"] != true\r\n      ) {\r\n        let rowData = { index: index + 1, ...element };\r\n        tempTable.push(rowData);\r\n      }\r\n    });\r\n    // console.log(\"notFoundItems\", notFoundItems);\r\n    console.log(\"pI_tempTable\",tempTable);\r\n\r\n    if (emptyColumn.length !== 0) {\r\n      /** API to push  to not found list */\r\n      // setLoader(true);\r\n      dispatch({type: \"LOADER\"});\r\n      const responses = await Promise.all(\r\n        notFoundItems.map(async (product) => {\r\n          try {\r\n            const data = {\r\n              Item: product.itemNo,\r\n              Description: product.description,\r\n              Quantity: product.qty,\r\n              Price: product.unitPrice,\r\n              sku: product.sku,\r\n              Barcode: product.barcode,\r\n              PosSKU: product.posSku,\r\n              InvoiceName: invoice.slug,\r\n            };\r\n            console.log(\"pI_data : \",data);\r\n            await inventoryService.CreateNotFoundItems(data);\r\n            return true;\r\n          } catch (error) {\r\n            console.log(\r\n              \"Couldn't create not found product\",\r\n              product.description,\r\n              { error }\r\n            );\r\n            alert(\"Couldn't create product on website.\");\r\n            return null;\r\n          }\r\n        })\r\n      );\r\n      // setLoader(false);\r\n      dispatch({type: \"LOADER\"});\r\n    }\r\n\r\n    const priceIncreasedProducts = tempTable.filter(\r\n      (product) => product.priceIncrease !== 0\r\n    );\r\n    console.log(\"pI_priceIncreasedProducts : \",priceIncreasedProducts);\r\n    // setLoader(true);\r\n    dispatch({type: \"LOADER\"});\r\n    const res = await Promise.all(\r\n      priceIncreasedProducts.map(async (product) => {\r\n        try {\r\n          const data = {\r\n            invoiceName: invoice.slug,\r\n            itemName: product.itemNo,\r\n            value: { Price: product.unitPrice },\r\n          };\r\n          console.log(\"pI_data\",data)\r\n          await inventoryService.UpdateProductFields(data);\r\n          \r\n          \r\n        } catch (error) {\r\n          console.log(`couldn't update price for product ${product.itemNo}`);\r\n        }\r\n      })\r\n    );\r\n    // setLoader(false);\r\n    dispatch({type: \"LOADER\"});\r\n    // console.log(tempTable);\r\n    console.log(\"pI_tempTable\",tempTable);\r\n    tempTable[0].isUpdated = \"true\";\r\n    console.log(\"pI_tempTable\",tempTable);\r\n    singleItemData = tempTable;\r\n    // setPushToInventory(true);\r\n    console.log(\"pI_singleItemData : \",singleItemData);\r\n    \r\n    updateSku = singleItemData[0].posSku;\r\n\r\n\r\n    await getProducts();   // fetch product details from WooCommerce website  (wooComProducts)\r\n    await getPosProducts();  // fetch product details from POS API  (posProducts)\r\n    console.log(\"pI_posProducts : \",posProducts);\r\n    if(posProducts[0] != undefined ){\r\n      await pushInventoryDetails2();\r\n      toConsoleState();\r\n      setIsUpdated(\"true\");\r\n      setUpdateIndex(index);\r\n      console.log(\"pI_singleItemData : \",singleItemData);\r\n      console.log(\"pI_singleItemData.itemNo : \",singleItemData.itemNo);\r\n      await inventoryService.UpdateInvoiceData(inv, num, day, singleItemData[0].itemNo); \r\n\r\n      //Update unit cost n price in db, after update POS.\r\n      let data1 = {\r\n        cost: singleItemData[0].cp,\r\n        price: singleItemData[0].sp,\r\n        item: singleItemData[0].itemNo,\r\n        itemName:posProducts[0].ITEMNAME,\r\n        invoice: invoice.slug\r\n      }\r\n      await getPosProducts();\r\n      console.log(\"I am data from updatedb after Pos\",data1)\r\n      console.log(\"I am posProducts.ITEMNAME from updatedb after Pos\",posProducts[0].ITEMNAME)\r\n\r\n      await inventoryService.UpdateDBafterPosUpdate(data1);\r\n      \r\n      //Log Generate.\r\n      console.log(\"PRODUCTT\");\r\n      console.log(\"pI_singleItemData : \",singleItemData);\r\n      const log = {\r\n        InvoiceName: invoice.slug,\r\n        InvoiceDate: day,\r\n        ItemNo: singleItemData[0].itemNo,\r\n        InvoiceDescription: singleItemData[0].description,\r\n        PosDescription: singleItemData[0].posName,\r\n        PosUnitCost: singleItemData[0].cost,\r\n        PosUnitPrice: singleItemData[0].sellingPrice,\r\n        OldMarkup: singleItemData[0].margin.toFixed(2).toString(),\r\n        InvUnitCost: singleItemData[0].cp,\r\n        InvUnitPrice: singleItemData[0].sp,\r\n        NewMarkup:( ((singleItemData[0].sp- singleItemData[0].cp)/ singleItemData[0].cp)*100).toFixed(2).toString(),\r\n        UpdateDate: todayDate,\r\n        Person: userEmail,\r\n        TimeStamp: new Date().toTimeString().split(\" \")[0], \r\n        InvCaseCost: singleItemData[0].unitPrice,\r\n        InvUnitsInCase: singleItemData[0].pieces,\r\n        SKU: singleItemData[0].posSku\r\n      }\r\n      console.log(\"pI_log : \",log);\r\n      const logUpdate = await inventoryService.posLogs(log);\r\n      console.log(\"pI_logUpdate : \",logUpdate)\r\n      setProductsInTable();\r\n\r\n    } else {\r\n      alert(\"POS not updated!!\");\r\n      setProductsInTable();\r\n    }\r\n    // setApiLoader(false);\r\n    dispatch({type: \"API_LOADER\"});\r\n\r\n    \r\n    \r\n  }\r\n  //***************************INDIVIDUAL ITEM UPDATE FUNCTIONALITY ENDS*****************************************.\r\n\r\n  const updateUnits = async (index) => {\r\n    const item = tableData[index];\r\n    console.log(item);\r\n    const data = {\r\n      invoiceName: inv,\r\n      itemName: item.itemNo,\r\n      value: {\r\n        Quantity: item.pieces\r\n      }\r\n    }\r\n    inventoryService\r\n    .UpdateProductFields(data)\r\n    .then((res) => {\r\n      if (!res) {\r\n        throw new Error(\"Product not updated\")\r\n      }\r\n      console.log(res);\r\n      alert(\"Successfully updated fields\");\r\n      // setStateUpdated(true);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      alert(\"Some error occuured in creating product\");\r\n    })\r\n    .finally(setProductsInTable());\r\n    // console.log(res);\r\n  }\r\n \r\n  const saveDetails = async () => {\r\n    console.log(detailsIndex);\r\n    console.log(details);\r\n    const item = tableData[detailsIndex];\r\n    console.log(item);\r\n    const data = {\r\n      invoice: invoice.slug,\r\n      itemNo: item.itemNo,\r\n      details: details\r\n    }\r\n    const res = await inventoryService.saveDetails(data);\r\n    console.log(res);\r\n    if(res === \"s\"){\r\n      alert(\"Details added successfully\");\r\n      setDetails(\"\");\r\n      setDetailsIndex(-1);\r\n      toggleModal(\"details\");\r\n      setProductsInTable();\r\n    }else {\r\n      alert(\"Some error Occured.\");\r\n      setDetailsIndex(-1);\r\n      setDetails(\"\");\r\n      toggleModal(\"details\");\r\n    }\r\n\r\n  }\r\n\r\n  const getInvoices = async () => {\r\n    // setApiLoader(true);\r\n    dispatch({type: \"API_LOADER\"})\r\n    // setOpenInvoice(false);\r\n    dispatch({type: \"OPEN_INVOICE\", data: false})\r\n    console.log(\"gI_invoice : \",invoice);\r\n    const res = await inventoryService.getSavedInvoices(invoice);\r\n    console.log(res);\r\n    // let array = [];\r\n    // res.map(item => {\r\n    //   array.push(item.SavedInvoiceNo);\r\n    // })\r\n    console.log(res);\r\n    console.log(\"getIvoices_res.reverse() : \",res.reverse());\r\n    setInvoiceOptions(res.reverse());\r\n    \r\n    // setApiLoader(false);\r\n    dispatch({type: \"API_LOADER\"})\r\n\r\n  }\r\n\r\n    const reverseUpdate = async(index) => {\r\n      console.log(index);\r\n      console.log(tableData);\r\n      console.log(tableData[index]);\r\n      let item = tableData[index];\r\n      let data = {\r\n        invoice: invoice.slug,\r\n        itemNo: item.itemNo,\r\n      }\r\n      const result = await inventoryService.reverseUpdate(data);\r\n      console.log(result);\r\n      if(result.ok == 1){\r\n        setProductsInTable();\r\n      }else {\r\n        alert(\"Some error occured in updation\");\r\n      }\r\n    }\r\n    \r\n\r\n    const reversePOSUpdate = async(index) => {\r\n      console.log(index);\r\n      console.log(tableData);\r\n      console.log(tableData[index]);\r\n      let item = tableData[index];\r\n      const result = await inventoryService.reversePOSUpdate(inv, num, day, item.itemNo);\r\n      if(result.ok == 1){\r\n        setProductsInTable();\r\n      }else {\r\n        alert(\"Some error occured in updation\");\r\n      }\r\n\r\n    }\r\n\r\n    const linkingCorrect = async (index) => {\r\n      console.log(index);\r\n      console.log(tableData);\r\n      console.log(tableData[index]);\r\n      let item = tableData[index];\r\n      console.log(item)\r\n      let data = {\r\n        invoice: inv,\r\n        itemNo: item.itemNo,\r\n      }\r\n      console.log(data);\r\n      const res = await inventoryService.linkingCorrect(data);\r\n      console.log(res);\r\n      if(res.statusText == \"OK\") {\r\n        \r\n        const costChange = item.cp - item.cost;\r\n        const invError = item.cp >= 3*item.cost ? \"YES\" : \"\";\r\n        \r\n        let logState = {\r\n          InvoiceDescription: item.description,\r\n          PosDescription: item.posName,\r\n          SKU: item.posSku,\r\n          Barcode: item.barcode,\r\n          InvoiceName: inv,\r\n          ItemCode: item.itemNo,\r\n          LinkingDate: todayDate,\r\n          PersonName: userEmail,\r\n          Size: item.size,\r\n          PosUnitCost: item.cost,\r\n          PosUnitPrice: item.sellingPrice,\r\n          InvoiceNo: num,\r\n          InvoiceDate: day,\r\n          Department: item.department,\r\n          InvUnitCost: item.cp,\r\n          CostIncrease: \"\",\r\n          CostDecrease: \"\",\r\n          CostSame:  \"\",\r\n          Unidentified: \"YES\",\r\n          InvError: invError  \r\n        }\r\n        const res = await inventoryService.UnidentifiedLog(logState);\r\n        console.log(res);\r\n        alert(\"SUCCESS\");\r\n        setProductsInTable();\r\n      }else {\r\n        alert(\"Some error occured\");\r\n        setProductsInTable();\r\n      }\r\n    }\r\n\r\n    // const linkManuallyNew = async(index) => {\r\n    //   console.log(index);\r\n      \r\n    //   console.log(\"tabledata in linkManually\",tableData);\r\n    //   console.log(tableData[index]);\r\n\r\n    //   let item = tableData[index];\r\n    //   console.log(\"item in link manually\", item);\r\n\r\n    //   await getPosProductsLinkManually(index);\r\n\r\n    // }\r\n\r\n    const linkManually = async(index) => {\r\n      console.log(index);\r\n      console.log(\"tabledata in linkManually\",tableData);\r\n      console.log(tableData[index]);\r\n      let item = tableData[index];\r\n      console.log(item)\r\n\r\n      let data = {\r\n        invoice: inv,\r\n        itemNo: item.itemNo,\r\n      }\r\n      console.log(\"linkManually_data : \",data);\r\n      const result = await inventoryService.linkManually(data);\r\n      console.log(result);\r\n\r\n      //Update unit cost from excel.\r\n      // const skuData = {sku: item.posSku};\r\n      // const res = await inventoryService.fetchProductFromPosList(skuData);\r\n      // console.log(res); \r\n\r\n\r\n\r\n      //Log Generate.\r\n      const costChange = item.cp - item.cost;\r\n      const invError = item.cp >= 3*item.cost ? \"YES\" : \"\";\r\n      console.log(invError);\r\n      let logState = {\r\n        InvoiceDescription: item.description,\r\n        PosDescription: item.posName,\r\n        SKU: item.posSku,\r\n        Barcode: item.barcode,\r\n        InvoiceName: inv,\r\n        ItemCode: item.itemNo,\r\n        LinkingDate: todayDate,\r\n        PersonName: userEmail,\r\n        Size: item.size,\r\n        PosUnitCost: item.cost,\r\n        PosUnitPrice: item.sellingPrice,\r\n        InvoiceNo: num,\r\n        InvoiceDate: day,\r\n        Department: item.department,\r\n        InvUnitCost: item.cp,\r\n        CostIncrease: invError == \"YES\" ? \"\" : costChange > 0 ? \"YES\" : \"\",\r\n        CostDecrease: invError == \"YES\" ? \"\" : costChange < 0 ? \"YES\" : \"\",\r\n        CostSame: invError == \"YES\" ? \"\" : costChange == 0 ? \"YES\" : \"\",\r\n        InvError: invError\r\n      }\r\n      console.log(logState);\r\n      const logResult = await inventoryService.linkManuallyLog(logState);\r\n      console.log(logResult);\r\n      \r\n      \r\n      \r\n      \r\n      if(result.statusText == \"OK\"){\r\n        setProductsInTable();\r\n        // setProductsInTableNew(inv, num, day);\r\n      }else {\r\n        alert(\"Some error occured in updation\");\r\n        setProductsInTable();\r\n        // setProductsInTableNew(inv, num, day);\r\n      }\r\n\r\n      await getPosProductsLinkManually(index);\r\n\r\n    }\r\n\r\n    const fetchSavedData = async(invoice = inv, no = num, date = day) => {\r\n      console.log(\"fetchSavedData_api_request \");\r\n        const data =  await tesseractService.GetSavedInvoiceData(invoice, no, date);\r\n        console.log(\"fatchSavedData_data : \",data);\r\n        if(data.length === 0) {\r\n          alert(\"Invoice doesnt Exist!!\");\r\n        }else return data[0].InvoiceData;\r\n        // console.log(data);\r\n        // console.log(data[0].InvoiceData);\r\n        \r\n    };\r\n\r\n    const setProductsInTable = () => {\r\n      // setLoader(true);\r\n      dispatch({type: \"LOADER\"});\r\n      async function invoiceData() {\r\n        const products = await tesseractService.GetProductDetails(\r\n          // invoice.slug\r\n          inv\r\n        );\r\n        //console.log(props.selectedInvoice);\r\n        return products;\r\n      }\r\n\r\n      fetchSavedData().then((ocrData) => {\r\n        console.log(\"fetchSavedData_ocrData : \",ocrData);\r\n        invoiceData()\r\n          .then((products) => {\r\n            console.log(\"fetchSavedData_invoice_products : \",products);\r\n            /**post processing the table data after returning from filter */\r\n            function convertToUpperCase(obj) {\r\n              let newObj = {};\r\n              for (let key in obj) {\r\n                newObj[key.toUpperCase()] = obj[key];\r\n              }\r\n              return newObj;\r\n            }\r\n            products = convertToUpperCase(products);\r\n            console.log(products);\r\n            // scanInvoiceData.InvoiceData = ocrData;\r\n          //   setOcrProducts(ocrData);\r\n            \r\n          //   console.log(scanInvoiceData);\r\n            // scanInvoiceData.InvoiceData = ocrData;\r\n            //console.log(resScnInvDta);\r\n            console.log(\"OCERDATa\", ocrData);\r\n            //console.log(products);\r\n            //console.log(scanInvoiceData);\r\n            let table = ocrData.map((row) => {\r\n              /**For invoices which dont have item no, set description as item no */\r\n              // row.itemNoPresent = row.itemNo === undefined ? false : true; \r\n              \r\n              if (row.itemNo === undefined) {\r\n                row.itemNo = row.description.trim().toUpperCase();\r\n              }\r\n              row.itemNo = row.itemNo.toString().toUpperCase();\r\n  \r\n              row.description = row.description;\r\n                // products[row.itemNo] !== undefined\r\n                //   ? products[row.itemNo].Description\r\n                //   : row.description;\r\n              row.pieces = \r\n                products[row.itemNo] !== undefined\r\n                  ? products[row.itemNo].Quantity\r\n                  : 0;\r\n              row.sku =\r\n                products[row.itemNo] !== undefined\r\n                  ? products[row.itemNo].sku\r\n                  : \"\";\r\n              row.barcode =\r\n                products[row.itemNo] !== undefined\r\n                  ? products[row.itemNo].Barcode\r\n                  : \"\";\r\n              row.posName =\r\n                products[row.itemNo] !== undefined\r\n                  ? products[row.itemNo].POS\r\n                  : \"\";\r\n              row.markup = 0;\r\n              row.show = true;\r\n              row.posSku =\r\n                products[row.itemNo] !== undefined\r\n                  ? products[row.itemNo].PosSKU\r\n                  : \"\";\r\n              row.isReviewed = \r\n                products[row.itemNo] !== undefined ? products[row.itemNo].isReviewed : \"\" ;\r\n              row.size = \r\n                products[row.itemNo] !== undefined ? products[row.itemNo].Size : \"\";\r\n              row.department = \r\n                products[row.itemNo] !== undefined ? products[row.itemNo].Department : \"\";\r\n              row.cost = \r\n                products[row.itemNo] !== undefined ? products[row.itemNo].SellerCost : \"\";\r\n              row.sellingPrice = \r\n                products[row.itemNo] !== undefined ? products[row.itemNo].SellingPrice : \"\";\r\n              row.price = \r\n                products[row.itemNo] !== undefined ? products[row.itemNo].Price : \"\";\r\n              row.details = \r\n                products[row.itemNo] !== undefined ? products[row.itemNo].Details : \"\";\r\n              row.linkingCorrect = \r\n                products[row.itemNo] !== undefined ? products[row.itemNo].LinkingCorrect : \"\";\r\n              row.margin = products[row.itemNo] !== undefined ? ((products[row.itemNo].SellingPrice - products[row.itemNo].SellerCost)/ products[row.itemNo].SellerCost)*100 : \"\";\r\n              //console.log(\"department-\" + row.department + \"  cost-\" + row.cost + \"  price\" + row.sellingPrice);\r\n              let sp = 0;\r\n              let cp = 0;\r\n              // const barcode = products.Barcode\r\n              if (parseInt(row.pieces)) {\r\n                sp = (parseFloat(row.unitPrice) / parseInt(row.pieces)).toFixed(\r\n                  2\r\n                );\r\n                cp = sp;\r\n              }\r\n              if (products[row.itemNo] !== undefined) {\r\n                if (sp > +products[row.itemNo].SellerCost) {\r\n                  row[\"priceIncrease\"] = 1;\r\n                } else if (sp < +products[row.itemNo].SellerCost) {\r\n                  row[\"priceIncrease\"] = -1;\r\n                } else if (sp == +products[row.itemNo].SellerCost) {\r\n                  row[\"priceIncrease\"] = 0;\r\n                }\r\n              } else {\r\n                row[\"priceIncrease\"] = 0;\r\n              }\r\n  \r\n              /**filter out the rows for which qty shipped & extendedPrice is zero */\r\n              if (row.qty == \"0\" && row.extendedPrice === \"0.00\") {\r\n                return null;\r\n              }\r\n              /**Calulate qty for which qty is not read/scanned by textract */\r\n              if (!row.qty) {\r\n                row.qty = (\r\n                  parseFloat(row.extendedPrice) / parseFloat(row.unitPrice)\r\n                ).toFixed(0);\r\n              }\r\n            return { ...row, sp, cp };\r\n            });\r\n            // setLoader(false);\r\n            dispatch({type: \"LOADER\"});\r\n\r\n            setTableData(table.filter((data) => data !== null));\r\n            console.log(\"setProductsInTable_tableData : \",tableData);\r\n            setItemNoDropdown(Object.keys(products));\r\n            setProductDetails(products);\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"error on mapping ocrdata\", err)\r\n            // setLoader(false);\r\n            dispatch({type: \"LOADER\"});\r\n          });\r\n      });\r\n    }\r\n\r\n    const toggleModal = (x) => {\r\n      if(x == \"notfounds\"){\r\n        setShowModal(!showModal);\r\n      }else {\r\n        setDetailsModal(!detailsModal);\r\n      }\r\n        // setDate(\"\");\r\n        // setInvNo(\"\");\r\n      };\r\n\r\n    const hicksvilleDropdown = async (data) => {\r\n          // const res = await inventoryService.getHicksvilleData(value);\r\n          // const data = res[0].List;\r\n          console.log(data);\r\n  \r\n  \r\n          let productsString = \"\";\r\n          for(let i=0;i<data.length;i++){\r\n            productsString = productsString + data[i].name + '$$$';\r\n          } \r\n          let result = productsString.split(\"$$$\");\r\n        \r\n          let newData = [];\r\n          for (let i = 0; i < result.length; i++) {\r\n            let s = result[i].split(\"@@@\");\r\n            let obj =\r\n              {\r\n                // sku: s[0] === \"nan\" ? null : s[0],\r\n                // upc: s[1] === \"nan\" ? null : s[1],\r\n                // altupc1: s[2] === \"nan\" ? null : s[2],\r\n                // altupc2: s[3] === \"nan\" ? null : s[3],\r\n                // name: s[4] === \"nan\" ? null : s[4],\r\n                // vintage: s[5] === \"nan\" ? null : s[5],\r\n                // totalQty: s[6] === \"nan\" ? null : s[6],\r\n                // cost: s[7] === \"nan\" ? null : s[7],\r\n                // pricea: s[8] === \"nan\" ? null : s[8],\r\n                // priceb: s[9] === \"nan\" ? null : s[9],\r\n                // pricec: s[10] === \"nan\" ? null : s[10],\r\n                // department: s[11] === \"nan\" ? null : s[11],\r\n                // salePrice: s[12] === \"nan\" ? null : s[12],\r\n                // size: s[13] === \"nan\" ? null : s[13],\r\n                // pack: s[14] === \"nan\" ? null : s[14],\r\n                // price: s[15] === \"nan\" ? null : s[15],\r\n                sku: s[1] === \"nan\" ? null : s[1],\r\n                upc: s[0] === \"nan\" ? null : s[0],\r\n                altupc1: s[14] === \"nan\" ? null : s[14],\r\n                altupc2: s[15] === \"nan\" ? null : s[15],\r\n                name: s[2] === \"nan\" ? null : s[2],\r\n                vintage: s[8] === \"nan\" ? null : s[8],\r\n                totalQty: s[13] === \"nan\" ? null : s[13],\r\n                cost: s[4] === \"nan\" ? null : s[4],\r\n                pricea: s[10] === \"nan\" ? null : s[10],\r\n                priceb: s[11] === \"nan\" ? null : s[11],\r\n                pricec: s[12] === \"nan\" ? null : s[12],\r\n                department: s[9] === \"nan\" ? null : s[9],\r\n                salePrice: s[5] === \"nan\" ? null : s[5],\r\n                size: s[6] === \"nan\" ? null : s[6],\r\n                pack: s[7] === \"nan\" ? null : s[7],\r\n                price: s[3] === \"nan\" ? null : s[3],\r\n              }\r\n            newData.push(obj);\r\n          }\r\n          const filter = newData.map((element) => {\r\n            let obj = { ...element };\r\n            obj.label = `${element.name}--${element.price}--${element.upc}--${element.size}--${element.cost}--${element.sku}`;\r\n            //console.log(obj);\r\n            return obj; \r\n          });\r\n          setHicksvilleData(filter);\r\n        \r\n      }\r\n    \r\n    const hicksvilleDropdownNew = async (event, value, index) => {\r\n      console.log(event);\r\n      console.log(value);\r\n      console.log(value.length);\r\n      console.log(tableData[index].itemNo);\r\n      setDropwdownIndex(index);\r\n      setOptions([]);\r\n\r\n      if(!isNaN(value) && value.length>0 && value != tableData[index].itemNo){\r\n        console.log(\"number\");\r\n        // setDropdownLoader(true);\r\n        setFetchingOptions(true);\r\n        const res = await inventoryService.getHicksvilleData(value.toUpperCase());\r\n        const data = res;\r\n        console.log(data);\r\n\r\n\r\n        let productsString = \"\";\r\n        for(let i=0;i<data.length;i++){\r\n          productsString = productsString + data[i].name + '$$$';\r\n        } \r\n        let result = productsString.split(\"$$$\");\r\n      \r\n        let newData = [];\r\n        for (let i = 0; i < result.length; i++) {\r\n          let s = result[i].split(\"@@@\");\r\n          let obj =\r\n            {\r\n              // sku: s[0] === \"nan\" ? null : s[0],\r\n              // upc: s[1] === \"nan\" ? null : s[1],\r\n              // altupc1: s[2] === \"nan\" ? null : s[2],\r\n              // altupc2: s[3] === \"nan\" ? null : s[3],\r\n              // name: s[4] === \"nan\" ? null : s[4],\r\n              // vintage: s[5] === \"nan\" ? null : s[5],\r\n              // totalQty: s[6] === \"nan\" ? null : s[6],\r\n              // cost: s[7] === \"nan\" ? null : s[7],\r\n              // pricea: s[8] === \"nan\" ? null : s[8],\r\n              // priceb: s[9] === \"nan\" ? null : s[9],\r\n              // pricec: s[10] === \"nan\" ? null : s[10],\r\n              // department: s[11] === \"nan\" ? null : s[11],\r\n              // salePrice: s[12] === \"nan\" ? null : s[12],\r\n              // size: s[13] === \"nan\" ? null : s[13],\r\n              // pack: s[14] === \"nan\" ? null : s[14],\r\n              // price: s[15] === \"nan\" ? null : s[15],\r\n              sku: s[1] === \"nan\" ? null : s[1],\r\n              upc: s[0] === \"nan\" ? null : s[0],\r\n              altupc1: s[14] === \"nan\" ? null : s[14],\r\n              altupc2: s[15] === \"nan\" ? null : s[15],\r\n              name: s[2] === \"nan\" ? null : s[2],\r\n              vintage: s[8] === \"nan\" ? null : s[8],\r\n              totalQty: s[13] === \"nan\" ? null : s[13],\r\n              cost: s[4] === \"nan\" ? null : s[4],\r\n              pricea: s[10] === \"nan\" ? null : s[10],\r\n              priceb: s[11] === \"nan\" ? null : s[11],\r\n              pricec: s[12] === \"nan\" ? null : s[12],\r\n              department: s[9] === \"nan\" ? null : s[9],\r\n              salePrice: s[5] === \"nan\" ? null : s[5],\r\n              size: s[6] === \"nan\" ? null : s[6],\r\n              pack: s[7] === \"nan\" ? null : s[7],\r\n              price: s[3] === \"nan\" ? null : s[3],\r\n            }\r\n          newData.push(obj);\r\n        }\r\n        const filter = newData.map((element) => {\r\n          let obj = { ...element };\r\n          obj.label = `${element.name}--${element.price}--${element.upc}--${element.size}--${element.cost}--${element.sku}`;\r\n          //console.log(obj);\r\n          return obj; \r\n        });\r\n        setHicksvilleData(filter);\r\n        setOptions(filter);\r\n\r\n      }\r\n\r\n      if(isNaN(value) && value != null && value.length>=4 && value != tableData[index].itemNo){\r\n        console.log(\"string\");\r\n        // setDropdownLoader(true);\r\n        setFetchingOptions(true);\r\n        const res = await inventoryService.getHicksvilleData(value.toUpperCase());\r\n        const data = res;\r\n        console.log(data);\r\n\r\n\r\n        let productsString = \"\";\r\n        for(let i=0;i<data.length;i++){\r\n          productsString = productsString + data[i].name + '$$$';\r\n        } \r\n        let result = productsString.split(\"$$$\");\r\n      \r\n        let newData = [];\r\n        for (let i = 0; i < result.length; i++) {\r\n          let s = result[i].split(\"@@@\");\r\n          let obj =\r\n            {\r\n              // sku: s[0] === \"nan\" ? null : s[0],\r\n              // upc: s[1] === \"nan\" ? null : s[1],\r\n              // altupc1: s[2] === \"nan\" ? null : s[2],\r\n              // altupc2: s[3] === \"nan\" ? null : s[3],\r\n              // name: s[4] === \"nan\" ? null : s[4],\r\n              // vintage: s[5] === \"nan\" ? null : s[5],\r\n              // totalQty: s[6] === \"nan\" ? null : s[6],\r\n              // cost: s[7] === \"nan\" ? null : s[7],\r\n              // pricea: s[8] === \"nan\" ? null : s[8],\r\n              // priceb: s[9] === \"nan\" ? null : s[9],\r\n              // pricec: s[10] === \"nan\" ? null : s[10],\r\n              // department: s[11] === \"nan\" ? null : s[11],\r\n              // salePrice: s[12] === \"nan\" ? null : s[12],\r\n              // size: s[13] === \"nan\" ? null : s[13],\r\n              // pack: s[14] === \"nan\" ? null : s[14],\r\n              // price: s[15] === \"nan\" ? null : s[15],\r\n              sku: s[1] === \"nan\" ? null : s[1],\r\n              upc: s[0] === \"nan\" ? null : s[0],\r\n              altupc1: s[14] === \"nan\" ? null : s[14],\r\n              altupc2: s[15] === \"nan\" ? null : s[15],\r\n              name: s[2] === \"nan\" ? null : s[2],\r\n              vintage: s[8] === \"nan\" ? null : s[8],\r\n              totalQty: s[13] === \"nan\" ? null : s[13],\r\n              cost: s[4] === \"nan\" ? null : s[4],\r\n              pricea: s[10] === \"nan\" ? null : s[10],\r\n              priceb: s[11] === \"nan\" ? null : s[11],\r\n              pricec: s[12] === \"nan\" ? null : s[12],\r\n              department: s[9] === \"nan\" ? null : s[9],\r\n              salePrice: s[5] === \"nan\" ? null : s[5],\r\n              size: s[6] === \"nan\" ? null : s[6],\r\n              pack: s[7] === \"nan\" ? null : s[7],\r\n              price: s[3] === \"nan\" ? null : s[3],\r\n            }\r\n          newData.push(obj);\r\n        }\r\n        const filter = newData.map((element) => {\r\n          let obj = { ...element };\r\n          if(element.itemNo != \"undefined\"){\r\n          obj.label = `${element.name}--${element.price}--${element.upc}--${element.size}--${element.cost}--${element.sku}`;\r\n          }\r\n          //console.log(obj);\r\n          return obj; \r\n        });\r\n        setHicksvilleData(filter);\r\n        setOptions(filter);\r\n      }\r\n      setFetchingOptions(false);\r\n    }\r\n\r\n    const searchDropdown = (target, value) =>  {\r\n      console.log(target);\r\n      console.log(value);\r\n      const options  = hicksvilleData.filter((item) => {\r\n        if(item.name){\r\n          let name = item.name;\r\n          name = name.toLowerCase();\r\n          value = value.toLowerCase();\r\n          // console.log(name)\r\n          return name.search(value) != -1;\r\n        }\r\n      })\r\n      console.log(options);\r\n      setOptions(options);\r\n      setFetchingOptions(false);\r\n\r\n    }\r\n\r\n    const updateItemOld = (ocrCost) => {\r\n        //console.log(showPosState);\r\n        const data = {\r\n          invoiceName: invoice.slug,\r\n          itemName: showPosState.item,\r\n          value: { \r\n            POS: showPosState.pos, \r\n            Barcode: showPosState.barcode, \r\n            PosSKU: showPosState.posSku, \r\n            isReviewed: \"true\",\r\n            Size: showPosState.size, \r\n            Department: showPosState.department,\r\n            //SellerCost: showPosState.unitCost,\r\n            SellingPrice: showPosState.unitPrice\r\n          },\r\n        };\r\n    \r\n        inventoryService\r\n        .UpdateProductFields(data)\r\n        .then((res) => {\r\n          if (!res) {\r\n            throw new Error(\"Product not created\")\r\n          }\r\n          console.log(res);\r\n          alert(\"Successfully updated fields\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          alert(\"Some error occuured in creating product\");\r\n        })\r\n        .finally(() => { \r\n          // setLoader(false)\r\n          dispatch({type: \"LOADER\"});\r\n          \r\n          // setStateUpdated(\"true\");\r\n          //  console.log(ocrCost);\r\n          //  console.log(unitCost);\r\n           if(ocrCost>unitCost){\r\n             setCostInc(\"true\");\r\n             setCostDec(\"\");\r\n           }\r\n           if(ocrCost<unitCost){\r\n             setCostDec(\"true\");\r\n             setCostInc(\"\");\r\n           }\r\n        });\r\n    \r\n    }\r\n\r\n    const updateItem = (props, ocrCost) => {\r\n      let data;\r\n      console.log(\"updateItem_showPosState : \",showPosState);\r\n      console.log(\"updateItem_notFounds : \",notFounds);\r\n      //console.log(showPosState);\r\n      if(notFounds === \"true\"){\r\n        // console.log(props.selectedInvoice);\r\n        console.log(\"notfoundstrue\");\r\n        data = {\r\n          invoiceName: inv,\r\n          itemName: showPosState.item,\r\n          value: { \r\n            POS: showPosState.pos, \r\n            Barcode: showPosState.barcode, \r\n            PosSKU: showPosState.posSku, \r\n            isReviewed: \"true\",\r\n            Description: showPosState.description,\r\n            Size: showPosState.size, \r\n            Department: showPosState.department,\r\n            SellerCost: showPosState.unitCost,\r\n            SellingPrice: showPosState.unitPrice,\r\n            Quantity: unitsInCase,\r\n            Price: price,\r\n            LinkingCorrect: \"true\"\r\n          },\r\n        };\r\n  \r\n        toggleModal(\"notfounds\");\r\n      \r\n      }else{\r\n        data = {\r\n          invoiceName: inv,\r\n          itemName: showPosState.item,\r\n          value: { \r\n            POS: showPosState.pos, \r\n            Barcode: showPosState.barcode, \r\n            PosSKU: showPosState.posSku, \r\n            isReviewed: \"true\",\r\n            Size: showPosState.size, \r\n            Department: showPosState.department,\r\n            SellerCost: showPosState.unitCost,\r\n            SellingPrice: showPosState.unitPrice,\r\n            LinkingCorrect: \"true\"\r\n          },\r\n        };\r\n      }\r\n  \r\n      console.log(\"updateItem_data : \",data)\r\n      inventoryService\r\n      .UpdateProductFields(data)\r\n      .then((res) => {\r\n        if (!res) {\r\n          throw new Error(\"Product not created\")\r\n        }\r\n        console.log(res);\r\n        alert(\"Successfully updated fields\");\r\n        // setStateUpdated(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Some error occuured in creating product\");\r\n      })\r\n      .finally(async () => { \r\n                      // setLoader(false);\r\n                      // dispatch({type: \"LOADER\"});\r\n                    //  setStateUpdated(\"true\");\r\n                    //  console.log(ocrCost);\r\n                    //  console.log(unitCost);\r\n                    if(ocrCost>unitCost){\r\n                      setCostInc(\"true\");\r\n                      setCostDec(\"\");\r\n                    }\r\n                    if(ocrCost<unitCost){\r\n                      setCostDec(\"true\");\r\n                      setCostInc(\"\");\r\n                    }\r\n                    if(notFounds === \"true\"){\r\n                      // setNotFounds(\"false\");\r\n                      dispatch({type: \"NOT_FOUNDS\", data: \"false\"})\r\n                      // setUnitsInCase(\"\");\r\n                      dispatch({type: \"UNITS_IN_CASE\", data: \"\"})\r\n                      // setPrice(\"\");\r\n                      dispatch({type: \"PRICE\", data: \"\"})\r\n\r\n                    }\r\n                    console.log(userEmail);\r\n                    console.log(tableData[showPosIndex]);\r\n                    const description = tableData[showPosIndex].description;\r\n                    \r\n                    //Cost chnage and invoice error handling logic.\r\n                    const costChange = tableData[showPosIndex].cp - data.value.SellerCost;\r\n                    console.log(costChange);\r\n                    let a = \"\", b = \"\", c = \"\";\r\n                    const invError = tableData[showPosIndex].cp >= 3*tableData[showPosIndex].cost ? \"YES\" : \"\";\r\n                    a = invError == \"YES\" ? \"\" : costChange > 0 ? \"YES\" : \"\";\r\n                    b = invError == \"YES\" ? \"\" : costChange < 0 ? \"YES\" : \"\"; \r\n                    c = invError == \"YES\" ? \"\" : costChange == 0 ? \"YES\" : \"\";\r\n\r\n                    console.log(costChange);\r\n                    console.log(description);\r\n                    console.log(todayDate);\r\n                    console.log(day);\r\n                    console.log(num);\r\n                    const logState = data;\r\n                    delete logState.value.isReviewed;\r\n                    logState.Description = description;\r\n                    logState.PersonName = userEmail;\r\n                    logState.LinkingDate = todayDate;\r\n                    logState.InvoiceDate = day;\r\n                    logState.InvoiceNo = num;\r\n                    logState.CostIncrease = a;                     \r\n                    logState.CostDecrease = b; \r\n                    logState.CostSame = c;\r\n                    logState.InvoiceUnitCost = tableData[showPosIndex].cp;\r\n                    logState.InvError = invError;                   \r\n                    console.log(logState);\r\n                    \r\n\r\n                    const res = await inventoryService.generateLog(logState);\r\n                    console.log(res);\r\n                    setProductsInTable(); \r\n              });\r\n      \r\n  \r\n    }\r\n\r\n    const addRow = () => {\r\n        let tempTableData = [...tableData];\r\n        tempTableData.push({\r\n          qty: 0,\r\n          itemNo: \"\",\r\n          description: \"\",\r\n          pieces: 0,\r\n          unitPrice: 0.0,\r\n          extendedPrice: \"\",\r\n          markup: 0,\r\n          sp: 0,\r\n          show: true,\r\n          showPOS: \"\"\r\n        });\r\n        emptyColumnList.push(tempTableData.length - 1);\r\n        setEmptyColumn(emptyColumnList);\r\n        setTableData(tempTableData);\r\n        console.log(\"addRow_tableData : \",tableData);\r\n    };\r\n    const deleteRow = (index) => {\r\n        let tempTableData = [...tableData];\r\n        // console.log(emptyColumnList.length, \"before\");\r\n        if (tableData[index][\"show\"]) {\r\n          if (window.confirm(\"Delete the item?\")) {\r\n            tempTableData[index][\"show\"] = false;\r\n            const i = emptyColumnList.indexOf(index);\r\n            if (i > -1) {\r\n              emptyColumnList.splice(i, 1);\r\n            }\r\n          }\r\n        } else {\r\n          tempTableData[index][\"show\"] = true;\r\n          if (\r\n            tempTableData[index][\"qty\"] !== \"\" &&\r\n            tempTableData[index][\"itemNo\"] !== \"\" &&\r\n            tempTableData[index][\"unitPrice\"] !== \"\"\r\n          ) {\r\n            const i = emptyColumnList.indexOf(index);\r\n            if (i > -1) {\r\n              emptyColumnList.splice(i, 1);\r\n            }\r\n          } else {\r\n            emptyColumnList.push(index);\r\n          }\r\n        }\r\n        setTableData(tempTableData);\r\n        console.log(\"deleteRow_tableData : \",tableData);\r\n        setEmptyColumn(emptyColumnList);\r\n    };\r\n\r\n    const renderInvoiceHeader = () => {\r\n      return invoiceHeader.map((key, index) => {\r\n        return (\r\n          <th\r\n            key={index}\r\n            style={{\r\n              position: \"sticky\",\r\n              top: \"70px\",\r\n              background: \"grey\",\r\n            }}\r\n          >\r\n            {key.toUpperCase()}\r\n          </th>\r\n        );\r\n      });\r\n   };\r\nlet ocrData = [];\r\n   const setProductsInTableNew = (index) => {\r\n     \r\n    console.log(index);\r\n    // setOpenInvoice(true);\r\n    dispatch({type: \"OPEN_INVOICE\", data: true})\r\n    console.log(invoiceOptions[index]);\r\n    let invoice = invoiceOptions[index].InvoiceName;\r\n    // setInv(invoice);\r\n    dispatch({type: \"SET_INV\", data: invoice})\r\n    let date =  invoiceOptions[index].SavedDate;\r\n    // setDay(date);\r\n    dispatch({type: \"SET_DAY\", data: date})\r\n    let no = invoiceOptions[index].SavedInvoiceNo;\r\n    // setNum(no);\r\n    dispatch({type: \"SET_NUM\", data: no})\r\n    // setLoader(true);\r\n    dispatch({type: \"LOADER\"});\r\n\r\n    // getProductDetails from their collection\r\n    console.log(\"setProductsInTableNew_invoice : \",invoice);\r\n    async function invoiceData() {\r\n      const products = await tesseractService.GetProductDetails(\r\n        invoice\r\n      );\r\n      //console.log(props.selectedInvoice);\r\n      console.log(\"setProductsInTableNew_products : \",products);\r\n      return products;\r\n    }\r\n\r\n    fetchSavedData(invoice, no, date).then((ocrData) => {\r\n      console.log(\"fetchSavedData_ocrData : \",ocrData);\r\n      invoiceData()\r\n        .then((products) => {\r\n          console.log(\"fetchSavedData_products : \",products);\r\n          /**post processing the table data after returning from filter */\r\n          function convertToUpperCase(obj) {\r\n            let newObj = {};\r\n            for (let key in obj) {\r\n              newObj[key.toUpperCase()] = obj[key];\r\n            }\r\n            return newObj;\r\n          }\r\n          products = convertToUpperCase(products);\r\n          console.log(products);\r\n          // scanInvoiceData.InvoiceData = ocrData;\r\n        //   setOcrProducts(ocrData);\r\n          \r\n        //   console.log(scanInvoiceData);\r\n          // scanInvoiceData.InvoiceData = ocrData;\r\n          //console.log(resScnInvDta);\r\n          console.log(\"OCERDATa\", ocrData);\r\n          //console.log(products);\r\n          //console.log(scanInvoiceData);\r\n          let table = ocrData.map((row) => {\r\n            /**For invoices which dont have item no, set description as item no */\r\n            row.itemNoPresent = row.itemNo === undefined ? false : true; \r\n            if (row.itemNo === undefined) {\r\n              row.itemNo = row.description.trim().toUpperCase();\r\n            }\r\n            row.itemNo = row.itemNo.toString().toUpperCase();\r\n\r\n            row.description = row.description;\r\n              // products[row.itemNo] !== undefined\r\n              //   ? products[row.itemNo].Description\r\n              //   : row.description;\r\n            row.pieces =\r\n              products[row.itemNo] !== undefined\r\n                ? products[row.itemNo].Quantity\r\n                : 0;\r\n            row.sku =\r\n              products[row.itemNo] !== undefined\r\n                ? products[row.itemNo].sku\r\n                : \"\";\r\n            row.barcode =\r\n              products[row.itemNo] !== undefined\r\n                ? products[row.itemNo].Barcode\r\n                : \"\";\r\n            row.posName =\r\n              products[row.itemNo] !== undefined\r\n                ? products[row.itemNo].POS\r\n                : \"\";\r\n            row.markup = 0;\r\n            row.show = true;\r\n            row.posSku =\r\n              products[row.itemNo] !== undefined\r\n                ? products[row.itemNo].PosSKU\r\n                : \"\";\r\n            row.isReviewed = \r\n              products[row.itemNo] !== undefined ? products[row.itemNo].isReviewed : \"\" ;\r\n            row.size = \r\n              products[row.itemNo] !== undefined ? products[row.itemNo].Size : \"\";\r\n            row.department = \r\n              products[row.itemNo] !== undefined ? products[row.itemNo].Department : \"\";\r\n            row.cost = \r\n              products[row.itemNo] !== undefined ? products[row.itemNo].SellerCost : \"\";\r\n            row.sellingPrice = \r\n              products[row.itemNo] !== undefined ? products[row.itemNo].SellingPrice : \"\";\r\n            row.price = \r\n              products[row.itemNo] !== undefined ? products[row.itemNo].Price : \"\";\r\n            row.details = \r\n              products[row.itemNo] !== undefined ? products[row.itemNo].Details : \"\";\r\n            row.linkingCorrect = \r\n              products[row.itemNo] !== undefined ? products[row.itemNo].LinkingCorrect : \"\";\r\n            row.margin = products[row.itemNo] !== undefined ? ((products[row.itemNo].SellingPrice - products[row.itemNo].SellerCost)/ products[row.itemNo].SellerCost)*100 : \"\";\r\n            //console.log(\"department-\" + row.department + \"  cost-\" + row.cost + \"  price\" + row.sellingPrice);\r\n            let sp = 0;\r\n            let cp = 0;\r\n            // const barcode = products.Barcode\r\n            if (parseInt(row.pieces)) {\r\n              sp = (parseFloat(row.unitPrice) / parseInt(row.pieces)).toFixed(\r\n                2\r\n              );\r\n              cp = sp;\r\n            }\r\n            if (products[row.itemNo] !== undefined) {\r\n              if (sp > +products[row.itemNo].SellerCost) {\r\n                row[\"priceIncrease\"] = 1;\r\n              } else if (sp < +products[row.itemNo].SellerCost) {\r\n                row[\"priceIncrease\"] = -1;\r\n              } else if (sp == +products[row.itemNo].SellerCost) {\r\n                row[\"priceIncrease\"] = 0;\r\n              }\r\n            } else {\r\n              row[\"priceIncrease\"] = 0;\r\n            }\r\n\r\n            /**filter out the rows for which qty shipped & extendedPrice is zero */\r\n            if (row.qty == \"0\" && row.extendedPrice === \"0.00\") {\r\n              return null;\r\n            }\r\n            /**Calulate qty for which qty is not read/scanned by textract */\r\n            if (!row.qty) {\r\n              row.qty = (\r\n                parseFloat(row.extendedPrice) / parseFloat(row.unitPrice)\r\n              ).toFixed(0);\r\n            }\r\n          return { ...row, sp, cp };\r\n          });\r\n          // setLoader(false);\r\n          dispatch({type: \"LOADER\"});\r\n\r\n          setTableData(table.filter((data) => data !== null));\r\n          console.log(\"fetchSavedData_tableData : \",tableData);\r\n          setItemNoDropdown(Object.keys(products));\r\n          setProductDetails(products);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"error on mapping ocrdata\", err)\r\n          // setLoader(false);\r\n          dispatch({type: \"LOADER\"});\r\n        });\r\n    });\r\n  }\r\n\r\n   const renderInvoiceTable = () => {  \r\n     console.log(\"renderInvoiceTable_invoiceOptions : \",invoiceOptions);\r\n    const invoiceList = invoiceOptions.map((element, index) => {\r\n      return (\r\n        <tr key={index}>\r\n          <td>{index+1}</td>\r\n          <td>{element.InvoiceName}</td>\r\n          <td>{element.SavedInvoiceNo}</td>\r\n          <td>{element.SavedDate}</td>\r\n          <td>\r\n            <button \r\n              style={{\r\n                backgroundColor: \"#4CAF50\",\r\n                border: \"none\",\r\n                color: \"white\",\r\n                padding: \"15px 32px\",\r\n                textAlign: \"center\",\r\n                textDecoration: \"none\",\r\n                display: \"inline-block\",\r\n                fontSize: \"12px\",\r\n                margin: \"4px 2px\",\r\n                cursor: \"pointer\"\r\n              }}\r\n              onClick={() => {\r\n                setProductsInTableNew(index)\r\n              }}\r\n            >Show Invoice\r\n            </button>\r\n          </td>\r\n        </tr>\r\n        );\r\n      })\r\n    return (\r\n      <div style={{ marginTop: \"35px\" }}>\r\n        <table className=\"table table-hover table-responsive-sm\">\r\n          <tbody>\r\n            <tr>{renderInvoiceHeader()}</tr>\r\n            {invoiceList}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );     \r\n  }\r\n\r\n    const renderTableHeader = () => {\r\n        return header.map((key, index) => {\r\n          return (\r\n            <th\r\n              key={index}\r\n              style={{\r\n                position: \"sticky\",\r\n                top: \"70px\",\r\n                background: \"grey\",\r\n              }}\r\n            >\r\n              {key.toUpperCase()}\r\n            </th>\r\n          );\r\n        });\r\n    };\r\n\r\n    const renderTableData = () => {\r\n        // hicksvilleDropdown(HicksData);\r\n        console.log(\"renderTableData_tableData : \",tableData);\r\n        if (tableData) {\r\n          console.log(tableData);\r\n          console.log(\"renderTableData_showPosState : \",showPosState);\r\n          // console.log(showPosIndex);\r\n          // console.log(tableData[0]);\r\n          \r\n          let rows = tableData.map((element, index) => {\r\n            //fuzzwuzzSuggestion = getFuzzwuzzSuggestion(element.description);\r\n            let isEmpty =\r\n              element.qty === \"\" ||\r\n              element.itemNo === \"\" ||\r\n              !element.pieces ||\r\n              isNaN(element.unitPrice) ||\r\n              element.unitPrice === \"\" ||\r\n              isNaN(element.extendedPrice);\r\n            if (isEmpty && element.show) {\r\n              let emptyColumn = [...emptyColumnList, index];\r\n              emptyColumnList = [...new Set(emptyColumn)];\r\n            }\r\n            let isFree = element.qty != 0 && element.extendedPrice === \"0.00\";\r\n            // console.log(element.isUpdated);\r\n            console.log(\"renderTableData_element : \",element);\r\n            let margin = ((element.sellingPrice - element.cost)/ element.cost)*100;\r\n            \r\n    \r\n            return (\r\n              <tr\r\n                key={index}\r\n                className={isEmpty ? styles.red : isFree ? styles.free : null}\r\n                // style={element.show ? { opacity: \"1\" } : { opacity: \"0.4\" }}\r\n                style={element.linkingCorrect == \"false\" ? {backgroundColor: \"pink\"} : element.isUpdated === \"true\"  ? {backgroundColor: \"lightGreen\"}\r\n                  : element.show ? { opacity: \"1\" } : { opacity: \"0.4\" }}\r\n              >\r\n                <td> {index + 1} </td>\r\n               \r\n                {/* <td>\r\n                  <TextField\r\n                    type=\"tel\"\r\n                    value={element.details}\r\n                    id=\"outlined-secondary\"\r\n                    variant=\"outlined\"\r\n                    onChange={(e) => {\r\n                      handleChange(index, \"details\", e.target.value);\r\n                    }}\r\n                    style={{ width: 100 }}\r\n                  />\r\n                </td> */}\r\n                <td className={styles.element}>\r\n                  <TextField\r\n                    type=\"tel\"\r\n                    value={showPosIndex === index ? showPosState.barcode : element.barcode}\r\n                    id=\"outlined-secondary\"\r\n                    variant=\"outlined\"\r\n                    onChange={(e) => {\r\n                      handleChange(index, \"barcode\", e.target.value);\r\n                    }}\r\n                    style={{ width: 150 }}\r\n                  />\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    aria-label=\"add to review\"\r\n                    // onClick={() => addForReview(element, index)}\r\n                  >\r\n                    <InfoOutlinedIcon\r\n                      style={element.isReviewed  === \"true\" ? {fill: \"red\"} : null}\r\n                    /> \r\n                    {/* <AddShoppingCartIcon\r\n                      style={\r\n                        reviewItems.includes(index)\r\n                          ? { backgroundColor: \"green\" }\r\n                          : null\r\n                      }\r\n                    /> */}\r\n                  </IconButton>\r\n                  <div className={element.isReviewed  === \"true\" ? styles.tooltipIsReviewed: styles.tooltip} >\r\n                    <p>POS Product- {showPosIndex === index ? showPosState.pos : element.posName }</p>\r\n                    {/* <p>UPC- {showPosIndex === index ? showPosState.barcode : element.barcode}</p> */}\r\n                    <p>Size- {showPosIndex === index ? showPosState.size : element.size}</p>\r\n                    <p>Department - {showPosIndex === index ? showPosState.department : element.department}</p>\r\n                    <p>Margin(%) - {margin.toFixed(2)}</p>\r\n                    <p>Unit Cost- {showPosIndex === index ? showPosState.unitCost : element.cost}</p> \r\n                    <p>Unit Price- {showPosIndex === index ? showPosState.unitPrice : element.sellingPrice}</p>\r\n                    {/* <p>Price- {showPosIndex === index ? showPosState.price : element.price}</p> */}\r\n                    <div >\r\n                    <button onClick={() => {\r\n                            if(notFounds === \"true\"){\r\n                              toggleModal(\"notfounds\");\r\n                            }else{\r\n                              updateItem(invoice.slug, (parseFloat(element.unitPrice) / parseInt(element.pieces)).toFixed(2))\r\n                            }\r\n                          } } \r\n                      disabled={showPosIndex === index ? false : true}\r\n                      style={{backgroundColor: \"green\",\r\n                      border: \"none\",\r\n                      color: \"white\",\r\n                      padding: \"4px 8px\",\r\n                      textAlign: \"center\",\r\n                      textDecoration: \"none\",\r\n                      display: \"inline-block\",\r\n                      fontSize: \"14px\",\r\n                      align: \"left\"}} >\r\n                      Update Item\r\n                    </button>\r\n                    </div> \r\n                    <br />\r\n                    <div>\r\n                    <button onClick={()=> linkManually(index)} \r\n                      // disabled={showPosIndex === index ? false : true}\r\n                      style={{backgroundColor: \"blue\",\r\n                      border: \"none\",\r\n                      color: \"white\",\r\n                      padding: \"4px 8px\",\r\n                      textAlign: \"center\",\r\n                      textDecoration: \"none\",\r\n                      display: \"inline-block\",\r\n                      fontSize: \"14px\",\r\n                      align: \"left\"}} >\r\n                      Link Manually\r\n                    </button>\r\n                    </div>\r\n                    <br />\r\n                    <div>\r\n                    <button onClick={()=> reverseUpdate(index)} \r\n                      // disabled={showPosIndex === index ? false : true}\r\n                      style={{backgroundColor: \"red\",\r\n                      border: \"none\",\r\n                      color: \"white\",\r\n                      padding: \"4px 8px\",\r\n                      textAlign: \"center\",\r\n                      textDecoration: \"none\",\r\n                      display: \"inline-block\",\r\n                      fontSize: \"14px\",\r\n                      align: \"left\"}} >\r\n                      Reverse Update\r\n                    </button>\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n                <td>{showPosIndex === index ? showPosState.posSku : element.posSku}</td>\r\n                <td>\r\n                  <TextField\r\n                    type=\"tel\"\r\n                    value={element.qty}\r\n                    id=\"outlined-secondary\"\r\n                    variant=\"outlined\"\r\n                    onChange={(e) => {\r\n                      handleChange(index, \"qty\", e.target.value);\r\n                    }}\r\n                    style={{ width: 100 }}\r\n                  />\r\n                </td>\r\n                <td>{element.cp}</td>\r\n                <td>\r\n                  <Autocomplete\r\n                    value={element.itemNo}\r\n                    onChange={(event, newValue) => {\r\n                      if (newValue) {\r\n                        handleChange(index, \"itemNo\", newValue);\r\n                      }\r\n                    }}\r\n                    id=\"combo-box\"\r\n                    options={itemNoDropdown}\r\n                    getOptionLabel={(option) => option}\r\n                    style={{ width: 200 }}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} variant=\"outlined\" />\r\n                    )}\r\n                  />\r\n                </td>\r\n                <td>\r\n                {/* {dropdownIndex == index ? fetchingOptions ? <Loading type=\"ThreeDots\" height={40} width={40} /> : null : null} */}\r\n                  <Autocomplete\r\n                    value={showPosIndex  === index ? showPosState.item : element.itemNo }\r\n                    loading={true}\r\n                    onInputChange={(event, value) => {\r\n                      console.log(\"ON INPUT CHANGE\");\r\n                      // event.toLowerCase();\r\n                      // value.toLowerCase();\r\n                      // console.log(event.target.value);\r\n                      // console.log(value);\r\n                      // searchDropdown(event, value);\r\n                      // setOptions([]);\r\n                      if(event != null){\r\n                        setTimeout(()=> {\r\n                          hicksvilleDropdownNew(event, value, index);\r\n\r\n                        }, 1500);\r\n                      }\r\n                      // hicksvilleDropdownNew(event, value, index);\r\n                    }}\r\n                    onChange={(event, newValue) => {\r\n                      // console.log(event.target.value);\r\n                      // console.log(newValue);\r\n                      if (newValue) {\r\n                        let newState = { ...showPosState };\r\n                        console.log(newValue);\r\n                        // newState.item = newValue.name;\r\n                        newState.item = element.itemNo\r\n                        newState.description = newValue.name;\r\n                        newState.barcode = newValue.upc;\r\n                        newState.pos = newValue.name;\r\n                        newState.posSku = newValue.sku;\r\n                        newState.size = newValue.size;\r\n                        newState.department = newValue.department;\r\n                        newState.unitCost = newValue.cost;\r\n                        newState.unitPrice = newValue.price;\r\n                        // setShowPosState(newState);\r\n                        dispatch({type: \"SET_POS_STATE\", data: newState})\r\n                        setShowPosIndex(index);\r\n                        setUnitCost(newValue.cost);\r\n                        // setStateUpdated(\"\");\r\n                        if(isEmpty){\r\n                          // setNotFounds(\"true\");\r\n                          dispatch({type: \"NOT_FOUNDS\", data: \"true\"})\r\n\r\n                          setRedState(\"false\");\r\n                        }\r\n                        //setDisabled(false);\r\n                        //updateOnHoverDetails(index);\r\n                        //setShowPosIndex(index);\r\n                        // console.log(newValue);\r\n                        console.log(newState);\r\n                        //console.log(showPosState);\r\n                        \r\n                      }\r\n                    }}\r\n                    id=\"combo-box\"\r\n                    // options={element.fuzzSuggestion}\r\n                    options={options}\r\n                    // getOptionLabel={option => option.label}\r\n                    getOptionLabel={(option) => option.label ?? element.itemNo}\r\n                    // getOptionLabel={(option) => dropdownLoader ? <Spinner /> : option.label}\r\n                    style={{ width: 400 }}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} variant=\"outlined\" />\r\n                    )}\r\n                  />\r\n                </td>\r\n                \r\n                <td>{element.description}</td>\r\n                {/* <td>{element.pieces}</td> */}\r\n                <td>\r\n                  <TextField\r\n                    type=\"tel\"\r\n                    value={element.pieces}\r\n                    variant=\"outlined\"\r\n                    onChange={(e) => {\r\n                      handleChange(index, \"pieces\", e.target.value);\r\n                    }}\r\n                    style={{ width: 100 }}\r\n                  />\r\n                  <button onClick={() => {updateUnits(index)}} style={{\r\n                    backgroundColor: \"#008CBA\",\r\n                    border: \"none\",\r\n                    color: \"white\",\r\n                    padding: \"5px 16px\",\r\n                    textAlign: \"center\",\r\n                    textDecoration: \"none\",\r\n                    display: \"inline-block\",\r\n                    fontSize: \"10px\",\r\n                    margin: \"4px 2px\",\r\n                    cursor: \"pointer\",\r\n                  }}>Update Units</button> \r\n                </td>\r\n                <td>\r\n                  <TextField\r\n                    type=\"tel\"\r\n                    value={element.unitPrice}\r\n                    variant=\"outlined\"\r\n                    onChange={(e) => {\r\n                      handleChange(index, \"unitPrice\", e.target.value);\r\n                    }}\r\n                    style={\r\n                      element.priceIncrease === 1\r\n                        ? { backgroundColor: \"#1a8cff\", width: 100 }\r\n                        : element.priceIncrease === -1\r\n                        ? { backgroundColor: \"#ffb31a\", width: 100 }\r\n                        : { width: 100 }\r\n                      // showPosIndex === index ? costInc===\"true\" ? { backgroundColor: \"#1a8cff\", width: 100 } : costDec===\"true\" ? { backgroundColor: \"#ffb31a\", width: 100 } : {width: 100}\r\n                      //   : element.priceIncrease === 1 \r\n                      //       ? { backgroundColor: \"#1a8cff\", width: 100 }\r\n                      //       : element.priceIncrease === -1 \r\n                      //       ? { backgroundColor: \"#ffb31a\", width: 100 }\r\n                      //       : { width: 100 }\r\n                    }\r\n                  />\r\n                </td>\r\n                <td>{element.extendedPrice}</td>\r\n                \r\n                <td>\r\n                  <TextField\r\n                    type=\"tel\"\r\n                    value={element.sp}\r\n                    variant=\"outlined\"\r\n                    onChange={(e) => {\r\n                      handleChange(index, \"sp\", e.target.value);\r\n                    }}\r\n                    style={{ width: 100 }}\r\n                  />\r\n                </td>\r\n                <td>{element.markup}</td>\r\n                {/* <td>\r\n                  <Checkbox\r\n                    checked={!element.show}\r\n                    onChange={(e) => handleChange(index, \"show\", e.target.value)}\r\n                    inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                  />\r\n                </td> */}\r\n\r\n                  <td className={styles.element}>\r\n                  <IconButton onClick={() => {\r\n                    toggleModal(\"details\");\r\n                    setDetailsIndex(index);\r\n                    }}>\r\n                      <AddCircleIcon />\r\n                    </IconButton>\r\n                    <div className={styles.tooltip}>\r\n                      <p>Details- {element.details}</p>\r\n                    </div>\r\n                    \r\n                </td>\r\n\r\n\r\n                <td>\r\n              <Button\r\n                text={element.show ? \"Delete\" : \"Undo\"}\r\n                color=\"btn btn-info\"\r\n                type=\"submit\"\r\n                onClick={() => deleteRow(index)}\r\n              />\r\n            </td>\r\n                <td>\r\n                <Button \r\n                    text=\"Update POS\"\r\n                    color=\"btn btn-info\"\r\n                    type=\"submit\"\r\n                    onClick={() => pushSingleItemToInventory(index)}\r\n                    style={{ width: 120 }}\r\n                  />\r\n                      \r\n                </td>\r\n                <td>\r\n                <Button \r\n                    text=\"Reverse POS\"\r\n                    type=\"submit\"\r\n                    onClick={() => reversePOSUpdate(index)}\r\n                    style={{ width: 120, backgroundColor: \"red\", color: \"white\" }}\r\n                  />\r\n                      \r\n                </td>\r\n                <td className={styles.element}>\r\n                  <IconButton onClick={() => linkingCorrect(index)}>\r\n                    <Cancel/>\r\n                  </IconButton>\r\n                </td>\r\n                <td>{index + 1}</td>\r\n                {/* <td>\r\n                  <Button\r\n                    text={element.show ? \"Delete\" : \"Undo\"}\r\n                    color=\"btn btn-info\"\r\n                    type=\"submit\"\r\n                    onClick={() => deleteRow(index)}\r\n                  />\r\n                </td> */}\r\n              </tr>\r\n            );\r\n          });\r\n          return (\r\n            <div style={{ marginTop: \"35px\" }}>\r\n              <table className=\"table table-hover table-responsive-sm\">\r\n                <tbody>\r\n                  <tr>{renderTableHeader()}</tr>\r\n                  {rows}\r\n                  <tr>\r\n                    <td>\r\n                      <Button\r\n                        text=\"Add cell\"\r\n                        color=\"btn btn-info\"\r\n                        onClick={addRow}\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div className={styles.divRow}>\r\n                <Button\r\n                  text=\"Update Inventory\"\r\n                  color=\"btn btn-info\"\r\n                  type=\"submit\"\r\n                  onClick={pushInventoryDetails}\r\n                />\r\n                {/* <Button\r\n                  text=\"Save Invoice Data\"\r\n                  color=\"btn btn-info\"\r\n                  type=\"submit\"\r\n                  onClick={toggleModal}\r\n                /> */}\r\n                <Button\r\n                  text=\"Re upload\"\r\n                  color=\"btn btn-info\"\r\n                  type=\"submit\"\r\n                  onClick={() => window.location.reload()}\r\n                />\r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n    };\r\n\r\n    const pushInventoryDetails = async () => {\r\n        const notFoundItems = emptyColumn.map((i) => tableData[i]);\r\n        const tempTable = [];\r\n        tableData.forEach((element, index) => {\r\n          if (\r\n            !emptyColumn.includes(index) &&\r\n            element.show === true &&\r\n            element[\"isForReview\"] != true\r\n          ) {\r\n            let rowData = { index: index + 1, ...element };\r\n            tempTable.push(rowData);\r\n          }\r\n        });\r\n        // console.log(\"notFoundItems\", notFoundItems);\r\n        // console.log(\"final table data\", tempTable);\r\n    \r\n        if (emptyColumn.length !== 0) {\r\n          /**api to push  to not found list*/\r\n          // setLoader(true);\r\n          dispatch({type: \"LOADER\"});\r\n          const responses = await Promise.all(\r\n            notFoundItems.map(async (product) => {\r\n              try {\r\n                const data = {\r\n                  Item: product.itemNo,\r\n                  Description: product.description,\r\n                  Quantity: product.qty,\r\n                  Price: product.unitPrice,\r\n                  sku: product.sku,\r\n                  Barcode: product.barcode,\r\n                  PosSKU: product.posSku,\r\n                  InvoiceName: invoice.slug,\r\n                };\r\n                await inventoryService.CreateNotFoundItems(data);\r\n                return true;\r\n              } catch (error) {\r\n                console.log(\r\n                  \"Couldn't create not found product\",\r\n                  product.description,\r\n                  { error }\r\n                );\r\n                alert(\"Couldn't create product on website.\");\r\n                return null;\r\n              }\r\n            })\r\n          );\r\n          // setLoader(false);\r\n          dispatch({type: \"LOADER\"});\r\n        }\r\n        const priceIncreasedProducts = tempTable.filter(\r\n          (product) => product.priceIncrease !== 0\r\n        );\r\n        // setLoader(true);\r\n        dispatch({type: \"LOADER\"});\r\n        const res = await Promise.all(\r\n          priceIncreasedProducts.map(async (product) => {\r\n            try {\r\n              const data = {\r\n                invoiceName: invoice,\r\n                itemName: product.itemNo,\r\n                value: { Price: product.unitPrice },\r\n              };\r\n              await inventoryService.UpdateProductFields(data);\r\n            } catch (error) {\r\n              console.log(`couldn't update price for product ${product.itemNo}`);\r\n            }\r\n          })\r\n        );\r\n        console.log(priceIncreasedProducts.length);\r\n        // setLoader(false);\r\n        dispatch({type: \"LOADER\"});\r\n        console.log(tempTable);\r\n        console.log(mergeDuplicates(tempTable));\r\n        setInventoryData(mergeDuplicates(tempTable));\r\n        setPushToInventory(true);\r\n    };\r\n\r\n    const handleChange = async (row, key, value) => {\r\n        let tempTableData = [...tableData];\r\n        tempTableData[row][key] = value;\r\n        const { itemNo } = tempTableData[row];\r\n        if (\r\n          tempTableData[row][\"qty\"] !== \"\" &&\r\n          tempTableData[row][\"itemNo\"] !== \"\" &&\r\n          tempTableData[row][\"unitPrice\"] !== \"\"\r\n        ) {\r\n          const index = emptyColumnList.indexOf(row);\r\n          if (index > -1) {\r\n            emptyColumnList.splice(index, 1);\r\n          }\r\n        } else {\r\n          emptyColumnList.push(row);\r\n        }\r\n        setEmptyColumn(emptyColumnList);\r\n        if (key === \"itemNo\") {\r\n          tempTableData[row][\"description\"] = productDetails[value].Description;\r\n          tempTableData[row][\"pieces\"] = productDetails[value].Quantity;\r\n          tempTableData[row][\"sku\"] = productDetails[value].sku;\r\n          /**auto populate barcode & other pos fields*/\r\n          tempTableData[row][\"barcode\"] = productDetails[value].Barcode;\r\n          tempTableData[row][\"posName\"] = productDetails[value].POS;\r\n          tempTableData[row][\"posSku\"] = productDetails[value].PosSKU;\r\n        }\r\n    \r\n        if (key === \"unitPrice\" || key === \"sp\" || key === \"itemNo\") {\r\n          let cp = parseFloat(tempTableData[row][\"cp\"]);\r\n          let sp = parseFloat(tempTableData[row][\"sp\"]);\r\n          let markup = ((sp - cp) / cp) * 100;\r\n          let cost =\r\n            parseFloat(tempTableData[row][\"unitPrice\"]) /\r\n            tempTableData[row][\"pieces\"];\r\n          // let sp = cp + (cp * markup) / 100;\r\n          // if (tempTableData[row][\"pieces\"]) {\r\n          //   sp = sp / tempTableData[row][\"pieces\"];\r\n          // }\r\n          tempTableData[row][\"markup\"] = isNaN(markup) ? 0 : markup.toFixed(2);\r\n          tempTableData[row][\"cp\"] = isNaN(cost) ? 0 : cost.toFixed(2);\r\n        }\r\n    \r\n        if (key === \"qty\" || key === \"unitPrice\") {\r\n          const extendedPrice =\r\n            parseFloat(tempTableData[row][\"qty\"]) *\r\n            parseFloat(tempTableData[row][\"unitPrice\"]);\r\n          const cp = tempTableData[row][\"unitPrice\"] / tempTableData[row][\"pieces\"];\r\n          if (!isNaN(extendedPrice)) {\r\n            tempTableData[row][\"extendedPrice\"] = extendedPrice.toFixed(2);\r\n          }\r\n          if (!isNaN(cp)) {\r\n            tempTableData[row][\"cp\"] = cp.toFixed(2);\r\n          }\r\n        }\r\n        if (itemNo) {\r\n          if (+tempTableData[row][\"unitPrice\"] > +productDetails[itemNo].Price) {\r\n            tempTableData[row][\"priceIncrease\"] = 1;\r\n          } else if (\r\n            +tempTableData[row][\"unitPrice\"] < +productDetails[itemNo].Price\r\n          ) {\r\n            tempTableData[row][\"priceIncrease\"] = -1;\r\n          } else if (\r\n            +tempTableData[row][\"unitPrice\"] == +productDetails[itemNo].Price\r\n          ) {\r\n            tempTableData[row][\"priceIncrease\"] = 0;\r\n          }\r\n        }\r\n    \r\n        if (key === \"barcode\") {\r\n          tempTableData[row][\"barcode\"] = value;\r\n        }\r\n        setTableData(tempTableData);\r\n        console.log(\"handleChange_tableData : \",tableData);\r\n    };\r\n\r\n    const mergeDuplicates = (a) => {\r\n        let arr = [...a];\r\n        let map = new Map();\r\n        for (let i = 0; i < arr.length; i++) {\r\n          if (!map.has(arr[i].itemNo)) map.set(arr[i].itemNo, arr[i]);\r\n          else {\r\n            let obj = { ...map.get(arr[i].itemNo) };\r\n            obj[\"qty\"] = (\r\n              parseFloat(obj[\"qty\"]) + parseFloat(arr[i].qty)\r\n            ).toString();\r\n            map.set(arr[i].itemNo, obj);\r\n          }\r\n        }\r\n        let newArr = [];\r\n        for (let x of map.values()) newArr.push(x);\r\n        return newArr;\r\n    };\r\n\r\n    useEffect(() => {\r\n      // hicksvilleDropdown();\r\n      // hicksvilleDropdown();\r\n      const curDate = new Date();\r\n      console.log(curDate);\r\n      let date = curDate.getFullYear()+ \"-\" + (curDate.getMonth()+1) +\"-\"+ curDate.getDate();\r\n      console.log(date);\r\n      // setTodayDate(date);\r\n      dispatch({type: \"TODAY_DATE\", data: date});\r\n      // hicksvilleDropdown(HicksData);\r\n      firebase.auth().onAuthStateChanged(function(user) {\r\n        if (user) {\r\n          // setUserEmail(user.email);\r\n          dispatch({type: \"EMAIL\", data: user.email})\r\n            console.log('This is the user: ', user)\r\n            console.log('This is the user: ', user.email);\r\n        } else {\r\n            // No user is signed in.\r\n            console.log('There is no logged in user');\r\n        }\r\n    });\r\n    \r\n\r\n\r\n        /**Fetch the data from the aws textract for the image */\r\n        // async function fetchOCRData() {\r\n        //   // return chetak();\r\n    \r\n        //   setLoader(true);\r\n        //   const ocrData = [];\r\n\r\n\r\n\r\n        //   let newData = [];\r\n        //   ocrData.forEach((data) => (newData = [...newData, ...data]));\r\n        //   return newData;\r\n        // }\r\n    \r\n        // async function invoiceData() {\r\n        //   const products = await tesseractService.GetProductDetails(\r\n        //     invoice\r\n        //   );\r\n        //   //console.log(props.selectedInvoice);\r\n        //   return products;\r\n        // }\r\n\r\n        // fetchOCRData().then((ocrData) => {\r\n        //   invoiceData()\r\n        //     .then((products) => {\r\n        //       /**post processing the table data after returning from filter */\r\n        //       function convertToUpperCase(obj) {\r\n        //         let newObj = {};\r\n        //         for (let key in obj) {\r\n        //           newObj[key.toUpperCase()] = obj[key];\r\n        //         }\r\n        //         return newObj;\r\n        //       }\r\n        //       products = convertToUpperCase(products);\r\n        //       console.log(products);\r\n        //       // scanInvoiceData.InvoiceData = ocrData;\r\n        //     //   setOcrProducts(ocrData);\r\n              \r\n        //     //   console.log(scanInvoiceData);\r\n        //       // scanInvoiceData.InvoiceData = ocrData;\r\n        //       //console.log(resScnInvDta);\r\n        //       //console.log(\"OCERDATa\", ocrData);\r\n        //       //console.log(products);\r\n        //       //console.log(scanInvoiceData);\r\n        //       let table = ocrData.map((row) => {\r\n        //         /**For invoices which dont have item no, set description as item no */\r\n        //         if (row.itemNo === undefined) {\r\n        //           row.itemNo = row.description.trim().toUpperCase();\r\n        //         }\r\n        //         row.itemNo = row.itemNo.toString().toUpperCase();\r\n    \r\n        //         row.description =\r\n        //           products[row.itemNo] !== undefined\r\n        //             ? products[row.itemNo].Description\r\n        //             : row.description;\r\n        //         row.pieces =\r\n        //           products[row.itemNo] !== undefined\r\n        //             ? products[row.itemNo].Quantity\r\n        //             : 0;\r\n        //         row.sku =\r\n        //           products[row.itemNo] !== undefined\r\n        //             ? products[row.itemNo].sku\r\n        //             : \"\";\r\n        //         row.barcode =\r\n        //           products[row.itemNo] !== undefined\r\n        //             ? products[row.itemNo].Barcode\r\n        //             : \"\";\r\n        //         row.posName =\r\n        //           products[row.itemNo] !== undefined\r\n        //             ? products[row.itemNo].POS\r\n        //             : \"\";\r\n        //         row.markup = 0;\r\n        //         row.show = true;\r\n        //         row.posSku =\r\n        //           products[row.itemNo] !== undefined\r\n        //             ? products[row.itemNo].PosSKU\r\n        //             : \"\";\r\n        //         row.isReviewed = \r\n        //           products[row.itemNo] !== undefined ? products[row.itemNo].isReviewed : \"\" ;\r\n        //         row.size = \r\n        //           products[row.itemNo] !== undefined ? products[row.itemNo].Size : \"\";\r\n        //         row.department = \r\n        //           products[row.itemNo] !== undefined ? products[row.itemNo].Department : \"\";\r\n        //         row.cost = \r\n        //           products[row.itemNo] !== undefined ? products[row.itemNo].SellerCost : \"\";\r\n        //         row.sellingPrice = \r\n        //           products[row.itemNo] !== undefined ? products[row.itemNo].SellingPrice : \"\";\r\n        //         //console.log(\"department-\" + row.department + \"  cost-\" + row.cost + \"  price\" + row.sellingPrice);\r\n        //         let sp = 0;\r\n        //         let cp = 0;\r\n        //         // const barcode = products.Barcode\r\n        //         if (parseInt(row.pieces)) {\r\n        //           sp = (parseFloat(row.unitPrice) / parseInt(row.pieces)).toFixed(\r\n        //             2\r\n        //           );\r\n        //           cp = sp;\r\n        //         }\r\n        //         if (products[row.itemNo] !== undefined) {\r\n        //           if (+row.unitPrice > +products[row.itemNo].Price) {\r\n        //             row[\"priceIncrease\"] = 1;\r\n        //           } else if (+row.unitPrice < +products[row.itemNo].Price) {\r\n        //             row[\"priceIncrease\"] = -1;\r\n        //           } else if (+row.unitPrice == +products[row.itemNo].Price) {\r\n        //             row[\"priceIncrease\"] = 0;\r\n        //           }\r\n        //         } else {\r\n        //           row[\"priceIncrease\"] = 0;\r\n        //         }\r\n    \r\n        //         /**filter out the rows for which qty shipped & extendedPrice is zero */\r\n        //         if (row.qty == \"0\" && row.extendedPrice === \"0.00\") {\r\n        //           return null;\r\n        //         }\r\n        //         /**Calulate qty for which qty is not read/scanned by textract */\r\n        //         if (!row.qty) {\r\n        //           row.qty = (\r\n        //             parseFloat(row.extendedPrice) / parseFloat(row.unitPrice)\r\n        //           ).toFixed(0);\r\n        //         }\r\n        //       return { ...row, sp, cp };\r\n        //       });\r\n        //       setLoader(false);\r\n        //       setTableData(table.filter((data) => data !== null));\r\n        //       setItemNoDropdown(Object.keys(products));\r\n        //       setProductDetails(products);\r\n        //     })\r\n        //     .catch((err) => {\r\n        //       console.log(\"error on mapping ocrdata\", err)\r\n        //       setLoader(false);\r\n        //     });\r\n        // });\r\n    }, []);\r\n\r\n    console.log(apiLoader);\r\n    console.log(showPosState);\r\n    console.log(inv, num, day);\r\n    console.log(notFounds, unitsInCase, price);\r\n    if (loader) {\r\n      return <Spinner />;\r\n    }\r\n    if(apiLoader){\r\n      return (\r\n      <div style={{marginTop: \"100px\", marginLeft: \"700px\"}}>\r\n        <CircularProgress />\r\n      </div>\r\n      );       \r\n    }\r\n    return(\r\n\r\n        <div className=\"container-fluid\">\r\n          <br />\r\n            <Paper className={classes.root}>\r\n                <Grid style={{ display: \"flex\" }}>\r\n                \r\n                  <Autocomplete\r\n                      value={invoice}\r\n                      onChange={(event, newValue) => {\r\n                          // console.log(\"new value\", newValue)\r\n                          if (newValue) {\r\n                            console.log(\"onClick : \",newValue);\r\n                          setInvoice(newValue);\r\n                          }\r\n                          // getInvoices(newValue);\r\n                      }}\r\n                      id=\"combo-box\"\r\n                      options={dropdownOptions}\r\n                      getOptionLabel={(option) => option.value}\r\n                      style={{ width: 250 }}\r\n                      autoHighlight\r\n                      renderInput={(params) => (\r\n                          <TextField {...params} label={dropdownLabel} variant=\"outlined\" />\r\n                      )}\r\n                  />\r\n                    {/* <Autocomplete\r\n                        value={invoiceNo}\r\n                        onChange={(event, newValue) => {\r\n                            // console.log(\"new value\", newValue)\r\n                            if (newValue) {\r\n                            setInvoiceNo(newValue);\r\n                            }\r\n                        }}\r\n                        id=\"combo-box\"\r\n                        options={invoiceOptions}\r\n                        getOptionLabel={(option) => option.value}\r\n                        style={{ width: 200 }}\r\n                        autoHighlight\r\n                        renderInput={(params) => (\r\n                            <TextField {...params} label=\"Invoice No.\" variant=\"outlined\" />\r\n                        )}\r\n                    /> */}\r\n                    \r\n                    {/* <TextField\r\n                        label=\"Invoice No.\"\r\n                        variant=\"outlined\"\r\n                        value={invoiceNo}\r\n                        style={{ marginLeft: 20 }}\r\n                        onChange={(e) => setInvoiceNo(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        id=\"date\"\r\n                        label=\"Date\"\r\n                        type=\"date\"\r\n                        value={date}\r\n                        style={{ marginLeft: 20 }}          \r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        onChange={(event) => setDate(event.target.value)}          \r\n                    /> */}\r\n                  <button  style={{backgroundColor: \"green\",\r\n                      height: \"50px\",\r\n                      border: \"none\",\r\n                      color: \"white\",\r\n                      padding: \"4px 8px\",\r\n                      textAlign: \"center\",\r\n                      textDecoration: \"none\",\r\n                      display: \"inline-block\",\r\n                      fontSize: \"14px\",\r\n                      align: \"left\",\r\n                      marginLeft: 20}}\r\n                      // onClick={setProductsInTable}\r\n                      onClick={getInvoices}\r\n                      >\r\n                          Fetch Invoice Data\r\n                  </button>\r\n\r\n                  <div style={{marginLeft: \"20px\"}}>\r\n                  <table>\r\n                  <tbody>\r\n                      <tr style={{height: \"21px\"}}> \r\n                      <td style={{display: \"flex\",\r\n                          width: \"20px\",\r\n                          height: \"20px\",\r\n                          backgroundColor: \"rgb(238,129,237)\",\r\n                          borderRadius: \"50%\",\r\n                          }}></td>\r\n                          {/* <td style={{width: \"0.25px\", height: \"0.25px\", margin: \"0px 0px 0px 0px\"}}></td> */}\r\n                      <td style={{height: \"21px\"}}><p >Product has been linked(on hovering).</p></td>\r\n                      </tr>\r\n                      <tr style={{height: \"21px\"}}> \r\n                      <td style={{display: \"flex\",\r\n                          width: \"20px\",\r\n                          height: \"20px\",\r\n                          backgroundColor: \"rgb(144,238,143)\",\r\n                          borderRadius: \"50%\",\r\n                          }}></td>\r\n                          {/* <td style={{width: \"0.25px\", height: \"0.25px\", margin: \"0px 0px 0px 0px\"}}></td> */}\r\n                      <td style={{height: \"21px\"}}><p >Product has been updated on POS.</p></td>\r\n                      </tr>\r\n                      <tr style={{height: \"21px\"}}> \r\n                      <td style={{display: \"flex\",\r\n                          width: \"20px\",\r\n                          height: \"20px\",\r\n                          backgroundColor: \"rgb(231, 230, 162)\",\r\n                          borderRadius: \"50%\",\r\n                          // border: \"1px solid\"\r\n                          }}></td>\r\n                          {/* <td style={{width: \"0.25px\", height: \"0.25px\", margin: \"0px 0px 0px 0px\"}}></td> */}\r\n                      <td style={{height: \"21px\"}}><p >Product has not been linked(on hovering).</p></td>\r\n                      </tr>\r\n                      </tbody>\r\n              </table>\r\n              </div>\r\n              <div style={{marginLeft: \"20px\"}}>\r\n              <table>\r\n              <tbody>\r\n                  <tr style={{height: \"21px\"}}> \r\n                  <td style={{display: \"flex\",\r\n                      width: \"20px\",\r\n                      height: \"20px\",\r\n                      backgroundColor: \"rgb(210,180,140)\",\r\n                      borderRadius: \"50%\",\r\n                      }}></td>\r\n                      {/* <td style={{width: \"0.25px\", height: \"0.25px\", margin: \"0px 0px 0px 0px\"}}></td> */}\r\n                  <td style={{height: \"21px\"}}><p >Product is free.</p></td>\r\n                  </tr>\r\n                  <tr style={{height: \"21px\"}}> \r\n                  <td style={{display: \"flex\",\r\n                      width: \"20px\",\r\n                      height: \"20px\",\r\n                      backgroundColor: \"rgb(24,140,255)\",\r\n                      borderRadius: \"50%\",\r\n                      }}></td>\r\n                      {/* <td style={{width: \"0.25px\", height: \"0.25px\", margin: \"0px 0px 0px 0px\"}}></td> */}\r\n                  <td style={{height: \"21px\"}}><p >Invoice Unit Cost is greater </p></td>\r\n                  </tr>\r\n                  <tr style={{height: \"21px\"}}> \r\n                  <td style={{display: \"flex\",\r\n                      width: \"20px\",\r\n                      height: \"20px\",\r\n                      backgroundColor: \"rgb(255,179,26)\",\r\n                      borderRadius: \"50%\",\r\n                      }}></td>\r\n                      {/* <td style={{width: \"0.25px\", height: \"0.25px\", margin: \"0px 0px 0px 0px\"}}></td> */}\r\n                  <td style={{height: \"21px\"}}><p >Invoice Unit Cost is lesser.</p></td>\r\n                  </tr>\r\n                  </tbody>\r\n          </table>\r\n          </div>\r\n\r\n          <div style={{marginLeft: \"20px\"}}>\r\n              <table>\r\n              <tbody>\r\n                  <tr style={{height: \"21px\"}}> \r\n                  <td style={{display: \"flex\",\r\n                      width: \"20px\",\r\n                      height: \"20px\",\r\n                      backgroundColor: \"pink\",\r\n                      borderRadius: \"50%\",\r\n                      }}></td>\r\n                      {/* <td style={{width: \"0.25px\", height: \"0.25px\", margin: \"0px 0px 0px 0px\"}}></td> */}\r\n                  <td style={{height: \"21px\"}}><p >Product unidentified in POS.</p></td>\r\n                  </tr>\r\n                  </tbody>\r\n          </table>\r\n          </div>\r\n        </Grid>\r\n\r\n            </Paper>\r\n\r\n            {openInvoice ? (<div><div><p>Invoice No.-- {num}</p></div><div><p>Invoice Date -- {day}</p></div></div>) : null}\r\n\r\n        \r\n            {pushToInventory ? (\r\n            <UpdateInventory\r\n                newInventoryData={inventoryData}\r\n                header={header}\r\n                goBack={setPushToInventory}\r\n                invoice={invoice}\r\n            />\r\n            ) : ( openInvoice ? renderTableData() : renderInvoiceTable() \r\n            )}\r\n            <CModal show={showModal} onClose={() => toggleModal(\"notfounds\")}>\r\n        <CModalHeader closeButton>Add Red Products</CModalHeader>\r\n        <CModalBody>\r\n          <CContainer fluid>\r\n            <CRow>\r\n              <CCol sm=\"6\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"invoiceNo\">Units In Case</CLabel>\r\n                  <CInput\r\n                    type=\"text\"\r\n                    name=\"unitsInCase\"\r\n                    value={unitsInCase}\r\n                    onChange={(event) => {\r\n                      // setUnitsInCase(event.target.value)\r\n                      dispatch({type: \"UNITS_IN_CASE\", data: event.target.value})\r\n                    }}\r\n                    />\r\n                  <CLabel htmlFor=\"date\">Case Cost</CLabel>\r\n                  <CInput\r\n                    type=\"text\"\r\n                    name=\"price\"\r\n                    value={price}\r\n                    onChange={(event) => {\r\n                      // setPrice(event.target.value)\r\n                      dispatch({type: \"PRICE\", data: event.target.value})\r\n                    }}\r\n                    />\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CRow>\r\n          </CContainer>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"primary\" onClick={updateItem}>\r\n            ADD\r\n          </CButton>{\" \"}\r\n          <CButton color=\"secondary\" onClick={() => toggleModal(\"notfounds\")}>\r\n            Cancel\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n\r\n            <CModal show={detailsModal} onClose={() => toggleModal(\"details\")}>\r\n        <CModalHeader closeButton>Add Details</CModalHeader>\r\n        <CModalBody>\r\n          <CContainer fluid>\r\n            <CRow>\r\n              <CCol sm=\"6\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"invoiceNo\">Add Details</CLabel>\r\n                  <TextareaAutosize\r\n                    aria-label=\"empty textarea\"\r\n                    placeholder=\"add details\"\r\n                    // minRows={4}\r\n                    // maxRows={10}\r\n                    style={{ width: 400, height: 100 }}\r\n                    onChange={(event) => setDetails(event.target.value)}\r\n                  />\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CRow>\r\n          </CContainer>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"primary\" onClick={saveDetails}>\r\n            ADD\r\n          </CButton>{\" \"}\r\n          <CButton color=\"secondary\" onClick={() => toggleModal(\"details\")}>\r\n            Cancel\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default SaveInvoiceData;"],"sourceRoot":""}