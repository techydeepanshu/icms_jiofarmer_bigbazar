{"version":3,"sources":["services/InventoryService.js","services/Api.js","components/Pos/Pos.js"],"names":["InventoryService","productSKU","a","WordpressAxios","get","params","sku","response","data","productId","put","res","post","upc","itemName","Axios","appendURL","console","log","invoiceName","invoiceNo","date","itemNo","value","input","dateObj","Api","name","type","POS","inventoryService","api","useState","queue","setQueue","loader","setLoader","showModal","setShowModal","setContent","setHeader","fuzzSuggestion","setFuzzSuggestion","selectedItemNo","setSelectedItemNo","modalLabel","setModalLabel","item","quantity","description","price","pos","barcode","posSku","invoice","size","department","unitCost","unitPrice","state","setState","handleChange","key","val","toggleModal","useEffect","firebase","database","ref","on","snapshot","Object","values","deleteAddedProducts","remove","filetered","filter","product","error","style","marginTop","className","map","q","i","padding","border","margin","marginBottom","onClick","o","header","prop","prototype","hasOwnProperty","call","push","prdctSize","fuzzwuzzResult","dprtmnt","untCst","untPrce","newState","posName","GetFuzz","then","result","element","obj","label","length","cost","catch","err","setContentExtra","show","onClose","closeButton","fluid","sm","htmlFor","onChange","event","newValue","id","options","getOptionLabel","option","paddingTop","renderInput","variant","disabled","target","color","Barcode","PosSKU","isReviewed","Size","Department","SellerCost","SellingPrice","UpdateProductFields","Error","alert","finally","addProduct","to"],"mappings":"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","file":"static/js/8.f0b2b880.chunk.js","sourcesContent":["import { POSAxios, WordpressAxios } from \"./axios\";\nimport Axios from \"./axios\";\nconst appendURL = process.env.NODE_ENV === \"production\" ? \"/server\" : \"\";\n\nexport class InventoryService {\n  async GetProductDetails(productSKU) {\n    const response = await WordpressAxios.get(`/products/`, {\n      params: { sku: productSKU },\n    });\n    return response.data;\n  }\n\n  async UpdateProductDetails(productId, data) {\n    const res = await WordpressAxios.put(`/products/${productId}`, data);\n    return res.data;\n  }\n  async getAllProducts() {\n    const res = await WordpressAxios.get(\"products\");\n    return res.data;\n  }\n  async createProduct(data) {\n    const res = await WordpressAxios.post(\"products\", data);\n    return res.data;\n  }\n\n  async GetPOSProductDetails(upc, itemName = \"\") {\n    const response = await Axios.get(appendURL + \"/api/getPOSProduct\", {\n      params: { upc, itemName },\n    });\n    return response.data;\n  }\n  async UpdatePOSProducts(data) {\n    console.log(data);\n    const res = await Axios.post(\n      appendURL + \"/api/pos/Product/ManageItem\",\n      data\n    );\n    return res.data;\n  }\n  async SyncInventory() {\n    const res = await Axios.get(appendURL + \"/api/sync\");\n    console.log(res.data);\n    return res.data;\n  }\n  async UpdateProductFields(data) {\n    /**\n     ***** data format\n     * data = {invoiceName: \"chetak\", itemName:\"CAS 123\", value:{\"Description\": \"jnckwc\", \"Price\": \"44\"}}\n     */\n    //  console.log(data);\n    const res = await Axios.put(\n      appendURL + \"/api/invoice/product/update\",\n      data\n    );\n    return res.data;\n  }\n\n  async CreateNotFoundItems(data) {\n    /**\n     * data format\n     * {Item:String,Description:String,Quantity:String,Price:String,sku:String,Barcode:String,PosSKU:String,InvoiceName:String}\n     */\n    const res = await Axios.post(appendURL + \"/api/invoice/notfound\", data);\n    return res.data;\n  }\n\n  async CreateScanInvoiceData(data){\n    //console.log(\"IN INVENTORY SERVICE\");\n    //console.log(data);\n    const res = await Axios.post(appendURL + \"/api/invoice/scaninvoicedata\", data);\n    return res.data;\n  }\n  async UpdateInvoiceData(invoiceName, invoiceNo, date, itemNo) {\n    console.log(invoiceName);\n    console.log(invoiceNo);\n    console.log(itemNo);\n    console.log(date);\n    const res = await Axios.post(appendURL + \"/api/invoice/updateinvoicedata\", {params:{ invoiceName: invoiceName, invoiceNo: invoiceNo,date: date, itemNo: itemNo}});\n    return res.data;\n  }\n\n  async UpdateDBafterPosUpdate(data){\n    console.log(data);\n    const res = await Axios.post(appendURL + \"/api/invoice/updatedbafterposupdate\", data);\n    console.log(res);\n\n  }\n\n  async saveDetails(data) {\n    console.log(data);\n    const res = await Axios.post(appendURL + \"/api/invoice/savedetails\", data);\n    return res.data;\n\n  }\n\n  async reversePOSUpdate(invoiceName, invoiceNo, date, itemNo) {\n    console.log(invoiceName);\n    console.log(invoiceNo);\n    console.log(itemNo);\n    console.log(date);\n    const res = await Axios.post(appendURL + \"/api/invoice/reverseposupdate\", {params:{ invoiceName: invoiceName, invoiceNo: invoiceNo,date: date, itemNo: itemNo}});\n    return res.data;\n  }\n  \n  async linkingCorrect(data) {\n    console.log(data);\n    const res = await Axios.post(appendURL+ \"/api/invoice/linkingcorrect\", data);\n    return res;\n  }\n\n\n  async linkManually(data) {\n    console.log(data);\n\n    const res = await Axios.post(appendURL + \"/api/invoice/linkmanually\", data);\n    return res;\n  }\n\n  async getHicksvilleData(value) {\n    console.log(\"in inventory for hicks data\");\n    const res = await Axios.get(appendURL + \"/api/invoice/gethicksvilledata\", {params: {input: value}});\n    return res.data;\n  }\n\n  async getSavedInvoices (data) {\n    console.log(\"in inventory for saved invoices\");\n    console.log(data);\n    const res = await Axios.get(appendURL + \"/api/invoice/getsavedinvoices\", {params: data} );\n    return res.data;\n\n  }\n\n  async UpdateDBProduct(data) {\n    console.log(data);\n    const res = await Axios.put(appendURL + \"/api/invoice/pos/update\", data);\n    return res.data;\n  }\n  async CreateDBProduct(data) {\n    const res = await Axios.post(appendURL + \"/api/invoice/pos/create\", data);\n    return res.data;\n  }\n\n  async getInitialSyncedData(dateObj) {\n    console.log(\"In inventory service\");\n    console.log(dateObj);\n    const res = await Axios.get(appendURL + \"/api/invoice/pos\",dateObj);\n    console.log(res);\n    return res.data;\n  }\n\n  async generateLog(data) {\n    console.log(data);\n    const res = await Axios.post(appendURL + \"/api/invoice/generatelog\", data);\n    return res;\n\n  }\n\n  async linkManuallyLog(data) {\n    console.log(data);\n    const res = await Axios.post(appendURL+ \"/api/invoice/linkmanuallylog\", data);\n    return res;\n  }\n\n  async reverseUpdate(data) {\n    console.log(data);\n\n    const res = await Axios.post(appendURL + \"/api/invoice/reverseupdate\", data);\n    return res.data;\n  }\n}\n","import Axios from \"./axios\";\nconst appendURL=process.env.NODE_ENV===\"production\"?\"/server\":\"\";\nexport class Api {\n    async GetFuzz(name,type){\n      console.log(name,type);\n      var res=await Axios.get(appendURL+`/api/fuzzwuzz`,{params:{name:name,type:type}});\n      /* var res=await Axios.get(appendURL+`/api/fuzzwuzz`); */\n      console.log(res);\n      return res.data\n    }\n}\n\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { InventoryService } from \"../../services/InventoryService\";\nimport { Api } from \"../../services/Api\";\nimport {\n  CModal,\n  CModalBody,\n  CModalHeader,\n  CModalFooter,\n  CButton,\n  CContainer,\n  CCol,\n  CRow,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CDropdown,\n  CDropdownToggle,\n  CDropdownMenu,\n  CDropdownItem,\n} from \"@coreui/react\";\nimport firebase from \"../../firebase\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\nimport { stat } from \"fs\";\nconst POS = () => {\n  const inventoryService = new InventoryService();\n  const api = new Api();\n  const [queue, setQueue] = useState([]);\n  const [loader, setLoader] = useState(true);\n  const [categoryArray, setCategoryArray] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [content, setContent] = useState(null);\n  const [header, setHeader] = useState([]);\n  const [fuzzSuggestion, setFuzzSuggestion] = useState([]);\n  const [selectedItemNo, setSelectedItemNo] = useState(\"\");\n  const [modalLabel, setModalLabel] = useState(\"\");\n  const [state, setState] = useState({\n    item: \"\",\n    quantity: \"\",\n    description: \"\",\n    price: \"\",\n    pos: \"\",\n    barcode: \"\",\n    posSku: \"\",\n    invoice: \"\",\n    size: \"\",\n    department: \"\",\n    unitCost: \"\",\n    unitPrice: \"\"\n  });\n  const handleChange = (key, val) => {\n    setState({\n      ...state,\n      [key]: val,\n    });\n  };\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n  useEffect(() => {\n    const ref = firebase.database().ref(\"/review\");\n    ref.on(\"value\", (snapshot) => {\n      if (snapshot.val()) {\n        const data = Object.values(snapshot.val());\n        console.log(data);\n        setQueue(data);\n        setLoader(false);\n      }\n    });\n  }, []);\n  const setContentExtra = (o) => {\n    setContent(o);\n    let header = [];\n    for (var prop in o) {\n      if (Object.prototype.hasOwnProperty.call(o, prop)) {\n        header.push(prop);\n      }\n    }\n    setHeader(header);\n    let newState = {\n      item: o.itemNo,\n      description: o.description,\n      pos: o.posName,\n      barcode: o.barcode,\n      posSku: o.posSku || \"\",\n      invoice: o.invoiceName,\n      size: \"loading...\",\n      department: \"loading...\",\n      unitCost: \"loading...\",\n      unitPrice: \"loading...\"\n\n    };\n    setState(newState);\n\n    let prdctSize;\n    let fuzzwuzzResult;\n    let dprtmnt;\n    let untCst;\n    let untPrce;\n    api\n      .GetFuzz(o.description, \"pos\")\n      .then((res) => {\n        fuzzwuzzResult = res.result;\n        const filter = res.result.map((element) => {\n          let obj = { ...element };\n          obj.label = `${element.name}- ${element.price}- ${element.upc} - ${element.size}`;\n          console.log(obj);\n          return obj;\n          \n        });\n        \n        for(let i=0;i<fuzzwuzzResult.length;i++){\n          if(o.posSku == fuzzwuzzResult[i].sku){\n            prdctSize = fuzzwuzzResult[i].size !== null ? fuzzwuzzResult[i].size : \"NOT AVAILABLE\";\n            dprtmnt = fuzzwuzzResult[i].department !== null ? fuzzwuzzResult[i].department : \"NOT AVAILABLE\";\n            untCst = fuzzwuzzResult[i].cost !== null ? fuzzwuzzResult[i].cost : \"NOT AVAILABLE\";\n            untPrce = fuzzwuzzResult[i].price !== null ? fuzzwuzzResult[i].price : \"NOT AVAILABLE\";\n            break;\n          }\n        }\n        console.log(dprtmnt + untCst + untPrce+\"$\"+prdctSize);\n       \n        newState = {\n          item: o.itemNo,\n          description: o.description,\n          pos: o.posName,\n          barcode: o.barcode,\n          posSku: o.posSku || \"\",\n          invoice: o.invoiceName,\n          size: prdctSize,\n          department: dprtmnt,\n          unitCost: untCst,\n          unitPrice: untPrce,\n        };\n        setState(newState);\n        setFuzzSuggestion(filter);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  /* const changeDropdown = () => {\n    api\n      .GetFuzz(\"\", \"pos\")\n      .then((res) => {\n        const filter = res.result.map((element) => {\n          let obj = { ...element };\n          obj.label = `${element.name}- ${element.price}- ${element.upc} - ${element.size} }`;\n          console.log(obj);\n          return obj;\n          \n        });\n        setFuzzSuggestion(filter);\n      })\n      .catch((err) => console.log(err));\n  };\n */\n  const addProduct = () => {\n    console.log(selectedItemNo);\n    setShowModal(!showModal);\n    console.log(state);\n    const data = {\n      invoiceName: state.invoice,\n      itemName: state.item,\n      value: { POS: state.pos, \n        Barcode: state.barcode, \n        PosSKU: state.posSku, \n        isReviewed: \"true\",\n        Size: state.size, \n        Department: state.department,\n        SellerCost: state.unitCost,\n        SellingPrice: state.unitPrice\n      },\n    };\n    \n    setLoader(true);\n    inventoryService\n      .UpdateProductFields(data)\n      .then((res) => {\n        if (!res) {\n          throw new Error(\"Product not created\")\n        }\n        console.log(res);\n        alert(\"Successfully updated fields\");\n      })\n      .then(() => deleteAddedProducts(selectedItemNo))\n      .catch((err) => {\n        console.log(err);\n        alert(\"Some error occuured in creating product\");\n      })\n      .finally(() => setLoader(false));\n  };\n\n  const deleteAddedProducts = (item) => {\n    try {\n      firebase.database().ref(`/review/${item}`).remove();\n      let temp = [...queue];\n      const filetered = temp.filter((product) => product.itemNo !== item);\n      setQueue(filetered);\n      return true;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  };\n  if (loader) {\n    return <Spinner />;\n  }\n\n  return (\n    <div style={{ marginTop: \"90px\" }}>\n      <div className=\"row\">\n        {queue.map((q, i) => (\n          <div className=\"col-md-4\" key={q.itemNo} style={{ padding: \"10px\" }}>\n            <div style={{ border: \"1px solid grey\", margin: \"10px\" }}>\n              <div className=\"text-center bg-secondary\">{q.itemNo}</div>\n              <br />\n              <div className=\"text-center\">{q.description}</div>\n              <br />\n              <div className=\"row\" style={{ marginBottom: \"10px\" }}>\n                <div className=\"col-md-9\"></div>\n                <div className=\"col-md-3\">\n                  <button\n                    className=\"btn btn-sm btn-primary\"\n                    onClick={() => {\n                      setShowModal(true);\n                      setModalLabel(q.itemNo);\n                      setSelectedItemNo(q.itemNo);\n                      setContentExtra(q);\n                    }}\n                  >\n                    Details\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n      <CModal show={showModal} onClose={toggleModal}>\n        <CModalHeader closeButton>{modalLabel}</CModalHeader>\n        <CModalBody>\n          <CContainer fluid>\n            <CRow>\n              <CCol sm=\"12\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"name\">Name</CLabel>\n                  <Autocomplete\n                    value={state.item}\n                    onChange={(event, newValue) => {\n                      if (newValue) {\n                        let newState = { ...state };\n                        console.log(newValue);\n                        // newState.item = newValue.name;\n                        newState.description = newValue.name;\n                        newState.barcode = newValue.upc;\n                        newState.pos = newValue.name;\n                        newState.posSku = newValue.sku;\n                        newState.size = newValue.size;\n                        newState.department = newValue.department;\n                        newState.unitCost = newValue.cost;\n                        newState.unitPrice = newValue.price;\n                        setState(newState);\n                        console.log(newValue);\n                        console.log(newState);\n                        console.log(state);\n                      }\n                    }}\n                    id=\"combo-box\"\n                    options={fuzzSuggestion}\n                    getOptionLabel={(option) => option.label ?? state.item}\n                    style={{ paddingTop: 4 }}\n                    renderInput={(params) => (\n                      <TextField {...params} variant=\"outlined\" size=\"small\" />\n                    )}\n                  />\n                </CFormGroup>\n                <CRow>\n                  <CCol sm=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"type\">Barcode</CLabel>\n                      <CInput \n                        disabled\n                        type=\"text\"\n                        name=\"type\"\n                        value={state.barcode}\n                        onChange={(event) =>\n                          handleChange(\"barcode\", event.target.value)\n                        }\n                      />\n                    </CFormGroup>\n                  </CCol>\n                  <CCol sm=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"short_description\">POS SKU</CLabel>\n                      <CInput\n                        disabled\n                        type=\"text\"\n                        name=\"short_description\"\n                        value={state.posSku}\n                        onChange={(event) =>\n                          handleChange(\"posSku\", event.target.value)\n                        }\n                      />\n                    </CFormGroup>\n                  </CCol>\n                </CRow>\n                <CFormGroup>\n                  <CLabel htmlFor=\"description\">Invoice Description</CLabel>\n                  <CInput\n                    disabled\n                    type=\"text\"\n                    name=\"description\"\n                    value={state.description}\n                    onChange={(event) =>\n                      handleChange(\"description\", event.target.value)\n                    }\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"regular_price\">POS Name</CLabel>\n                  <CInput\n                    disabled\n                    type=\"text\"\n                    name=\"regular_price\"\n                    value={state.pos}\n                    onChange={(event) =>\n                      handleChange(\"pos\", event.target.value)\n                    }\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"size\">POS Size</CLabel>\n                  <CInput\n                    disabled\n                    type=\"text\"\n                    name=\"size\"\n                    value={state.size}\n                    onChange={(event) =>\n                      handleChange(\"size\", event.target.value)\n                    }\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"department\">Department</CLabel>\n                  <CInput\n                    disabled\n                    type=\"text\"\n                    name=\"department\"\n                    value={state.department}\n                    onChange={(event) =>\n                      handleChange(\"department\", event.target.value)\n                    }\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"unitPrice\">POS Unit Price</CLabel>\n                  <CInput\n                    disabled\n                    type=\"text\"\n                    name=\"unitPrice\"\n                    value={state.unitPrice}\n                    onChange={(event) =>\n                      handleChange(\"unitPrice\", event.target.value)\n                    }\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"unitCost\">POS Unit Cost</CLabel>\n                  <CInput\n                    disabled\n                    type=\"text\"\n                    name=\"unitCost\"\n                    value={state.unitCost}\n                    onChange={(event) =>\n                      handleChange(\"unitCost\", event.target.value)\n                    }\n                  />\n                </CFormGroup>\n                {/* <CRow>\n                  <CCol sm=\"3\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"categories\">Category</CLabel>\n                      <CDropdown name=\"categories\" className=\"mt-2\">\n                        <CDropdownToggle caret>\n                          {state.categories.length === 0\n                            ? \"Select a Category\"\n                            : state.categories[0].id}\n                        </CDropdownToggle>\n                        <CDropdownMenu>\n                          {categoryArray.map((e, i) => (\n                            <CDropdownItem\n                              key={i}\n                              name=\"categories\"\n                              onClick={(event) => handleChange(event, e)}\n                            >\n                              {e}\n                            </CDropdownItem>\n                          ))}\n                        </CDropdownMenu>\n                      </CDropdown>\n                    </CFormGroup>\n                  </CCol>\n                  <CCol sm=\"9\"></CCol>\n                </CRow> */}\n              </CCol>\n            </CRow>\n          </CContainer>\n        </CModalBody>\n        <CModalFooter>\n        {/* <button onClick={() => changeDropdown()} \n          style={{backgroundColor: \"green\",\n          border: \"none\",\n          color: \"white\",\n          padding: \"4px 8px\",\n          textAlign: \"center\",\n          textDecoration: \"none\",\n          display: \"inline-block\",\n          fontSize: \"14px\",\n          align: \"left\"}} >\n            Change Dropdown\n          </button> */}\n          <CButton color=\"primary\" onClick={() => addProduct()}>\n            Add\n          </CButton>{\" \"}\n          <CButton color=\"secondary\" onClick={toggleModal}>\n            Cancel\n          </CButton>\n        </CModalFooter>\n      </CModal>\n      <div className=\"row\" style={{ marginTop: \"40px\" }}>\n        <div className=\"col-md-2\">\n          <Link className=\"btn btn-lg btn-info\" to=\"/invoice\">\n            Back\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default POS;\n"],"sourceRoot":""}