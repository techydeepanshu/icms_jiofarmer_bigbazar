{"version":3,"sources":["../@material-ui/core/esm/utils/deprecatedPropType.js","../@material-ui/core/esm/utils/requirePropFactory.js","UI/Button.js","services/Api.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/@babel/runtime/helpers/interopRequireWildcard.js","../@material-ui/icons/utils/createSvgIcon.js","../@material-ui/core/esm/utils/unsupportedProp.js","services/TesseractService.js","utils/invoiceList.js","components/DisplayData/DisplayData.module.css","../@material-ui/icons/InfoOutlined.js","../@material-ui/icons/Cancel.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","components/Update/UpdateInventory.js","../../index.ts","../node_modules/@babel/runtime/helpers/typeof.js","../@material-ui/icons/AddCircle.js","../@material-ui/core/esm/styles/makeStyles.js","../@material-ui/core/esm/Grid/Grid.js","../@material-ui/core/esm/CircularProgress/CircularProgress.js","components/SaveInvoiceData/SaveInvoiceData.js"],"names":["deprecatedPropType","validator","reason","requirePropFactory","componentNameInError","Button","this","props","color","text","others","className","React","Component","Api","name","type","a","console","log","Axios","get","appendURL","params","res","data","module","exports","obj","__esModule","_typeof","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","value","enumerable","_utils","createSvgIcon","require","unsupportedProp","propName","componentName","location","propFullName","TesseractService","image","FormData","append","post","invoiceName","filename","invoiceNo","date","dropdownOptions","slug","jsonName","emptyColumn","databaseName","jsonNaseame","_interopRequireDefault","_interopRequireWildcard","default","_default","createElement","d","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","UpdateInventory","useState","newInventoryData","posProducts","setPosProducts","redirect","setRedirect","loader","setLoader","wooComProducts","setWooComProducts","inventoryService","InventoryService","header","pushInventoryDetails","map","element","item","itemNo","qty","parseInt","pieces","cp","unitPrice","markup","sp","description","duplicates","push","lastIndexOf","tempData","values","filter","ele","forEach","index","temp","val","updatedWoocomProducts","product","wooIndex","findIndex","wooProduct","id","stock_quantity","regular_price","pushToWoocom","pushToPOS","window","alert","products","Promise","all","UpdateProductDetails","COST","PRICE","UPC","TOTALQTY","isNew","ITEMNAME","BUYASCASE","CASEUNITS","CASECOST","SKU","DEPNAME","UpdatePOSProducts","JSON","stringify","DESCRIPTION","QTY","SIZE","PACK","REPLACEQTY","DEPARTMENT","CATEGORY","SUBCATEGORY","ISFOODSTAMP","ISWEIGHTED","ISTAXABLE","VENDORNAME","invoice","VENDORCODE","VENDORCOST","ISNEWITEM","COMPANYNAME","PRODUCTCODE","Cost","ItemName","Price","TotalQty","CreateDBProduct","response","UpdateDBProduct","count","useEffect","row","GetProductDetails","barcode","price","sku","sale_price","items","hasErrorOccured","isForReview","GetPOSProductDetails","toString","posSku","getProducts","getPosProducts","to","rows","extendedPrice","style","marginTop","position","top","background","toUpperCase","onClick","goBack","renderTableData","registerVersion","version","SDK_VERSION","constructor","makeStyles","stylesOrCreator","options","arguments","undefined","makeStylesWithoutDefault","_extends","defaultTheme","SPACINGS","GRID_SIZES","getOffset","div","parse","parseFloat","concat","String","replace","Grid","ref","_props$alignContent","alignContent","_props$alignItems","alignItems","classes","classNameProp","_props$component","component","_props$container","container","_props$direction","direction","_props$item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","zeroMinWidth","other","_objectWithoutProperties","clsx","root","StyledGrid","withStyles","theme","boxSizing","display","flexWrap","width","margin","minWidth","flexDirection","justifyContent","breakpoint","styles","themeSpacing","padding","generateGutter","breakpoints","keys","reduce","accumulator","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","CircularProgress","_props$color","_props$disableShrink","disableShrink","_props$size","_props$thickness","thickness","_props$value","_props$variant","variant","circleStyle","rootStyle","rootProps","circumference","PI","strokeDasharray","toFixed","strokeDashoffset","transform","capitalize","determinate","indeterminate","static","height","role","svg","viewBox","circle","circleDisableShrink","circleDeterminate","circleIndeterminate","circleStatic","cx","cy","r","fill","strokeWidth","transition","transitions","create","animation","colorPrimary","palette","primary","main","colorSecondary","secondary","stroke","transformOrigin","flip","useStyles","maxHeight","table","fontWeight","fontSize","backgroundColor","cursor","emptyColumnList","SaveInvoiceData","tesseractService","setInvoice","dropdownLabel","inv","useSelector","state","openInvoice","num","day","apiLoader","loaders","dispatch","useDispatch","setHicksvilleData","tableData","setTableData","setEmptyColumn","productDetails","setProductDetails","pushToInventory","setPushToInventory","inventoryData","setInventoryData","itemNoDropdown","setItemNoDropdown","showPosIndex","setShowPosIndex","showModal","setShowModal","setCostInc","setCostDec","unitCost","setUnitCost","setIsUpdated","setUpdateIndex","singleItemData","notFounds","redItems","unitsInCase","setRedState","updateSku","setOptions","detailsModal","setDetailsModal","invoiceOptions","setInvoiceOptions","details","setDetails","detailsIndex","setDetailsIndex","userEmail","userDetails","todayDate","setFetchingOptions","setDropwdownIndex","invoiceHeader","itemNoDescription","showPosState","getPosProductsLinkManually","codeOrSku","indexOf","itemName","itemNoPresent","MODELNUM","slice","Date","toLocaleDateString","VINTAGE","update","data1","cost","UpdateDBafterPosUpdate","pushInventoryDetails2","pushSingleItemToInventory","notFoundItems","tempTable","isUpdated","includes","show","rowData","Item","Description","Quantity","Barcode","PosSKU","InvoiceName","CreateNotFoundItems","error","priceIncreasedProducts","priceIncrease","UpdateProductFields","UpdateInvoiceData","InvoiceDate","ItemNo","InvoiceDescription","PosDescription","posName","PosUnitCost","PosUnitPrice","sellingPrice","OldMarkup","InvUnitCost","InvUnitPrice","NewMarkup","UpdateDate","Person","TimeStamp","toTimeString","split","InvCaseCost","InvUnitsInCase","posLogs","logUpdate","setProductsInTable","updateUnits","then","Error","catch","finally","saveDetails","toggleModal","getInvoices","getSavedInvoices","reverse","reverseUpdate","result","ok","reversePOSUpdate","linkingCorrect","statusText","invError","logState","ItemCode","LinkingDate","PersonName","Size","InvoiceNo","Department","department","CostIncrease","CostDecrease","CostSame","Unidentified","InvError","UnidentifiedLog","linkManually","costChange","linkManuallyLog","logResult","fetchSavedData","no","GetSavedInvoiceData","InvoiceData","x","hicksvilleDropdownNew","event","isNaN","getHicksvilleData","productsString","newData","upc","altupc1","altupc2","vintage","totalQty","pricea","priceb","pricec","salePrice","pack","label","updateItem","ocrCost","POS","pos","isReviewed","SellerCost","SellingPrice","LinkingCorrect","b","c","InvoiceUnitCost","generateLog","addRow","tempTableData","showPOS","setProductsInTableNew","SavedDate","SavedInvoiceNo","ocrData","invoiceData","convertToUpperCase","trim","Details","mergeDuplicates","handleChange","splice","arr","Map","newArr","curDate","getFullYear","getMonth","getDate","firebase","auth","onAuthStateChanged","user","email","Spinner","marginLeft","Paper","Autocomplete","onChange","newValue","getOptionLabel","option","autoHighlight","renderInput","TextField","border","textAlign","textDecoration","align","borderRadius","isEmpty","Set","isFree","red","free","opacity","target","IconButton","tooltipIsReviewed","tooltip","disabled","loading","onInputChange","setTimeout","newState","confirm","deleteRow","divRow","reload","invoiceList","renderInvoiceTable","onClose","closeButton","fluid","htmlFor","TextareaAutosize","placeholder"],"mappings":"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","file":"static/js/7.c623c981.chunk.js","sourcesContent":["export default function deprecatedPropType(validator, reason) {\n  if (process.env.NODE_ENV === 'production') {\n    return function () {\n      return null;\n    };\n  }\n\n  return function (props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    if (typeof props[propName] !== 'undefined') {\n      return new Error(\"The \".concat(location, \" `\").concat(propFullNameSafe, \"` of \") + \"`\".concat(componentNameSafe, \"` is deprecated. \").concat(reason));\n    }\n\n    return null;\n  };\n}","export default function requirePropFactory(componentNameInError) {\n  if (process.env.NODE_ENV === 'production') {\n    return function () {\n      return null;\n    };\n  }\n\n  var requireProp = function requireProp(requiredProp) {\n    return function (props, propName, componentName, location, propFullName) {\n      var propFullNameSafe = propFullName || propName;\n\n      if (typeof props[propName] !== 'undefined' && !props[requiredProp]) {\n        return new Error(\"The prop `\".concat(propFullNameSafe, \"` of \") + \"`\".concat(componentNameInError, \"` must be used on `\").concat(requiredProp, \"`.\"));\n      }\n\n      return null;\n    };\n  };\n\n  return requireProp;\n}","import React from \"react\";\nclass Button extends React.Component {\n\n    render() {\n      const { \n        color,\n        text,\n        ...others\n      } = this.props;\n      \n      return (\n        <button className={color} {...others}>\n          {text}\n        </button>\n      )\n    }\n  }\n  \n\n  export default Button;","import Axios from \"./axios\";\nconst appendURL=process.env.NODE_ENV===\"production\"?\"/server\":\"\";\nexport class Api {\n    async GetFuzz(name,type){\n      console.log(name,type);\n      var res=await Axios.get(appendURL+`/api/fuzzwuzz`,{params:{name:name,type:type}});\n      /* var res=await Axios.get(appendURL+`/api/fuzzwuzz`); */\n      console.log(res);\n      return res.data\n    }\n}\n\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nmodule.exports = _interopRequireWildcard, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.createSvgIcon;\n  }\n});\n\nvar _utils = require(\"@material-ui/core/utils\");","export default function unsupportedProp(props, propName, componentName, location, propFullName) {\n  if (process.env.NODE_ENV === 'production') {\n    return null;\n  }\n\n  var propFullNameSafe = propFullName || propName;\n\n  if (typeof props[propName] !== 'undefined') {\n    return new Error(\"The prop `\".concat(propFullNameSafe, \"` is not supported. Please remove it.\"));\n  }\n\n  return null;\n}","import Axios from \"./axios\";\nconst appendURL=process.env.NODE_ENV===\"production\"?\"/server\":\"\";\nexport class TesseractService {\n    async PostImage(image) {\n        const data = new FormData();\n        data.append(\"file\", image);\n        var res = await Axios.post(appendURL+`/api/upload-image`, data);\n        return res.data\n    }\n\n    async GetProductDetails(invoiceName) {\n        var res = await Axios.get(appendURL+`/api/product/`, {\n          params: { invoiceName: invoiceName },\n        });\n        return res.data\n    }\n\n    async GetOCRData(filename) {\n        var res = await Axios.post(appendURL+`/api/ocr`, { data: {filename} });\n        console.log(res);\n        return res.data\n    }\n\n    async GetSavedInvoiceData(invoiceName, invoiceNo, date) {\n        console.log(\"IN TESSERACT SERVICE\");\n        var res = await Axios.get(appendURL + \"/api/invoice/getsaveinvoicedata/\", {params:{ invoiceName: invoiceName, invoiceNo: invoiceNo,date: date}});\n        console.log(res);\n        return res.data;\n    }\n}","export const dropdownOptions = [\n  {\n    value: \"Chetak\",\n    slug: \"chetak\",\n    jsonName: \"chetak-products.json\",\n    emptyColumn: true,\n    databaseName: \"chetakproducts\",\n  },\n  {\n    value: \"Aahubarah USA\",\n    slug: \"aahubarah-usa\",\n    jsonName: \"aahubarah.json\",\n    emptyColumn: false,\n    databaseName: \"aahubarahs\",\n  }, \n  {\n    value: \"Adelman foods\",\n    slug: \"adelman-foods\",\n    jsonName: \"adelaman-food.json\",\n    emptyColumn: false,\n    databaseName: \"adelamanfoods\",\n  },\n  {\n    value: \"Advance Foods\",\n    slug: \"advance-foods\",\n    jsonName: \"advance-foods.json\",\n    emptyColumn: false,\n    databaseName: \"advancefoods\",\n  },\n\n  // Added by Deepanshu on 09-01-2022\n  {\n    value: \"Aliments\",\n    slug: \"aliments\",\n    jsonName: \"aliments.json\",\n    emptyColumn: true,\n    databaseName: \"aliments\",\n  }, \n\n    // Added by Deepanshu on 09-01-2022\n  {\n    value: \"Amtrade\",\n    slug: \"amtrade\",\n    jsonName: \"amtrade.json\",\n    emptyColumn: false,\n    databaseName: \"amtrades\",\n  }, \n\n  // Added by Deepanshu on 09-01-2022\n  {\n    value: \"Anmol distributors\",\n    slug: \"anmol-distributors\",\n    jsonName: \"anmol-distribution.json\",\n    emptyColumn: false,\n    databaseName: \"anmoldistributions\",\n  },\n  {\n    value: \"Anns eco store\",\n    slug: \"anns-eco-store\",\n    jsonName: \"anns-eco-store.json\",\n    emptyColumn: false,\n    databaseName: \"annsecostores\",\n  },\n  {\n    value: \"Gurme Guru\",\n    slug: \"gurme-guru\",\n    jsonName: \"gurme-guru.json\",\n    emptyColumn: true,\n    databaseName: \"gurmeguru\",\n  },\n  {\n    value: \"Katzman Produce\",\n    slug: \"katzman-produce\",\n    jsonName: \"katzman-produce.json\",\n    emptyColumn: false,\n    databaseName: \"katzmanproduce\",\n  }, \n  {\n    value: \"Katzman Berry Corp\",\n    slug: \"katzman-beery-corp\",\n    jsonName: \"katzman-berry-corp.json\",\n    emptyColumn: true,\n    databaseName: \"katzmanberrycorp\",\n  }, \n  {\n    value: \"UYT Imports NYC\",\n    slug: \"uyt-imports-nyc\",\n    jsonName: \"uyt-imports-nyc.json\",\n    emptyColumn: false,\n    databaseName: \"uytimportsnyc\",\n  }, \n  {\n    value: \"Dave West Indian\",\n    slug: \"dava-west-indian\",\n    jsonName: \"dava-west-indian.json\",\n    emptyColumn: false,\n    databaseName: \"davawestindian\",\n  }, \n  {\n    value: \"Soko Packaging\",\n    slug: \"soko-packaging\",\n    jsonName: \"soko-packaging.json\",\n    emptyColumn: false,\n    databaseName: \"sokopackaging\",\n  },\n\n    // Added by Deepanshu on 09-01-2022\n  {\n    value: \"Babco foods\",\n    slug: \"babco-foods\",\n    jsonName: \"babco.json\",\n    emptyColumn: false,\n    databaseName: \"babcos\",\n  }, \n  // {\n  //   value: \"Karison Foods\",\n  //   slug: \"karison-foods\",\n  //   jsonName: \"karison-foods.json\",\n  //   emptyColumn: true,\n  //   databaseName: \"karisonfoods\",\n  // }, \n\n  // Added by Deepanshu on 09-01-2022\n  {\n    value: \"Baraka cold\",\n    slug: \"baraka-cold\",\n    jsonName: \"baraka-cold.json\",\n    emptyColumn: false,\n    databaseName: \"barakacolds\",\n  },\n  // {\n  //   value: \"Barlett dairy\",\n  //   slug: \"bartlett-dairy\",\n  //   jsonName: \"barlett.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"barletts\",\n  // },\n\n  // Added by Deepanshu on 09-01-2022\n  {\n    value: \"Baroody\",\n    slug: \"baroody\",\n    jsonName: \"baroody.json\",\n    emptyColumn: true,\n    databaseName: \"baroodies\",\n  }, \n// {value:'',slug:'',jsonName:'bartlett.json',emptyColumn:false,databaseName:'bartletts'},\n  // {\n  //   value: \"Bedessee\",\n  //   slug: \"bedessee\",\n  //   jsonName: \"bedessee.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"bedessees\",\n  // },\n  // {value:'',slug:'',jsonName:'Best-food-1.json',emptyColumn:false,databaseName:'bestfood1'},\n  {\n    value: \"Best Foods\",\n    slug: \"best-foods\",\n    jsonName: \"best-foods.json\",\n    emptyColumn: true,\n    databaseName: \"bestfoods\",\n  },\n\n  {\n    value: \"Dara food LLC\",\n    slug: \"dara-food\",\n    jsonName: \"dara.json\",\n    emptyColumn: false,\n    databaseName: \"daras\",\n  }, \n  {\n    value: \"Dawn food\",\n    slug: \"dawn-food\",\n    jsonName: \"dawn-food.json\",\n    emptyColumn: false,\n    databaseName: \"dawnfoods\",\n  },\n  \n  {\n    value: \"Delight distribution\",\n    slug: \"delight-distribution\",\n    jsonName: \"delight-distrubution.json\",\n    emptyColumn: false,\n    databaseName: \"delightdistrubutions\",\n  }, \n  // {\n  //   value: \"HJA Sales Corp\",\n  //   slug: \"hja-sales-corp\",\n  //   jsonName: \"hja-sales-corp.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"hjasalescorp\",\n  // }, \n  {\n    value: \"Delight foods\",\n    slug: \"delight-food\",\n    jsonName: \"delight-foods.json\",\n    emptyColumn: true,\n    databaseName: \"delightfoods\",\n  },\n  {\n    value: \"Dsa snacks\",\n    slug: \"dsa-snacks\",\n    jsonName: \"dsa-snacks.json\",\n    emptyColumn: false,\n    databaseName: \"dsasnacks\",\n  }, \n  {\n    value: \"East end\",\n    slug: \"east-end\",\n    jsonName: \"east-end.json\",\n    emptyColumn: false,\n    databaseName: \"eastends\",\n  },\n  {\n    value: \"Empire food importers\",\n    slug: \"empire-food-importers\",\n    jsonName: \"empire-food-importers.json\",\n    emptyColumn: false,\n    databaseName: \"empirefoodimporters\",\n  },\n  {\n    value: \"Family five\",\n    slug: \"family-five\",\n    jsonName: \"family-five.json\",\n    emptyColumn: false,\n    databaseName: \"familyfives\",\n  }, \n  {\n    value: \"Gaint Farm\",\n    slug: \"gaint-farm\",\n    jsonName: \"gaint-farm.json\",\n    emptyColumn: true,\n    databaseName: \"gaintfarms\",\n  }, \n  // {\n  //   value: \"Hellenic Treasures\",\n  //   slug: \"hellenic-treasures\",\n  //   jsonName: \"hellenic-treasures.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"hellenictreasures\",\n  // }, \n  // added by sahil on 11 jan 2022\n  {\n    value: \"Galil imports\",\n    slug: \"galil\",\n    jsonName: \"galil-importing.json\",\n    emptyColumn: false,\n    databaseName: \"galilimportings\",\n  },\n  // {\n  //   value: \"Musco Food Corporation\",\n  //   slug: \"musco-food-corporation\",\n  //   jsonName: \"musco-food-corporation.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"muscofoodcorporation\",\n  // },\n  {\n    value: \"Goyal group\",\n    slug: \"goyal-group\",\n    jsonName: \"goyal-grp.json\",\n    emptyColumn: false,\n    databaseName: \"goyalgrps\",\n  },\n  // {\n  //   value: \"Grocer mill\",\n  //   slug: \"grocer-mill\",\n  //   jsonName: \"grocermill.json\",\n  //   emptyColumn: true,\n  //   databaseName: \"grocermills\",\n  // },\n  {\n    value: \"Hellenic\",\n    slug: \"hellenic\",\n    jsonName: \"hellenic.json\",\n    emptyColumn: false,\n    databaseName: \"hellenics\",\n  }, \n  // {\n  //   value: \"Hellenic Treasures\",\n  //   slug: \"hellenic-treasures\",\n  //   jsonName: \"hellenic-treasures.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"hellenictreasures\",\n  // }, \n//  {\n//     value: \"Cream O Land\",\n//     slug: \"cream-o-land\",\n//     jsonName: \"cream-o-land.json\",\n//     emptyColumn: true,\n//     databaseName: \"cream-o-land\",\n//   }, \n  // {\n  //   value: \"Big Apple Distributors\",\n  //   slug: \"big-apple-distributors\",\n  //   jsonName: \"big-apple-distributors.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"bigappledistributors\",\n  // }, \n  // {\n  //   value: \"K&S Wholesale\",\n  //   slug: \"k&s-wholesale\",\n  //   jsonName: \"k&s-wholesale.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"k&swholesale\",\n  // }, \n  // {\n  //   value: \"Los Olivos Ltd\",\n  //   slug: \"los-olivos-ltd\",\n  //   jsonName: \"los-olivos-ltd.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"losolivosltd\",\n  // }, \n  // {\n  //   value: \"Sirob Imports Inc\",\n  //   slug: \"sirob-imports-inc\",\n  //   jsonName: \"sirob-imports-inc.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"sirobimportsinc\",\n  // }, \n  // {\n  //   value: \"AZ Metro Distribution\",\n  //   slug: \"az-metro-distribution\",\n  //   jsonName: \"az-metro-distribution.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"azmetrodistribution\",\n  // }, \n  {\n    value: \"Duty Free Produce\",\n    slug: \"duty-free-produce\",\n    jsonName: \"duty-free-produce.json\",\n    emptyColumn: false,\n    databaseName: \"dutyfreeproduces\",\n  },\n  // {\n  //   value: \"Farmers Choice Dairy\",\n  //   slug: \"farmers-choice-dairy\",\n  //   jsonName: \"farmers-choice-dairy.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"farmerschoicedairy\",\n  // }, \n  {\n    value: \"Hill top farms\",\n    slug: \"hill-top-farms\",\n    jsonName: \"hill-top-farms.json\",\n    emptyColumn: false,\n    databaseName: \"hilltopfarms\",\n  }, \n  {\n    value: \"House of spices\",\n    slug: \"house-of-spices\",\n    jsonName: \"house-spices.json\",\n    emptyColumn: false,\n    databaseName: \"housespices\",\n  },\n  {\n    value: \"Indian food & spices\",\n    slug: \"indian-food-and-spices\",\n    jsonName: \"india-food-spices.json\",\n    emptyColumn: false,\n    databaseName: \"indiafoodspices\",\n  },\n  // {\n  //   value: \"M SY Marketing\",\n  //   slug: \"m-sy-marketing\",\n  //   jsonName: \"m-sy-marketing.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"m-sy-marketing\",\n  // }, \n  // {\n  //   value: \"Concept Food\",\n  //   slug: \"concept-food-us\",\n  //   jsonName: \"concept-food-us.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"conceptfoodus\",\n  // }, \n  // {\n  //   value: \"Good Luck Int\",\n  //   slug: \"good-luck-int\",\n  //   jsonName: \"good-luck-int.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"goodluckint\",\n  // }, \n  // {\n  //   value: \"Tropicana\",\n  //   slug: \"tropicana\",\n  //   jsonName: \"tropicana.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"tropicana\",\n  // }, \n  // {\n  //   value: \"Lucky Traders\",\n  //   slug: \"lucky-traders\",\n  //   jsonName: \"lucky-traders.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"luckytraders\",\n  // }, \n  // {\n  //   value: \"Trading Corp\",\n  //   slug: \"trading-corp\",\n  //   jsonName: \"trading-corp.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"tradingcorp\",\n  // }, \n  {\n    value: \"Indian spice trading\",\n    slug: \"indian-spice-trading\",\n    jsonName: \"indian-spice-trading.json\",\n    emptyColumn: true,\n    databaseName: \"indianspicetradings\",\n  }, \n  {\n    value: \"I sifol\",\n    slug: \"i-sifol\",\n    jsonName: \"I-sifol-llc.json\",\n    emptyColumn: false,\n    databaseName: \"isifolllcs\",\n  }, \n  {\n    value: \"Jaan distributors\",\n    slug: \"jaan-distributors\",\n    jsonName: \"jaan-dist.json\",\n    emptyColumn: false,\n    databaseName: \"jaandists\",\n  }, \n  // {\n  //   value: \"Jalaram produce\",\n  //   slug: \"jalaram-produce\",\n  //   jsonName: \"jalaram.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"jalarams\",\n  // }, \n  {\n    value: \"JCW imports\",\n    slug: \"jcw-import-and-export\",\n    jsonName: \"jcw-import.json\",\n    emptyColumn: false,\n    databaseName: \"jcwimports\",\n  }, \n  // {value:'',slug:'',jsonName:'joy-foods.json',emptyColumn:false,databaseName:'joyfoods'},\n  {\n    value: \"Joy gourmet foods\",\n    slug: \"joy-gourment-foods\",\n    jsonName: \"joy-gourmet-foods.json\",\n    emptyColumn: false,\n    databaseName: \"joygourmetfoods\",\n  },\n  // {\n  //   value: \"Katzman\",\n  //   slug: \"katzam-foods\",\n  //   jsonName: \"katzman.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"katzman\",\n  // }, \n  {\n    value: \"KM Distribution\",\n    slug: \"km-distribution-usa\",\n    jsonName: \"km-dist-usa.json\",\n    emptyColumn: false,\n    databaseName: \"kmdistusas\",\n  }, \n  // {\n  //   value: \"Tuscan\",\n  //   slug: \"tuscan\",\n  //   jsonName: \"tuscan.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"tuscan\",\n  // },   //not complete\n  // {\n  //   value: \"SA Distribution\",\n  //   slug: \"sa-distribution\",\n  //   jsonName: \"sa-distribution.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"sadistribution\",\n  // }, \n  // {\n  //   value: \"Triboro Wholesale\",\n  //   slug: \"triboro-wholesale\",\n  //   jsonName: \"triboro-wholesale.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"triborowholesale\",\n  // }, \n  // {\n  //   value: \"North East Banana\",\n  //   slug: \"northeast-banana\",\n  //   jsonName: \"northeast-banana.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"northeastbanana\",\n  // }, \n  // {\n  //   value: \"Lezza Food\",\n  //   slug: \"lezza-food\",\n  //   jsonName: \"lezza-food.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"lezzafood\",\n  // },\n  // {\n  //   value: \"Hamd Distribution\",\n  //   slug: \"hamd-distribution\",\n  //   jsonName: \"hamd-distribution.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"hamddistribution\",\n  // }, \n  // {\n  //   value: \"Baawarchi\",\n  //   slug: \"baawarchi\",\n  //   jsonName: \"baawarchi.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"baawarchi\",\n  // }, \n  // {\n  //   value: \"Mfried Store Fixture Inc\",\n  //   slug: \"mfried-store-fixture-inc\",\n  //   jsonName: \"mfried-store-fixture-inc.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"mfriedstorefixtureinc\",\n  // }, \n  // {\n  //   value: \"Crown of East\",\n  //   slug: \"crown-of-east\",\n  //   jsonName: \"crown-of-east.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"crownofeast\",\n  // }, \n  // {\n  //   value: \"Guru Nanak\",\n  //   slug: \"guru-nanak\",\n  //   jsonName: \"guru-nanak.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"gurunanak\",\n  // }, \n  // {\n  //   value: \"Valente Yeast Inc\",\n  //   slug: \"valente-yeast-inc\",\n  //   jsonName: \"valente-yeast-inc.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"valenteyeastinc\",\n  // }, \n  // {\n  //   value: \"Online Mr Inc\",\n  //   slug: \"online-mr-inc\",\n  //   jsonName: \"online-mr-inc.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"onlinemrinc\",\n  // }, \n  // {\n  //   value: \"Busines International\",\n  //   slug: \"business-international\",\n  //   jsonName: \"business-international.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"businessinternational\",\n  // }, \n  // {\n  //   value: \"Bhavani Fruit Vegetables\",\n  //   slug: \"bhavani-fruit-vegetables\",\n  //   jsonName: \"bhavani-fruit-vegetables.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"bhavanifruitvegatbles\",\n  // }, \n  // {\n  //   value: \"Best Cakes Distribution\",\n  //   slug: \"best-cakes-distribution \",\n  //   jsonName: \"best-cakes-distribution.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"bestcakesdistribution\",\n  // }, \n  {\n    value: \"Koryeo\",\n    slug: \"koryeo\",\n    jsonName: \"koryeo-foods.json\",\n    emptyColumn: false,\n    databaseName: \"koryeofoods\",\n  },\n  // {\n  //   value: \"Krishna Aahar\",\n  //   slug: \"krishna-aahar\",\n  //   jsonName: \"krishna-aahar.json\",\n  //   emptyColumn: true,\n  //   databaseName: \"krishna-aahar\",\n  // },\n  {\n    value: \"Krishna Food Corp\",\n    slug: \"krishna-food-corp\",\n    jsonName: \"krishna-food-corp.json\",\n    emptyColumn: true,\n    databaseName: \"krishnafoodcorp\",\n  }, \n  {\n    value: \"Krinos foods\",\n    slug: \"krinos-foods\",\n    jsonNaseame: \"krino-foods.json\",\n    emptyColumn: false,\n    databaseName: \"krinofoods\",\n  },\n  // {\n  //   value: \"Krishna Foods\",\n  //   slug: \"krishna-food-corp\",\n  //   jsonName: \"krishna-foods-products.json\",\n  //   emptyColumn: true,\n  //   databaseName: \"krishnafoodsproducts\",\n  // },\n  // {value:'',slug:'',jsonName:'krishna.json',emptyColumn:false,databaseName:'krishnas'},\n  {\n    value: \"Leblon foods\",\n    slug: \"leblon-foods\",\n    jsonName: \"leblon.json\",\n    emptyColumn: false,\n    databaseName: \"leblons\",\n  },\n  // {\n  //   value: \"Loumidis foods\",\n  //   slug: \"loumidis-foods\",\n  //   jsonName: \"loumidis-food.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"loumidisfoods\",\n  // }, \n  // {\n  //   value: \"Rajbhog Food\",\n  //   slug: \"rajbhog-food\",\n  //   jsonName: \"rajbhog-food.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"rajbhogfood\",\n  // }, \n  // {\n  //   value: \"Bakemark\",\n  //   slug: \"bakemark\",\n  //   jsonName: \"balemark.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"bakemark\",\n  // }, \n  // {\n  //   value: \"Solid Trade\",\n  //   slug: \"solid-trade\",\n  //   jsonName: \"solid-trade.json\",\n  //   emptyColumn: true,\n  //   databaseName: \"solidtrade\",\n  // }, \n  // {\n  //   value: \"Raja Food Vegetables\",\n  //   slug: \"raja-food-vegetables\",\n  //   jsonName: \"raja-food-vegetables.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"rajafoodvegetables\",\n  // }, \n  {\n    value: \"Maharaja food importers\",\n    slug: \"maharaja-food-importers\",\n    jsonName: \"maharaja.json\",\n    emptyColumn: false,\n    databaseName: \"maharajas\",\n  },\n  {\n    value: \"Meenaxi enterprise\",\n    slug: \"meenaxi-enterprise\",\n    jsonName: \"meenaxi.json\",\n    emptyColumn: false,\n    databaseName: \"meenaxis\",\n  },\n  \n  // {\n  //   value: \"Mels ice-cream\",\n  //   slug: \"mels-ice-cream\",\n  //   jsonName: \"mel-icecream.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"melicecreams\",\n  // }, \n  {\n    value: \"Moda food\",\n    slug: \"moda-food\",\n    jsonName: \"moda-food-ny.json\",\n    emptyColumn: true,\n    databaseName: \"modafoodnies\",\n  }, \n  {\n    value: \"Mr pickle\",\n    slug: \"mr-pickle\",\n    jsonName: \"mr-pickle.json\",\n    emptyColumn: false,\n    databaseName: \"mrpickles\",\n  }, \n  // {value:'',slug:'',jsonName:'my-baby-ev.json',emptyColumn:false,databaseName:'mybabyevs'},\n  {\n    value: \"Nassau candy\",\n    slug: \"nassau-candy\",\n    jsonName: \"nassau.json\",\n    emptyColumn: false,\n    databaseName: \"nassaus\",\n  },\n  // {\n  //   value: \"Crestwood Farms\",\n  //   slug: \"crestwood-farms\",\n  //   jsonName: \"crestwood-farms.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"crestwoodfarms\",\n  // }, \n  {\n    value: \"New reliance traders\",\n    slug: \"new-reliance-traders\",\n    jsonName: \"new-reliance.json\",\n    emptyColumn: true,\n    databaseName: \"newreliances\",\n  },\n  {\n    value: \"New york wholesale\",\n    slug: \"new-york-wholesale\",\n    jsonName: \"new-york-wholesale.json\",\n    emptyColumn: false,\n    databaseName: \"newyorkwholesales\",\n  },\n  {\n    value: \"Nirav Indian groceries\",\n    slug: \"nirav-indian-groceries\",\n    jsonName: \"nirav-indian-groceries.json\",\n    emptyColumn: false,\n    databaseName: \"niravindiangroceries\",\n  }, \n  // {\n  //   value: \"Grace Lafe\",\n  //   slug: \"grace-lafe\",\n  //   jsonName: \"grace-lef.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"gracelafe\",\n  // }, \n  {\n    value: \"Nupur trading\",\n    slug: \"nupur-trading\",\n    jsonName: \"nupur.json\",\n    emptyColumn: false,\n    databaseName: \"nupurs\",\n  },\n  {\n    value: \"NY zara food\",\n    slug: \"ny-zara-food\",\n    jsonName: \"ny-zara-food-inc.json\",\n    emptyColumn: false,\n    databaseName: \"nyzarafoodincs\",\n  },\n  {\n    value: \"On time distribution\",\n    slug: \"on-time-distribution\",\n    jsonName: \"ontime.json\",\n    emptyColumn: false,\n    databaseName: \"ontimes\",\n  }, \n\n  //  added by sahil on 11 jan 2022.\n  {\n    value: \"Optima foods\",\n    slug: \"optima-foods\",\n    jsonName: \"optimal.json\",\n    emptyColumn: false,\n    databaseName: \"optimals\",\n  },\n  // {\n  //   value: \"Pams creations\",\n  //   slug: \"pams-creations\",\n  //   jsonName: \"pams.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"pams\",\n  // }, \n  {\n    value: \"Pexco INC.\",\n    slug: \"pexco-inc\",\n    jsonName: \"pexco.json\",\n    emptyColumn: false,\n    databaseName: \"pexcos\",\n  }, \n  {\n    value: \"PGL trade\",\n    slug: \"pgl-trade\",\n    jsonName: \"pgl-trade.json\",\n    emptyColumn: false,\n    databaseName: \"pgltrades\",\n  }, \n  {\n    value: \"Preferred beverage\",\n    slug: \"referred-beverage\",\n    jsonName: \"preferred-beverage.json\",\n    emptyColumn: false,\n    databaseName: \"preferredbeverages\",\n  },\n  // {\n  //   value: \"Priya foods\",\n  //   slug: \"priya-foods\",\n  //   jsonName: \"priya-foods-usa.json\",\n  //   emptyColumn: true,\n  //   databaseName: \"priyafoodsusas\",\n  // },\n  {\n    value: \"Produce n More\",\n    slug: \"produce-n-more\",\n    jsonName: \"produce-n-more.json\",\n    emptyColumn: false,\n    databaseName: \"producenmores\",\n  }, \n  {\n    value:'Pure Ghee',\n    slug:'pure-ghee',\n    jsonName:'pure-ghee.json',\n    emptyColumn:false,\n    databaseName:'pureghees'\n  }, \n  // {\n  //   value: \"Putul distributors\",\n  //   slug: \"putul-distributors\",\n  //   jsonName: \"putull-dist.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"putulldists\",\n  // },\n  // added by sahil on 11 jan 2022\n  {\n    value: \"Radhey foods\",\n    slug: \"radhey-food\",\n    jsonName: \"radhey-foods.json\",\n    emptyColumn: false,\n    databaseName: \"radheyfoods\",\n  } ,\n  // {\n  //   value: \"Raja foods\",\n  //   slug: \"raja-foods\",\n  //   jsonName: \"raja-foods.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"rajafoods\",\n  // }, \n  {\n    value: \"Rane music\",\n    slug: \"ranemusic\",\n    jsonName: \"rane-music.json\",\n    emptyColumn: false,\n    databaseName: \"ranemusics\",\n  },\n  {\n    value: \"Rite source corp\",\n    slug: \"ritesource-corp\",\n    jsonName: \"rite-source-corp.json\",\n    emptyColumn: false,\n    databaseName: \"ritesourcecorps\",\n  }, \n  // {value:'',slug:'',jsonName:'rite-source.json',emptyColumn:false,databaseName:'ritesources'},\n  // {value:'',slug:'',jsonName:'riya.json',emptyColumn:false,databaseName:'riyas'},\n  // {\n  //   value: \"Rollin dairy\",\n  //   slug: \"rollin-dairy\",\n  //   jsonName: \"rollin-diary.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"rollindiaries\",\n  // }, \n  // {\n  //   value: \"Arya International\",\n  //   slug: \"arya-international\",\n  //   jsonName: \"arya-international.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"aryainternational\",\n  // }, \n  {\n    value: \"Ron foods\",\n    slug: \"ron-foods\",\n    jsonName: \"ron-foods.json\",\n    emptyColumn: false,\n    databaseName: \"ronfoods\",\n  },\n  // {\n  //   value: \"Kadakia International Group\",\n  //   slug: \"kadakia-international-group\",\n  //   jsonName: \"kadakia-international-group.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"kadakiainternationalgroup\",\n  // }, // database not found \n  //  {\n  //   value: \"Samar Trading Corp\",\n  //   slug: \"samar-trading-corp\",\n  //   jsonName: \"samar-trading-corp.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"samartradingcorp\",\n  // }, \n  // {\n  //   value: \"Aroma Flavour\",\n  //   slug: \"aroma-flavour\",\n  //   jsonName: \"aroma-flavour.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"aromaflavour\",\n  // }, \n  // {\n  //   value: \"Apna Bazar\",\n  //   slug: \"apna-bazar\",\n  //   jsonName: \"apna-bazar.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"apnabazar\",\n  // }, // not complete in regex .\n  // {value:'',slug:'',jsonName:'ron.json',emptyColumn:false,databaseName:'rons'},\n  {\n    value: \"Sankaj\",\n    slug: \"sankaj\",\n    jsonName: \"sankaj.json\",\n    emptyColumn: false,\n    databaseName: \"sankajs\",\n  }, \n  {\n    value: \"Sea mark\",\n    slug: \"sea-mark\",\n    jsonName: \"seamark.json\",\n    emptyColumn: false,\n    databaseName: \"seamarks\",\n  }, \n // On 14 jan 2020 down to up ⬆︎ by sahil \n\n  // {\n  //   value: \"Shakti group\",\n  //   slug: \"shakti-group-usa\",\n  //   jsonName: \"shakti.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"shaktis\",\n  // }, \n  {\n    value: \"Shata traders\",\n    slug: \"shata-traders\",\n    jsonName: \"shata.json\",\n    emptyColumn: true,\n    databaseName: \"shatas\",\n  }, \n  // {  \n  //   value: \"Himalaya International\",\n  //   slug: \"himalaya-international\",\n  //   jsonName: \"himalaya-international.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"himalayainternational\",\n  // }, \n  \n  {\n    value: \"Shine foods\",\n    slug: \"shine-foods\",\n    jsonName: \"shine.json\",\n    emptyColumn: false,\n    databaseName: \"shines\",\n  }, \n  {\n    value: \"Shreeji Jay/Shreeji  \",\n    slug: \"shreeji-jay\",\n    jsonName: \"shreeji-jay.json\",\n    emptyColumn: false,\n    databaseName: \"shreejijay\",\n  }, \n  // {\n  //   value: \"Shreeji\",\n  //   slug: \"shreeji\",\n  //   jsonName: \"shreeji.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"shreejis\",\n  // }, \n  {\n        value:'Singh-and-singh',\n        slug:'singh-and-singh',\n        jsonName:'singh-and-singh.json',\n        emptyColumn:false,\n        databaseName:'singhandsingh'\n},\n  // {\n  //   value: \"Slaughter house\",\n  //   slug: \"slaughter-house\",\n  //   jsonName: \"slaughter-house.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"slaughterhouses\",\n  // }, \n  {\n    value: \"Spicy sense\",\n    slug: \"spicy-sense\",\n    jsonName: \"spicy-sense.json\",\n    emptyColumn: false,\n    databaseName: \"spicysenses\",\n  }, \n  {\n    value: \"Spicy world\",\n    slug: \"spicy-world\",\n    jsonName: \"spicy-world.json\",\n    emptyColumn: false,\n    databaseName: \"spicyworlds\",\n  },\n\n  // On 13 jan 2020 down to up ⬆︎ by sahil \n  {\n    value: \"Surati\",\n    slug: \"surati\",\n    jsonName: \"surati.json\",\n    emptyColumn: false,\n    databaseName: \"suratis\",\n  }, \n  // {\n  //   value: \"Symco distributor\",\n  //   slug: \"symco-distributor\",\n  //   jsonName: \"symco-distributor.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"symcodistributors\",\n  // },\n  {\n    value: \"Temin distribution\",\n    slug: \"temin-distribution\",\n    jsonName: \"temin.json\",\n    emptyColumn: false,\n    databaseName: \"temins\",\n  }, \n // aded by sahil on 11 jan 2022\n  {\n    value: \"Turkana food\",\n    slug: \"turkana-food\",\n    jsonName: \"turkana.json\",\n    emptyColumn: false,\n    databaseName: \"turkanas\",\n  }, \n  {\n    value: \"Two brother wholesale\",\n    slug: \"two-brother-wholesale\",\n    jsonName: \"two-brother-wholesale.json\",\n    emptyColumn: false,\n    databaseName: \"twobrotherwholesales\",\n  },\n  {\n    value: \"Unique importer\",\n    slug: \"unique-importer\",\n    jsonName: \"unique-importer.json\",\n    emptyColumn: false,\n    databaseName: \"uniqueimporters\",\n  }, \n  {\n    value: \"US gourmet\",\n    slug: \"us-gourmet-food\",\n    jsonName: \"us-gourmet-food.json\",\n    emptyColumn: false,\n    databaseName: \"usgourmetfoods\",\n  }, \n  {\n    value: \"USA Halal\",\n    slug: \"usa-halal-foods\",\n    jsonName: \"usa-halal.json\",\n    emptyColumn: false,\n    databaseName: \"usahalals\",\n  }, \n  // {\n  //   value: \"Vadilal\",\n  //   slug: \"vadilal\",\n  //   jsonName: \"vadilal.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"vadilals\",\n  // }, \n  // {\n  //   value: \"Vibrant enterprise\",\n  //   slug: \"vibrant-enterprise\",\n  //   jsonName: \"vibrant.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"vibrants\",\n  // }, \n  {\n    value: \"Vdyas\",\n    slug: \"vidyas\",\n    jsonName: \"vidyas.json\",\n    emptyColumn: false,\n    databaseName: \"vidyas\",\n  },\n  // {\n  //   value: \"Vijay home foods\",\n  //   slug: \"vijay-food\",\n  //   jsonName: \"vijay-home-foods.json\",\n  //   emptyColumn: false,\n  //   databaseName: \"vijayhomefoods\",\n  // }, \n  {\n    value: \"Vintage food\",\n    slug: \"vintage-food\",\n    jsonName: \"vintage.json\",\n    emptyColumn: false,\n    databaseName: \"vintages\",\n  },\n  // {value:'',slug:'',jsonName:'wave-ron-foods.json',emptyColumn:false,databaseName:'waveronfoods'}\n];\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"DisplayData_main__3dZaC\",\"Filter\":\"DisplayData_Filter__1u_nu\",\"Apply\":\"DisplayData_Apply__GjHhP\",\"container\":\"DisplayData_container__2MkRT\",\"HeadStyle\":\"DisplayData_HeadStyle__PCmCu\",\"TableText\":\"DisplayData_TableText__hhvZ2\",\"records\":\"DisplayData_records__1Gi0X\",\"red\":\"DisplayData_red__24S03\",\"image\":\"DisplayData_image__3STA7\",\"button\":\"DisplayData_button__GadqQ\",\"tooltip\":\"DisplayData_tooltip__fXq_c\",\"tooltipIsReviewed\":\"DisplayData_tooltipIsReviewed__29ewR\",\"element\":\"DisplayData_element__3jIVP\",\"free\":\"DisplayData_free__1jKz9\",\"tablewrapper\":\"DisplayData_tablewrapper__AuFC6\",\"divRow\":\"DisplayData_divRow__1M_V6\"};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 7h2v2h-2zm0 4h2v6h-2zm1-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'InfoOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\n\nexports.default = _default;","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { InventoryService } from \"../../services/InventoryService\";\nimport Button from \"../../UI/Button\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\n\nconst UpdateInventory = (props) => {\n  // const header = props.header;\n  const [newInventoryData, setNewInventoryData] = useState(\n    props.newInventoryData\n  );\n  const [posProducts, setPosProducts] = useState([]);\n  const [redirect, setRedirect] = useState(false);\n  const [loader, setLoader] = useState(true);\n  const [wooComProducts, setWooComProducts] = useState([]);\n  const inventoryService = new InventoryService();\n  const header = [\n    \"Serial No.\",\n    \"Barcode\",\n    \"POS SKU\",\n    \"Qty Shipped\",\n    \"ITEM NO\",\n    \"DESCRIPTION\",\n    \"Units in  Case\",\n    \"Case cost\",\n    \"Extended Price\",\n    \"Unit Cost \",\n    \"Unit Price\",\n    \"Mark up (%)\"\n  ];\n\n  const renderTableHeader = () => {\n    return header.map((key, index) => {\n      return (\n        <th\n          key={index}\n          style={{\n            position: \"sticky\",\n            top: \"70px\",\n            background: \"grey\",\n          }}\n        >\n          {key.toUpperCase()}\n        </th>\n      );\n    });\n  };\n  const renderTableData = () => {\n    let rows = newInventoryData.map((element, index) => {\n      return (\n        <tr\n          key={index}\n        >\n          <td>{index + 1}</td>\n          <td>{element.barcode}</td>\n          <td>{element.posSku}</td>\n          <td>{element.qty}</td>\n          <td>{element.itemNo}</td>\n          <td>{element.description}</td>\n          <td>{element.pieces}</td>\n          <td>{element.unitPrice}</td>\n          <td>{element.extendedPrice}</td>\n          <td>{element.cp}</td>\n          <td>{element.sp}</td>\n          <td>{element.markup}</td>\n        </tr>\n      );\n    });\n    return (\n      <div style={{ marginTop: \"70px\" }}>\n        <table className=\"table table-hover table-responsive-sm\">\n          <tbody>\n            <tr>{renderTableHeader()}</tr>\n            {rows}\n          </tbody>\n        </table>\n        <div className=\"d-flex justify-content-start\">\n          <Button\n            text=\"Back\"\n            color=\"btn btn-info\"\n            type=\"submit\"\n            onClick={() => props.goBack(false)}\n          />\n        </div>\n        <div className=\"d-flex justify-content-center\">\n          <Button\n            text=\"Submit\"\n            color=\"btn btn-info\"\n            type=\"submit\"\n            onClick={pushInventoryDetails}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const pushInventoryDetails = async () => {\n    setLoader(true);\n    let data = newInventoryData.map((element) => {\n      return {\n        item: element.itemNo,\n        qty: parseInt(element.qty) * parseInt(element.pieces),\n        cp: element.unitPrice,\n        markup: element.markup,\n        sp: element.sp,\n        description: element.description,\n      };\n    });\n\n    var duplicates = {};\n    for (var i = 0; i < data.length; i++) {\n      if (duplicates.hasOwnProperty(data[i].item)) {\n        duplicates[data[i].item].push(i);\n      } else if (data.lastIndexOf(data[i].item) !== i) {\n        duplicates[data[i].item] = [i];\n      }\n    }\n\n    let tempData = Object.values(duplicates).filter((ele) => ele.length > 1);\n    if (tempData.length > 0) {\n      tempData.forEach((index) => {\n        let temp = 0;\n        index.forEach((val) => {\n          if (data[val]) {\n            // console.log(\"data[val]\", data[val]);\n            temp += data[val].qty;\n            if (temp - data[val].qty !== 0) {\n              data[val] = null;\n            }\n          }\n        });\n        data[index[0]].qty = temp;\n      });\n    }\n    data = data.filter((ele) => ele !== null);\n\n    /**\n     * add the fileds of  data from the woocom & ocr\n     */\n    let updatedWoocomProducts = data\n      .map((product, index) => {\n        /**find index of the item in fetched woocom product list */\n        const wooIndex = wooComProducts.findIndex(\n          (wooProduct) => product.item === wooProduct.itemNo\n        );\n        if (wooIndex !== -1) {\n          /**get the qty & other fileds of the woocom product */\n          let { id, stock_quantity } = wooComProducts[wooIndex];\n          stock_quantity += product.qty;\n          const regular_price = product.sp;\n          return { id, regular_price, stock_quantity, itemNo: product.item };\n        }\n        return null;\n      })\n      .filter((item) => item !== null);\n\n    await pushToWoocom(updatedWoocomProducts);\n    await pushToPOS(posProducts);\n\n    setLoader(false);\n    // if (itemsNotPushed.length === 0) {\n    window.alert(\"Inventory updated successfully\");\n    setRedirect(true);\n    // } else {\n    //   window.alert(\"Inventory not updated\");\n    // }\n  };\n\n  const pushToWoocom = async (products) => {\n    setLoader(true);\n    const responses = await Promise.all(\n      products.map(async (product) => {\n        try {\n          const res = await inventoryService.UpdateProductDetails(product.id, {\n            regular_price: product.regular_price,\n            stock_quantity: product.stock_quantity,\n          });\n          const { id, name, regular_price, stock_quantity } = res;\n          return {\n            id,\n            name,\n            regular_price,\n            stock_quantity,\n            itemNo: product.itemNo,\n          };\n        } catch (error) {\n          console.log(error);\n          alert(\"Couldn't update product on website.\");\n          return null;\n        }\n      })\n    );\n    setLoader(false);\n  };\n\n  const pushToPOS = async (products) => {\n    setLoader(true);\n    console.log(products);\n    const responses = await Promise.all(\n      products.map(async (product) => {\n        try {\n          const {\n            COST,\n            PRICE,\n            UPC,\n            TOTALQTY,\n            isNew,\n            ITEMNAME,\n            BUYASCASE,\n            CASEUNITS,\n            CASECOST,\n            SKU,\n            DEPNAME,\n            itemNo\n          } = product;\n          const res = await inventoryService.UpdatePOSProducts(\n            JSON.stringify({\n              UPC,\n              ITEMNAME,\n              DESCRIPTION: \"\",\n              PRICE,\n              COST,\n              QTY: TOTALQTY,\n              SIZE: \"\",\n              PACK: \"\",\n              REPLACEQTY: 1,\n              DEPARTMENT: DEPNAME,\n              CATEGORY: \"\",\n              SUBCATEGORY: \"\",\n              ISFOODSTAMP: 1,\n              ISWEIGHTED: 0,\n              ISTAXABLE: 1,\n              VENDORNAME: props.invoice,\n              VENDORCODE: itemNo,\n              VENDORCOST: \"\",\n              ISNEWITEM: isNew ? 1 : 0,\n              BUYASCASE,\n              CASEUNITS,\n              CASECOST,\n              COMPANYNAME: props.invoice,\n              PRODUCTCODE: itemNo,\n            })\n          );\n          console.log(\"updated pos data\", res);\n          const data = {\n            UPC,\n            SKU,\n            Cost: COST,\n            ItemName: ITEMNAME,\n            Price: PRICE,\n            TotalQty: TOTALQTY,\n          };\n          if (isNew) {\n            const response = await inventoryService.CreateDBProduct(data);\n            console.log(\"Created new product\", response);\n          } else {\n            const response = await inventoryService.UpdateDBProduct({\n              count: parseInt(product.qty) * parseInt(product.pieces),\n              UPC,\n            });\n            console.log(\"updated existing product\", response);\n          }\n\n          console.log(\"res from POS\", res);\n          return true;\n        } catch (error) {\n          console.log(error);\n          return null;\n        }\n      })\n    );\n    setLoader(false);\n  };\n  useEffect(() => {\n    async function getProducts() {\n      const items = await Promise.all(\n        newInventoryData.map(async (row) => {\n          try {\n            const res = await inventoryService.GetProductDetails(row.barcode);\n            const {\n              id,\n              name,\n              regular_price,\n              price,\n              sku,\n              slug,\n              stock_quantity,\n              sale_price,\n            } = res[0];\n            return {\n              id,\n              name,\n              regular_price,\n              price,\n              sku,\n              slug,\n              stock_quantity,\n              sale_price,\n              itemNo: row.itemNo,\n            };\n          } catch (error) {\n            // tempNotFoundProducts.push(row);\n            console.log(\"Couldn't fetch product from woodpress.\", row.itemNo);\n            return null;\n          }\n        })\n      );\n      setLoader(false);\n      setWooComProducts(items.filter((ele) => ele !== null));\n      // setNotFoundProducts(tempNotFoundProducts);\n    }\n\n    async function getPosProducts() {\n      setLoader(true);\n      let hasErrorOccured = false;\n      const items = await Promise.all(\n        newInventoryData\n          .filter((row) => !row.isForReview)\n          .map(async (row) => {\n            try {\n              const res = await inventoryService.GetPOSProductDetails(\n                row.barcode\n              );\n              console.log(\"fetched pos data\", res);\n              const { SKU, UPC, ITEMNAME, TOTALQTY, DEPNAME } = res[0];\n              return {\n                ...row,\n                COST: row.cp,\n                PRICE: row.sp,\n                SKU,\n                UPC,\n                ITEMNAME,\n                TOTALQTY:\n                  parseInt(row.qty) * parseInt(row.pieces) + parseInt(TOTALQTY),\n                itemNo: row.itemNo,\n                isNew: false,\n                BUYASCASE: 1,\n                CASEUNITS: row.pieces.toString(),\n                CASECOST: row.unitPrice.toString(),\n                DEPNAME,\n              };\n            } catch (error) {\n              hasErrorOccured = true;\n              return {\n                ...row,\n                COST: row.cp,\n                PRICE: row.sp,\n                SKU: row.posSku,\n                UPC: row.barcode,\n                ITEMNAME: row.description,\n                TOTALQTY: parseInt(row.qty) * parseInt(row.pieces),\n                itemNo: row.itemNo,\n                isNew: true,\n                BUYASCASE: 1,\n                CASEUNITS: row.pieces.toString(),\n                CASECOST: row.unitPrice.toString(),\n                DEPNAME: \"\",\n              };\n            }\n          })\n      );\n      if (hasErrorOccured) {\n        alert(\"Couldn't fetch some data from POS\");\n      }\n      setLoader(false);\n      setPosProducts(items.filter((ele) => ele !== null));\n    }\n    getProducts();\n    getPosProducts();\n  }, []);\n\n  if (redirect) {\n    return <Redirect to=\"/\" />;\n  }\n  if (loader) {\n    return <Spinner />;\n  }\n  return <div>{renderTableData()}</div>;\n};\n\nexport default UpdateInventory;\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport { name, version } from '../package.json';\n\nfirebase.registerVersion(name, version, 'app');\nfirebase.SDK_VERSION = version;\n\nexport default firebase;\n","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddCircle');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar SIZE = 44;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block'\n    },\n\n    /* Styles applied to the root element if `variant=\"static\"`. */\n    static: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: '$circular-rotate 1.4s linear infinite'\n    },\n\n    /* Styles applied to the root element if `variant=\"determinate\"`. */\n    determinate: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {\n      display: 'block' // Keeps the progress centered\n\n    },\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n    circleStatic: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: '$circular-dash 1.4s ease-in-out infinite',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"determinate\"`. */\n    circleDeterminate: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n    '@keyframes circular-rotate': {\n      '0%': {\n        // Fix IE 11 wobbly\n        transformOrigin: '50% 50%'\n      },\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], {\n      'determinate': classes.determinate,\n      'indeterminate': classes.indeterminate,\n      'static': classes.static\n    }[variant]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), /*#__PURE__*/React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'determinate': classes.circleDeterminate,\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, function (props) {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: chainPropTypes(PropTypes.oneOf(['determinate', 'indeterminate', 'static']), function (props) {\n    var variant = props.variant;\n\n    if (variant === 'static') {\n      throw new Error('Material-UI: `variant=\"static\"` was deprecated. Use `variant=\"determinate\"` instead.');\n    }\n\n    return null;\n  })\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","import React, { useState, useEffect } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { dropdownOptions } from \"../../utils/invoiceList\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TesseractService } from \"../../services/TesseractService\";\n\nimport { InventoryService } from \"../../services/InventoryService\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport { Api } from \"../../services/Api\";\nimport HicksData from \"../DisplayData/Hicksville.json\";\nimport { CContainer, CModalHeader, CCol, CFormGroup, CInput, CButton, CLabel, CModal, CModalBody, CModalFooter, CRow } from \"@coreui/react\";\nimport Button from \"../../UI/Button\";\nimport styles from \"../DisplayData/DisplayData.module.css\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport UpdateInventory from \"../Update/UpdateInventory\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport  CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport Cancel from \"@material-ui/icons/Cancel\";\n// import CircularProgress from '@material/circular-progress';\n// import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n// import Loading from 'react-loader-spinner';\n\nimport { useSelector} from \"react-redux\";\n\n\nconst useStyles = makeStyles({\n        root: {\n        width: \"100%\",\n        // paddingTop: 50,\n        // height: \"125px\"\n        },\n        container: {\n            maxHeight: \"80vh\",\n            marginTop: 10,\n          },\n          table: {\n            \"& thead th\": {\n              fontWeight: \"600\",\n              fontSize: 20,\n              backgroundColor: \"grey\",\n            },\n            \"& tbody td\": {\n              fontWeight: \"300\",\n            },\n            \"& tbody tr:hover\": {\n              backgroundColor: \"#fffbf2\",\n              cursor: \"pointer\",\n            },\n          },\n    });\nlet emptyColumnList = [];\n\nconst SaveInvoiceData = () => {\n\n    const tesseractService = new TesseractService();\n    const classes = useStyles();\n    const [date, setDate] = useState(\"\");\n    const [invoice, setInvoice] = useState({});\n    const [invoiceNo, setInvoiceNo] = useState(\"\");\n    const numOfCollections = dropdownOptions.length;\n    const dropdownLabel = \"Select Invoice(\"+   numOfCollections   + \")\";\n    // const [inv, setInv] = useState(\"\");\n    const inv = useSelector(state => state.openInvoice.inv);\n    // const [ num, setNum] = useState(\"\");\n    const num = useSelector(state => state.openInvoice.num);\n    // const [day, setDay] = useState(\"\");\n    const day = useSelector(state => state.openInvoice.day);\n    // const [apiLoader, setApiLoader] = useState(false);\n\n    const apiLoader = useSelector(state => state.loaders.apiLoader)\n    const dispatch = useDispatch();\n\n    \n\n    //Following for display data functionalities.\n    const [hicksvilleData, setHicksvilleData] = useState([]);\n    let saveInvoiceFlag  = 1;\n    const api = new Api();\n    const [tableData, setTableData] = useState([]);\n    const [emptyColumn, setEmptyColumn] = useState([]);\n    const [productDetails, setProductDetails] = useState([]);\n    const [pushToInventory, setPushToInventory] = useState(false);\n    const [inventoryData, setInventoryData] = useState([]);\n    const [itemNoDropdown, setItemNoDropdown] = useState([]);\n    \n    // const [loader, setLoader] = useState(false);\n    const loader = useSelector(state => state.loaders.loader);\n\n    const [reviewItems, setReviewItems] = useState([]);\n    const [showPosIndex, setShowPosIndex] = useState(-1);\n    const inventoryService = new InventoryService();\n    const [showModal, setShowModal] = useState(false);\n    // const [stateUpdated, setStateUpdated] = useState(\"false\");\n    const [costInc, setCostInc] = useState(\"false\");\n    const [costDec, setCostDec] = useState(\"false\");\n    const [unitCost, setUnitCost] = useState(\"\");\n    const [isUpdated, setIsUpdated] = useState(\"false\");\n    const [updateIndex, setUpdateIndex] = useState(-1);\n    let posProducts = []\n    let wooComProducts = [];\n    let singleItemData = [];\n    let itemNo = \"\";\n    // const [posProducts, setPosProducts] = useState([]);\n\n    // const [notFounds, setNotFounds] = useState(\"false\");\n    const notFounds = useSelector(state => state.redItems.notFounds);\n\n    // const [unitsInCase, setUnitsInCase] = useState(\"\");\n    const unitsInCase = useSelector(state => state.redItems.unitsInCase);\n\n    // const [price, setPrice] = useState(\"\");\n    const price = useSelector(state => state.redItems.price);\n\n    const [redState, setRedState] = useState(\"true\");\n    let updateSku = \"\";\n    const [searchVal, setSearchVal] = useState(\"\");\n    const [options, setOptions] = useState([]);\n    const [detailsModal, setDetailsModal] = useState(false);\n    const [invoiceOptions, setInvoiceOptions] = useState([]);\n    const [details, setDetails] = useState(\"\");\n    const [detailsIndex, setDetailsIndex] = useState(-1);\n\n    // const [userEmail, setUserEmail] = useState(\"\");\n    const userEmail = useSelector(state => state.userDetails.userEmail);\n    \n    // const [todayDate, setTodayDate] = useState(\"\");\n    const todayDate = useSelector(state => state.userDetails.todayDate);\n\n    \n    // const [openInvoice, setOpenInvoice] = useState(false);\n    const openInvoice = useSelector(state => state.openInvoice.openInvoice);\n\n    const[dropdownLoader, setDropdownLoader] = useState(false);\n    const [fetchingOptions, setFetchingOptions] = useState(false);\n    const [dropdownIndex, setDropwdownIndex] = useState(-1);\n\n    const invoiceHeader = [\n      \"Sr.No.\",\n      \"Invoice\",\n      \"Invoice No.\",\n      \"Invoice Date\",\n      \"Open Invoice\"\n    ]\n\n    \n    const header = [\n        \"Serial No.\",\n        \"Barcode\",\n        \"POS SKU\",\n        \"Qty Shipped\",,\n        \"Unit Cost\",\n        \"ITEM NO\",\n        \"Link Product\",\n        \n        \"DESCRIPTION\",\n        \"Units in  Case\",\n        \"Case cost\",\n        \"Extended Price\",\n       \n        \"Unit Price\",\n        \"Mark up (%)\",\n        \"Add Details\",\n        \"Tick to Delete\",\n        \"Update POS\",\n        \"Reverse POS Update\",\n        \"NO LINKING\",\n        \"Serial No.(2)\"\n    ];\n\n    const itemNoDescription = [\n      \"advance-foods\",\n      \"family-five\",\n      \"moda-food\"\n    ];\n\n    const showPosState = useSelector(state => state.showPosState);\n    // const [showPosState, setShowPosState] = useState({\n    //     item: \"\",\n    //     quantity: \"\",\n    //     description: \"\",\n    //     price: \"\",\n    //     pos: \"\",\n    //     barcode: \"\",\n    //     posSku: \"\",\n    //     invoice: \"\",\n    //     size: \"\",\n    //     department: \"\",\n    //     unitCost: \"\",\n    //     unitPrice: \"\",\n    // });\n\n  //***************  INDIVIDUAL ITEM UPDATE FUNCTIONALITY STARTS*******************************************.\n\n    //Function to fetch wooCom Prpducts.\n    async function getProducts() {\n      console.log(\"IN WOOCOM PRODUCTS\");\n      const items = await Promise.all(\n        singleItemData.map(async (row) => {\n          console.log(row.barcode);\n          try {\n            const res = await inventoryService.GetProductDetails(row.barcode);\n            console.log(res);\n            const {\n              id,\n              name,\n              regular_price,\n              price,\n              sku,\n              slug,\n              stock_quantity,\n              sale_price,\n            } = res[0];\n            return {\n              id,\n              name,\n              regular_price,\n              price,\n              sku,\n              slug,\n              stock_quantity,\n              sale_price,\n              itemNo: row.itemNo,\n            };\n          } catch (error) {\n            // tempNotFoundProducts.push(row);\n\n            // Commented on 13th Dec 2021.\n            // console.log(\"Couldn't fetch product from wordpress.\", row.itemNo);\n            return null;\n          }\n        })\n      );\n      // setLoader(false);\n      dispatch({type: \"LOADER\"});\n      console.log(items);\n      wooComProducts = items;\n      // setWooComProducts(items.filter((ele) => ele !== null));\n      // setNotFoundProducts(tempNotFoundProducts);\n    }\n\n    async function getPosProductsLinkManually(index) {\n\n      console.log(\"tabledata in getPosProductsLinkManually\",tableData);\n\n      // dispatch({type: \"LOADER\"});\n      const res = await inventoryService.GetPOSProductDetails(tableData[index].barcode);\n\n      console.log(\"res is: \", res);\n\n      if(!Array.isArray(res)){\n        alert(\"API not working\");\n        return;\n      }\n\n      // SET ITEMNAME...\n      let codeOrSku = \"\";\n      console.log(\"res[0].ITEMNAME.indexOf(\"-\")\" ,res[0].ITEMNAME.indexOf(\"-\"));\n      let itemName = res[0].ITEMNAME;\n\n      if(res[0].ITEMNAME.indexOf(\"-\") < 0){\n        let itemNoPresent;\n        for(let i = 0; i<itemNoDescription.length; i++){\n          if(itemNoDescription[i] === invoice.slug){\n            itemNoPresent = false;\n            break;\n          }else {\n            itemNoPresent = true;\n            break;\n          }\n        }\n\n        console.log(\"itemNoPresent\",itemNoPresent);\n        if(itemNoPresent){\n          codeOrSku = tableData[index].itemNo;\n        }else{\n          codeOrSku = \"SKU\" + \" \" + tableData[index].posSku; \n        }\n        itemName = res[0].ITEMNAME + \" \" + \"-\" + \" \" + codeOrSku;\n\n        \n      // Do the API Call to update on syprum system.\n      const update = await inventoryService.UpdatePOSProducts(\n        JSON.stringify({\n          UPC: tableData[index].barcode,\n          ITEMNAME: itemName,\n          DESCRIPTION: \"\",\n          PRICE: res[0].PRICE,\n          COST: res[0].COST,\n          QTY: res[0].TOTALQTY,\n          SIZE: \"\",\n          PACK: \"\",\n          REPLACEQTY: 1,\n          DEPARTMENT: res[0].DEPNAME,\n          CATEGORY: \"\",\n          SUBCATEGORY: \"\",\n          ISFOODSTAMP: 1,\n          ISWEIGHTED: 0,\n          ISTAXABLE: 1,\n          VENDORNAME: invoice.slug,\n          VENDORCODE: tableData[index].itemNo,\n          VENDORCOST: \"\",\n          ISNEWITEM: 0,\n          BUYASCASE: 1,\n          CASEUNITS: tableData[index].pieces,\n          CASECOST: (tableData[index].price / tableData[index].qty),\n          COMPANYNAME: invoice.slug,\n          PRODUCTCODE: tableData[index].itemNo,\n          MODELNUM: userEmail.slice(0,4) + \" \" + new Date().toLocaleDateString(),\n          VINTAGE: \"ICMS\",\n        })\n      );\n\n      console.log(\"Helloooooooooooooooooooooooooo update api call\", update);\n      \n      console.log(\"update api call\", update[0].COST);\n      console.log(\"update api call\", update[0].PRICE);\n      console.log(\"update api call\", update[0].ITEMNAME);\n      console.log(\"update api call\", update[0].VENDORCODE);\n      console.log(\"update api call\", invoice.slug);\n      let data1 = {\n        cost: update[0].COST,\n        price: update[0].PRICE,\n        item: update[0].VENDORCODE,\n        itemName:update[0].ITEMNAME,\n        invoice: invoice.slug\n      }\n      \n      // console.log(\"I am posProducts.ITEMNAME from updatedb after Pos\",posProducts[0].ITEMNAME)\n\n      await inventoryService.UpdateDBafterPosUpdate(data1);\n      }\n\n      // const update = await inventoryService.UpdatePOSProducts(\n      //   JSON.stringify({\n      //     UPC,\n      //     ITEMNAME: itemName,\n      //     DESCRIPTION: \"\",\n      //     PRICE: res.PRICE,\n      //     COST: res.COST,\n      //     QTY: res.TOTALQTY,\n      //     SIZE: \"\",\n      //     PACK: \"\",\n      //     REPLACEQTY: 1,\n      //     DEPARTMENT: res.DEPNAME,\n      //     CATEGORY: \"\",\n      //     SUBCATEGORY: \"\",\n      //     ISFOODSTAMP: 1,\n      //     ISWEIGHTED: 0,\n      //     ISTAXABLE: 1,\n      //     VENDORNAME: invoice.slug,\n      //     VENDORCODE: itemNo,\n      //     VENDORCOST: \"\",\n      //     ISNEWITEM: 0,\n      //     BUYASCASE,\n      //     CASEUNITS,\n      //     CASECOST,\n      //     COMPANYNAME: invoice.slug,\n      //     PRODUCTCODE: itemNo,\n      //     MODELNUM: userEmail.slice(0,4) + \" \" + new Date().toLocaleDateString(),\n      //     VINTAGE: \"ICMS\",\n      //   })\n      // );\n\n      // if(tableData[index].posSku === res.SKU) {\n      //     console.log(\"SKU is same\");\n      //     dispatch({type: \"LOADER\"});\n      //   }\n      \n\n    }\n\n    //function to fetch POS products.\n    async function getPosProducts() {\n      console.log(\"IN POS PRODUCTS\");\n      // setLoader(true);\n      dispatch({type: \"LOADER\"});\n      let hasErrorOccured = false;\n      const items = await Promise.all(\n        singleItemData\n          .map(async (row) => {\n            console.log(row.barcode);\n            try {\n              const res = await inventoryService.GetPOSProductDetails(\n                row.barcode\n              );\n              if(!Array.isArray(res)){\n                alert(\"API not working\");\n                return;\n              }\n              console.log(\"fetched pos data\", res);\n              const { SKU, UPC, ITEMNAME, TOTALQTY, DEPNAME } = res[0];\n              console.log(SKU);\n              console.log(updateSku);\n              if(SKU == updateSku){\n                console.log(SKU);\n                console.log(updateSku);\n                return {\n                  ...row,\n                  COST: row.cp,\n                  PRICE: row.sp,\n                  SKU,\n                  UPC,\n                  ITEMNAME,\n                  TOTALQTY:\n                    parseInt(row.qty) * parseInt(row.pieces) + parseInt(TOTALQTY),\n                  itemNo: row.itemNo,\n                  isNew: false,\n                  BUYASCASE: 1,\n                  CASEUNITS: row.pieces.toString(),\n                  CASECOST: row.unitPrice.toString(),\n                  DEPNAME,\n                };\n              } else {\n                alert(\"SKU mismatch!!\");\n              }\n\n              \n              \n            } catch (error) {\n              hasErrorOccured = true;\n              return {\n                ...row,\n                COST: row.cp,\n                PRICE: row.sp,\n                SKU: row.posSku,\n                UPC: row.barcode,\n                ITEMNAME: row.description,\n                TOTALQTY: parseInt(row.qty) * parseInt(row.pieces),\n                itemNo: row.itemNo,\n                isNew: true,\n                BUYASCASE: 1,\n                CASEUNITS: row.pieces.toString(),\n                CASECOST: row.unitPrice.toString(),\n                DEPNAME: \"\",\n              };\n            }\n          })\n      );\n      if (hasErrorOccured) {\n        alert(\"Couldn't fetch some data from POS\");\n      }\n      // setLoader(false);\n      dispatch({type: \"LOADER\"});\n      console.log(items);\n      posProducts = items;\n      console.log(\"posProducts array is: \",posProducts);\n      // setPosProducts(items.filter((ele) => ele !== null));\n    }\n\n    //PUSH TO WOOCOM.\n    const pushToWoocom = async (products) => {\n      // setLoader(true);\n      dispatch({type: \"LOADER\"});\n      const responses = await Promise.all(\n        products.map(async (product) => {\n          try {\n            const res = await inventoryService.UpdateProductDetails(product.id, {\n              regular_price: product.regular_price,\n              stock_quantity: product.stock_quantity,\n            });\n            const { id, name, regular_price, stock_quantity } = res;\n            return {\n              id,\n              name,\n              regular_price,\n              stock_quantity,\n              itemNo: product.itemNo,\n            };\n          } catch (error) {\n            console.log(error);\n            alert(\"Couldn't update product on website.\");\n            return null;\n          }\n        })\n      );\n      // setLoader(false);\n      dispatch({type: \"LOADER\"});\n    };\n\n    //PUSH TO POS.\n    const pushToPOS = async (products) => {\n      // setLoader(true);\n      dispatch({type: \"LOADER\"});\n      console.log(\"products values are: \",products);\n\n\n      const responses = await Promise.all(\n        products.map(async (product) => {\n          \n          try {\n            const {\n              COST,\n              PRICE,\n              UPC,\n              TOTALQTY,\n              isNew,\n              ITEMNAME,\n              BUYASCASE,\n              CASEUNITS,\n              CASECOST,\n              SKU,\n              DEPNAME,\n              itemNo\n            } = product;\n\n            // SET ITEMNAME... \n            let codeOrSku = \"\";\n            console.log(product.itemNo)\n            console.log(ITEMNAME.indexOf(\"-\"));\n            let itemName = ITEMNAME;\n            console.log(\"pushToPos_ITEMNAME : \",ITEMNAME);\n            if(ITEMNAME.indexOf(\"-\") < 0){\n              let itemNoPresent;\n              for(let i = 0; i<itemNoDescription.length; i++){\n                console.log(invoice.slug)\n                if(itemNoDescription[i] === invoice.slug){\n                  itemNoPresent = false;\n                  break;\n                }else {\n                  itemNoPresent = true;\n                  break;\n                }\n              }\n              console.log(itemNoPresent);\n              if(itemNoPresent){\n                codeOrSku = product.itemNo;\n              }else{\n                codeOrSku = \"SKU\" + \" \" + product.posSku \n              }\n              itemName = ITEMNAME + \" \" + \"-\" + \" \" + codeOrSku;\n            }\n\n            const res = await inventoryService.UpdatePOSProducts(\n              JSON.stringify({\n                UPC,\n                ITEMNAME: itemName,\n                DESCRIPTION: \"\",\n                PRICE,\n                COST,\n                QTY: TOTALQTY,\n                SIZE: \"\",\n                PACK: \"\",\n                REPLACEQTY: 1,\n                DEPARTMENT: DEPNAME,\n                CATEGORY: \"\",\n                SUBCATEGORY: \"\",\n                ISFOODSTAMP: 1,\n                ISWEIGHTED: 0,\n                ISTAXABLE: 1,\n                VENDORNAME: invoice.slug,\n                VENDORCODE: itemNo,\n                VENDORCOST: \"\",\n                ISNEWITEM: isNew ? 1 : 0,\n                BUYASCASE,\n                CASEUNITS,\n                CASECOST,\n                COMPANYNAME: invoice.slug,\n                PRODUCTCODE: itemNo,\n                MODELNUM: userEmail.slice(0,4) + \" \" + new Date().toLocaleDateString(),\n                VINTAGE: \"ICMS\",\n              })\n            );\n            console.log(\"updated pos data\", res);\n            const data = {\n              UPC,\n              SKU,\n              Cost: COST,\n              ItemName: ITEMNAME,\n              Price: PRICE,\n              TotalQty: TOTALQTY,\n            };\n            //not needed as of now, parikshit.\n            if (isNew) {\n              const response = await inventoryService.CreateDBProduct(data);\n              console.log(\"Created new product\", response);\n            } else {\n              const response = await inventoryService.UpdateDBProduct({\n                count: parseInt(product.qty) * parseInt(product.pieces),\n                UPC,\n              });\n              console.log(\"updated existing product\", response);\n            }\n  \n            console.log(\"res from POS\", res);\n            return true;\n          } catch (error) {\n            console.log(error);\n            return null;\n          }\n        })\n      );\n      // setLoader(false);\n      dispatch({type: \"LOADER\"});\n    };\n\n    const pushInventoryDetails2 = async () => {\n      console.log(posProducts);\n      // setLoader(true);\n      let data = singleItemData.map((element) => {\n        return {\n          item: element.itemNo,\n          qty: parseInt(element.qty) * parseInt(element.pieces),\n          cp: element.unitPrice,\n          markup: element.markup,\n          sp: element.sp,\n          description: element.description,\n        };\n      });\n  \n      var duplicates = {};\n      for (var i = 0; i < data.length; i++) {\n        if (duplicates.hasOwnProperty(data[i].item)) {\n          duplicates[data[i].item].push(i);\n        } else if (data.lastIndexOf(data[i].item) !== i) {\n          duplicates[data[i].item] = [i];\n        }\n      }\n  \n      let tempData = Object.values(duplicates).filter((ele) => ele.length > 1);\n      if (tempData.length > 0) {\n        tempData.forEach((index) => {\n          let temp = 0;\n          index.forEach((val) => {\n            if (data[val]) {\n              // console.log(\"data[val]\", data[val]);\n              temp += data[val].qty;\n              if (temp - data[val].qty !== 0) {\n                data[val] = null;\n              }\n            }\n          });\n          data[index[0]].qty = temp;\n        });\n      }\n      data = data.filter((ele) => ele !== null);\n  \n      /**\n       * add the fileds of  data from the woocom & ocr\n      */\n     console.log(wooComProducts.length);\n      if(wooComProducts[0] != null){\n        let updatedWoocomProducts = data\n          .map((product, index) => {\n            /**find index of the item in fetched woocom product list */\n            const wooIndex = wooComProducts.findIndex(\n              (wooProduct) => product.item === wooProduct.itemNo\n            );\n            if (wooIndex !== -1) {\n              /**get the qty & other fileds of the woocom product */\n              let { id, stock_quantity } = wooComProducts[wooIndex];\n              stock_quantity += product.qty;\n              const regular_price = product.sp;\n              return { id, regular_price, stock_quantity, itemNo: product.item };\n            }\n            return null;\n          })\n          .filter((item) => item !== null);\n\n        console.log(updatedWoocomProducts); \n        await pushToWoocom(updatedWoocomProducts);\n        }\n      await pushToPOS(posProducts);\n  \n      // setLoader(false);\n      dispatch({type: \"LOADER\"});\n      // if (itemsNotPushed.length === 0) {\n      window.alert(\"Inventory updated successfully\");\n      // setRedirect(true);\n      // } else {\n      //   window.alert(\"Inventory not updated\");\n      // }\n    };\n\n    function toConsoleState() {\n      console.log(wooComProducts);\n      console.log(posProducts);\n      console.log(singleItemData);\n    }\n\n  const pushSingleItemToInventory = async (index) =>{\n\n    // setApiLoader(true);\n    dispatch({type: \"API_LOADER\"});\n    console.log(\"pI_index : \",index);\t\n    \n    // Setting State\n    setShowPosIndex(-1);\n    \n    // tableData also a state\n    console.log(\"pI_tableData : \",tableData);\n    const product = [];\n    console.log(\"pI_emptyColumn : \",emptyColumn);\n    const notFoundItems = emptyColumn.map((i) => tableData[i]);\n    console.log(\"pI_notFoundItems : \",notFoundItems);\n    const tempTable = [];\n    product.push(tableData[index]);\n    console.log(product);\n    product.isUpdated = \"true\";\n    itemNo = product.itemNo;\n    console.log(\"pI_product : \",product);\n    \n    product.forEach((element, index) => {\n      if (\n        !emptyColumn.includes(index) &&\n        element.show === true &&\n        element[\"isForReview\"] != true\n      ) {\n        let rowData = { index: index + 1, ...element };\n        tempTable.push(rowData);\n      }\n    });\n    // console.log(\"notFoundItems\", notFoundItems);\n    console.log(\"pI_tempTable\",tempTable);\n\n    if (emptyColumn.length !== 0) {\n      /** API to push  to not found list */\n      // setLoader(true);\n      dispatch({type: \"LOADER\"});\n      const responses = await Promise.all(\n        notFoundItems.map(async (product) => {\n          try {\n            const data = {\n              Item: product.itemNo,\n              Description: product.description,\n              Quantity: product.qty,\n              Price: product.unitPrice,\n              sku: product.sku,\n              Barcode: product.barcode,\n              PosSKU: product.posSku,\n              InvoiceName: invoice.slug,\n            };\n            console.log(\"pI_data : \",data);\n            await inventoryService.CreateNotFoundItems(data);\n            return true;\n          } catch (error) {\n            console.log(\n              \"Couldn't create not found product\",\n              product.description,\n              { error }\n            );\n            alert(\"Couldn't create product on website.\");\n            return null;\n          }\n        })\n      );\n      // setLoader(false);\n      dispatch({type: \"LOADER\"});\n    }\n\n    const priceIncreasedProducts = tempTable.filter(\n      (product) => product.priceIncrease !== 0\n    );\n    console.log(\"pI_priceIncreasedProducts : \",priceIncreasedProducts);\n    // setLoader(true);\n    dispatch({type: \"LOADER\"});\n    const res = await Promise.all(\n      priceIncreasedProducts.map(async (product) => {\n        try {\n          const data = {\n            invoiceName: invoice.slug,\n            itemName: product.itemNo,\n            value: { Price: product.unitPrice },\n          };\n          console.log(\"pI_data\",data)\n          await inventoryService.UpdateProductFields(data);\n          \n          \n        } catch (error) {\n          console.log(`couldn't update price for product ${product.itemNo}`);\n        }\n      })\n    );\n    // setLoader(false);\n    dispatch({type: \"LOADER\"});\n    // console.log(tempTable);\n    console.log(\"pI_tempTable\",tempTable);\n    tempTable[0].isUpdated = \"true\";\n    console.log(\"pI_tempTable\",tempTable);\n    singleItemData = tempTable;\n    // setPushToInventory(true);\n    console.log(\"pI_singleItemData : \",singleItemData);\n    \n    updateSku = singleItemData[0].posSku;\n\n\n    await getProducts();\n    await getPosProducts();\n    console.log(\"pI_posProducts : \",posProducts);\n    if(posProducts[0] != undefined ){\n      await pushInventoryDetails2();\n      toConsoleState();\n      setIsUpdated(\"true\");\n      setUpdateIndex(index);\n      console.log(\"pI_singleItemData : \",singleItemData);\n      console.log(\"pI_singleItemData.itemNo : \",singleItemData.itemNo);\n      await inventoryService.UpdateInvoiceData(inv, num, day, singleItemData[0].itemNo); \n\n      //Update unit cost n price in db, after update POS.\n      let data1 = {\n        cost: singleItemData[0].cp,\n        price: singleItemData[0].sp,\n        item: singleItemData[0].itemNo,\n        itemName:posProducts[0].ITEMNAME,\n        invoice: invoice.slug\n      }\n      await getPosProducts();\n      console.log(\"I am data from updatedb after Pos\",data1)\n      console.log(\"I am posProducts.ITEMNAME from updatedb after Pos\",posProducts[0].ITEMNAME)\n\n      await inventoryService.UpdateDBafterPosUpdate(data1);\n      \n      //Log Generate.\n      console.log(\"PRODUCTT\");\n      console.log(\"pI_singleItemData : \",singleItemData);\n      const log = {\n        InvoiceName: invoice.slug,\n        InvoiceDate: day,\n        ItemNo: singleItemData[0].itemNo,\n        InvoiceDescription: singleItemData[0].description,\n        PosDescription: singleItemData[0].posName,\n        PosUnitCost: singleItemData[0].cost,\n        PosUnitPrice: singleItemData[0].sellingPrice,\n        OldMarkup: singleItemData[0].margin.toFixed(2).toString(),\n        InvUnitCost: singleItemData[0].cp,\n        InvUnitPrice: singleItemData[0].sp,\n        NewMarkup:( ((singleItemData[0].sp- singleItemData[0].cp)/ singleItemData[0].cp)*100).toFixed(2).toString(),\n        UpdateDate: todayDate,\n        Person: userEmail,\n        TimeStamp: new Date().toTimeString().split(\" \")[0], \n        InvCaseCost: singleItemData[0].unitPrice,\n        InvUnitsInCase: singleItemData[0].pieces,\n        SKU: singleItemData[0].posSku\n      }\n      console.log(\"pI_log : \",log);\n      const logUpdate = await inventoryService.posLogs(log);\n      console.log(\"pI_logUpdate : \",logUpdate)\n      setProductsInTable();\n\n    } else {\n      alert(\"POS not updated!!\");\n      setProductsInTable();\n    }\n    // setApiLoader(false);\n    dispatch({type: \"API_LOADER\"});\n\n    \n    \n  }\n  //***************************INDIVIDUAL ITEM UPDATE FUNCTIONALITY ENDS*****************************************.\n\n  const updateUnits = async (index) => {\n    const item = tableData[index];\n    console.log(item);\n    const data = {\n      invoiceName: inv,\n      itemName: item.itemNo,\n      value: {\n        Quantity: item.pieces\n      }\n    }\n    inventoryService\n    .UpdateProductFields(data)\n    .then((res) => {\n      if (!res) {\n        throw new Error(\"Product not updated\")\n      }\n      console.log(res);\n      alert(\"Successfully updated fields\");\n      // setStateUpdated(true);\n    })\n    .catch((err) => {\n      console.log(err);\n      alert(\"Some error occuured in creating product\");\n    })\n    .finally(setProductsInTable());\n    // console.log(res);\n  }\n \n  const saveDetails = async () => {\n    console.log(detailsIndex);\n    console.log(details);\n    const item = tableData[detailsIndex];\n    console.log(item);\n    const data = {\n      invoice: invoice.slug,\n      itemNo: item.itemNo,\n      details: details\n    }\n    const res = await inventoryService.saveDetails(data);\n    console.log(res);\n    if(res === \"s\"){\n      alert(\"Details added successfully\");\n      setDetails(\"\");\n      setDetailsIndex(-1);\n      toggleModal(\"details\");\n      setProductsInTable();\n    }else {\n      alert(\"Some error Occured.\");\n      setDetailsIndex(-1);\n      setDetails(\"\");\n      toggleModal(\"details\");\n    }\n\n  }\n\n  const getInvoices = async () => {\n    // setApiLoader(true);\n    dispatch({type: \"API_LOADER\"})\n    // setOpenInvoice(false);\n    dispatch({type: \"OPEN_INVOICE\", data: false})\n    console.log(\"gI_invoice : \",invoice);\n    const res = await inventoryService.getSavedInvoices(invoice);\n    console.log(res);\n    // let array = [];\n    // res.map(item => {\n    //   array.push(item.SavedInvoiceNo);\n    // })\n    console.log(res);\n    setInvoiceOptions(res.reverse());\n    \n    // setApiLoader(false);\n    dispatch({type: \"API_LOADER\"})\n\n  }\n\n    const reverseUpdate = async(index) => {\n      console.log(index);\n      console.log(tableData);\n      console.log(tableData[index]);\n      let item = tableData[index];\n      let data = {\n        invoice: invoice.slug,\n        itemNo: item.itemNo,\n      }\n      const result = await inventoryService.reverseUpdate(data);\n      console.log(result);\n      if(result.ok == 1){\n        setProductsInTable();\n      }else {\n        alert(\"Some error occured in updation\");\n      }\n    }\n    \n\n    const reversePOSUpdate = async(index) => {\n      console.log(index);\n      console.log(tableData);\n      console.log(tableData[index]);\n      let item = tableData[index];\n      const result = await inventoryService.reversePOSUpdate(inv, num, day, item.itemNo);\n      if(result.ok == 1){\n        setProductsInTable();\n      }else {\n        alert(\"Some error occured in updation\");\n      }\n\n    }\n\n    const linkingCorrect = async (index) => {\n      console.log(index);\n      console.log(tableData);\n      console.log(tableData[index]);\n      let item = tableData[index];\n      console.log(item)\n      let data = {\n        invoice: inv,\n        itemNo: item.itemNo,\n      }\n      console.log(data);\n      const res = await inventoryService.linkingCorrect(data);\n      console.log(res);\n      if(res.statusText == \"OK\") {\n        \n        const costChange = item.cp - item.cost;\n        const invError = item.cp >= 3*item.cost ? \"YES\" : \"\";\n        \n        let logState = {\n          InvoiceDescription: item.description,\n          PosDescription: item.posName,\n          SKU: item.posSku,\n          Barcode: item.barcode,\n          InvoiceName: inv,\n          ItemCode: item.itemNo,\n          LinkingDate: todayDate,\n          PersonName: userEmail,\n          Size: item.size,\n          PosUnitCost: item.cost,\n          PosUnitPrice: item.sellingPrice,\n          InvoiceNo: num,\n          InvoiceDate: day,\n          Department: item.department,\n          InvUnitCost: item.cp,\n          CostIncrease: \"\",\n          CostDecrease: \"\",\n          CostSame:  \"\",\n          Unidentified: \"YES\",\n          InvError: invError  \n        }\n        const res = await inventoryService.UnidentifiedLog(logState);\n        console.log(res);\n        alert(\"SUCCESS\");\n        setProductsInTable();\n      }else {\n        alert(\"Some error occured\");\n        setProductsInTable();\n      }\n    }\n\n    // const linkManuallyNew = async(index) => {\n    //   console.log(index);\n      \n    //   console.log(\"tabledata in linkManually\",tableData);\n    //   console.log(tableData[index]);\n\n    //   let item = tableData[index];\n    //   console.log(\"item in link manually\", item);\n\n    //   await getPosProductsLinkManually(index);\n\n    // }\n\n    const linkManually = async(index) => {\n      console.log(index);\n      console.log(\"tabledata in linkManually\",tableData);\n      console.log(tableData[index]);\n      let item = tableData[index];\n      console.log(item)\n\n      let data = {\n        invoice: inv,\n        itemNo: item.itemNo,\n      }\n\n      const result = await inventoryService.linkManually(data);\n      console.log(result);\n\n      //Update unit cost from excel.\n      // const skuData = {sku: item.posSku};\n      // const res = await inventoryService.fetchProductFromPosList(skuData);\n      // console.log(res); \n\n\n\n      //Log Generate.\n      const costChange = item.cp - item.cost;\n      const invError = item.cp >= 3*item.cost ? \"YES\" : \"\";\n      console.log(invError);\n      let logState = {\n        InvoiceDescription: item.description,\n        PosDescription: item.posName,\n        SKU: item.posSku,\n        Barcode: item.barcode,\n        InvoiceName: inv,\n        ItemCode: item.itemNo,\n        LinkingDate: todayDate,\n        PersonName: userEmail,\n        Size: item.size,\n        PosUnitCost: item.cost,\n        PosUnitPrice: item.sellingPrice,\n        InvoiceNo: num,\n        InvoiceDate: day,\n        Department: item.department,\n        InvUnitCost: item.cp,\n        CostIncrease: invError == \"YES\" ? \"\" : costChange > 0 ? \"YES\" : \"\",\n        CostDecrease: invError == \"YES\" ? \"\" : costChange < 0 ? \"YES\" : \"\",\n        CostSame: invError == \"YES\" ? \"\" : costChange == 0 ? \"YES\" : \"\",\n        InvError: invError\n      }\n      console.log(logState);\n      const logResult = await inventoryService.linkManuallyLog(logState);\n      console.log(logResult);\n      \n      \n      \n      \n      if(result.statusText == \"OK\"){\n        setProductsInTable();\n        // setProductsInTableNew(inv, num, day);\n      }else {\n        alert(\"Some error occured in updation\");\n        setProductsInTable();\n        // setProductsInTableNew(inv, num, day);\n      }\n\n      await getPosProductsLinkManually(index);\n\n    }\n\n    const fetchSavedData = async(invoice = inv, no = num, date = day) => {\n        const data =  await tesseractService.GetSavedInvoiceData(invoice, no, date);\n        console.log(\"fetchSavedData_data : \",data);\n        if(data.length === 0) {\n          alert(\"Invoice doesnt Exist!!\");\n        }else return data[0].InvoiceData;\n        // console.log(data);\n        // console.log(data[0].InvoiceData);\n        \n    };\n\n    const setProductsInTable = () => {\n      // setLoader(true);\n      dispatch({type: \"LOADER\"});\n      async function invoiceData() {\n        const products = await tesseractService.GetProductDetails(\n          // invoice.slug\n          inv\n        );\n        //console.log(props.selectedInvoice);\n        return products;\n      }\n\n      // fetchSavedData().then((ocrData) => {\n      //   console.log(\"fetchSavedData_ocrData : \",ocrData);\n      //   invoiceData()\n      //     .then((products) => {\n      //       console.log(\"fetchSavedData_invoice_products : \",products);\n      //       /**post processing the table data after returning from filter */\n      //       function convertToUpperCase(obj) {\n      //         let newObj = {};\n      //         for (let key in obj) {\n      //           newObj[key.toUpperCase()] = obj[key];\n      //         }\n      //         return newObj;\n      //       }\n      //       products = convertToUpperCase(products);\n      //       console.log(products);\n      //       // scanInvoiceData.InvoiceData = ocrData;\n      //     //   setOcrProducts(ocrData);\n            \n      //     //   console.log(scanInvoiceData);\n      //       // scanInvoiceData.InvoiceData = ocrData;\n      //       //console.log(resScnInvDta);\n      //       console.log(\"OCERDATa\", ocrData);\n      //       //console.log(products);\n      //       //console.log(scanInvoiceData);\n      //       let table = ocrData.map((row) => {\n      //         /**For invoices which dont have item no, set description as item no */\n      //         // row.itemNoPresent = row.itemNo === undefined ? false : true; \n              \n      //         if (row.itemNo === undefined) {\n      //           row.itemNo = row.description.trim().toUpperCase();\n      //         }\n      //         row.itemNo = row.itemNo.toString().toUpperCase();\n  \n      //         row.description = row.description;\n      //           // products[row.itemNo] !== undefined\n      //           //   ? products[row.itemNo].Description\n      //           //   : row.description;\n      //         row.pieces = \n      //           products[row.itemNo] !== undefined\n      //             ? products[row.itemNo].Quantity\n      //             : 0;\n      //         row.sku =\n      //           products[row.itemNo] !== undefined\n      //             ? products[row.itemNo].sku\n      //             : \"\";\n      //         row.barcode =\n      //           products[row.itemNo] !== undefined\n      //             ? products[row.itemNo].Barcode\n      //             : \"\";\n      //         row.posName =\n      //           products[row.itemNo] !== undefined\n      //             ? products[row.itemNo].POS\n      //             : \"\";\n      //         row.markup = 0;\n      //         row.show = true;\n      //         row.posSku =\n      //           products[row.itemNo] !== undefined\n      //             ? products[row.itemNo].PosSKU\n      //             : \"\";\n      //         row.isReviewed = \n      //           products[row.itemNo] !== undefined ? products[row.itemNo].isReviewed : \"\" ;\n      //         row.size = \n      //           products[row.itemNo] !== undefined ? products[row.itemNo].Size : \"\";\n      //         row.department = \n      //           products[row.itemNo] !== undefined ? products[row.itemNo].Department : \"\";\n      //         row.cost = \n      //           products[row.itemNo] !== undefined ? products[row.itemNo].SellerCost : \"\";\n      //         row.sellingPrice = \n      //           products[row.itemNo] !== undefined ? products[row.itemNo].SellingPrice : \"\";\n      //         row.price = \n      //           products[row.itemNo] !== undefined ? products[row.itemNo].Price : \"\";\n      //         row.details = \n      //           products[row.itemNo] !== undefined ? products[row.itemNo].Details : \"\";\n      //         row.linkingCorrect = \n      //           products[row.itemNo] !== undefined ? products[row.itemNo].LinkingCorrect : \"\";\n      //         row.margin = products[row.itemNo] !== undefined ? ((products[row.itemNo].SellingPrice - products[row.itemNo].SellerCost)/ products[row.itemNo].SellerCost)*100 : \"\";\n      //         //console.log(\"department-\" + row.department + \"  cost-\" + row.cost + \"  price\" + row.sellingPrice);\n      //         let sp = 0;\n      //         let cp = 0;\n      //         // const barcode = products.Barcode\n      //         if (parseInt(row.pieces)) {\n      //           sp = (parseFloat(row.unitPrice) / parseInt(row.pieces)).toFixed(\n      //             2\n      //           );\n      //           cp = sp;\n      //         }\n      //         if (products[row.itemNo] !== undefined) {\n      //           if (sp > +products[row.itemNo].SellerCost) {\n      //             row[\"priceIncrease\"] = 1;\n      //           } else if (sp < +products[row.itemNo].SellerCost) {\n      //             row[\"priceIncrease\"] = -1;\n      //           } else if (sp == +products[row.itemNo].SellerCost) {\n      //             row[\"priceIncrease\"] = 0;\n      //           }\n      //         } else {\n      //           row[\"priceIncrease\"] = 0;\n      //         }\n  \n      //         /**filter out the rows for which qty shipped & extendedPrice is zero */\n      //         if (row.qty == \"0\" && row.extendedPrice === \"0.00\") {\n      //           return null;\n      //         }\n      //         /**Calulate qty for which qty is not read/scanned by textract */\n      //         if (!row.qty) {\n      //           row.qty = (\n      //             parseFloat(row.extendedPrice) / parseFloat(row.unitPrice)\n      //           ).toFixed(0);\n      //         }\n      //       return { ...row, sp, cp };\n      //       });\n      //       // setLoader(false);\n      //       dispatch({type: \"LOADER\"});\n\n      //       setTableData(table.filter((data) => data !== null));\n      //       console.log(\"setProductsInTable_tableData : \",tableData);\n      //       setItemNoDropdown(Object.keys(products));\n      //       setProductDetails(products);\n      //     })\n      //     .catch((err) => {\n      //       console.log(\"error on mapping ocrdata\", err)\n      //       // setLoader(false);\n      //       dispatch({type: \"LOADER\"});\n      //     });\n      // });\n    }\n\n    const toggleModal = (x) => {\n      if(x == \"notfounds\"){\n        setShowModal(!showModal);\n      }else {\n        setDetailsModal(!detailsModal);\n      }\n        // setDate(\"\");\n        // setInvNo(\"\");\n      };\n\n    const hicksvilleDropdown = async (data) => {\n          // const res = await inventoryService.getHicksvilleData(value);\n          // const data = res[0].List;\n          console.log(data);\n  \n  \n          let productsString = \"\";\n          for(let i=0;i<data.length;i++){\n            productsString = productsString + data[i].name + '$$$';\n          } \n          let result = productsString.split(\"$$$\");\n        \n          let newData = [];\n          for (let i = 0; i < result.length; i++) {\n            let s = result[i].split(\"@@@\");\n            let obj =\n              {\n                // sku: s[0] === \"nan\" ? null : s[0],\n                // upc: s[1] === \"nan\" ? null : s[1],\n                // altupc1: s[2] === \"nan\" ? null : s[2],\n                // altupc2: s[3] === \"nan\" ? null : s[3],\n                // name: s[4] === \"nan\" ? null : s[4],\n                // vintage: s[5] === \"nan\" ? null : s[5],\n                // totalQty: s[6] === \"nan\" ? null : s[6],\n                // cost: s[7] === \"nan\" ? null : s[7],\n                // pricea: s[8] === \"nan\" ? null : s[8],\n                // priceb: s[9] === \"nan\" ? null : s[9],\n                // pricec: s[10] === \"nan\" ? null : s[10],\n                // department: s[11] === \"nan\" ? null : s[11],\n                // salePrice: s[12] === \"nan\" ? null : s[12],\n                // size: s[13] === \"nan\" ? null : s[13],\n                // pack: s[14] === \"nan\" ? null : s[14],\n                // price: s[15] === \"nan\" ? null : s[15],\n                sku: s[1] === \"nan\" ? null : s[1],\n                upc: s[0] === \"nan\" ? null : s[0],\n                altupc1: s[14] === \"nan\" ? null : s[14],\n                altupc2: s[15] === \"nan\" ? null : s[15],\n                name: s[2] === \"nan\" ? null : s[2],\n                vintage: s[8] === \"nan\" ? null : s[8],\n                totalQty: s[13] === \"nan\" ? null : s[13],\n                cost: s[4] === \"nan\" ? null : s[4],\n                pricea: s[10] === \"nan\" ? null : s[10],\n                priceb: s[11] === \"nan\" ? null : s[11],\n                pricec: s[12] === \"nan\" ? null : s[12],\n                department: s[9] === \"nan\" ? null : s[9],\n                salePrice: s[5] === \"nan\" ? null : s[5],\n                size: s[6] === \"nan\" ? null : s[6],\n                pack: s[7] === \"nan\" ? null : s[7],\n                price: s[3] === \"nan\" ? null : s[3],\n              }\n            newData.push(obj);\n          }\n          const filter = newData.map((element) => {\n            let obj = { ...element };\n            obj.label = `${element.name}--${element.price}--${element.upc}--${element.size}--${element.cost}--${element.sku}`;\n            //console.log(obj);\n            return obj; \n          });\n          setHicksvilleData(filter);\n        \n      }\n    \n    const hicksvilleDropdownNew = async (event, value, index) => {\n      console.log(event);\n      console.log(value);\n      console.log(value.length);\n      console.log(tableData[index].itemNo);\n      setDropwdownIndex(index);\n      setOptions([]);\n\n      if(!isNaN(value) && value.length>0 && value != tableData[index].itemNo){\n        console.log(\"number\");\n        // setDropdownLoader(true);\n        setFetchingOptions(true);\n        const res = await inventoryService.getHicksvilleData(value.toUpperCase());\n        const data = res;\n        console.log(data);\n\n\n        let productsString = \"\";\n        for(let i=0;i<data.length;i++){\n          productsString = productsString + data[i].name + '$$$';\n        } \n        let result = productsString.split(\"$$$\");\n      \n        let newData = [];\n        for (let i = 0; i < result.length; i++) {\n          let s = result[i].split(\"@@@\");\n          let obj =\n            {\n              // sku: s[0] === \"nan\" ? null : s[0],\n              // upc: s[1] === \"nan\" ? null : s[1],\n              // altupc1: s[2] === \"nan\" ? null : s[2],\n              // altupc2: s[3] === \"nan\" ? null : s[3],\n              // name: s[4] === \"nan\" ? null : s[4],\n              // vintage: s[5] === \"nan\" ? null : s[5],\n              // totalQty: s[6] === \"nan\" ? null : s[6],\n              // cost: s[7] === \"nan\" ? null : s[7],\n              // pricea: s[8] === \"nan\" ? null : s[8],\n              // priceb: s[9] === \"nan\" ? null : s[9],\n              // pricec: s[10] === \"nan\" ? null : s[10],\n              // department: s[11] === \"nan\" ? null : s[11],\n              // salePrice: s[12] === \"nan\" ? null : s[12],\n              // size: s[13] === \"nan\" ? null : s[13],\n              // pack: s[14] === \"nan\" ? null : s[14],\n              // price: s[15] === \"nan\" ? null : s[15],\n              sku: s[1] === \"nan\" ? null : s[1],\n              upc: s[0] === \"nan\" ? null : s[0],\n              altupc1: s[14] === \"nan\" ? null : s[14],\n              altupc2: s[15] === \"nan\" ? null : s[15],\n              name: s[2] === \"nan\" ? null : s[2],\n              vintage: s[8] === \"nan\" ? null : s[8],\n              totalQty: s[13] === \"nan\" ? null : s[13],\n              cost: s[4] === \"nan\" ? null : s[4],\n              pricea: s[10] === \"nan\" ? null : s[10],\n              priceb: s[11] === \"nan\" ? null : s[11],\n              pricec: s[12] === \"nan\" ? null : s[12],\n              department: s[9] === \"nan\" ? null : s[9],\n              salePrice: s[5] === \"nan\" ? null : s[5],\n              size: s[6] === \"nan\" ? null : s[6],\n              pack: s[7] === \"nan\" ? null : s[7],\n              price: s[3] === \"nan\" ? null : s[3],\n            }\n          newData.push(obj);\n        }\n        const filter = newData.map((element) => {\n          let obj = { ...element };\n          obj.label = `${element.name}--${element.price}--${element.upc}--${element.size}--${element.cost}--${element.sku}`;\n          //console.log(obj);\n          return obj; \n        });\n        setHicksvilleData(filter);\n        setOptions(filter);\n\n      }\n\n      if(isNaN(value) && value != null && value.length>=4 && value != tableData[index].itemNo){\n        console.log(\"string\");\n        // setDropdownLoader(true);\n        setFetchingOptions(true);\n        const res = await inventoryService.getHicksvilleData(value.toUpperCase());\n        const data = res;\n        console.log(data);\n\n\n        let productsString = \"\";\n        for(let i=0;i<data.length;i++){\n          productsString = productsString + data[i].name + '$$$';\n        } \n        let result = productsString.split(\"$$$\");\n      \n        let newData = [];\n        for (let i = 0; i < result.length; i++) {\n          let s = result[i].split(\"@@@\");\n          let obj =\n            {\n              // sku: s[0] === \"nan\" ? null : s[0],\n              // upc: s[1] === \"nan\" ? null : s[1],\n              // altupc1: s[2] === \"nan\" ? null : s[2],\n              // altupc2: s[3] === \"nan\" ? null : s[3],\n              // name: s[4] === \"nan\" ? null : s[4],\n              // vintage: s[5] === \"nan\" ? null : s[5],\n              // totalQty: s[6] === \"nan\" ? null : s[6],\n              // cost: s[7] === \"nan\" ? null : s[7],\n              // pricea: s[8] === \"nan\" ? null : s[8],\n              // priceb: s[9] === \"nan\" ? null : s[9],\n              // pricec: s[10] === \"nan\" ? null : s[10],\n              // department: s[11] === \"nan\" ? null : s[11],\n              // salePrice: s[12] === \"nan\" ? null : s[12],\n              // size: s[13] === \"nan\" ? null : s[13],\n              // pack: s[14] === \"nan\" ? null : s[14],\n              // price: s[15] === \"nan\" ? null : s[15],\n              sku: s[1] === \"nan\" ? null : s[1],\n              upc: s[0] === \"nan\" ? null : s[0],\n              altupc1: s[14] === \"nan\" ? null : s[14],\n              altupc2: s[15] === \"nan\" ? null : s[15],\n              name: s[2] === \"nan\" ? null : s[2],\n              vintage: s[8] === \"nan\" ? null : s[8],\n              totalQty: s[13] === \"nan\" ? null : s[13],\n              cost: s[4] === \"nan\" ? null : s[4],\n              pricea: s[10] === \"nan\" ? null : s[10],\n              priceb: s[11] === \"nan\" ? null : s[11],\n              pricec: s[12] === \"nan\" ? null : s[12],\n              department: s[9] === \"nan\" ? null : s[9],\n              salePrice: s[5] === \"nan\" ? null : s[5],\n              size: s[6] === \"nan\" ? null : s[6],\n              pack: s[7] === \"nan\" ? null : s[7],\n              price: s[3] === \"nan\" ? null : s[3],\n            }\n          newData.push(obj);\n        }\n        const filter = newData.map((element) => {\n          let obj = { ...element };\n          if(element.itemNo != \"undefined\"){\n          obj.label = `${element.name}--${element.price}--${element.upc}--${element.size}--${element.cost}--${element.sku}`;\n          }\n          //console.log(obj);\n          return obj; \n        });\n        setHicksvilleData(filter);\n        setOptions(filter);\n      }\n      setFetchingOptions(false);\n    }\n\n    const searchDropdown = (target, value) =>  {\n      console.log(target);\n      console.log(value);\n      const options  = hicksvilleData.filter((item) => {\n        if(item.name){\n          let name = item.name;\n          name = name.toLowerCase();\n          value = value.toLowerCase();\n          // console.log(name)\n          return name.search(value) != -1;\n        }\n      })\n      console.log(options);\n      setOptions(options);\n      setFetchingOptions(false);\n\n    }\n\n    const updateItemOld = (ocrCost) => {\n        //console.log(showPosState);\n        const data = {\n          invoiceName: invoice.slug,\n          itemName: showPosState.item,\n          value: { \n            POS: showPosState.pos, \n            Barcode: showPosState.barcode, \n            PosSKU: showPosState.posSku, \n            isReviewed: \"true\",\n            Size: showPosState.size, \n            Department: showPosState.department,\n            //SellerCost: showPosState.unitCost,\n            SellingPrice: showPosState.unitPrice\n          },\n        };\n    \n        inventoryService\n        .UpdateProductFields(data)\n        .then((res) => {\n          if (!res) {\n            throw new Error(\"Product not created\")\n          }\n          console.log(res);\n          alert(\"Successfully updated fields\");\n        })\n        .catch((err) => {\n          console.log(err);\n          alert(\"Some error occuured in creating product\");\n        })\n        .finally(() => { \n          // setLoader(false)\n          dispatch({type: \"LOADER\"});\n          \n          // setStateUpdated(\"true\");\n          //  console.log(ocrCost);\n          //  console.log(unitCost);\n           if(ocrCost>unitCost){\n             setCostInc(\"true\");\n             setCostDec(\"\");\n           }\n           if(ocrCost<unitCost){\n             setCostDec(\"true\");\n             setCostInc(\"\");\n           }\n        });\n    \n    }\n\n    const updateItem = (props, ocrCost) => {\n      let data;\n      console.log(\"updateItem_showPosState : \",showPosState);\n      console.log(\"updateItem_notFounds : \",notFounds);\n      //console.log(showPosState);\n      if(notFounds === \"true\"){\n        // console.log(props.selectedInvoice);\n        console.log(\"notfoundstrue\");\n        data = {\n          invoiceName: inv,\n          itemName: showPosState.item,\n          value: { \n            POS: showPosState.pos, \n            Barcode: showPosState.barcode, \n            PosSKU: showPosState.posSku, \n            isReviewed: \"true\",\n            Description: showPosState.description,\n            Size: showPosState.size, \n            Department: showPosState.department,\n            SellerCost: showPosState.unitCost,\n            SellingPrice: showPosState.unitPrice,\n            Quantity: unitsInCase,\n            Price: price,\n            LinkingCorrect: \"true\"\n          },\n        };\n  \n        toggleModal(\"notfounds\");\n      \n      }else{\n        data = {\n          invoiceName: inv,\n          itemName: showPosState.item,\n          value: { \n            POS: showPosState.pos, \n            Barcode: showPosState.barcode, \n            PosSKU: showPosState.posSku, \n            isReviewed: \"true\",\n            Size: showPosState.size, \n            Department: showPosState.department,\n            SellerCost: showPosState.unitCost,\n            SellingPrice: showPosState.unitPrice,\n            LinkingCorrect: \"true\"\n          },\n        };\n      }\n  \n      console.log(\"updateItem_data : \",data)\n      inventoryService\n      .UpdateProductFields(data)\n      .then((res) => {\n        if (!res) {\n          throw new Error(\"Product not created\")\n        }\n        console.log(res);\n        alert(\"Successfully updated fields\");\n        // setStateUpdated(true);\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"Some error occuured in creating product\");\n      })\n      .finally(async () => { \n                      // setLoader(false);\n                      // dispatch({type: \"LOADER\"});\n                    //  setStateUpdated(\"true\");\n                    //  console.log(ocrCost);\n                    //  console.log(unitCost);\n                    if(ocrCost>unitCost){\n                      setCostInc(\"true\");\n                      setCostDec(\"\");\n                    }\n                    if(ocrCost<unitCost){\n                      setCostDec(\"true\");\n                      setCostInc(\"\");\n                    }\n                    if(notFounds === \"true\"){\n                      // setNotFounds(\"false\");\n                      dispatch({type: \"NOT_FOUNDS\", data: \"false\"})\n                      // setUnitsInCase(\"\");\n                      dispatch({type: \"UNITS_IN_CASE\", data: \"\"})\n                      // setPrice(\"\");\n                      dispatch({type: \"PRICE\", data: \"\"})\n\n                    }\n                    console.log(userEmail);\n                    console.log(tableData[showPosIndex]);\n                    const description = tableData[showPosIndex].description;\n                    \n                    //Cost chnage and invoice error handling logic.\n                    const costChange = tableData[showPosIndex].cp - data.value.SellerCost;\n                    console.log(costChange);\n                    let a = \"\", b = \"\", c = \"\";\n                    const invError = tableData[showPosIndex].cp >= 3*tableData[showPosIndex].cost ? \"YES\" : \"\";\n                    a = invError == \"YES\" ? \"\" : costChange > 0 ? \"YES\" : \"\";\n                    b = invError == \"YES\" ? \"\" : costChange < 0 ? \"YES\" : \"\"; \n                    c = invError == \"YES\" ? \"\" : costChange == 0 ? \"YES\" : \"\";\n\n                    console.log(costChange);\n                    console.log(description);\n                    console.log(todayDate);\n                    console.log(day);\n                    console.log(num);\n                    const logState = data;\n                    delete logState.value.isReviewed;\n                    logState.Description = description;\n                    logState.PersonName = userEmail;\n                    logState.LinkingDate = todayDate;\n                    logState.InvoiceDate = day;\n                    logState.InvoiceNo = num;\n                    logState.CostIncrease = a;                     \n                    logState.CostDecrease = b; \n                    logState.CostSame = c;\n                    logState.InvoiceUnitCost = tableData[showPosIndex].cp;\n                    logState.InvError = invError;                   \n                    console.log(logState);\n                    \n\n                    const res = await inventoryService.generateLog(logState);\n                    console.log(res);\n                    setProductsInTable(); \n              });\n      \n  \n    }\n\n    const addRow = () => {\n        let tempTableData = [...tableData];\n        tempTableData.push({\n          qty: 0,\n          itemNo: \"\",\n          description: \"\",\n          pieces: 0,\n          unitPrice: 0.0,\n          extendedPrice: \"\",\n          markup: 0,\n          sp: 0,\n          show: true,\n          showPOS: \"\"\n        });\n        emptyColumnList.push(tempTableData.length - 1);\n        setEmptyColumn(emptyColumnList);\n        setTableData(tempTableData);\n        console.log(\"addRow_tableData : \",tableData);\n    };\n    const deleteRow = (index) => {\n        let tempTableData = [...tableData];\n        // console.log(emptyColumnList.length, \"before\");\n        if (tableData[index][\"show\"]) {\n          if (window.confirm(\"Delete the item?\")) {\n            tempTableData[index][\"show\"] = false;\n            const i = emptyColumnList.indexOf(index);\n            if (i > -1) {\n              emptyColumnList.splice(i, 1);\n            }\n          }\n        } else {\n          tempTableData[index][\"show\"] = true;\n          if (\n            tempTableData[index][\"qty\"] !== \"\" &&\n            tempTableData[index][\"itemNo\"] !== \"\" &&\n            tempTableData[index][\"unitPrice\"] !== \"\"\n          ) {\n            const i = emptyColumnList.indexOf(index);\n            if (i > -1) {\n              emptyColumnList.splice(i, 1);\n            }\n          } else {\n            emptyColumnList.push(index);\n          }\n        }\n        setTableData(tempTableData);\n        console.log(\"deleteRow_tableData : \",tableData);\n        setEmptyColumn(emptyColumnList);\n    };\n\n    const renderInvoiceHeader = () => {\n      return invoiceHeader.map((key, index) => {\n        return (\n          <th\n            key={index}\n            style={{\n              position: \"sticky\",\n              top: \"70px\",\n              background: \"grey\",\n            }}\n          >\n            {key.toUpperCase()}\n          </th>\n        );\n      });\n   };\n\n   const setProductsInTableNew = (index) => {\n    console.log(index);\n    // setOpenInvoice(true);\n    dispatch({type: \"OPEN_INVOICE\", data: true})\n    console.log(invoiceOptions[index]);\n    let invoice = invoiceOptions[index].InvoiceName;\n    // setInv(invoice);\n    dispatch({type: \"SET_INV\", data: invoice})\n    let date =  invoiceOptions[index].SavedDate;\n    // setDay(date);\n    dispatch({type: \"SET_DAY\", data: date})\n    let no = invoiceOptions[index].SavedInvoiceNo;\n    // setNum(no);\n    dispatch({type: \"SET_NUM\", data: no})\n    // setLoader(true);\n    dispatch({type: \"LOADER\"});\n    async function invoiceData() {\n      const products = await tesseractService.GetProductDetails(\n        invoice\n      );\n      //console.log(props.selectedInvoice);\n      return products;\n    }\n\n    fetchSavedData(invoice, no, date).then((ocrData) => {\n      console.log(\"fetchSavedData_ocrData : \",ocrData);\n      invoiceData()\n        .then((products) => {\n          console.log(\"fetchSavedData_products : \",products);\n          /**post processing the table data after returning from filter */\n          function convertToUpperCase(obj) {\n            let newObj = {};\n            for (let key in obj) {\n              newObj[key.toUpperCase()] = obj[key];\n            }\n            return newObj;\n          }\n          products = convertToUpperCase(products);\n          console.log(products);\n          // scanInvoiceData.InvoiceData = ocrData;\n        //   setOcrProducts(ocrData);\n          \n        //   console.log(scanInvoiceData);\n          // scanInvoiceData.InvoiceData = ocrData;\n          //console.log(resScnInvDta);\n          console.log(\"OCERDATa\", ocrData);\n          //console.log(products);\n          //console.log(scanInvoiceData);\n          let table = ocrData.map((row) => {\n            /**For invoices which dont have item no, set description as item no */\n            row.itemNoPresent = row.itemNo === undefined ? false : true; \n            if (row.itemNo === undefined) {\n              row.itemNo = row.description.trim().toUpperCase();\n            }\n            row.itemNo = row.itemNo.toString().toUpperCase();\n\n            row.description = row.description;\n              // products[row.itemNo] !== undefined\n              //   ? products[row.itemNo].Description\n              //   : row.description;\n            row.pieces =\n              products[row.itemNo] !== undefined\n                ? products[row.itemNo].Quantity\n                : 0;\n            row.sku =\n              products[row.itemNo] !== undefined\n                ? products[row.itemNo].sku\n                : \"\";\n            row.barcode =\n              products[row.itemNo] !== undefined\n                ? products[row.itemNo].Barcode\n                : \"\";\n            row.posName =\n              products[row.itemNo] !== undefined\n                ? products[row.itemNo].POS\n                : \"\";\n            row.markup = 0;\n            row.show = true;\n            row.posSku =\n              products[row.itemNo] !== undefined\n                ? products[row.itemNo].PosSKU\n                : \"\";\n            row.isReviewed = \n              products[row.itemNo] !== undefined ? products[row.itemNo].isReviewed : \"\" ;\n            row.size = \n              products[row.itemNo] !== undefined ? products[row.itemNo].Size : \"\";\n            row.department = \n              products[row.itemNo] !== undefined ? products[row.itemNo].Department : \"\";\n            row.cost = \n              products[row.itemNo] !== undefined ? products[row.itemNo].SellerCost : \"\";\n            row.sellingPrice = \n              products[row.itemNo] !== undefined ? products[row.itemNo].SellingPrice : \"\";\n            row.price = \n              products[row.itemNo] !== undefined ? products[row.itemNo].Price : \"\";\n            row.details = \n              products[row.itemNo] !== undefined ? products[row.itemNo].Details : \"\";\n            row.linkingCorrect = \n              products[row.itemNo] !== undefined ? products[row.itemNo].LinkingCorrect : \"\";\n            row.margin = products[row.itemNo] !== undefined ? ((products[row.itemNo].SellingPrice - products[row.itemNo].SellerCost)/ products[row.itemNo].SellerCost)*100 : \"\";\n            //console.log(\"department-\" + row.department + \"  cost-\" + row.cost + \"  price\" + row.sellingPrice);\n            let sp = 0;\n            let cp = 0;\n            // const barcode = products.Barcode\n            if (parseInt(row.pieces)) {\n              sp = (parseFloat(row.unitPrice) / parseInt(row.pieces)).toFixed(\n                2\n              );\n              cp = sp;\n            }\n            if (products[row.itemNo] !== undefined) {\n              if (sp > +products[row.itemNo].SellerCost) {\n                row[\"priceIncrease\"] = 1;\n              } else if (sp < +products[row.itemNo].SellerCost) {\n                row[\"priceIncrease\"] = -1;\n              } else if (sp == +products[row.itemNo].SellerCost) {\n                row[\"priceIncrease\"] = 0;\n              }\n            } else {\n              row[\"priceIncrease\"] = 0;\n            }\n\n            /**filter out the rows for which qty shipped & extendedPrice is zero */\n            if (row.qty == \"0\" && row.extendedPrice === \"0.00\") {\n              return null;\n            }\n            /**Calulate qty for which qty is not read/scanned by textract */\n            if (!row.qty) {\n              row.qty = (\n                parseFloat(row.extendedPrice) / parseFloat(row.unitPrice)\n              ).toFixed(0);\n            }\n          return { ...row, sp, cp };\n          });\n          // setLoader(false);\n          dispatch({type: \"LOADER\"});\n\n          setTableData(table.filter((data) => data !== null));\n          console.log(\"fetchSavedData_tableData : \",tableData);\n          setItemNoDropdown(Object.keys(products));\n          setProductDetails(products);\n        })\n        .catch((err) => {\n          console.log(\"error on mapping ocrdata\", err)\n          // setLoader(false);\n          dispatch({type: \"LOADER\"});\n        });\n    });\n  }\n\n   const renderInvoiceTable = () => {   \n    const invoiceList = invoiceOptions.map((element, index) => {\n      return (\n        <tr key={index}>\n          <td>{index+1}</td>\n          <td>{element.InvoiceName}</td>\n          <td>{element.SavedInvoiceNo}</td>\n          <td>{element.SavedDate}</td>\n          <td>\n            <button \n              style={{\n                backgroundColor: \"#4CAF50\",\n                border: \"none\",\n                color: \"white\",\n                padding: \"15px 32px\",\n                textAlign: \"center\",\n                textDecoration: \"none\",\n                display: \"inline-block\",\n                fontSize: \"12px\",\n                margin: \"4px 2px\",\n                cursor: \"pointer\"\n              }}\n              onClick={() => {\n                setProductsInTableNew(index)\n              }}\n            >Show Invoice\n            </button>\n          </td>\n        </tr>\n        );\n      })\n    return (\n      <div style={{ marginTop: \"35px\" }}>\n        <table className=\"table table-hover table-responsive-sm\">\n          <tbody>\n            <tr>{renderInvoiceHeader()}</tr>\n            {invoiceList}\n          </tbody>\n        </table>\n      </div>\n    );     \n  }\n\n    const renderTableHeader = () => {\n        return header.map((key, index) => {\n          return (\n            <th\n              key={index}\n              style={{\n                position: \"sticky\",\n                top: \"70px\",\n                background: \"grey\",\n              }}\n            >\n              {key.toUpperCase()}\n            </th>\n          );\n        });\n    };\n\n    const renderTableData = () => {\n        // hicksvilleDropdown(HicksData);\n        console.log(\"renderTableData_tableData : \",tableData);\n        if (tableData) {\n          console.log(tableData);\n          console.log(\"renderTableData_showPosState : \",showPosState);\n          // console.log(showPosIndex);\n          // console.log(tableData[0]);\n          \n          let rows = tableData.map((element, index) => {\n            //fuzzwuzzSuggestion = getFuzzwuzzSuggestion(element.description);\n            let isEmpty =\n              element.qty === \"\" ||\n              element.itemNo === \"\" ||\n              !element.pieces ||\n              isNaN(element.unitPrice) ||\n              element.unitPrice === \"\" ||\n              isNaN(element.extendedPrice);\n            if (isEmpty && element.show) {\n              let emptyColumn = [...emptyColumnList, index];\n              emptyColumnList = [...new Set(emptyColumn)];\n            }\n            let isFree = element.qty != 0 && element.extendedPrice === \"0.00\";\n            // console.log(element.isUpdated);\n            console.log(\"renderTableData_element : \",element);\n            let margin = ((element.sellingPrice - element.cost)/ element.cost)*100;\n            \n    \n            return (\n              <tr\n                key={index}\n                className={isEmpty ? styles.red : isFree ? styles.free : null}\n                // style={element.show ? { opacity: \"1\" } : { opacity: \"0.4\" }}\n                style={element.linkingCorrect == \"false\" ? {backgroundColor: \"pink\"} : element.isUpdated === \"true\"  ? {backgroundColor: \"lightGreen\"}\n                  : element.show ? { opacity: \"1\" } : { opacity: \"0.4\" }}\n              >\n                <td> {index + 1} </td>\n               \n                {/* <td>\n                  <TextField\n                    type=\"tel\"\n                    value={element.details}\n                    id=\"outlined-secondary\"\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      handleChange(index, \"details\", e.target.value);\n                    }}\n                    style={{ width: 100 }}\n                  />\n                </td> */}\n                <td className={styles.element}>\n                  <TextField\n                    type=\"tel\"\n                    value={showPosIndex === index ? showPosState.barcode : element.barcode}\n                    id=\"outlined-secondary\"\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      handleChange(index, \"barcode\", e.target.value);\n                    }}\n                    style={{ width: 150 }}\n                  />\n                  <IconButton\n                    color=\"primary\"\n                    aria-label=\"add to review\"\n                    // onClick={() => addForReview(element, index)}\n                  >\n                    <InfoOutlinedIcon\n                      style={element.isReviewed  === \"true\" ? {fill: \"red\"} : null}\n                    /> \n                    {/* <AddShoppingCartIcon\n                      style={\n                        reviewItems.includes(index)\n                          ? { backgroundColor: \"green\" }\n                          : null\n                      }\n                    /> */}\n                  </IconButton>\n                  <div className={element.isReviewed  === \"true\" ? styles.tooltipIsReviewed: styles.tooltip} >\n                    <p>POS Product- {showPosIndex === index ? showPosState.pos : element.posName }</p>\n                    {/* <p>UPC- {showPosIndex === index ? showPosState.barcode : element.barcode}</p> */}\n                    <p>Size- {showPosIndex === index ? showPosState.size : element.size}</p>\n                    <p>Department - {showPosIndex === index ? showPosState.department : element.department}</p>\n                    <p>Margin(%) - {margin.toFixed(2)}</p>\n                    <p>Unit Cost- {showPosIndex === index ? showPosState.unitCost : element.cost}</p> \n                    <p>Unit Price- {showPosIndex === index ? showPosState.unitPrice : element.sellingPrice}</p>\n                    {/* <p>Price- {showPosIndex === index ? showPosState.price : element.price}</p> */}\n                    <div >\n                    <button onClick={() => {\n                            if(notFounds === \"true\"){\n                              toggleModal(\"notfounds\");\n                            }else{\n                              updateItem(invoice.slug, (parseFloat(element.unitPrice) / parseInt(element.pieces)).toFixed(2))\n                            }\n                          } } \n                      disabled={showPosIndex === index ? false : true}\n                      style={{backgroundColor: \"green\",\n                      border: \"none\",\n                      color: \"white\",\n                      padding: \"4px 8px\",\n                      textAlign: \"center\",\n                      textDecoration: \"none\",\n                      display: \"inline-block\",\n                      fontSize: \"14px\",\n                      align: \"left\"}} >\n                      Update Item\n                    </button>\n                    </div> \n                    <br />\n                    <div>\n                    <button onClick={()=> linkManually(index)} \n                      // disabled={showPosIndex === index ? false : true}\n                      style={{backgroundColor: \"blue\",\n                      border: \"none\",\n                      color: \"white\",\n                      padding: \"4px 8px\",\n                      textAlign: \"center\",\n                      textDecoration: \"none\",\n                      display: \"inline-block\",\n                      fontSize: \"14px\",\n                      align: \"left\"}} >\n                      Link Manually\n                    </button>\n                    </div>\n                    <br />\n                    <div>\n                    <button onClick={()=> reverseUpdate(index)} \n                      // disabled={showPosIndex === index ? false : true}\n                      style={{backgroundColor: \"red\",\n                      border: \"none\",\n                      color: \"white\",\n                      padding: \"4px 8px\",\n                      textAlign: \"center\",\n                      textDecoration: \"none\",\n                      display: \"inline-block\",\n                      fontSize: \"14px\",\n                      align: \"left\"}} >\n                      Reverse Update\n                    </button>\n                    </div>\n                  </div>\n                </td>\n                <td>{showPosIndex === index ? showPosState.posSku : element.posSku}</td>\n                <td>\n                  <TextField\n                    type=\"tel\"\n                    value={element.qty}\n                    id=\"outlined-secondary\"\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      handleChange(index, \"qty\", e.target.value);\n                    }}\n                    style={{ width: 100 }}\n                  />\n                </td>\n                <td>{element.cp}</td>\n                <td>\n                  <Autocomplete\n                    value={element.itemNo}\n                    onChange={(event, newValue) => {\n                      if (newValue) {\n                        handleChange(index, \"itemNo\", newValue);\n                      }\n                    }}\n                    id=\"combo-box\"\n                    options={itemNoDropdown}\n                    getOptionLabel={(option) => option}\n                    style={{ width: 200 }}\n                    renderInput={(params) => (\n                      <TextField {...params} variant=\"outlined\" />\n                    )}\n                  />\n                </td>\n                <td>\n                {/* {dropdownIndex == index ? fetchingOptions ? <Loading type=\"ThreeDots\" height={40} width={40} /> : null : null} */}\n                  <Autocomplete\n                    value={showPosIndex  === index ? showPosState.item : element.itemNo }\n                    loading={true}\n                    onInputChange={(event, value) => {\n                      console.log(\"ON INPUT CHANGE\");\n                      // event.toLowerCase();\n                      // value.toLowerCase();\n                      // console.log(event.target.value);\n                      // console.log(value);\n                      // searchDropdown(event, value);\n                      // setOptions([]);\n                      if(event != null){\n                        setTimeout(()=> {\n                          hicksvilleDropdownNew(event, value, index);\n\n                        }, 1500);\n                      }\n                      // hicksvilleDropdownNew(event, value, index);\n                    }}\n                    onChange={(event, newValue) => {\n                      // console.log(event.target.value);\n                      // console.log(newValue);\n                      if (newValue) {\n                        let newState = { ...showPosState };\n                        console.log(newValue);\n                        // newState.item = newValue.name;\n                        newState.item = element.itemNo\n                        newState.description = newValue.name;\n                        newState.barcode = newValue.upc;\n                        newState.pos = newValue.name;\n                        newState.posSku = newValue.sku;\n                        newState.size = newValue.size;\n                        newState.department = newValue.department;\n                        newState.unitCost = newValue.cost;\n                        newState.unitPrice = newValue.price;\n                        // setShowPosState(newState);\n                        dispatch({type: \"SET_POS_STATE\", data: newState})\n                        setShowPosIndex(index);\n                        setUnitCost(newValue.cost);\n                        // setStateUpdated(\"\");\n                        if(isEmpty){\n                          // setNotFounds(\"true\");\n                          dispatch({type: \"NOT_FOUNDS\", data: \"true\"})\n\n                          setRedState(\"false\");\n                        }\n                        //setDisabled(false);\n                        //updateOnHoverDetails(index);\n                        //setShowPosIndex(index);\n                        // console.log(newValue);\n                        console.log(newState);\n                        //console.log(showPosState);\n                        \n                      }\n                    }}\n                    id=\"combo-box\"\n                    // options={element.fuzzSuggestion}\n                    options={options}\n                    // getOptionLabel={option => option.label}\n                    getOptionLabel={(option) => option.label ?? element.itemNo}\n                    // getOptionLabel={(option) => dropdownLoader ? <Spinner /> : option.label}\n                    style={{ width: 400 }}\n                    renderInput={(params) => (\n                      <TextField {...params} variant=\"outlined\" />\n                    )}\n                  />\n                </td>\n                \n                <td>{element.description}</td>\n                {/* <td>{element.pieces}</td> */}\n                <td>\n                  <TextField\n                    type=\"tel\"\n                    value={element.pieces}\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      handleChange(index, \"pieces\", e.target.value);\n                    }}\n                    style={{ width: 100 }}\n                  />\n                  <button onClick={() => {updateUnits(index)}} style={{\n                    backgroundColor: \"#008CBA\",\n                    border: \"none\",\n                    color: \"white\",\n                    padding: \"5px 16px\",\n                    textAlign: \"center\",\n                    textDecoration: \"none\",\n                    display: \"inline-block\",\n                    fontSize: \"10px\",\n                    margin: \"4px 2px\",\n                    cursor: \"pointer\",\n                  }}>Update Units</button> \n                </td>\n                <td>\n                  <TextField\n                    type=\"tel\"\n                    value={element.unitPrice}\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      handleChange(index, \"unitPrice\", e.target.value);\n                    }}\n                    style={\n                      element.priceIncrease === 1\n                        ? { backgroundColor: \"#1a8cff\", width: 100 }\n                        : element.priceIncrease === -1\n                        ? { backgroundColor: \"#ffb31a\", width: 100 }\n                        : { width: 100 }\n                      // showPosIndex === index ? costInc===\"true\" ? { backgroundColor: \"#1a8cff\", width: 100 } : costDec===\"true\" ? { backgroundColor: \"#ffb31a\", width: 100 } : {width: 100}\n                      //   : element.priceIncrease === 1 \n                      //       ? { backgroundColor: \"#1a8cff\", width: 100 }\n                      //       : element.priceIncrease === -1 \n                      //       ? { backgroundColor: \"#ffb31a\", width: 100 }\n                      //       : { width: 100 }\n                    }\n                  />\n                </td>\n                <td>{element.extendedPrice}</td>\n                \n                <td>\n                  <TextField\n                    type=\"tel\"\n                    value={element.sp}\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      handleChange(index, \"sp\", e.target.value);\n                    }}\n                    style={{ width: 100 }}\n                  />\n                </td>\n                <td>{element.markup}</td>\n                {/* <td>\n                  <Checkbox\n                    checked={!element.show}\n                    onChange={(e) => handleChange(index, \"show\", e.target.value)}\n                    inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                  />\n                </td> */}\n\n                  <td className={styles.element}>\n                  <IconButton onClick={() => {\n                    toggleModal(\"details\");\n                    setDetailsIndex(index);\n                    }}>\n                      <AddCircleIcon />\n                    </IconButton>\n                    <div className={styles.tooltip}>\n                      <p>Details- {element.details}</p>\n                    </div>\n                    \n                </td>\n\n\n                <td>\n              <Button\n                text={element.show ? \"Delete\" : \"Undo\"}\n                color=\"btn btn-info\"\n                type=\"submit\"\n                onClick={() => deleteRow(index)}\n              />\n            </td>\n                <td>\n                <Button \n                    text=\"Update POS\"\n                    color=\"btn btn-info\"\n                    type=\"submit\"\n                    onClick={() => pushSingleItemToInventory(index)}\n                    style={{ width: 120 }}\n                  />\n                      \n                </td>\n                <td>\n                <Button \n                    text=\"Reverse POS\"\n                    type=\"submit\"\n                    onClick={() => reversePOSUpdate(index)}\n                    style={{ width: 120, backgroundColor: \"red\", color: \"white\" }}\n                  />\n                      \n                </td>\n                <td className={styles.element}>\n                  <IconButton onClick={() => linkingCorrect(index)}>\n                    <Cancel/>\n                  </IconButton>\n                </td>\n                <td>{index + 1}</td>\n                {/* <td>\n                  <Button\n                    text={element.show ? \"Delete\" : \"Undo\"}\n                    color=\"btn btn-info\"\n                    type=\"submit\"\n                    onClick={() => deleteRow(index)}\n                  />\n                </td> */}\n              </tr>\n            );\n          });\n          return (\n            <div style={{ marginTop: \"35px\" }}>\n              <table className=\"table table-hover table-responsive-sm\">\n                <tbody>\n                  <tr>{renderTableHeader()}</tr>\n                  {rows}\n                  <tr>\n                    <td>\n                      <Button\n                        text=\"Add cell\"\n                        color=\"btn btn-info\"\n                        onClick={addRow}\n                      />\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n              <div className={styles.divRow}>\n                <Button\n                  text=\"Update Inventory\"\n                  color=\"btn btn-info\"\n                  type=\"submit\"\n                  onClick={pushInventoryDetails}\n                />\n                {/* <Button\n                  text=\"Save Invoice Data\"\n                  color=\"btn btn-info\"\n                  type=\"submit\"\n                  onClick={toggleModal}\n                /> */}\n                <Button\n                  text=\"Re upload\"\n                  color=\"btn btn-info\"\n                  type=\"submit\"\n                  onClick={() => window.location.reload()}\n                />\n              </div>\n            </div>\n          );\n        }\n    };\n\n    const pushInventoryDetails = async () => {\n        const notFoundItems = emptyColumn.map((i) => tableData[i]);\n        const tempTable = [];\n        tableData.forEach((element, index) => {\n          if (\n            !emptyColumn.includes(index) &&\n            element.show === true &&\n            element[\"isForReview\"] != true\n          ) {\n            let rowData = { index: index + 1, ...element };\n            tempTable.push(rowData);\n          }\n        });\n        // console.log(\"notFoundItems\", notFoundItems);\n        // console.log(\"final table data\", tempTable);\n    \n        if (emptyColumn.length !== 0) {\n          /**api to push  to not found list*/\n          // setLoader(true);\n          dispatch({type: \"LOADER\"});\n          const responses = await Promise.all(\n            notFoundItems.map(async (product) => {\n              try {\n                const data = {\n                  Item: product.itemNo,\n                  Description: product.description,\n                  Quantity: product.qty,\n                  Price: product.unitPrice,\n                  sku: product.sku,\n                  Barcode: product.barcode,\n                  PosSKU: product.posSku,\n                  InvoiceName: invoice.slug,\n                };\n                await inventoryService.CreateNotFoundItems(data);\n                return true;\n              } catch (error) {\n                console.log(\n                  \"Couldn't create not found product\",\n                  product.description,\n                  { error }\n                );\n                alert(\"Couldn't create product on website.\");\n                return null;\n              }\n            })\n          );\n          // setLoader(false);\n          dispatch({type: \"LOADER\"});\n        }\n        const priceIncreasedProducts = tempTable.filter(\n          (product) => product.priceIncrease !== 0\n        );\n        // setLoader(true);\n        dispatch({type: \"LOADER\"});\n        const res = await Promise.all(\n          priceIncreasedProducts.map(async (product) => {\n            try {\n              const data = {\n                invoiceName: invoice,\n                itemName: product.itemNo,\n                value: { Price: product.unitPrice },\n              };\n              await inventoryService.UpdateProductFields(data);\n            } catch (error) {\n              console.log(`couldn't update price for product ${product.itemNo}`);\n            }\n          })\n        );\n        console.log(priceIncreasedProducts.length);\n        // setLoader(false);\n        dispatch({type: \"LOADER\"});\n\n        setInventoryData(mergeDuplicates(tempTable));\n        setPushToInventory(true);\n    };\n\n    const handleChange = async (row, key, value) => {\n        let tempTableData = [...tableData];\n        tempTableData[row][key] = value;\n        const { itemNo } = tempTableData[row];\n        if (\n          tempTableData[row][\"qty\"] !== \"\" &&\n          tempTableData[row][\"itemNo\"] !== \"\" &&\n          tempTableData[row][\"unitPrice\"] !== \"\"\n        ) {\n          const index = emptyColumnList.indexOf(row);\n          if (index > -1) {\n            emptyColumnList.splice(index, 1);\n          }\n        } else {\n          emptyColumnList.push(row);\n        }\n        setEmptyColumn(emptyColumnList);\n        if (key === \"itemNo\") {\n          tempTableData[row][\"description\"] = productDetails[value].Description;\n          tempTableData[row][\"pieces\"] = productDetails[value].Quantity;\n          tempTableData[row][\"sku\"] = productDetails[value].sku;\n          /**auto populate barcode & other pos fields*/\n          tempTableData[row][\"barcode\"] = productDetails[value].Barcode;\n          tempTableData[row][\"posName\"] = productDetails[value].POS;\n          tempTableData[row][\"posSku\"] = productDetails[value].PosSKU;\n        }\n    \n        if (key === \"unitPrice\" || key === \"sp\" || key === \"itemNo\") {\n          let cp = parseFloat(tempTableData[row][\"cp\"]);\n          let sp = parseFloat(tempTableData[row][\"sp\"]);\n          let markup = ((sp - cp) / cp) * 100;\n          let cost =\n            parseFloat(tempTableData[row][\"unitPrice\"]) /\n            tempTableData[row][\"pieces\"];\n          // let sp = cp + (cp * markup) / 100;\n          // if (tempTableData[row][\"pieces\"]) {\n          //   sp = sp / tempTableData[row][\"pieces\"];\n          // }\n          tempTableData[row][\"markup\"] = isNaN(markup) ? 0 : markup.toFixed(2);\n          tempTableData[row][\"cp\"] = isNaN(cost) ? 0 : cost.toFixed(2);\n        }\n    \n        if (key === \"qty\" || key === \"unitPrice\") {\n          const extendedPrice =\n            parseFloat(tempTableData[row][\"qty\"]) *\n            parseFloat(tempTableData[row][\"unitPrice\"]);\n          const cp = tempTableData[row][\"unitPrice\"] / tempTableData[row][\"pieces\"];\n          if (!isNaN(extendedPrice)) {\n            tempTableData[row][\"extendedPrice\"] = extendedPrice.toFixed(2);\n          }\n          if (!isNaN(cp)) {\n            tempTableData[row][\"cp\"] = cp.toFixed(2);\n          }\n        }\n        if (itemNo) {\n          if (+tempTableData[row][\"unitPrice\"] > +productDetails[itemNo].Price) {\n            tempTableData[row][\"priceIncrease\"] = 1;\n          } else if (\n            +tempTableData[row][\"unitPrice\"] < +productDetails[itemNo].Price\n          ) {\n            tempTableData[row][\"priceIncrease\"] = -1;\n          } else if (\n            +tempTableData[row][\"unitPrice\"] == +productDetails[itemNo].Price\n          ) {\n            tempTableData[row][\"priceIncrease\"] = 0;\n          }\n        }\n    \n        if (key === \"barcode\") {\n          tempTableData[row][\"barcode\"] = value;\n        }\n        setTableData(tempTableData);\n        console.log(\"handleChange_tableData : \",tableData);\n    };\n\n    const mergeDuplicates = (a) => {\n        let arr = [...a];\n        let map = new Map();\n        for (let i = 0; i < arr.length; i++) {\n          if (!map.has(arr[i].itemNo)) map.set(arr[i].itemNo, arr[i]);\n          else {\n            let obj = { ...map.get(arr[i].itemNo) };\n            obj[\"qty\"] = (\n              parseFloat(obj[\"qty\"]) + parseFloat(arr[i].qty)\n            ).toString();\n            map.set(arr[i].itemNo, obj);\n          }\n        }\n        let newArr = [];\n        for (let x of map.values()) newArr.push(x);\n        return newArr;\n    };\n\n    useEffect(() => {\n      // hicksvilleDropdown();\n      // hicksvilleDropdown();\n      const curDate = new Date();\n      console.log(curDate);\n      let date = curDate.getFullYear()+ \"-\" + (curDate.getMonth()+1) +\"-\"+ curDate.getDate();\n      console.log(date);\n      // setTodayDate(date);\n      dispatch({type: \"TODAY_DATE\", data: date});\n      // hicksvilleDropdown(HicksData);\n      firebase.auth().onAuthStateChanged(function(user) {\n        if (user) {\n          // setUserEmail(user.email);\n          dispatch({type: \"EMAIL\", data: user.email})\n            console.log('This is the user: ', user)\n            console.log('This is the user: ', user.email);\n        } else {\n            // No user is signed in.\n            console.log('There is no logged in user');\n        }\n    });\n    \n\n\n        /**Fetch the data from the aws textract for the image */\n        // async function fetchOCRData() {\n        //   // return chetak();\n    \n        //   setLoader(true);\n        //   const ocrData = [];\n\n\n\n        //   let newData = [];\n        //   ocrData.forEach((data) => (newData = [...newData, ...data]));\n        //   return newData;\n        // }\n    \n        // async function invoiceData() {\n        //   const products = await tesseractService.GetProductDetails(\n        //     invoice\n        //   );\n        //   //console.log(props.selectedInvoice);\n        //   return products;\n        // }\n\n        // fetchOCRData().then((ocrData) => {\n        //   invoiceData()\n        //     .then((products) => {\n        //       /**post processing the table data after returning from filter */\n        //       function convertToUpperCase(obj) {\n        //         let newObj = {};\n        //         for (let key in obj) {\n        //           newObj[key.toUpperCase()] = obj[key];\n        //         }\n        //         return newObj;\n        //       }\n        //       products = convertToUpperCase(products);\n        //       console.log(products);\n        //       // scanInvoiceData.InvoiceData = ocrData;\n        //     //   setOcrProducts(ocrData);\n              \n        //     //   console.log(scanInvoiceData);\n        //       // scanInvoiceData.InvoiceData = ocrData;\n        //       //console.log(resScnInvDta);\n        //       //console.log(\"OCERDATa\", ocrData);\n        //       //console.log(products);\n        //       //console.log(scanInvoiceData);\n        //       let table = ocrData.map((row) => {\n        //         /**For invoices which dont have item no, set description as item no */\n        //         if (row.itemNo === undefined) {\n        //           row.itemNo = row.description.trim().toUpperCase();\n        //         }\n        //         row.itemNo = row.itemNo.toString().toUpperCase();\n    \n        //         row.description =\n        //           products[row.itemNo] !== undefined\n        //             ? products[row.itemNo].Description\n        //             : row.description;\n        //         row.pieces =\n        //           products[row.itemNo] !== undefined\n        //             ? products[row.itemNo].Quantity\n        //             : 0;\n        //         row.sku =\n        //           products[row.itemNo] !== undefined\n        //             ? products[row.itemNo].sku\n        //             : \"\";\n        //         row.barcode =\n        //           products[row.itemNo] !== undefined\n        //             ? products[row.itemNo].Barcode\n        //             : \"\";\n        //         row.posName =\n        //           products[row.itemNo] !== undefined\n        //             ? products[row.itemNo].POS\n        //             : \"\";\n        //         row.markup = 0;\n        //         row.show = true;\n        //         row.posSku =\n        //           products[row.itemNo] !== undefined\n        //             ? products[row.itemNo].PosSKU\n        //             : \"\";\n        //         row.isReviewed = \n        //           products[row.itemNo] !== undefined ? products[row.itemNo].isReviewed : \"\" ;\n        //         row.size = \n        //           products[row.itemNo] !== undefined ? products[row.itemNo].Size : \"\";\n        //         row.department = \n        //           products[row.itemNo] !== undefined ? products[row.itemNo].Department : \"\";\n        //         row.cost = \n        //           products[row.itemNo] !== undefined ? products[row.itemNo].SellerCost : \"\";\n        //         row.sellingPrice = \n        //           products[row.itemNo] !== undefined ? products[row.itemNo].SellingPrice : \"\";\n        //         //console.log(\"department-\" + row.department + \"  cost-\" + row.cost + \"  price\" + row.sellingPrice);\n        //         let sp = 0;\n        //         let cp = 0;\n        //         // const barcode = products.Barcode\n        //         if (parseInt(row.pieces)) {\n        //           sp = (parseFloat(row.unitPrice) / parseInt(row.pieces)).toFixed(\n        //             2\n        //           );\n        //           cp = sp;\n        //         }\n        //         if (products[row.itemNo] !== undefined) {\n        //           if (+row.unitPrice > +products[row.itemNo].Price) {\n        //             row[\"priceIncrease\"] = 1;\n        //           } else if (+row.unitPrice < +products[row.itemNo].Price) {\n        //             row[\"priceIncrease\"] = -1;\n        //           } else if (+row.unitPrice == +products[row.itemNo].Price) {\n        //             row[\"priceIncrease\"] = 0;\n        //           }\n        //         } else {\n        //           row[\"priceIncrease\"] = 0;\n        //         }\n    \n        //         /**filter out the rows for which qty shipped & extendedPrice is zero */\n        //         if (row.qty == \"0\" && row.extendedPrice === \"0.00\") {\n        //           return null;\n        //         }\n        //         /**Calulate qty for which qty is not read/scanned by textract */\n        //         if (!row.qty) {\n        //           row.qty = (\n        //             parseFloat(row.extendedPrice) / parseFloat(row.unitPrice)\n        //           ).toFixed(0);\n        //         }\n        //       return { ...row, sp, cp };\n        //       });\n        //       setLoader(false);\n        //       setTableData(table.filter((data) => data !== null));\n        //       setItemNoDropdown(Object.keys(products));\n        //       setProductDetails(products);\n        //     })\n        //     .catch((err) => {\n        //       console.log(\"error on mapping ocrdata\", err)\n        //       setLoader(false);\n        //     });\n        // });\n    }, []);\n\n    console.log(apiLoader);\n    console.log(showPosState);\n    console.log(inv, num, day);\n    console.log(notFounds, unitsInCase, price);\n    if (loader) {\n      return <Spinner />;\n    }\n    if(apiLoader){\n      return (\n      <div style={{marginTop: \"100px\", marginLeft: \"700px\"}}>\n        <CircularProgress />\n      </div>\n      );       \n    }\n    return(\n\n        <div className=\"container-fluid\">\n          <br />\n            <Paper className={classes.root}>\n                <Grid style={{ display: \"flex\" }}>\n                \n                  <Autocomplete\n                      value={invoice}\n                      onChange={(event, newValue) => {\n                          // console.log(\"new value\", newValue)\n                          if (newValue) {\n                          setInvoice(newValue);\n                          }\n                          // getInvoices(newValue);\n                      }}\n                      id=\"combo-box\"\n                      options={dropdownOptions}\n                      getOptionLabel={(option) => option.value}\n                      style={{ width: 250 }}\n                      autoHighlight\n                      renderInput={(params) => (\n                          <TextField {...params} label={dropdownLabel} variant=\"outlined\" />\n                      )}\n                  />\n                    {/* <Autocomplete\n                        value={invoiceNo}\n                        onChange={(event, newValue) => {\n                            // console.log(\"new value\", newValue)\n                            if (newValue) {\n                            setInvoiceNo(newValue);\n                            }\n                        }}\n                        id=\"combo-box\"\n                        options={invoiceOptions}\n                        getOptionLabel={(option) => option.value}\n                        style={{ width: 200 }}\n                        autoHighlight\n                        renderInput={(params) => (\n                            <TextField {...params} label=\"Invoice No.\" variant=\"outlined\" />\n                        )}\n                    /> */}\n                    \n                    {/* <TextField\n                        label=\"Invoice No.\"\n                        variant=\"outlined\"\n                        value={invoiceNo}\n                        style={{ marginLeft: 20 }}\n                        onChange={(e) => setInvoiceNo(e.target.value)}\n                    />\n                    <TextField\n                        id=\"date\"\n                        label=\"Date\"\n                        type=\"date\"\n                        value={date}\n                        style={{ marginLeft: 20 }}          \n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        onChange={(event) => setDate(event.target.value)}          \n                    /> */}\n                  <button  style={{backgroundColor: \"green\",\n                      height: \"50px\",\n                      border: \"none\",\n                      color: \"white\",\n                      padding: \"4px 8px\",\n                      textAlign: \"center\",\n                      textDecoration: \"none\",\n                      display: \"inline-block\",\n                      fontSize: \"14px\",\n                      align: \"left\",\n                      marginLeft: 20}}\n                      // onClick={setProductsInTable}\n                      onClick={getInvoices}\n                      >\n                          Fetch Invoice Data\n                  </button>\n\n                  <div style={{marginLeft: \"20px\"}}>\n                  <table>\n                  <tbody>\n                      <tr style={{height: \"21px\"}}> \n                      <td style={{display: \"flex\",\n                          width: \"20px\",\n                          height: \"20px\",\n                          backgroundColor: \"rgb(238,129,237)\",\n                          borderRadius: \"50%\",\n                          }}></td>\n                          {/* <td style={{width: \"0.25px\", height: \"0.25px\", margin: \"0px 0px 0px 0px\"}}></td> */}\n                      <td style={{height: \"21px\"}}><p >Product has been linked(on hovering).</p></td>\n                      </tr>\n                      <tr style={{height: \"21px\"}}> \n                      <td style={{display: \"flex\",\n                          width: \"20px\",\n                          height: \"20px\",\n                          backgroundColor: \"rgb(144,238,143)\",\n                          borderRadius: \"50%\",\n                          }}></td>\n                          {/* <td style={{width: \"0.25px\", height: \"0.25px\", margin: \"0px 0px 0px 0px\"}}></td> */}\n                      <td style={{height: \"21px\"}}><p >Product has been updated on POS.</p></td>\n                      </tr>\n                      <tr style={{height: \"21px\"}}> \n                      <td style={{display: \"flex\",\n                          width: \"20px\",\n                          height: \"20px\",\n                          backgroundColor: \"rgb(231, 230, 162)\",\n                          borderRadius: \"50%\",\n                          // border: \"1px solid\"\n                          }}></td>\n                          {/* <td style={{width: \"0.25px\", height: \"0.25px\", margin: \"0px 0px 0px 0px\"}}></td> */}\n                      <td style={{height: \"21px\"}}><p >Product has not been linked(on hovering).</p></td>\n                      </tr>\n                      </tbody>\n              </table>\n              </div>\n              <div style={{marginLeft: \"20px\"}}>\n              <table>\n              <tbody>\n                  <tr style={{height: \"21px\"}}> \n                  <td style={{display: \"flex\",\n                      width: \"20px\",\n                      height: \"20px\",\n                      backgroundColor: \"rgb(210,180,140)\",\n                      borderRadius: \"50%\",\n                      }}></td>\n                      {/* <td style={{width: \"0.25px\", height: \"0.25px\", margin: \"0px 0px 0px 0px\"}}></td> */}\n                  <td style={{height: \"21px\"}}><p >Product is free.</p></td>\n                  </tr>\n                  <tr style={{height: \"21px\"}}> \n                  <td style={{display: \"flex\",\n                      width: \"20px\",\n                      height: \"20px\",\n                      backgroundColor: \"rgb(24,140,255)\",\n                      borderRadius: \"50%\",\n                      }}></td>\n                      {/* <td style={{width: \"0.25px\", height: \"0.25px\", margin: \"0px 0px 0px 0px\"}}></td> */}\n                  <td style={{height: \"21px\"}}><p >Invoice Unit Cost is greater </p></td>\n                  </tr>\n                  <tr style={{height: \"21px\"}}> \n                  <td style={{display: \"flex\",\n                      width: \"20px\",\n                      height: \"20px\",\n                      backgroundColor: \"rgb(255,179,26)\",\n                      borderRadius: \"50%\",\n                      }}></td>\n                      {/* <td style={{width: \"0.25px\", height: \"0.25px\", margin: \"0px 0px 0px 0px\"}}></td> */}\n                  <td style={{height: \"21px\"}}><p >Invoice Unit Cost is lesser.</p></td>\n                  </tr>\n                  </tbody>\n          </table>\n          </div>\n\n          <div style={{marginLeft: \"20px\"}}>\n              <table>\n              <tbody>\n                  <tr style={{height: \"21px\"}}> \n                  <td style={{display: \"flex\",\n                      width: \"20px\",\n                      height: \"20px\",\n                      backgroundColor: \"pink\",\n                      borderRadius: \"50%\",\n                      }}></td>\n                      {/* <td style={{width: \"0.25px\", height: \"0.25px\", margin: \"0px 0px 0px 0px\"}}></td> */}\n                  <td style={{height: \"21px\"}}><p >Product unidentified in POS.</p></td>\n                  </tr>\n                  </tbody>\n          </table>\n          </div>\n        </Grid>\n\n            </Paper>\n\n            {openInvoice ? (<div><div><p>Invoice No.-- {num}</p></div><div><p>Invoice Date -- {day}</p></div></div>) : null}\n\n        \n            {pushToInventory ? (\n            <UpdateInventory\n                newInventoryData={inventoryData}\n                header={header}\n                goBack={setPushToInventory}\n                invoice={invoice}\n            />\n            ) : ( openInvoice ? renderTableData() : renderInvoiceTable() \n            )}\n            <CModal show={showModal} onClose={() => toggleModal(\"notfounds\")}>\n        <CModalHeader closeButton>Add Red Products</CModalHeader>\n        <CModalBody>\n          <CContainer fluid>\n            <CRow>\n              <CCol sm=\"6\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"invoiceNo\">Units In Case</CLabel>\n                  <CInput\n                    type=\"text\"\n                    name=\"unitsInCase\"\n                    value={unitsInCase}\n                    onChange={(event) => {\n                      // setUnitsInCase(event.target.value)\n                      dispatch({type: \"UNITS_IN_CASE\", data: event.target.value})\n                    }}\n                    />\n                  <CLabel htmlFor=\"date\">Case Cost</CLabel>\n                  <CInput\n                    type=\"text\"\n                    name=\"price\"\n                    value={price}\n                    onChange={(event) => {\n                      // setPrice(event.target.value)\n                      dispatch({type: \"PRICE\", data: event.target.value})\n                    }}\n                    />\n                </CFormGroup>\n              </CCol>\n            </CRow>\n          </CContainer>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"primary\" onClick={updateItem}>\n            ADD\n          </CButton>{\" \"}\n          <CButton color=\"secondary\" onClick={() => toggleModal(\"notfounds\")}>\n            Cancel\n          </CButton>\n        </CModalFooter>\n      </CModal>\n\n            <CModal show={detailsModal} onClose={() => toggleModal(\"details\")}>\n        <CModalHeader closeButton>Add Details</CModalHeader>\n        <CModalBody>\n          <CContainer fluid>\n            <CRow>\n              <CCol sm=\"6\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"invoiceNo\">Add Details</CLabel>\n                  <TextareaAutosize\n                    aria-label=\"empty textarea\"\n                    placeholder=\"add details\"\n                    // minRows={4}\n                    // maxRows={10}\n                    style={{ width: 400, height: 100 }}\n                    onChange={(event) => setDetails(event.target.value)}\n                  />\n                </CFormGroup>\n              </CCol>\n            </CRow>\n          </CContainer>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"primary\" onClick={saveDetails}>\n            ADD\n          </CButton>{\" \"}\n          <CButton color=\"secondary\" onClick={() => toggleModal(\"details\")}>\n            Cancel\n          </CButton>\n        </CModalFooter>\n      </CModal>\n\n\n\n        </div>\n\n    );\n}\n\nexport default SaveInvoiceData;"],"sourceRoot":""}